{
  "active": true,
  "connections": {
    "Sort": {
      "main": [
        [
          {
            "node": "Count",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Patient by Phone Number": {
      "main": [
        [
          {
            "node": "Switch5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "One to One Patient Match": {
      "main": [
        [
          {
            "node": "NocoDB1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Schedule Link": {
      "main": [
        [
          {
            "node": "isPatient1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Patient by Phone Number and Birthdate": {
      "main": [
        [
          {
            "node": "Sort1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "NocoDB",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Patient by Phone Number and Birthdate1": {
      "main": [
        [
          {
            "node": "Sort2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort2": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Number not in PM": {
      "main": [
        [
          {
            "node": "Send App Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send App Link": {
      "main": [
        [
          {
            "node": "isPatient0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Multiple Matches": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify by Birthdate": {
      "main": [
        [
          {
            "node": "Find Patient by Phone Number and Birthdate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Count1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "No Match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Exact Match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Schedule Link1": {
      "main": [
        [
          {
            "node": "isPatient3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Exact Match": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isPatient2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Find Patient by Phone Number and Birthdate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Match": {
      "main": [
        [
          {
            "node": "Send App Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isPatient": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Find Patient by Phone Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "NocoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Send Schedule Link3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Schedule Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Schedule Link3": {
      "main": [
        [
          {
            "node": "isPatient1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Schedule Link4": {
      "main": [
        [
          {
            "node": "isPatient3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Send Schedule Link4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Schedule Link1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "Send Schedule Link5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Schedule Link2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Number not in PM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "One to One Patient Match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Multiple Matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Switch5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch5": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Number not in PM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-05-07T13:40:37.619Z",
  "id": "wsglHPlHfnh4FtZQ",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Twilio IVR",
  "nodes": [
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "Patient_Number"
            }
          ]
        },
        "options": {}
      },
      "id": "e2d06b41-eb3f-41f5-9d91-dd1c87c13234",
      "name": "Sort",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1080,
        360
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "16db7af8-723b-46d9-8f80-6d41c64b91e3",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1180,
        1260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "faae7b7a-c0af-4187-ba13-d836ae882657",
              "name": "body.number",
              "value": "={{ $json.body.number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9560af32-c248-43fc-8956-390d15ffbea9",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        480,
        360
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Response>\n  <Say>Hello! This is an automated response test.</Say>\n</Response>\n",
        "options": {}
      },
      "id": "f6e859d0-4a10-46f4-a696-db1db4f556bf",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        920,
        2400
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5be4eb2f-12fa-4095-a250-f5a508f134ce",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "8c5697bb-29f5-4647-a7d7-8d0c9de36e0f",
      "name": "Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        700,
        2400
      ],
      "webhookId": "5be4eb2f-12fa-4095-a250-f5a508f134ce"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "Patient_ID"
            }
          ]
        },
        "options": {}
      },
      "id": "d7f7f29a-4e33-43f7-987e-dbab5f5cc641",
      "name": "Count",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1240,
        360
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "--APM PatientInfoWithInsInfo\nwith genpatinfo as (\n    select g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_LFI,\n           g.Patient_First_Name, g.Patient_Last_Name, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n           g.Patient_SSN, g.Patient_Sex, g.Patient_DOB, g.Patient_Age, g.Patient_Marital_Status, g.Patient_Home_Phone, g.Patient_Cell_Phone,\n           g.Patient_Primary_Phone_Number, g.Patient_Email\n    from [PM].[vwGenPatInfo] g\n),\npatid as (\n    select p.Patient_ID, p.Patient_Number, p.Date_Registered,\n           p.Comments, p.Account_ID, p.Contact_ID\n    from [PM].[Patients] p\n),\npatpol as (\n    select pp.Patient_Policy_ID, pp.Policy_ID, pp.Patient_ID,\n           pp.Coverage, pp.Verified_Date\n    from [PM].[Patient_Policies] pp\n),\ngenpol as (\n    select po.Policy_ID, po.Group_No, po.Certificate_No,\n           po.Comments, po.Effective_Date, po.Expiration_Date,\n           po.Carrier_ID, po.Insurance_Plan_ID, po.Contact_ID, po.Account_ID\n    from [PM].[Policies] po\n)\nselect g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_First_Name, g.Patient_Last_Name,\n       g.Patient_LFI, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n       g.Patient_SSN, g.Patient_Sex, convert(varchar(10), g.Patient_DOB, 101) as Patient_DOB, g.Patient_Age, g.Patient_Marital_Status,\n       g.Patient_Home_Phone, g.Patient_Cell_Phone, g.Patient_Email,\n       p.Account_ID, p.Contact_ID, p.Date_Registered, p.Comments,\n       pp.Patient_Policy_ID, pp.Policy_ID, pp.Coverage, pp.Verified_Date,\n       po.Account_ID, po.Carrier_ID, c.Name, c.Payor_Number, i.CoPayment_Amount,\n       po.Insurance_Plan_ID, po.Carrier_ID, po.Certificate_No, po.Group_No,\n       po.Comments, po.Effective_Date, po.Expiration_Date\nfrom genpatinfo g\nleft join patid p on p.Patient_ID = g.Patient_ID\nleft join patpol pp on pp.Patient_ID = g.Patient_ID\nleft join genpol po on po.Policy_ID = pp.Policy_ID\nleft join [PM].[Carriers] c on c.Carrier_ID = po.Carrier_ID\nleft join [PM].[Insurance_Plans] i on i.Insurance_Plan_ID = po.Insurance_Plan_ID\nwhere (g.Patient_Home_Phone = '{{ $json.body.number.replace(/^\\+1/, '') }}' or g.Patient_Cell_Phone = '{{ $json.body.number.replace(/^\\+1/, '') }}')   --and YEAR(g.Patient_DOB) = '{{ $json.body.dobYear }}'"
      },
      "id": "6164abea-3c04-45ed-8e45-26871fa67c6e",
      "name": "Find Patient by Phone Number",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        920,
        360
      ],
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {},
      "id": "8814bab6-e236-4781-a837-a38576c3953d",
      "name": "Number not in PM",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        100
      ]
    },
    {
      "parameters": {},
      "id": "3cea6086-7cef-4ea1-8ffd-06c6ee1a7ccf",
      "name": "One to One Patient Match",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        360
      ]
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "=+1{{ $('Find Patient by Phone Number').item.json.Patient_Cell_Phone }}",
        "message": "=Please click the EPIC link to schedule:\nhttps://visit.epicpc.com/?fullName={{ $('Sort').item.json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $('Sort').item.json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $('Sort').item.json[\"Patient_Number\"] }}",
        "options": {}
      },
      "id": "b8e6439b-6e89-4b29-9d42-01308906f853",
      "name": "Send Schedule Link",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2860,
        400
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"isPatient\": \"1\"\n}",
        "options": {}
      },
      "id": "ef7de336-bfb5-409a-a6b8-917e0cb69176",
      "name": "isPatient1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3160,
        340
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "--APM PatientInfoWithInsInfo\nwith genpatinfo as (\n    select g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_LFI,\n           g.Patient_First_Name, g.Patient_Last_Name, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n           g.Patient_SSN, g.Patient_Sex, g.Patient_DOB, g.Patient_Age, g.Patient_Marital_Status, g.Patient_Home_Phone, g.Patient_Cell_Phone,\n           g.Patient_Primary_Phone_Number, g.Patient_Email\n    from [PM].[vwGenPatInfo] g\n),\npatid as (\n    select p.Patient_ID, p.Patient_Number, p.Date_Registered,\n           p.Comments, p.Account_ID, p.Contact_ID\n    from [PM].[Patients] p\n),\npatpol as (\n    select pp.Patient_Policy_ID, pp.Policy_ID, pp.Patient_ID,\n           pp.Coverage, pp.Verified_Date\n    from [PM].[Patient_Policies] pp\n),\ngenpol as (\n    select po.Policy_ID, po.Group_No, po.Certificate_No,\n           po.Comments, po.Effective_Date, po.Expiration_Date,\n           po.Carrier_ID, po.Insurance_Plan_ID, po.Contact_ID, po.Account_ID\n    from [PM].[Policies] po\n)\nselect g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_First_Name, g.Patient_Last_Name,\n       g.Patient_LFI, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n       g.Patient_SSN, g.Patient_Sex, convert(varchar(10), g.Patient_DOB, 101) as Patient_DOB, g.Patient_Age, g.Patient_Marital_Status,\n       g.Patient_Home_Phone, g.Patient_Cell_Phone, g.Patient_Email,\n       p.Account_ID, p.Contact_ID, p.Date_Registered, p.Comments,\n       pp.Patient_Policy_ID, pp.Policy_ID, pp.Coverage, pp.Verified_Date,\n       po.Account_ID, po.Carrier_ID, c.Name, c.Payor_Number, i.CoPayment_Amount,\n       po.Insurance_Plan_ID, po.Carrier_ID, po.Certificate_No, po.Group_No,\n       po.Comments, po.Effective_Date, po.Expiration_Date\nfrom genpatinfo g\nleft join patid p on p.Patient_ID = g.Patient_ID\nleft join patpol pp on pp.Patient_ID = g.Patient_ID\nleft join genpol po on po.Policy_ID = pp.Policy_ID\nleft join [PM].[Carriers] c on c.Carrier_ID = po.Carrier_ID\nleft join [PM].[Insurance_Plans] i on i.Insurance_Plan_ID = po.Insurance_Plan_ID\nwhere (g.Patient_Home_Phone = '{{ $json.body.number.replace(/^\\+1/, '') }}' or g.Patient_Cell_Phone = '{{ $json.body.number.replace(/^\\+1/, '') }}')   and YEAR(g.Patient_DOB) = '{{ $json.body.dobYear }}'"
      },
      "id": "307f548c-4fc2-4f6a-8e2a-745d660595de",
      "name": "Find Patient by Phone Number and Birthdate",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        860,
        1260
      ],
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "Patient_Number"
            }
          ]
        },
        "options": {}
      },
      "id": "97698864-adb9-40d3-b350-7413f3ca7bb4",
      "name": "Sort1",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1020,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "f8075e1d-128c-4215-81d6-1116e3fa072d",
      "name": "Multiple Matches",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        600
      ]
    },
    {
      "parameters": {},
      "id": "d1a47d80-ff19-4657-83ac-ac5fa6ca4d4b",
      "name": "Limit1",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1320,
        1860
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "--APM PatientInfoWithInsInfo\nwith genpatinfo as (\n    select g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_LFI,\n           g.Patient_First_Name, g.Patient_Last_Name, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n           g.Patient_SSN, g.Patient_Sex, g.Patient_DOB, g.Patient_Age, g.Patient_Marital_Status, g.Patient_Home_Phone, g.Patient_Cell_Phone,\n           g.Patient_Primary_Phone_Number, g.Patient_Email\n    from [PM].[vwGenPatInfo] g\n),\npatid as (\n    select p.Patient_ID, p.Patient_Number, p.Date_Registered,\n           p.Comments, p.Account_ID, p.Contact_ID\n    from [PM].[Patients] p\n),\npatpol as (\n    select pp.Patient_Policy_ID, pp.Policy_ID, pp.Patient_ID,\n           pp.Coverage, pp.Verified_Date\n    from [PM].[Patient_Policies] pp\n),\ngenpol as (\n    select po.Policy_ID, po.Group_No, po.Certificate_No,\n           po.Comments, po.Effective_Date, po.Expiration_Date,\n           po.Carrier_ID, po.Insurance_Plan_ID, po.Contact_ID, po.Account_ID\n    from [PM].[Policies] po\n)\nselect g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_First_Name, g.Patient_Last_Name,\n       g.Patient_LFI, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n       g.Patient_SSN, g.Patient_Sex, convert(varchar(10), g.Patient_DOB, 101) as Patient_DOB, g.Patient_Age, g.Patient_Marital_Status,\n       g.Patient_Home_Phone, g.Patient_Cell_Phone, g.Patient_Email,\n       p.Account_ID, p.Contact_ID, p.Date_Registered, p.Comments,\n       pp.Patient_Policy_ID, pp.Policy_ID, pp.Coverage, pp.Verified_Date,\n       po.Account_ID, po.Carrier_ID, c.Name, c.Payor_Number, i.CoPayment_Amount,\n       po.Insurance_Plan_ID, po.Carrier_ID, po.Certificate_No, po.Group_No,\n       po.Comments, po.Effective_Date, po.Expiration_Date\nfrom genpatinfo g\nleft join patid p on p.Patient_ID = g.Patient_ID\nleft join patpol pp on pp.Patient_ID = g.Patient_ID\nleft join genpol po on po.Policy_ID = pp.Policy_ID\nleft join [PM].[Carriers] c on c.Carrier_ID = po.Carrier_ID\nleft join [PM].[Insurance_Plans] i on i.Insurance_Plan_ID = po.Insurance_Plan_ID\nwhere (g.Patient_Home_Phone = '{{ $json.body.number.replace(/^\\+1/, '') }}' or g.Patient_Cell_Phone = '{{ $json.body.number.replace(/^\\+1/, '') }}')   and YEAR(g.Patient_DOB) = '{{ $json.body.dobYear }}'"
      },
      "id": "032c9d27-f92e-441e-83a3-3afa9ba9e0de",
      "name": "Find Patient by Phone Number and Birthdate1",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        1000,
        1860
      ],
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "Patient_Number"
            }
          ]
        },
        "options": {}
      },
      "id": "c783b23d-d6d8-49c4-8241-6f41ae59f2b1",
      "name": "Sort2",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1160,
        1860
      ]
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "=+1 {{ $json.Patient_Cell_Phone }}",
        "message": "=Please click the EPIC link to schedule:\nhttps://visit.epicpc.com/?fullName={{ $json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $json[\"Patient_Number\"] }}",
        "options": {}
      },
      "id": "5512f7a4-975a-49e2-9a07-8a4ee70d1aaa",
      "name": "Send Schedule Link2",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2480,
        1960
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"isPatient\": \"0\"\n}",
        "options": {}
      },
      "id": "f0bb8973-f1d8-4855-afdc-d624ad93a6a1",
      "name": "isPatient0",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2320,
        100
      ]
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "={{ $('isPatient').item.json[\"body\"][\"number\"] }}",
        "message": "=Hello! We're excited to see you soon. Here is the link to the EPIC Life app that allows you to schedule, send messages, request med refills, see lab results and so much more! An agent should be routed to you to help you get connected. https://epichealthmobile.page.link/89eQ",
        "options": {}
      },
      "id": "62211e4b-5a20-4207-ac93-9d7399b001a1",
      "name": "Send App Link",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2120,
        100
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"isPatient\": \"2\",\n  \"name\":\"{{ $('Sort').item.json[\"Patient_First_Name\"] }}\"\n}",
        "options": {}
      },
      "id": "d9adf25c-251c-46bf-8dd5-4e1018810d9d",
      "name": "isPatient2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2320,
        660
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "24fbadf6-5488-4f7d-aec9-7ec7f102efcd",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "78cf7f86-f35e-47e8-984c-2347e7abead6",
      "name": "Identify by Birthdate",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        680,
        1260
      ],
      "webhookId": "24fbadf6-5488-4f7d-aec9-7ec7f102efcd"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "Patient_ID"
            }
          ]
        },
        "options": {}
      },
      "id": "55f44b08-8e2e-4cc8-8b5e-5bcbff847248",
      "name": "Count1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1360,
        1260
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.count_Patient_ID }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0195390d-32d7-49bc-a380-3ac8941e920e",
                    "leftValue": "={{ $json.count_Patient_ID }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "811e12d8-d39e-411e-befd-f3594e8ef761",
                    "leftValue": "={{ $json.count_Patient_ID }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "2cd1d1ea-49db-46b7-9510-a53293787b35",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1520,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "ea195088-f4b0-47d3-a387-f030bb8d7179",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        1500
      ]
    },
    {
      "parameters": {},
      "id": "532d8361-b3c2-480c-806f-4d368a8524ff",
      "name": "No Match",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        1060
      ]
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "=+1{{ $json.Patient_Cell_Phone }}",
        "message": "=Please click the EPIC link to schedule:\nhttps://visit.epicpc.com/?fullName={{ $('Limit').item.json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $('Limit').item.json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $('Limit').item.json[\"Patient_Number\"] }}",
        "options": {}
      },
      "id": "5c611489-c86d-4fb7-a992-7e7be7c4e93e",
      "name": "Send Schedule Link1",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2720,
        1260
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"isPatient\": \"1\"\n}",
        "options": {}
      },
      "id": "2de28b46-9d10-42b1-a123-94e27d923b6c",
      "name": "isPatient3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2920,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "1294f1a2-6c15-4050-a84a-e9fa1ff19e8e",
      "name": "Exact Match",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        1260
      ]
    },
    {
      "parameters": {},
      "id": "2398dcee-fc2e-4e41-819e-d1fc55703f21",
      "name": "Limit2",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1760,
        760
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "27bd3518-9a28-4f83-955d-843508705e32",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2020,
        660
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "153cab84-247e-4a59-bee2-985b2aace439",
        "options": {}
      },
      "id": "89a6ce9f-c265-4950-bcac-39f68b055f8c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        700,
        1860
      ],
      "webhookId": "153cab84-247e-4a59-bee2-985b2aace439"
    },
    {
      "parameters": {
        "content": "# Schedule Link",
        "height": 585.2405196756798,
        "width": 2719.8532082823713,
        "color": 5
      },
      "id": "5e0df8bb-a8df-4efa-a623-fa65e58c0c3e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        1779.0004937930662
      ]
    },
    {
      "parameters": {
        "content": "# Identify Patient Match",
        "height": 884.3938258606406,
        "width": 3299.413231036269,
        "color": 4
      },
      "id": "758fffef-2600-4b9d-9a61-63b023e3d3b4",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        407.50123448266413,
        35.62592586199901
      ]
    },
    {
      "parameters": {
        "content": "# Multiple Matches, filter by birth year",
        "height": 616.0118510335842,
        "width": 2704.0170187548356,
        "color": 3
      },
      "id": "ab1a9e41-c61e-4820-9c64-edd031ba856e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        560,
        1039.6239506897346
      ]
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pdrfzomezdyaecj",
        "table": "mih5kbiavj0mmh0",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Patient",
              "fieldValue": "={{ $json.Patient_Name }}"
            },
            {
              "fieldName": "MRN",
              "fieldValue": "={{ $json.Patient_Number }}"
            },
            {
              "fieldName": "=Link",
              "fieldValue": "=https://visit.epicpc.com/?fullName={{ $json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $json[\"Patient_Number\"] }}"
            }
          ]
        }
      },
      "id": "31ba5423-67ab-4689-aed3-401a073a47c1",
      "name": "NocoDB",
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        1540,
        2160
      ],
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "47fab54f-b6e7-433c-9f26-3e023f3b9ba7",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "3cfd9be0-964a-4dd2-b30c-8151e6621a49",
      "name": "isPatient",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        680,
        360
      ],
      "webhookId": "47fab54f-b6e7-433c-9f26-3e023f3b9ba7"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cead5147-e060-487c-9c6e-6650b823ab14",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1340,
        2160
      ]
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pdrfzomezdyaecj",
        "table": "mih5kbiavj0mmh0",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Patient",
              "fieldValue": "={{ $('Sort').item.json[\"Patient_First_Name\"] }} {{ $('Sort').item.json[\"Patient_Last_Name\"] }}"
            },
            {
              "fieldName": "MRN",
              "fieldValue": "={{ $('Sort').item.json[\"Patient_Number\"] }}"
            },
            {
              "fieldName": "=Link",
              "fieldValue": "=https://visit.epicpc.com/?fullName={{ $('Sort').item.json[\"Patient_First_Name\"] }}+{{ $('Sort').item.json[\"Patient_Last_Name\"] }}&patientId={{ $('Sort').item.json[\"Patient_Number\"] }}"
            }
          ]
        }
      },
      "id": "d3e60fc9-eded-4519-a369-1451d5c56231",
      "name": "NocoDB1",
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        2860,
        600
      ],
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE phonetreeselfschedule (\n    createddate TIMESTAMP NOT NULL,\n    patientname VARCHAR(255) NOT NULL,\n    mrn VARCHAR(50) NOT NULL,\n    link TEXT\n);",
        "options": {}
      },
      "id": "e9e3ec82-c2d5-451d-8cf6-391c7915a95c",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -220,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "bGb8h7UdmRyDVSzf",
          "name": "pac"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "phonetreeselfschedule",
          "mode": "list",
          "cachedResultName": "phonetreeselfschedule"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "createddate": "={{ $json.currentDate }}",
            "mrn": "={{ $json.Patient_Number }}",
            "patientname": "={{ $json.Patient_Name }}",
            "link": "=https://visit.epicpc.com/?fullName={{ $json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $json[\"Patient_Number\"] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "createddate",
              "displayName": "createddate",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "patientname",
              "displayName": "patientname",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "mrn",
              "displayName": "mrn",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a459e3ff-9f5b-4a1c-b669-41449bd98220",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2220,
        2160
      ],
      "credentials": {
        "postgres": {
          "id": "bGb8h7UdmRyDVSzf",
          "name": "pac"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ce1c38cc-4e55-4708-b8e8-07015487bfbb",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1780,
        2000
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "2af5415f-6c10-4fb6-a245-41083b4d8f82",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1920,
        2160
      ]
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "=+1{{ $('Find Patient by Phone Number').item.json.Patient_Home_Phone }}",
        "message": "=Please click the EPIC link to schedule:\nhttps://visit.epicpc.com/?fullName={{ $('Sort').item.json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $('Sort').item.json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $('Sort').item.json[\"Patient_Number\"] }}",
        "options": {}
      },
      "id": "92d9e07c-1eba-4220-8343-c505e004668f",
      "name": "Send Schedule Link3",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2680,
        280
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Find Patient by Phone Number').item.json.Patient_Cell_Phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "614efe0d-6286-42c4-ba76-9125b2fafc4a",
                    "leftValue": "={{ $('Find Patient by Phone Number').item.json.Patient_Cell_Phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "79f0685e-8ce3-48d7-8840-d965387ac699",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2120,
        340
      ]
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "=+1{{ $('Limit').item.json[\"Patient_Home_Phone\"] }}",
        "message": "=Please click the EPIC link to schedule:\nhttps://visit.epicpc.com/?fullName={{ $('Limit').item.json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $('Limit').item.json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $('Limit').item.json[\"Patient_Number\"] }}",
        "options": {}
      },
      "id": "9afada8a-ca9a-4888-abc4-c7e70656fdee",
      "name": "Send Schedule Link4",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2700,
        1100
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "from": "+13133514769",
        "to": "=+1 {{ $json.Patient_Home_Phone }}",
        "message": "=Please click the EPIC link to schedule:\nhttps://visit.epicpc.com/?fullName={{ $json[\"Patient_First_Name\"].replace(/ /g, '%20') }}+{{ $json[\"Patient_Last_Name\"].replace(/ /g, '%20') }}&patientId={{ $json[\"Patient_Number\"] }}",
        "options": {}
      },
      "id": "d2eb7f76-fc4e-4ed7-8569-40d636964821",
      "name": "Send Schedule Link5",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        2480,
        1820
      ],
      "credentials": {
        "twilioApi": {
          "id": "qBB51xMHsgQyVoRt",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Limit').item.json.Patient_Cell_Phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "614efe0d-6286-42c4-ba76-9125b2fafc4a",
                    "leftValue": "={{ $('Limit').item.json.Patient_Cell_Phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "13a9c1fe-70bb-460a-ab6a-310aa22c4107",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2140,
        1260
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Limit1').item.json.Patient_Cell_Phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "614efe0d-6286-42c4-ba76-9125b2fafc4a",
                    "leftValue": "={{ $('Limit1').item.json.Patient_Cell_Phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "2c0e9cdf-fe6f-45fc-9121-e7629ea6ed4c",
      "name": "Switch4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1920,
        1880
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.count_Patient_ID }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0195390d-32d7-49bc-a380-3ac8941e920e",
                    "leftValue": "={{ $json.count_Patient_ID }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "811e12d8-d39e-411e-befd-f3594e8ef761",
                    "leftValue": "={{ $json.count_Patient_ID }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "9bae7e61-a4c9-4587-a9eb-faaca5603b61",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1400,
        360
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0104de02-7400-46ab-bb3f-a7e78f5f673a",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        780,
        120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Patient_Number }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "bbae8212-b232-4687-833f-92c225ef7d12",
                    "leftValue": "={{ $json.Patient_Number }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "ae51159e-787a-47cb-929a-beebf0baaa4f",
      "name": "Switch5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1000,
        140
      ],
      "alwaysOutputData": false
    }
  ],
  "pinData": {
    "isPatient": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "52.70.176.142",
            "x-forwarded-for": "52.70.176.142",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "content-length": "34",
            "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
            "i-twilio-idempotency-token": "119508aa-ecd7-4c55-b94a-d76c2e138932",
            "x-twilio-signature": "EWnrsWTxgwM1jZe2BWkqTaetx90=",
            "accept": "*/*",
            "x-home-region": "us1",
            "user-agent": "TwilioProxy/1.1"
          },
          "params": {},
          "query": {},
          "body": {
            "number": "+12488726322",
            "dobYear": "1988"
          },
          "webhookUrl": "https://xl.epicpc.com/webhook/47fab54f-b6e7-433c-9f26-3e023f3b9ba7",
          "executionMode": "production"
        }
      }
    ],
    "Find Patient by Phone Number and Birthdate1": [
      {
        "json": {
          "Patient_ID": 175024,
          "Patient_Number": "506910",
          "Patient_Name": "ISABELLA SAVINO",
          "Patient_First_Name": "ISABELLA",
          "Patient_Last_Name": "SAVINO",
          "Patient_LFI": "SAVINO, ISABELLA",
          "Patient_Street1": "1420 E. MADGE AVE.",
          "Patient_City": "HAZEL PARK",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48030",
          "Patient_SSN": "383231968",
          "Patient_Sex": "F",
          "Patient_DOB": "02/09/1999",
          "Patient_Age": 25,
          "Patient_Marital_Status": "Single",
          "Patient_Home_Phone": "2487527364",
          "Patient_Cell_Phone": "2487527364",
          "Patient_Email": "izzysavino@gmail.com",
          "Account_ID": [
            173005,
            173005
          ],
          "Contact_ID": 226336,
          "Date_Registered": "2020-06-10T00:00:00.000Z",
          "Comments": [
            null,
            "TA**NO COPAY**NO DEDUC**PCP GN**"
          ],
          "Patient_Policy_ID": 223481,
          "Policy_ID": 222222,
          "Coverage": "X",
          "Verified_Date": "2022-07-27T00:00:00.000Z",
          "Carrier_ID": [
            2106,
            2106
          ],
          "Name": "Meridian Healthcare of Mi",
          "Payor_Number": "001868",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Certificate_No": "0035572481",
          "Group_No": null,
          "Effective_Date": "2016-03-01T00:00:00.000Z",
          "Expiration_Date": "2022-03-31T00:00:00.000Z"
        }
      },
      {
        "json": {
          "Patient_ID": 175024,
          "Patient_Number": "506910",
          "Patient_Name": "ISABELLA SAVINO",
          "Patient_First_Name": "ISABELLA",
          "Patient_Last_Name": "SAVINO",
          "Patient_LFI": "SAVINO, ISABELLA",
          "Patient_Street1": "1420 E. MADGE AVE.",
          "Patient_City": "HAZEL PARK",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48030",
          "Patient_SSN": "383231968",
          "Patient_Sex": "F",
          "Patient_DOB": "02/09/1999",
          "Patient_Age": 25,
          "Patient_Marital_Status": "Single",
          "Patient_Home_Phone": "2487527364",
          "Patient_Cell_Phone": "2487527364",
          "Patient_Email": "izzysavino@gmail.com",
          "Account_ID": [
            173005,
            173005
          ],
          "Contact_ID": 226336,
          "Date_Registered": "2020-06-10T00:00:00.000Z",
          "Comments": [
            null,
            "PCP:GN    PER MERIDIAN WEBSITE  11/17/23  CC"
          ],
          "Patient_Policy_ID": 252306,
          "Policy_ID": 250952,
          "Coverage": "X",
          "Verified_Date": "2024-02-05T00:00:00.000Z",
          "Carrier_ID": [
            3297,
            3297
          ],
          "Name": "Meridian Health Plan Of MI(MEDICAID)",
          "Payor_Number": "003255",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Certificate_No": "0035572481",
          "Group_No": null,
          "Effective_Date": "2022-04-01T00:00:00.000Z",
          "Expiration_Date": "2023-12-31T00:00:00.000Z"
        }
      },
      {
        "json": {
          "Patient_ID": 175024,
          "Patient_Number": "506910",
          "Patient_Name": "ISABELLA SAVINO",
          "Patient_First_Name": "ISABELLA",
          "Patient_Last_Name": "SAVINO",
          "Patient_LFI": "SAVINO, ISABELLA",
          "Patient_Street1": "1420 E. MADGE AVE.",
          "Patient_City": "HAZEL PARK",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48030",
          "Patient_SSN": "383231968",
          "Patient_Sex": "F",
          "Patient_DOB": "02/09/1999",
          "Patient_Age": 25,
          "Patient_Marital_Status": "Single",
          "Patient_Home_Phone": "2487527364",
          "Patient_Cell_Phone": "2487527364",
          "Patient_Email": "izzysavino@gmail.com",
          "Account_ID": [
            173005,
            173005
          ],
          "Contact_ID": 226336,
          "Date_Registered": "2020-06-10T00:00:00.000Z",
          "Comments": [
            null,
            null
          ],
          "Patient_Policy_ID": 281344,
          "Policy_ID": 280211,
          "Coverage": "P",
          "Verified_Date": "2024-02-07T00:00:00.000Z",
          "Carrier_ID": [
            5228,
            5228
          ],
          "Name": "Ambetter of Meridian",
          "Payor_Number": "003255",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Certificate_No": "U9823021201",
          "Group_No": null,
          "Effective_Date": "2024-01-01T00:00:00.000Z",
          "Expiration_Date": null
        }
      },
      {
        "json": {
          "Patient_ID": 176004,
          "Patient_Number": "516650",
          "Patient_Name": "Izzy Test",
          "Patient_First_Name": "Izzy",
          "Patient_Last_Name": "Test",
          "Patient_LFI": "Test, Izzy",
          "Patient_Street1": "123 9 MILE RD.",
          "Patient_City": "Ferndale",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48220",
          "Patient_SSN": null,
          "Patient_Sex": "F",
          "Patient_DOB": "02/09/1999",
          "Patient_Age": 25,
          "Patient_Marital_Status": null,
          "Patient_Home_Phone": "2487527364",
          "Patient_Cell_Phone": "2487527364",
          "Patient_Email": "IZZYSAVINO@GMAIL.COM",
          "Account_ID": [
            173979,
            null
          ],
          "Contact_ID": 227424,
          "Date_Registered": "2020-07-07T00:00:00.000Z",
          "Comments": [
            null,
            null
          ],
          "Patient_Policy_ID": null,
          "Policy_ID": null,
          "Coverage": null,
          "Verified_Date": null,
          "Carrier_ID": [
            null,
            null
          ],
          "Name": null,
          "Payor_Number": null,
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Certificate_No": null,
          "Group_No": null,
          "Effective_Date": null,
          "Expiration_Date": null
        }
      }
    ],
    "Find Patient by Phone Number": [
      {
        "json": {
          "Patient_ID": 196086,
          "Patient_Number": "716160",
          "Patient_Name": "DARRYL BURGESS",
          "Patient_First_Name": "DARRYL",
          "Patient_Last_Name": "BURGESS",
          "Patient_LFI": "BURGESS, DARRYL",
          "Patient_Street1": "40 CONNECTICUT ST",
          "Patient_City": "HIGHLAND PARK",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48203",
          "Patient_SSN": "333507494",
          "Patient_Sex": "M",
          "Patient_DOB": "09/14/1956",
          "Patient_Age": 67,
          "Patient_Marital_Status": "Widowed",
          "Patient_Home_Phone": "3135490389",
          "Patient_Cell_Phone": "3135490389",
          "Patient_Email": "dandnburgess@msn.com",
          "Account_ID": [
            193935,
            193935
          ],
          "Contact_ID": 251339,
          "Date_Registered": "2022-03-07T00:00:00.000Z",
          "Comments": [
            "uhc 94436460",
            null
          ],
          "Patient_Policy_ID": 245070,
          "Policy_ID": 243722,
          "Coverage": "P",
          "Verified_Date": "2024-05-01T00:00:00.000Z",
          "Carrier_ID": [
            5064,
            5064
          ],
          "Name": "United Healthcare Medicare",
          "Payor_Number": "000601",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Certificate_No": "944436460",
          "Group_No": "21829",
          "Effective_Date": "2024-03-01T00:00:00.000Z",
          "Expiration_Date": null
        }
      }
    ],
    "Edit Fields1": [
      {
        "json": {
          "Patient_ID": 158081,
          "Patient_Number": "347790",
          "Patient_Name": "LEAH JEROME",
          "Patient_First_Name": "LEAH",
          "Patient_Last_Name": "JEROME",
          "Patient_LFI": "JEROME, LEAH",
          "Patient_Street1": "3202 WOODLAND AVE",
          "Patient_City": "ROYAL OAK",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48073",
          "Patient_SSN": "386988919",
          "Patient_Sex": "F",
          "Patient_DOB": "02/22/1983",
          "Patient_Age": 41,
          "Patient_Marital_Status": "Single",
          "Patient_Home_Phone": "9898843131",
          "Patient_Cell_Phone": "9898843131",
          "Patient_Email": "lkejerome@gmail.com",
          "Account_ID": [
            156081,
            156081
          ],
          "Contact_ID": 203448,
          "Date_Registered": "2017-01-20T00:00:00.000Z",
          "Comments": [
            "DUE FOR CWE 4/12/20 KM",
            "01/20/17 BS *CPE/IMM Y* *DED $32.56-PROC* PCP AF* *"
          ],
          "Patient_Policy_ID": 193918,
          "Policy_ID": 192907,
          "Coverage": "X",
          "Verified_Date": null,
          "Carrier_ID": [
            530,
            530
          ],
          "Name": "Bcn",
          "Payor_Number": "000149",
          "CoPayment_Amount": 30,
          "Insurance_Plan_ID": 6644,
          "Certificate_No": "XYW915164941",
          "Group_No": "00283318",
          "Effective_Date": "2017-01-01T00:00:00.000Z",
          "Expiration_Date": "2017-01-31T00:00:00.000Z"
        }
      }
    ],
    "Sort": [
      {
        "json": {
          "Patient_ID": 159402,
          "Patient_Number": "361000",
          "Patient_Name": "TRISHA L EGAN",
          "Patient_First_Name": "TRISHA",
          "Patient_Last_Name": "EGAN",
          "Patient_LFI": "EGAN, TRISHA L",
          "Patient_Street1": "10731 HART AVENUE",
          "Patient_City": "HUNTINGTON WOODS",
          "Patient_State": "MI",
          "Patient_Zip_Code": "48070",
          "Patient_SSN": "011681215",
          "Patient_Sex": "F",
          "Patient_DOB": "04/19/1986",
          "Patient_Age": 38,
          "Patient_Marital_Status": null,
          "Patient_Home_Phone": "2487011833",
          "Patient_Cell_Phone": null,
          "Patient_Email": "polingtr@gmail.com",
          "Account_ID": [
            157403,
            157403
          ],
          "Contact_ID": 205135,
          "Date_Registered": "2017-05-08T00:00:00.000Z",
          "Comments": [
            "072517 RSP",
            "072517 RSP CPE/IMM Y/Y DED 2600 ALL COL 100 @ EV OV COINS 20%"
          ],
          "Patient_Policy_ID": 196745,
          "Policy_ID": 195725,
          "Coverage": "P",
          "Verified_Date": null,
          "Carrier_ID": [
            468,
            468
          ],
          "Name": "BCBS of Michigan - Ep",
          "Payor_Number": "000088",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Certificate_No": "NLT822553302",
          "Group_No": "190423",
          "Effective_Date": "2017-05-01T00:00:00.000Z",
          "Expiration_Date": null
        }
      }
    ],
    "Edit Fields2": [
      {
        "json": {}
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 4,
  "updatedAt": "2024-05-21T10:50:04.881Z",
  "versionId": "b6c510b1-1628-4cbc-93ad-eb4a44926d97"
}