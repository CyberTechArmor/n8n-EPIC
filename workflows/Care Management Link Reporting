{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NocoDB1",
            "type": "main",
            "index": 0
          },
          {
            "node": "NocoDB2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB1": {
      "main": [
        []
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB2": {
      "main": [
        []
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        []
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Microsoft SQL2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-10T18:40:01.285Z",
  "id": "zXkcXanxnpJFRtLi",
  "isArchived": false,
  "meta": null,
  "name": "Care Management Link Reporting",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -620,
        60
      ],
      "id": "bb8b9912-0672-409a-b34e-aed284fb209b",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pdrfzomezdyaecj",
        "table": "mp6w3w2c8gnn3qk",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -400,
        60
      ],
      "id": "47286b45-fe85-4b7d-8d48-11f975de094c",
      "name": "NocoDB",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -180,
        60
      ],
      "id": "5487ca87-faa0-4603-a3aa-ab784c1d5ab2",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pdrfzomezdyaecj",
        "table": "mnx1ann5acss8m7",
        "returnAll": true,
        "options": {
          "where": "=(Patient_Number,eq,{{ $json.Patient_Number }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        440,
        180
      ],
      "id": "cefcbc9a-742b-4d78-80c0-5a134faf8b4a",
      "name": "NocoDB1",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1e3d164d-2f4b-4373-ab54-d253e7ea8d7d",
              "leftValue": "={{ $json.UserName }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        420,
        -160
      ],
      "id": "6b00862f-d020-46dd-b981-1a0e6d3b5c5f",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        720,
        -180
      ],
      "id": "9ef0fb9e-2a18-4ac6-9d07-da9367541077",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pdrfzomezdyaecj",
        "table": "mnx1ann5acss8m7",
        "returnAll": true,
        "options": {
          "where": "=(SchedulingLink,eq,{{ $json.SchedulingLink }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        700,
        160
      ],
      "id": "c7feadc7-e647-47f9-9faf-f2ed6b12503a",
      "name": "NocoDB2",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM self_scheduling_dev_buckets\nWHERE currenturl = '{{ $json.SchedulingLink }}';",
        "options": {}
      },
      "id": "a30a5f80-a4c0-4974-b4df-e98c255edac6",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        300,
        320
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "n0Iu2Lnz1XZ5gBke",
          "name": "Offices OPS"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM self_scheduling_dev_buckets;",
        "options": {}
      },
      "id": "478d8827-edec-4703-afff-ef2d6b03eee8",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -480,
        540
      ],
      "credentials": {
        "postgres": {
          "id": "n0Iu2Lnz1XZ5gBke",
          "name": "Offices OPS"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "00a47300-9ac4-4860-b9d9-16dc062ca844",
              "leftValue": "={{ $json.currenturl }}",
              "rightValue": "reference=",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -260,
        540
      ],
      "id": "179f4f33-0438-4152-9569-bea056072adf",
      "name": "If1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        100,
        380
      ],
      "id": "4da7e224-9f41-457f-bde2-ff2f5a5113a4",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DECLARE @SSO VARCHAR(100) = '{{ $json.reference }}';\n \nSELECT [SingleSignOnToken]\n      ,[SessionToken]\n      ,[UserName]\n      ,[CreatedOn]\n      ,[EncounterID]\n      ,[PatientID]\n\t  ,d.DEM_EXTERNALID as MRN\n\t  ,d.DEM_FIRSTNAME\n\t  ,d.DEM_LASTNAME\n\t  ,d.DEM_DATEOFBIRTH\n  FROM [EMR].[HPSITE].[UAI_SingleSignOnTokens] s\n  LEFT JOIN [HPSITE].[DEMOGRAPHICS_VIEW] d on s.PatientID=d.IMREDEM_CODE\n \n  WHERE S.SingleSignOnToken = @SSO\n  order by s.CreatedOn desc"
      },
      "id": "6c1f9731-2569-47a4-b5b6-fb61a8c81a4e",
      "name": "Microsoft SQL2",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        800,
        680
      ],
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\n// 'items' is an array of all incoming items\nfor (const item of items) {\n  // 1) Grab the URL from the current item\n  const myUrl = item.json.currenturl || '';\n  \n  // 2) Extract the query string\n  const queryString = myUrl.split('?')[1] || '';\n  let referenceValue = null;\n\n  // 3) Manually parse the query string\n  if (queryString) {\n    const paramsArray = queryString.split('&');\n    for (const param of paramsArray) {\n      const [key, value] = param.split('=');\n      if (key === 'reference') {\n        // Decode the value\n        referenceValue = value\n          ? decodeURIComponent(value.replace(/\\+/g, ' '))\n          : null;\n        break;\n      }\n    }\n  }\n\n  // 4) Push a new item for each input record\n  results.push({\n    json: {\n      ...item.json,    // keep the original fields if desired\n      reference: referenceValue\n    }\n  });\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        540
      ],
      "id": "4ae5c7e9-4ea9-49aa-aa9a-553a19e23909",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        660,
        560
      ],
      "id": "071bf002-de09-40ab-8472-46e4431a7cd4",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        360,
        580
      ],
      "id": "c520ff6f-b77b-43da-b813-a647dbabe5e3",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1020,
        860
      ],
      "id": "0352b454-2e5c-4fe6-a88e-a86f15bebd50",
      "name": "Merge1"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-03-11T15:46:38.365Z",
  "versionId": "51ebafc8-2d29-476a-8c84-075254c7fcca"
}