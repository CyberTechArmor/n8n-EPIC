{
  "active": true,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk3": {
      "main": [
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk4": {
      "main": [
        [
          {
            "node": "Extract from File3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk6": {
      "main": [
        [
          {
            "node": "Extract from File4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File4": {
      "main": [
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk7": {
      "main": [
        [
          {
            "node": "Extract from File5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File5": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "main": [
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "USER12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Veradigm Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "USER2",
            "type": "main",
            "index": 0
          },
          {
            "node": "USER",
            "type": "main",
            "index": 0
          },
          {
            "node": "USER7",
            "type": "main",
            "index": 0
          },
          {
            "node": "USER9",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          },
          {
            "node": "USER11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk20": {
      "main": [
        [
          {
            "node": "Extract from File14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk21": {
      "main": [
        [
          {
            "node": "USER2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File6": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File14": {
      "main": [
        [
          {
            "node": "Check Token11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF7": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "IF7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "Convert to File6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk22": {
      "main": [
        [
          {
            "node": "Extract from File15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token10": {
      "main": [
        [
          {
            "node": "Extract PM Token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token10": {
      "main": [
        [
          {
            "node": "Check Token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token10": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "IF PM Token Valid5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "Execute Workflow6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid5": {
      "main": [
        [
          {
            "node": "Read PM Token11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token11": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token11": {
      "main": [
        [
          {
            "node": "Extract PM Token11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token11": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow6": {
      "main": [
        [
          {
            "node": "USER3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER2": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER3": {
      "main": [
        [
          {
            "node": "Read PM Token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk23": {
      "main": [
        [
          {
            "node": "Extract from File16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk24": {
      "main": [
        [
          {
            "node": "USER4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File7": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File16": {
      "main": [
        [
          {
            "node": "Check Token13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF8": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk25",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "IF8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request10": {
      "main": [
        [
          {
            "node": "Convert to File7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk25": {
      "main": [
        [
          {
            "node": "Extract from File17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token12": {
      "main": [
        [
          {
            "node": "Extract PM Token12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token12": {
      "main": [
        [
          {
            "node": "Check Token12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token12": {
      "main": [
        [
          {
            "node": "Code13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "IF PM Token Valid6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait7": {
      "main": [
        [
          {
            "node": "Execute Workflow7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid6": {
      "main": [
        [
          {
            "node": "Read PM Token13",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token13": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token13": {
      "main": [
        [
          {
            "node": "Extract PM Token13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token13": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow7": {
      "main": [
        [
          {
            "node": "USER5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER4": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER5": {
      "main": [
        [
          {
            "node": "Read PM Token12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk26": {
      "main": [
        [
          {
            "node": "Extract from File18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk27": {
      "main": [
        [
          {
            "node": "USER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File8": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File18": {
      "main": [
        [
          {
            "node": "Check Token15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF9": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk28",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "IF9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request11": {
      "main": [
        [
          {
            "node": "Convert to File8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk28": {
      "main": [
        [
          {
            "node": "Extract from File19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token14": {
      "main": [
        [
          {
            "node": "Extract PM Token14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token14": {
      "main": [
        [
          {
            "node": "Check Token14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token14": {
      "main": [
        [
          {
            "node": "Code15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code15": {
      "main": [
        [
          {
            "node": "IF PM Token Valid7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait8": {
      "main": [
        [
          {
            "node": "Execute Workflow8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid7": {
      "main": [
        [
          {
            "node": "Read PM Token15",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token15": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token15": {
      "main": [
        [
          {
            "node": "Extract PM Token15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token15": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow8": {
      "main": [
        [
          {
            "node": "USER6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER6": {
      "main": [
        [
          {
            "node": "Read PM Token14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk29": {
      "main": [
        [
          {
            "node": "Extract from File20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk30": {
      "main": [
        [
          {
            "node": "USER7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File9": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File20": {
      "main": [
        [
          {
            "node": "Check Token17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF10": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk31",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code16": {
      "main": [
        [
          {
            "node": "IF10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request12": {
      "main": [
        [
          {
            "node": "Convert to File9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk31": {
      "main": [
        [
          {
            "node": "Extract from File21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token16": {
      "main": [
        [
          {
            "node": "Extract PM Token16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token16": {
      "main": [
        [
          {
            "node": "Check Token16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token16": {
      "main": [
        [
          {
            "node": "Code17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code17": {
      "main": [
        [
          {
            "node": "IF PM Token Valid8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait9": {
      "main": [
        [
          {
            "node": "Execute Workflow9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid8": {
      "main": [
        [
          {
            "node": "Read PM Token17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token17": {
      "main": [
        [
          {
            "node": "Code16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token17": {
      "main": [
        [
          {
            "node": "Extract PM Token17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token17": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow9": {
      "main": [
        [
          {
            "node": "USER8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER7": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER8": {
      "main": [
        [
          {
            "node": "Read PM Token16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk32": {
      "main": [
        [
          {
            "node": "USER9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Check Token18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF11": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk33",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "IF11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request13": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk33": {
      "main": [
        [
          {
            "node": "Extract from File22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token": {
      "main": [
        [
          {
            "node": "Extract PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token": {
      "main": [
        [
          {
            "node": "Check Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token": {
      "main": [
        [
          {
            "node": "Code18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code18": {
      "main": [
        [
          {
            "node": "IF PM Token Valid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Execute Workflow10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid": {
      "main": [
        [
          {
            "node": "Read PM Token18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token18": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token18": {
      "main": [
        [
          {
            "node": "Extract PM Token18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token18": {
      "main": [
        [
          {
            "node": "Edit Fields11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow10": {
      "main": [
        [
          {
            "node": "USER10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER9": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER10": {
      "main": [
        [
          {
            "node": "Read PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER11": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER12": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk8": {
      "main": [
        [
          {
            "node": "Extract from File6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File6": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk9": {
      "main": [
        [
          {
            "node": "Extract from File7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File7": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk11": {
      "main": [
        [
          {
            "node": "Extract from File8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File8": {
      "main": [
        [
          {
            "node": "HTTP Request14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF3": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk12": {
      "main": [
        [
          {
            "node": "Extract from File9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File9": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request14": {
      "main": [
        [
          {
            "node": "IF3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow1": {
      "main": [
        [
          {
            "node": "USER14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER13": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER14": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk10": {
      "main": [
        [
          {
            "node": "USER13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          },
          {
            "node": "USER17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk34": {
      "main": [
        [
          {
            "node": "Extract from File23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk35": {
      "main": [
        [
          {
            "node": "USER15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File10": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File23": {
      "main": [
        [
          {
            "node": "Check Token20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF12": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk36",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code19": {
      "main": [
        [
          {
            "node": "IF12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request15": {
      "main": [
        [
          {
            "node": "Convert to File10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk36": {
      "main": [
        [
          {
            "node": "Extract from File24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token19": {
      "main": [
        [
          {
            "node": "Extract PM Token19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token19": {
      "main": [
        [
          {
            "node": "Check Token19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token19": {
      "main": [
        [
          {
            "node": "Code20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code20": {
      "main": [
        [
          {
            "node": "IF PM Token Valid9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait10": {
      "main": [
        [
          {
            "node": "Execute Workflow11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid9": {
      "main": [
        [
          {
            "node": "Read PM Token20",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token20": {
      "main": [
        [
          {
            "node": "Code19",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token20": {
      "main": [
        [
          {
            "node": "Extract PM Token20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token20": {
      "main": [
        [
          {
            "node": "Edit Fields12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow11": {
      "main": [
        [
          {
            "node": "USER16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER15": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER16": {
      "main": [
        [
          {
            "node": "Read PM Token19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File3": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF13": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk37",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "IF13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request16": {
      "main": [
        [
          {
            "node": "Convert to File3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk37": {
      "main": [
        [
          {
            "node": "Extract from File25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token1": {
      "main": [
        [
          {
            "node": "Extract PM Token1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token1": {
      "main": [
        [
          {
            "node": "Check Token1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token1": {
      "main": [
        [
          {
            "node": "Code21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code21": {
      "main": [
        [
          {
            "node": "IF PM Token Valid1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Execute Workflow12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid1": {
      "main": [
        [
          {
            "node": "Read PM Token21",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token21": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token21": {
      "main": [
        [
          {
            "node": "Extract PM Token21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token21": {
      "main": [
        [
          {
            "node": "Edit Fields13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow12": {
      "main": [
        [
          {
            "node": "USER18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER17": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER18": {
      "main": [
        [
          {
            "node": "Read PM Token1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Check Token21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk38": {
      "main": [
        [
          {
            "node": "USER17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF4": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk13": {
      "main": [
        [
          {
            "node": "Extract from File10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File10": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk14": {
      "main": [
        [
          {
            "node": "Extract from File11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File11": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk15": {
      "main": [
        [
          {
            "node": "USER19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File4": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request5": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk16": {
      "main": [
        [
          {
            "node": "Extract from File12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File12": {
      "main": [
        [
          {
            "node": "HTTP Request17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF5": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Execute Workflow2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk17": {
      "main": [
        [
          {
            "node": "Extract from File13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File13": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request17": {
      "main": [
        [
          {
            "node": "IF5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow2": {
      "main": [
        [
          {
            "node": "USER20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER19": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER20": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk5": {
      "main": [
        [
          {
            "node": "USER11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Veradigm Credentials": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Veradigm Credentials2": {
      "main": [
        [
          {
            "node": "USER19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Veradigm Credentials2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "Convert to File4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "IF4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait11": {
      "main": [
        [
          {
            "node": "Veradigm Credentials2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait12": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-22T20:21:38.745Z",
  "id": "aUCNcTe36bHU5YKn",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Allscripts Credentials",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 10
            }
          ]
        }
      },
      "id": "88cab1a8-f8c5-41af-8f1a-c203ec7f09e4",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -620,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "485c54b2-fe91-46be-b723-2b5290ba3848",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1520,
        -220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "4eff4475-aae0-403c-8fe5-94d6c79d2b39",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1220,
        -340
      ]
    },
    {
      "parameters": {
        "height": 307.8096629521582,
        "width": 648.6717174512601,
        "color": 4
      },
      "id": "dc70386f-b1a3-4638-83c7-aa0dedd8000b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1361,
        -615
      ]
    },
    {
      "parameters": {
        "height": 255.92863701464387,
        "width": 650.1509149056402,
        "color": 3
      },
      "id": "f3cdf9f0-e737-4ec4-bed8-77b0712ab25a",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1360,
        -311.1645932338368
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json[\"data\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0af4f6b0-3f1d-449a-b8cf-bc928d7ddc7c",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2036,
        -532
      ]
    },
    {
      "parameters": {
        "content": "## ASEHR Authentication - HEROERP\n**Check token: if yes (use), if no (get new)",
        "height": 563.4038572291529,
        "width": 1294.7853156722608,
        "color": 5
      },
      "id": "b7a66bd2-a3e4-421c-ae43-c6c111e9d603",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        -620
      ]
    },
    {
      "parameters": {
        "fileSelector": "ehrtoken.txt",
        "options": {}
      },
      "id": "3af0f390-90df-4e81-9565-d8bfb9afdf82",
      "name": "Read/Write Files from Disk3",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        920,
        -500
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "a9744604-2868-429c-a222-b988059d107e",
      "name": "Extract from File2",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1080,
        -500
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fileSelector": "ehrtoken.txt",
        "options": {}
      },
      "id": "5de7c53a-3dd2-4727-94ae-ac7f85a73c9a",
      "name": "Read/Write Files from Disk4",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1420,
        -520
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "3f5134c0-2875-4dde-9aa1-408b049116db",
      "name": "Extract from File3",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1600,
        -520
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "ehrtoken.txt",
        "options": {
          "append": false
        }
      },
      "id": "ce2ae1b8-7676-471d-a33d-93dc166ade54",
      "name": "Read/Write Files from Disk5",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1880,
        -220
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "84b57c08-229d-4c1a-a086-5a41d83b5879",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1700,
        -220
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/MagicJson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={     \"Action\":\"GetUserAuthentication\",     \"AppUserID\":\"{{ $('USER11').item.json.user }}\",     \"Appname\":\"EPICPC.NMNWokflow.TestApp\",     \"PatientID\":\"\",     \"Token\":\"{{ $json[\"data\"] }}\",     \"Parameter1\":\"{{ $('USER11').item.json.password }}\"    } ",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "15526cc3-69e6-474d-82e6-67d490967fd2",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        980,
        -240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "id": "bc2d1820-b05a-4256-9a47-d638fcd518e6",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -620,
        -60
      ]
    },
    {
      "parameters": {
        "fileSelector": "ehrtoken.txt",
        "options": {}
      },
      "id": "a840cbd5-11f1-4864-879b-f8c5fd6a94b6",
      "name": "Read/Write Files from Disk6",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2480,
        -380
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "646d28af-f1c7-4597-8910-2607db5093e6",
      "name": "Extract from File4",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2660,
        -380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "7b562c53-2bf2-4096-b9c1-81b0a8647db3",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3040,
        -380
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "7cf6d5ab-7ee6-44af-8cf8-cb4980cc003a",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3260,
        -280
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "fileSelector": "ehrtoken.txt",
        "options": {}
      },
      "id": "c2e1a42f-d80e-4ff5-96c8-0d699067b6ce",
      "name": "Read/Write Files from Disk7",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3260,
        -480
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "1b2840e2-5f4f-4c1a-9f12-3f06929e3d5a",
      "name": "Extract from File5",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3400,
        -480
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/MagicJson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={     \"Action\":\"GetUserAuthentication\",     \"AppUserID\":\"{{ $('USER12').item.json.user }}\",     \"Appname\":\"EPICPC.NMNWokflow.TestApp\",     \"PatientID\":\"\",     \"Token\":\"{{ $json[\"data\"] }}\",     \"Parameter1\":\"{{ $('USER12').item.json.password }}\"    } ",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "e9938b4b-7214-40c0-b064-73f3d0829e93",
      "name": "HTTP Request9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2860,
        -380
      ]
    },
    {
      "parameters": {
        "content": "# EHR Authentication - HEROERP",
        "height": 426.115682381651,
        "width": 1586.9735546694517,
        "color": 5
      },
      "id": "77ea71cd-3adc-48ba-82f2-2cb9d471bc05",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        -540
      ]
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "0af273d7-239a-458f-b632-a7fc2a66f206",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3480,
        -280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8ae82f6c-b9f1-4489-bc96-9f54683f3205",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3600,
        -475
      ]
    },
    {
      "parameters": {},
      "id": "3bf02d33-b640-4593-9f4e-0c83d74840b1",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -380,
        40
      ]
    },
    {
      "parameters": {},
      "id": "c16e50c5-25ba-4f81-b6ff-1a849e5e86b2",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        160,
        60
      ]
    },
    {
      "parameters": {
        "content": "# For All",
        "height": 451.61196503894166,
        "width": 399.8739786349088,
        "color": 4
      },
      "id": "dc728702-cada-48db-b999-bbe8441d704e",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -260,
        -120
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "2013bd10-f24e-4d0c-a8cc-88d1c9443b5d",
      "name": "Read/Write Files from Disk20",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        879,
        2761
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER2').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "ea56b62b-73f7-42a1-bd7a-01ad063c246f",
      "name": "Read/Write Files from Disk21",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1841,
        3159
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "bb5ac368-bd83-4769-9e73-d7e34ab5683e",
      "name": "Convert to File6",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1661,
        3159
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "3e1e51e0-21fb-4e7f-9acf-916898256d68",
      "name": "Extract from File14",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1040,
        2760
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "f67d0621-2c3e-49a6-abf3-3af9242298cd",
      "name": "IF7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1200,
        2980
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "5d5f90f6-fcf9-46fe-899f-16c5294e9d7a",
      "name": "Code10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        2980
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication enbverify\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "bebe5b65-e74d-4f13-9804-701c741f6808",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        2660
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "6c2978d2-1307-4974-817e-97471a93112c",
      "name": "Sticky Note26",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1341,
        2667
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "f897f5d9-9695-48d0-95ae-2dda635dbd2d",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1336,
        3033
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "6320d4d1-f958-4c8c-95f5-12d902eb2e90",
      "name": "HTTP Request8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1500,
        3160
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER2').item.json.user }}.txt",
        "options": {}
      },
      "id": "1bfa0328-c943-4f2c-95ab-5ca8f730bed0",
      "name": "Read/Write Files from Disk22",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1540,
        2812
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "dc0357b1-aaf4-4e9d-81d8-bff925bb1e3f",
      "name": "Extract from File15",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1760,
        2812
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "de880d20-a54c-4427-a77f-2550b6fcdbaf",
      "name": "Read PM Token10",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2540,
        2920
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "7a53e12d-b75e-4770-bfa6-71ff55c38b13",
      "name": "Extract PM Token10",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2680,
        2920
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER3').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER3').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "c8127a15-d707-4321-952d-414d166d0fe2",
      "name": "Check Token10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2860,
        2920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "8d11714e-655c-4c30-b209-7122cfaf65ad",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3000,
        2920
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "f4ea8297-e075-4cc6-966c-1b5cd8e12b1d",
      "name": "Wait6",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3300,
        3020
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "55cc32a8-5e5e-4b2e-b5d4-003b3445a203",
      "name": "IF PM Token Valid5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3140,
        2920
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication enbverify",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "996c0abe-b137-45fd-b1b3-0072fffe442f",
      "name": "Sticky Note28",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2340,
        2820
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "a0692f48-b050-4d72-8a88-4ca64780a0c7",
      "name": "Execute Command5",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2100,
        2920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER2').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER2').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "0cc5884e-3a7a-4dbc-8ce7-468d744ec432",
      "name": "Check Token11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        880,
        3140
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER3').item.json.user }}.txt",
        "options": {}
      },
      "id": "bdd34677-948b-42e9-b951-99ab14b334ff",
      "name": "Read PM Token11",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3360,
        2860
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "513fbd29-8795-4953-89d1-0387d6784f80",
      "name": "Extract PM Token11",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3500,
        2860
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "52fc0a90-5faf-4502-bb22-df8d2d8c65bb",
      "name": "Execute Workflow6",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3480,
        3020
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fae417ff-17ee-4984-a5bb-5eb3c85e9bed",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3660,
        2860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "enbverify",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "C0nn3ctme#1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e2ddf936-f2e1-476e-bc00-23ade5199a81",
      "name": "USER2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        2760
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "enbverify",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "C0nn3ctme#1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4525ec04-e4e5-4491-b3e6-d69021bdb2da",
      "name": "USER3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2380,
        2920
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5fa946e-0e2d-4b89-8dd8-73fc151e786f",
              "name": "VeradigmUser",
              "value": "56233400f:10031494^1^EPICP-507f-NMNWokflow-prod",
              "type": "string"
            },
            {
              "id": "6e30e720-52b2-484f-904c-dcde26731ee8",
              "name": "VeradigmPass",
              "value": "%p6CpcN4nW!0Fl3Wt%St9Pp411cB",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5670181c-f5a1-44fc-9286-0191ae67f66d",
      "name": "Veradigm Credentials1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -120,
        -40
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "fa208bf8-2971-456e-af55-fb04e06b4eeb",
      "name": "Read/Write Files from Disk23",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -2542,
        1934
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER4').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "026bf13b-8cfd-42ee-8d95-de5efd8edbd2",
      "name": "Read/Write Files from Disk24",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1580,
        2332
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "1578228c-2029-4aff-95f5-879abb0f1bf5",
      "name": "Convert to File7",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1760,
        2332
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "4c65bfda-baed-4cb1-b643-03ff96ca9f5e",
      "name": "Extract from File16",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2381,
        1933
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "9c601e09-f246-484c-ac2a-c3f6be6d7068",
      "name": "IF8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2221,
        2153
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "18d6ae84-873d-428a-8ddb-053d20322af9",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2381,
        2153
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication {VARIABLE}\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "4475261c-3c53-475a-b30a-c005c5817aa2",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2721,
        1833
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "66188df4-d619-4dd4-9ceb-d6bd503b90a4",
      "name": "Sticky Note30",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2080,
        1840
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "5544e46c-dd00-4d94-9d01-8cb29509f89a",
      "name": "Sticky Note31",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2085,
        2206
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "0e2be18a-a8ea-42cc-ab83-f1e72732219c",
      "name": "HTTP Request10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1921,
        2333
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER4').item.json.user }}.txt",
        "options": {}
      },
      "id": "1d7ee9c5-f30b-4acd-96df-0423e8c4a1d9",
      "name": "Read/Write Files from Disk25",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1881,
        1985
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "34731df7-e9c9-4409-ae2f-4387c79d50a2",
      "name": "Extract from File17",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1661,
        1985
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "97c4bf05-42fb-430a-b734-f8b3c7f66fcc",
      "name": "Read PM Token12",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -881,
        2093
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "188bf3fa-9051-484b-ac3b-5e8a0d2871eb",
      "name": "Extract PM Token12",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -741,
        2093
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER5').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER5').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "dc424302-d4cc-465d-a3b5-b784c5e22808",
      "name": "Check Token12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -561,
        2093
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "af80a555-2bb2-440b-b8da-f550e819834b",
      "name": "Code13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -421,
        2093
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "3c40ccce-1723-4baa-8d02-83367bec7484",
      "name": "Wait7",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -121,
        2193
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "6b5d2489-01b1-4ccc-9deb-add6512f70de",
      "name": "IF PM Token Valid6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -281,
        2093
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication {VARIABLE}",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "4bc5e917-2fc5-4c0e-acd1-fa794d94389e",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1081,
        1993
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "9e615ba1-c4ad-417d-8ad8-1a7325f0fddf",
      "name": "Execute Command6",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -1321,
        2093
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER4').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER4').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "b060cce2-57b0-46c7-80cd-14babc666e35",
      "name": "Check Token13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2541,
        2313
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER5').item.json.user }}.txt",
        "options": {}
      },
      "id": "e9781f3f-e90f-4996-a9ba-50aa16905f09",
      "name": "Read PM Token13",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -61,
        2033
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "10e237a6-0811-459b-928b-dc29d3955bf5",
      "name": "Extract PM Token13",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        79,
        2033
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "3ce06277-02bd-419c-99ab-6e4fc59b21fa",
      "name": "Execute Workflow7",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        59,
        2193
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "203fbf4e-a931-45f0-b609-7cb5bfe653fb",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        239,
        2033
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "testuser",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "testpassword",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4a307953-c6a6-4d33-ac6a-98e428434668",
      "name": "USER4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2681,
        1933
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "testuser",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "testpassword",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dc8da699-eaad-4d73-89bb-58d99b4c74e3",
      "name": "USER5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1041,
        2093
      ]
    },
    {
      "parameters": {
        "content": "# PM Token Template",
        "height": 2210,
        "width": 3195
      },
      "id": "6baf5df0-705b-4305-9e2a-d9cc1178f96a",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2740,
        1100
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "6d96bc3c-2f69-4d52-b66d-a5f72bb8c609",
      "name": "Read/Write Files from Disk26",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        879,
        1961
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "3ac53737-c21e-4853-adc0-260e8ad64133",
      "name": "Read/Write Files from Disk27",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1841,
        2359
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "2b485811-e3d6-430d-b893-65447d125b4b",
      "name": "Convert to File8",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1661,
        2359
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "95d06504-fd4d-403b-97b0-0eac9ec81aaa",
      "name": "Extract from File18",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1040,
        1960
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "b1c86c2e-6025-466f-bc3b-31a879e56cb5",
      "name": "IF9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1200,
        2180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "ff0e01d5-020c-4fdb-8576-5f9574531e57",
      "name": "Code14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        2180
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication wkiosk\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "8e49599f-8244-4830-b262-8731dd840600",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        1860
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "10d362cc-1b75-44e9-b21c-2404f02dfb84",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1341,
        1867
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "76dc98b9-7c84-4335-8686-815e3383e5bd",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1336,
        2233
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "6a53e6aa-f3fb-44c3-a103-a74a91feec16",
      "name": "HTTP Request11",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1500,
        2360
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER').item.json.user }}.txt",
        "options": {}
      },
      "id": "7a7f7ad6-6c34-483c-847a-80577a9d37bc",
      "name": "Read/Write Files from Disk28",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1540,
        2012
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "cf430468-0288-42f4-a380-876300b467a2",
      "name": "Extract from File19",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1760,
        2012
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "8c89d418-0590-4828-887c-fedeaca94b31",
      "name": "Read PM Token14",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2540,
        2120
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "c01c5871-eef5-49dc-8aad-c96f7bf42d83",
      "name": "Extract PM Token14",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2680,
        2120
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER6').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER6').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "e298b3f8-1050-42e5-b832-d81a481899bf",
      "name": "Check Token14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2860,
        2120
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "315bb5cf-5bfb-497b-a42a-56cd16a7e986",
      "name": "Code15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3000,
        2120
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "8e37c63a-55b8-4e32-b206-805873473ef2",
      "name": "Wait8",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3300,
        2220
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "34f07ceb-94f7-4940-90f3-aa696f2b36f2",
      "name": "IF PM Token Valid7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3140,
        2120
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication wkiosk",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "9ce24064-ebc6-40d9-b320-9729231b84e0",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2340,
        2020
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "7f901a20-e040-41ba-a315-4d13795134d9",
      "name": "Execute Command7",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2100,
        2120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "173304b0-f6d2-4d91-ac8d-5fad2013c0ee",
      "name": "Check Token15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        880,
        2340
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER6').item.json.user }}.txt",
        "options": {}
      },
      "id": "3f670507-59e5-4b77-bbd0-87067bb9df1c",
      "name": "Read PM Token15",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3360,
        2060
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "65aa2e31-7944-47fd-84a3-495e9601268a",
      "name": "Extract PM Token15",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3500,
        2060
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "0ffdc182-10f8-49b7-812f-2b974a831dec",
      "name": "Execute Workflow8",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3480,
        2220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "980d6427-b062-478f-9ebb-4a01d14fae36",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3660,
        2060
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "wkiosk",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "L3tsgetC0nn3cted!!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d7de0090-daef-447a-85c3-178479054fb6",
      "name": "USER",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        1960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "wkiosk",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "L3tsgetC0nn3cted!!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0d7324d3-76ce-4eb3-aafc-f7b57362cac2",
      "name": "USER6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2380,
        2120
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "78b0d954-26d8-4dd6-8f95-713c3833875e",
      "name": "Read/Write Files from Disk29",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        879,
        1161
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER7').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "8435812f-4643-43b6-a2d9-d3961f949581",
      "name": "Read/Write Files from Disk30",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1841,
        1559
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "57ad7f58-5801-488e-8c0e-5f4b4f315ba5",
      "name": "Convert to File9",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1661,
        1559
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "87d8a935-f4df-4fcd-96a9-1e0b9ee79ac8",
      "name": "Extract from File20",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1040,
        1160
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "cb68f9d7-ac87-4e8e-948f-81569fca99f2",
      "name": "IF10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1200,
        1380
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "f5d83cfd-b746-49a3-aa48-61dd435cbd8c",
      "name": "Code16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        1380
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication apptconf\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "d53e0dc5-f59a-439f-97a3-d6a773cb934c",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        1060
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "aebd0a9d-3e9d-4eaf-8f52-18b6080aa7bb",
      "name": "Sticky Note36",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1341,
        1067
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "95c5c2b5-93d1-4b61-8eee-cb22dc73cfa1",
      "name": "Sticky Note37",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1336,
        1433
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "d31325bf-91ed-41c6-8359-db4116eeb8e6",
      "name": "HTTP Request12",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1500,
        1560
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER7').item.json.user }}.txt",
        "options": {}
      },
      "id": "2324deb6-8e72-4b6f-8517-791851001ebf",
      "name": "Read/Write Files from Disk31",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1540,
        1212
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "44fe0931-a942-4a32-9333-72c07177e2b4",
      "name": "Extract from File21",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1760,
        1212
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "22f814e9-d4cf-40b7-8e10-16ba9a3ccb90",
      "name": "Read PM Token16",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2540,
        1320
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "266e2556-ea70-418d-97d6-47d82361be9f",
      "name": "Extract PM Token16",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2680,
        1320
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER8').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER8').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "4ac1c771-dd12-4d16-b0b7-1dc36337e1b9",
      "name": "Check Token16",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2860,
        1320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "a1151789-d4e1-46b7-82f7-d8635b0eaa81",
      "name": "Code17",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3000,
        1320
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "e99d06b6-5712-4d72-84e9-812d908d5dae",
      "name": "Wait9",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3300,
        1420
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "c4bb0a45-3250-480a-bd46-603037e2e312",
      "name": "IF PM Token Valid8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3140,
        1320
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication apptconf",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "fe774221-abd6-4f4d-b284-9a5e8f948207",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2340,
        1220
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "4682692e-948b-4c4a-a77a-4afec41d325b",
      "name": "Execute Command8",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2100,
        1320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER7').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER7').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "99f0d31e-af4a-406c-a50e-b04db5513d2f",
      "name": "Check Token17",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        880,
        1540
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER8').item.json.user }}.txt",
        "options": {}
      },
      "id": "9963bc93-f077-42e0-8c13-d5bdaf35089c",
      "name": "Read PM Token17",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3360,
        1260
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "a4a14ede-ecfc-4a0e-a120-be6035af9b90",
      "name": "Extract PM Token17",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3500,
        1260
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "a176311f-9d13-4b21-ac39-be332835bb18",
      "name": "Execute Workflow9",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3480,
        1420
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d4c82576-9deb-4846-bd6e-576445468197",
      "name": "Edit Fields10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3660,
        1260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "apptconf",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "C0nn3ctme#1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "90076837-4d77-479d-8392-45dd84cd6e77",
      "name": "USER7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        1160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "apptconf",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "C0nn3ctme#1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4f3cdad0-234c-43f2-90e1-e7d723af3a4b",
      "name": "USER8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2380,
        1320
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "3c1334dc-1da1-42c7-9e98-59cf920ff263",
      "name": "Read/Write Files from Disk",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        899,
        281
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER9').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "a9560872-05e9-4294-8fdf-c0c8ffb6891b",
      "name": "Read/Write Files from Disk32",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1861,
        679
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "b457ffd6-41dc-432f-b7f0-461caa667e7b",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1681,
        679
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "c8eb899c-c71b-452a-a2c1-bd16a5f4cd87",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1060,
        280
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "17139575-2153-4174-9dcd-d90b33c5a818",
      "name": "IF11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1220,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "5c9b9dc5-8458-4aca-b030-2340adf16ee6",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1060,
        500
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication HEROERP\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "d0fff657-ff70-41ec-b9bc-58aef2872a0c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        180
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "af124ff1-7b9a-46d4-a9e9-ebc2293a48fa",
      "name": "Sticky Note38",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1361,
        187
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "65926fec-5372-4bc8-a1c7-0a18e9dfbdd0",
      "name": "Sticky Note39",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1356,
        553
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "6d688469-ba0e-4eea-be99-023abd237056",
      "name": "HTTP Request13",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1520,
        680
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER9').item.json.user }}.txt",
        "options": {}
      },
      "id": "ff94c97c-4124-4dcf-9104-bec307b6c7af",
      "name": "Read/Write Files from Disk33",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1560,
        332
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "a757dcdf-9b3e-44a5-b4b3-b2cf90842e92",
      "name": "Extract from File22",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1780,
        332
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "6d426a73-662e-4a96-bbc1-68726d8a3100",
      "name": "Read PM Token",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2560,
        440
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "38e09d0b-a75b-4fb1-84c3-e9a2a048c735",
      "name": "Extract PM Token",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2700,
        440
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER10').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER10').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "b035180d-5ea3-494c-9fae-1fd68972fbfc",
      "name": "Check Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2880,
        440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "bfa2543c-127c-4b6a-8986-59de97b7f746",
      "name": "Code18",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3020,
        440
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "09c60272-c2fa-46d5-ba03-f7515fcbefbf",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3320,
        540
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "a8f7bb2c-bd04-40ef-a8e4-6a94be13147d",
      "name": "IF PM Token Valid",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3160,
        440
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication HEROERP",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "f5cd9748-cd87-46a9-9a07-c20bd13e5420",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2360,
        340
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "af428fa7-eac5-469c-a331-eafcba2e1265",
      "name": "Execute Command",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        2120,
        440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER9').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER9').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "b1e01447-d31c-4448-8857-63de01fbf8ec",
      "name": "Check Token18",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        900,
        660
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER10').item.json.user }}.txt",
        "options": {}
      },
      "id": "fc5d9c0d-bd21-463c-bf2c-3d6de7837f1d",
      "name": "Read PM Token18",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        3380,
        380
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "5ebcc6e2-d60d-471a-b1bb-1eadf3f7e6e4",
      "name": "Extract PM Token18",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3520,
        380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "a1d01973-7825-41f2-bfbd-2c11366bf20a",
      "name": "Execute Workflow10",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3500,
        540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5e033eac-0ee1-421c-bfb3-f62e6463114b",
      "name": "Edit Fields11",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3680,
        380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "HEROERP",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "Fwuser#12345",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "09f73da4-a6a5-419e-8fc6-3edcefd558f6",
      "name": "USER9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        760,
        280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "HEROERP",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "Fwuser#12345",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5325916b-de12-4fe2-a71e-8020be945a8d",
      "name": "USER10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2400,
        440
      ]
    },
    {
      "parameters": {},
      "id": "5a5decf9-69e0-4c0e-8267-b970729a0b81",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4200,
        60
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "HEROERP",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "3p1c#123456",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3eecaeb1-1edc-4adf-853a-5c4792f0b332",
      "name": "USER11",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        780,
        -500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "HEROERP",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "3p1c#123456",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "532ab764-8c25-433c-b28b-e6bb9b6ce484",
      "name": "USER12",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2320,
        -380
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "a42af996-e36a-44fc-99ed-d83f0e0a4ed5",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1860,
        -1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "f96cc60d-5243-4eca-90f9-f425d73be338",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2060,
        -1240
      ]
    },
    {
      "parameters": {
        "height": 307.8096629521582,
        "width": 648.6717174512601,
        "color": 4
      },
      "id": "ed13a26e-ad25-4cb6-a538-41c5e1c25eab",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1919,
        -1515
      ]
    },
    {
      "parameters": {
        "height": 255.92863701464387,
        "width": 650.1509149056402,
        "color": 3
      },
      "id": "7c946d46-471a-4c0c-9308-820c09e783ab",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1920,
        -1211
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json[\"data\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "93c93829-0b8a-4ed3-bcf0-c14187d27c05",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -1464,
        -1432
      ]
    },
    {
      "parameters": {
        "content": "## ASEHR Authentication\n**Check token: if yes (use), if no (get new)",
        "height": 563.4038572291529,
        "width": 1294.7853156722608,
        "color": 5
      },
      "id": "22516343-0a7c-463c-bb61-e4b0f7775904",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2560,
        -1520
      ]
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "97a2d6b7-a27a-45cf-8cb6-8c309baf17ef",
      "name": "Read/Write Files from Disk8",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -2360,
        -1400
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "6ef7622d-b0b5-4f6b-8c47-a3792f3dd143",
      "name": "Extract from File6",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -2200,
        -1400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $('USER13').item.json.user }}.txt",
        "options": {}
      },
      "id": "64eca586-d3cb-4567-abe5-3fe35a559e8a",
      "name": "Read/Write Files from Disk9",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1860,
        -1420
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "daa96954-a616-42fc-9836-f144f61b0340",
      "name": "Extract from File7",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1680,
        -1420
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=ehrtoken-{{ $('USER13').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "85f0e004-4db2-4495-a631-ee0fc86c4eff",
      "name": "Read/Write Files from Disk10",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1500,
        -1120
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "024ac5bd-12c2-490c-acf8-c0c466934933",
      "name": "Convert to File2",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1680,
        -1120
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/MagicJson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={     \"Action\":\"GetUserAuthentication\",     \"AppUserID\":\"{{ $('USER13').item.json.user }}\",     \"Appname\":\"EPICPC.NMNWokflow.TestApp\",     \"PatientID\":\"\",     \"Token\":\"{{ $json[\"data\"] }}\",     \"Parameter1\":\"{{ $('USER13').item.json.password }}\"    } ",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "9464e54f-0c6e-4727-bf3a-32eac62b56b7",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2300,
        -1140
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "46f7bcdb-e07d-4117-ba90-083e0a67acec",
      "name": "Read/Write Files from Disk11",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -800,
        -1280
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "f50bf13c-a875-4a92-a27e-0bbb57b412b0",
      "name": "Extract from File8",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -620,
        -1280
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "b6fc3785-6e10-4683-a446-8b9dd313bfd5",
      "name": "IF3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -240,
        -1280
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "7da2e82b-ab58-47e8-b371-173efebb4310",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -20,
        -1180
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $('USER14').item.json.user }}.txt",
        "options": {}
      },
      "id": "efedb6f9-7e89-4bb8-b86f-119eeed7eddf",
      "name": "Read/Write Files from Disk12",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -20,
        -1380
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "fe212adf-d9bb-461b-b31e-ca0cc428ba34",
      "name": "Extract from File9",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        120,
        -1380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/MagicJson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={     \"Action\":\"GetUserAuthentication\",     \"AppUserID\":\"{{ $('USER14').item.json.user }}\",     \"Appname\":\"EPICPC.NMNWokflow.TestApp\",     \"PatientID\":\"\",     \"Token\":\"{{ $json[\"data\"] }}\",     \"Parameter1\":\"{{ $('USER14').item.json.password }}\"    } ",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "d3c8d9b5-bf0f-45bb-96a7-31ca2d2c7f24",
      "name": "HTTP Request14",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -420,
        -1280
      ]
    },
    {
      "parameters": {
        "content": "# EHR Authentication",
        "height": 426.115682381651,
        "width": 1586.9735546694517,
        "color": 5
      },
      "id": "0328829f-7010-40a0-b20b-5f4dee22a88c",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1000,
        -1440
      ]
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "5dc8647f-5430-4ad6-b853-1002847cdd72",
      "name": "Execute Workflow1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        200,
        -1180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.Token }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3579b720-89f5-4fd9-8f3a-99421f246f2b",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        320,
        -1375
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "HEROERP",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "3p1c#123456",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1b93a06c-c6f9-4991-b6e3-cd0b0302a7ce",
      "name": "USER13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2500,
        -1400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "HEROERP",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "3p1c#123456",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c31c8b9b-c198-499f-bdef-15d1f8aec14e",
      "name": "USER14",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -960,
        -1280
      ]
    },
    {
      "parameters": {
        "content": "# EHR Token Template",
        "height": 1230.7215801100972,
        "width": 3195
      },
      "id": "7b7758bd-2129-4404-9ba7-e03b25e93769",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2580,
        -1920.7215801100972
      ]
    },
    {
      "parameters": {},
      "id": "ebf4d108-2926-4680-87e6-c926295808aa",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        7880,
        60
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "cce280d7-ca74-4893-977a-db77e766aa4e",
      "name": "Read/Write Files from Disk34",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4739,
        301
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER15').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "fde50fb2-f29d-4b0d-a7f3-7f187020f510",
      "name": "Read/Write Files from Disk35",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5701,
        699
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "2ee77f17-b9dc-4663-9928-5d4c781275d9",
      "name": "Convert to File10",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        5521,
        699
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "65e7e837-8aa1-4911-9c4c-4f18501cde09",
      "name": "Extract from File23",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        4900,
        300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "db24bc1a-aaa6-4b95-a88e-51dbe13fa973",
      "name": "IF12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5060,
        520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "2920e192-5c74-4649-b4cd-dc777baf3438",
      "name": "Code19",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4900,
        520
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication {VARIABLE}\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "1e685fd1-e917-40b6-9cbc-9bbc23cbf225",
      "name": "Sticky Note40",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4560,
        200
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "a0bf86cb-f3ad-492c-b5cd-0203a9e345d7",
      "name": "Sticky Note41",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5201,
        207
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "a73af9b9-c9c5-4a1c-9b85-d4ada3bc7ca0",
      "name": "Sticky Note42",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5196,
        573
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "dee76797-549f-47c2-919c-1660cfb40988",
      "name": "HTTP Request15",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5360,
        700
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER15').item.json.user }}.txt",
        "options": {}
      },
      "id": "8563dc18-675c-4cb4-914b-802fb980ef6a",
      "name": "Read/Write Files from Disk36",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5400,
        352
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "6e002dbb-1a2f-456f-90fb-92cfde84378b",
      "name": "Extract from File24",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        5620,
        352
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "6f91a645-283b-4478-97fb-f2fd813021e9",
      "name": "Read PM Token19",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        6400,
        460
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "dff985a5-00e7-49a5-81d1-75fb9822f83e",
      "name": "Extract PM Token19",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        6540,
        460
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER16').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER16').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "5cde61f0-726d-4eb4-a459-26c65c3d611f",
      "name": "Check Token19",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6720,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "2103ac58-5331-40d4-83b6-75eebc24cfc0",
      "name": "Code20",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6860,
        460
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "1687fcf2-bf80-4c95-b50f-772756531be0",
      "name": "Wait10",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7160,
        560
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "124cce18-e844-48e7-804e-6bec2463e051",
      "name": "IF PM Token Valid9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7000,
        460
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication {VARIABLE}",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "875e05df-3b96-469d-8767-ff2677c66503",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6200,
        360
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "7ef10f7a-3202-4b86-8314-2bebe638d8b6",
      "name": "Execute Command9",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5960,
        460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER15').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER15').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "e5984a47-7bde-4245-a232-ae45acce20f4",
      "name": "Check Token20",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4740,
        680
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER16').item.json.user }}.txt",
        "options": {}
      },
      "id": "e852576f-15d4-47dc-b9a7-39f83e6e0388",
      "name": "Read PM Token20",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7220,
        400
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "b2557f2e-0364-4758-b702-145cfe5374d7",
      "name": "Extract PM Token20",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7360,
        400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "d9cf33db-6057-404a-8a4e-e2fab91a64ce",
      "name": "Execute Workflow11",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7340,
        560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b62a42a6-45ea-4201-a9f0-94fc32c9c3dd",
      "name": "Edit Fields12",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7520,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "testuser",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "testpassword",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cb2fbb39-38f4-49b9-97e7-bc9a739b4a95",
      "name": "USER15",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4600,
        300
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "testuser",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "testpassword",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4f077cdb-0012-459f-8b95-7f3df16f9ca7",
      "name": "USER16",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6240,
        460
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "8caa5d91-fb5f-49a4-9d6a-254f0e400d5d",
      "name": "Read/Write Files from Disk1",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4739,
        1181
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "2042c4f7-920d-435f-86a6-c0c020b6f3d1",
      "name": "Convert to File3",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        5521,
        1579
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "74223af0-6fcb-4a40-9709-5420d51882ba",
      "name": "IF13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5060,
        1400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "d09225df-3fe8-4c6c-bf18-37aa997d62a9",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4900,
        1400
      ]
    },
    {
      "parameters": {
        "content": "## ASPM Authentication ELISEAI\n**Check token: if yes (use), if no (get new)",
        "height": 666.2861090173772,
        "width": 1290.8012866477518,
        "color": 6
      },
      "id": "0e7eeff1-ee2b-4d9e-a8d5-abaa67093854",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4560,
        1079
      ]
    },
    {
      "parameters": {
        "height": 362.7737573665016,
        "width": 646.6471275914764,
        "color": 4
      },
      "id": "3407c827-4c3d-4106-b031-e0ce17619080",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5201,
        1087
      ]
    },
    {
      "parameters": {
        "height": 294.96556026709675,
        "width": 656.1571203767965,
        "color": 3
      },
      "id": "ceeb4c4c-9e6d-4b9b-b39b-bb837985ec20",
      "name": "Sticky Note44",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5196,
        1453
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "3b40011e-3bd4-447e-a889-ebf7f4d8f44f",
      "name": "HTTP Request16",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5360,
        1580
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER17').item.json.user }}.txt",
        "options": {}
      },
      "id": "0e67a803-3276-4adf-b17f-5b47d4efa1b5",
      "name": "Read/Write Files from Disk37",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5400,
        1232
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "dc8aa13e-a334-4554-aa3a-40f614182586",
      "name": "Extract from File25",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        5620,
        1232
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "6594500a-6c0e-4fec-b4f9-57cb6dd4f120",
      "name": "Read PM Token1",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        6400,
        1340
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "058774ff-7f11-471e-88f5-904da729c118",
      "name": "Extract PM Token1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        6540,
        1340
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER18').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER18').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "311a984e-ba2f-484d-90ff-a9acdbb30a43",
      "name": "Check Token1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6720,
        1340
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "c048658c-4d80-4fc2-b91f-54cecb34d51f",
      "name": "Code21",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6860,
        1340
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "699b41fd-d894-44c3-9a28-859a05220f1d",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7160,
        1439
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "27294f4a-a020-4a3c-b8b6-03c5b036f359",
      "name": "IF PM Token Valid1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7000,
        1340
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication ELISEAI",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "a5577988-4d4a-4e05-8310-f8c7166f9fc1",
      "name": "Sticky Note24",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6200,
        1240
      ]
    },
    {
      "parameters": {
        "command": "realpath pmtoken.txt"
      },
      "id": "e69378dc-0696-489f-90d0-7bca17727c5d",
      "name": "Execute Command1",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        5960,
        1279
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER17').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER17').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "1fccaa92-ca7e-4dec-8240-7cb766a58e2d",
      "name": "Check Token21",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4740,
        1560
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER18').item.json.user }}.txt",
        "options": {}
      },
      "id": "36985c19-eb20-426d-ab82-7592485e107d",
      "name": "Read PM Token21",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7220,
        1280
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "d5362c89-7c86-49ed-a017-fa3dddca8d0a",
      "name": "Extract PM Token21",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7360,
        1280
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "c54721e9-9774-4ab4-b818-a3d2a7519af6",
      "name": "Execute Workflow12",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7340,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "47ae33d9-a415-4b3a-a14b-aa38aba72645",
      "name": "Edit Fields13",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7520,
        1280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "eliseai",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "L3tsC0nnect!C0nf",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "deffedd6-5181-4f9b-aa19-920861570e43",
      "name": "USER17",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4600,
        1179
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "eliseai",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "L3tsC0nnect!C0nf",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f15d71f3-10d2-4599-b253-6b42c1357424",
      "name": "USER18",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6240,
        1339
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "f3e88e74-c111-4d0d-8774-16c6491b88e2",
      "name": "Extract from File1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        4900,
        1180
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=pmtoken-{{ $('USER17').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "d7c37486-e83d-41b9-b109-c96aca70846d",
      "name": "Read/Write Files from Disk38",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5701,
        1579
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials2').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials2').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "909d2d96-404e-4565-b054-e2cf9352c2d3",
      "name": "HTTP Request4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5640,
        -300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "014bb7d9-52a4-492d-ab90-8eb5879e18eb",
      "name": "IF4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5440,
        -420
      ]
    },
    {
      "parameters": {
        "height": 307.8096629521582,
        "width": 648.6717174512601,
        "color": 4
      },
      "id": "89ba8989-dbaf-4ebb-a1a7-9442fdb8521a",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5160,
        -700
      ]
    },
    {
      "parameters": {
        "height": 255.92863701464387,
        "width": 650.1509149056402,
        "color": 3
      },
      "id": "2e550369-ac46-49eb-8357-c08f2afe6aae",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5140,
        -400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json[\"data\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "03b77e71-42e9-4212-83dd-b80999fdf389",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        6260,
        -620
      ]
    },
    {
      "parameters": {
        "content": "## ASEHR Authentication\n**Check token: if yes (use), if no (get new)",
        "height": 563.4038572291529,
        "width": 1294.7853156722608,
        "color": 5
      },
      "id": "b002f314-4bbb-49b5-8afe-b51c38803b6c",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4500,
        -700
      ]
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "e119922b-73e3-4d01-b78c-0fbc7719de4e",
      "name": "Read/Write Files from Disk13",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        4700,
        -580
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "785140f4-171e-4096-b23a-56d57f497511",
      "name": "Extract from File10",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        5300,
        -580
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $('USER19').item.json.user }}.txt",
        "options": {}
      },
      "id": "1096346d-b2a7-453f-9114-3eae9e6a3846",
      "name": "Read/Write Files from Disk14",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        5860,
        -600
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "b76ab22c-c194-4cca-80aa-2564f8f2538f",
      "name": "Extract from File11",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        6040,
        -600
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=ehrtoken-{{ $('USER19').item.json.user }}.txt",
        "options": {
          "append": false
        }
      },
      "id": "3c9d3116-685f-4113-b897-2aa776a39aa9",
      "name": "Read/Write Files from Disk15",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        6380,
        -300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {}
      },
      "id": "fff96fb1-70a5-4244-b070-10e28f8012f1",
      "name": "Convert to File4",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        6240,
        -300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/MagicJson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={     \"Action\":\"GetUserAuthentication\",     \"AppUserID\":\"{{ $('USER19').item.json.user }}\",     \"Appname\":\"EPICPC.NMNWokflow.TestApp\",     \"PatientID\":\"\",     \"Token\":\"{{ $json[\"data\"] }}\",     \"Parameter1\":\"{{ $('USER19').item.json.password }}\"    } ",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "3a7e34c1-686c-4ea3-9050-a5b1e3ccce38",
      "name": "HTTP Request5",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4760,
        -320
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "12a0f660-a7f5-4637-9bea-0a6726a714c9",
      "name": "Read/Write Files from Disk16",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        6260,
        -460
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "811a86d7-4059-4932-9b05-95d9e60a8032",
      "name": "Extract from File12",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        6440,
        -460
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "38aa119e-3dbc-42cb-8e12-58c51f204e0e",
      "name": "IF5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6820,
        -460
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "f3d4db72-d9fe-46e3-88ba-e423a1851568",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7040,
        -360
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "fileSelector": "=ehrtoken-{{ $('USER20').item.json.user }}.txt",
        "options": {}
      },
      "id": "e7616c92-0668-4458-b320-f3001b5c2272",
      "name": "Read/Write Files from Disk17",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7040,
        -560
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "988d3f86-7fc5-422c-8dd8-270a23a448a4",
      "name": "Extract from File13",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7180,
        -560
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/MagicJson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={     \"Action\":\"GetUserAuthentication\",     \"AppUserID\":\"{{ $('USER20').item.json.user }}\",     \"Appname\":\"EPICPC.NMNWokflow.TestApp\",     \"PatientID\":\"\",     \"Token\":\"{{ $json[\"data\"] }}\",     \"Parameter1\":\"{{ $('USER20').item.json.password }}\"    } ",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "45246127-6f1b-438a-86ff-e7135ad34868",
      "name": "HTTP Request17",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6640,
        -460
      ]
    },
    {
      "parameters": {
        "content": "# EHR Authentication",
        "height": 426.115682381651,
        "width": 1586.9735546694517,
        "color": 5
      },
      "id": "caa41c6c-4654-45d3-92cc-d59531c1617b",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6060,
        -620
      ]
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "8892b180-4d7c-4ce6-aa8e-e509637cafdb",
      "name": "Execute Workflow2",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7260,
        -360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.Token }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "601c6ac2-da5f-4b2b-840e-7122b2db74cd",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7380,
        -560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "cciqccm",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "CCiq1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c9150590-4b9b-463f-9d4e-0c66d0fa06f4",
      "name": "USER19",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4560,
        -580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "cciqccm",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "CCiq1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9dd0aa6f-7eb5-483f-80f2-d525fd65b147",
      "name": "USER20",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6100,
        -460
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5fa946e-0e2d-4b89-8dd8-73fc151e786f",
              "name": "VeradigmUser",
              "value": "56233400f:10031494^1^EPICP-e301-NMNWokflow-prod",
              "type": "string"
            },
            {
              "id": "6e30e720-52b2-484f-904c-dcde26731ee8",
              "name": "VeradigmPass",
              "value": "%p3CpcN2nW!7FldWt%St5Pp6%8@5",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "da385133-2702-4672-8550-95cbaa8f5150",
      "name": "Veradigm Credentials",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -120,
        140
      ]
    },
    {
      "parameters": {
        "path": "0dc18e53-b15c-4bcc-b282-cbe4468c8e46",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        4020,
        -860
      ],
      "id": "28d4acf6-ca53-41ef-bf7b-1e6a5889d4d6",
      "name": "Webhook",
      "webhookId": "0dc18e53-b15c-4bcc-b282-cbe4468c8e46"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5fa946e-0e2d-4b89-8dd8-73fc151e786f",
              "name": "VeradigmUser",
              "value": "56233400f:10031494^1^EPICP-804c-NMNWokflow-prod",
              "type": "string"
            },
            {
              "id": "6e30e720-52b2-484f-904c-dcde26731ee8",
              "name": "VeradigmPass",
              "value": "%paCpcN2nW!6FlaWt%St3Pp@B958",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5e526c66-b92b-443d-9d5e-fb254d5a7668",
      "name": "Veradigm Credentials2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4260,
        -860
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        6480,
        -620
      ],
      "id": "b900f024-d428-454d-adbb-5880a3ea7e7a",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.46/Unity/UnityService.svc/json/GetToken",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={      \"Username\":\"{{ $('Veradigm Credentials').item.json.VeradigmUser }}\",      \"Password\":\"{{ $('Veradigm Credentials').item.json.VeradigmPass }}\"  }",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "b7751b38-47b6-4ef1-b9ab-284437a821b4",
      "name": "HTTP Request6",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5200,
        -180
      ]
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5860,
        -300
      ],
      "id": "85bca485-fba3-4f42-9fed-87a3ab12ca27",
      "name": "Wait5",
      "webhookId": "4ec6e730-8aa9-4899-93c5-85ea01e9835e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b6c63e86-69b7-4734-aade-f2c184eccac8",
              "leftValue": "={{ $json.getuserauthenticationinfo[0].ErrorMessage }}",
              "rightValue": "Your login credentials are incorrect.",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4960,
        -380
      ],
      "id": "fbd10411-a9b2-4f68-b0be-88055303b5c9",
      "name": "If"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5380,
        -280
      ],
      "id": "0f933b16-e447-42f7-b507-f8c64b0d538f",
      "name": "Wait11",
      "webhookId": "5b6269c0-f129-4432-84e0-fe0da6ea9e22"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1400,
        -360
      ],
      "id": "5b9177d8-3f34-4145-a713-cdbbe198acbe",
      "name": "Wait12",
      "webhookId": "0d7163d2-6307-42b6-8627-055124ca1164"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5fa946e-0e2d-4b89-8dd8-73fc151e786f",
              "name": "VeradigmUser",
              "value": "56233400f:10031494^1^EPICP-804c-NMNWokflow-prod",
              "type": "string"
            },
            {
              "id": "6e30e720-52b2-484f-904c-dcde26731ee8",
              "name": "VeradigmPass",
              "value": "%paCpcN2nW!6FlaWt%St3Pp@B958",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9781c81b-8006-4250-a50b-5ca8f10dded3",
      "name": "Veradigm Credentials3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -120,
        -220
      ]
    }
  ],
  "pinData": {
    "USER3": [
      {
        "json": {
          "user": "testuser",
          "password": "testpassword"
        }
      }
    ],
    "Veradigm Credentials1": [
      {
        "json": {
          "VeradigmUser": "56233400f:10031494^1^EPICP-507f-NMNWokflow-prod",
          "VeradigmPass": "%p6CpcN4nW!0Fl3Wt%St9Pp411cB"
        }
      }
    ],
    "HTTP Request5": [
      {
        "json": {
          "getuserauthenticationinfo": [
            {
              "product": "PRO",
              "DictationEnabled": "YES",
              "RequirePassword": "NO",
              "HasPrescribingRights": "NO",
              "ClientID": "",
              "ChartNoteEnabled": "YES",
              "CanOrder": "FALSE",
              "IsDEAExpired": "YES",
              "ChargeCaptureEnabled": "YES",
              "CanPrescribe": "FALSE",
              "EREnabled": "YES",
              "CanChartEdit": "N",
              "AppLicenseType": "",
              "CurrentUAIVersion": "",
              "IsProvider": "N",
              "ErrorMessage": "Your login credentials are incorrect.",
              "Lockout": "NO",
              "UserMessage": "",
              "ProviderID": "0",
              "UserChargePermission": "N",
              "features": "",
              "AppLicenseCount": "",
              "ValidUser": "NO",
              "AppLicenseExpireDate": "",
              "PrescriberID": "0",
              "PrescribingEnabled": "YES"
            }
          ]
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 120
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [],
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-06-01T20:41:48.993Z",
      "updatedAt": "2024-06-01T20:41:48.993Z",
      "id": "N7jx3FSOuxvAbK8V",
      "name": "Thomas"
    },
    {
      "createdAt": "2024-07-30T19:51:02.921Z",
      "updatedAt": "2024-07-30T19:51:10.497Z",
      "id": "HMKqfxLOS7FSJ3Ne",
      "name": "EHR Token"
    },
    {
      "createdAt": "2024-07-30T19:51:18.228Z",
      "updatedAt": "2024-07-30T19:51:18.228Z",
      "id": "mYyg5mNB1CnaZkvV",
      "name": "PM Token"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2025-07-22T13:28:49.998Z",
  "versionId": "35c5a1f9-c2d6-404c-aab1-896f827eacab"
}