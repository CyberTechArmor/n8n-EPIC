{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "NocoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook4": {
      "main": [
        [
          {
            "node": "NocoDB1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB1": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "NocoDB2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NocoDB3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NocoDB4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook5": {
      "main": [
        [
          {
            "node": "Get many rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many rows": {
      "main": [
        [
          {
            "node": "Code14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Respond to Webhook8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook6": {
      "main": [
        [
          {
            "node": "NocoDB5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get many rows1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get many rows1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code14": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code13": {
      "main": [
        [
          {
            "node": "Respond to Webhook8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook7": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook8": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get many rows3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many rows3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-30T10:16:49.818Z",
  "id": "lsTNqd8JeAqRcsht",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "EPIC Patient NPS",
  "nodes": [
    {
      "parameters": {
        "path": "ea1a00b6-e63d-49dc-bb65-7fa28b5e8990",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "79d4adea-caf3-4ee0-a3f2-813f79e8edb1",
      "name": "Webhook",
      "webhookId": "ea1a00b6-e63d-49dc-bb65-7fa28b5e8990"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        440,
        0
      ],
      "id": "c55ee21b-a2d8-4305-873c-aac5a4027564",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "2f300ab3-c5c9-4bc4-901f-f30fa1e63568",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1040,
        0
      ],
      "id": "9c8bff14-91d0-405b-b717-d10a76acb464",
      "name": "Webhook1",
      "webhookId": "2f300ab3-c5c9-4bc4-901f-f30fa1e63568"
    },
    {
      "parameters": {
        "jsCode": "const query = items[0].json.query || {};\n\nconst title = query.title || \"NPS Survey\";\nconst location = query.location || \"\";\nconst area = query.area || \"\";\nconst entity = query.entity || \"\";\nconst source = query.source || \"\";\nconst patient_id = query.patient_id || \"\";\nconst redirectUrl = query.redirecturl || \"\";\n\nconst webhookUrl = \"https://xl.epicpc.com/webhook/2f300ab3-c5c9-4bc4-901f-f30fa1e63568\";\n\nconst ratingEmojis = ['üòû', 'üòï', 'üòê', 'üôÇ', 'üòÑ'];\n\n// Build the rating buttons HTML server-side\nlet ratingButtonsHtml = '';\nfor(let i = 0; i < ratingEmojis.length; i++) {\n  const emoji = ratingEmojis[i];\n  ratingButtonsHtml += `<button type=\"button\" class=\"rate-btn\" title=\"Rate ${i+1}\">${emoji}</button>`;\n}\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>${title}</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body { background: #f6f8fa; font-family: 'Segoe UI', 'Inter', Arial, sans-serif; min-height: 100vh; margin: 0; }\n    .main-card { max-width: 440px; margin: 48px auto; background: #fff; border-radius: 16px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); padding: 34px 26px 30px 26px; }\n    .title { font-size: 2.2em; font-weight: 800; text-align: center; color: #173457; margin-bottom: 2px; letter-spacing: -0.02em; }\n    .subtitle { text-align: center; font-size: 1.14em; color: #5991c4; margin-bottom: 28px; font-weight: 500; letter-spacing: 0.01em; }\n    .question-label { display: block; font-size: 1.17em; font-weight: 600; margin-bottom: 13px; }\n    .required { color: #e53935; margin-left: 4px; }\n    .rating-row { display: flex; gap: 18px; justify-content: center; margin-bottom: 13px; }\n    .rate-btn {\n      background: #e3eaf6;\n      color: #193965;\n      border: none;\n      width: 54px;\n      height: 54px;\n      font-size: 2.1em;\n      font-weight: bold;\n      border-radius: 50%;\n      cursor: pointer;\n      box-shadow: 0 2px 10px #e8efff;\n      transition: background 0.16s, color 0.14s, box-shadow 0.18s;\n      outline: none;\n      line-height: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .rate-btn.selected, .rate-btn:focus {\n      background: #3f86e0;\n      color: #fff;\n      box-shadow: 0 3px 14px #b4cfff;\n    }\n    .rate-btn:hover:not(.selected) { background: #b3d1fa; }\n    textarea, input[type=\"text\"], input[type=\"email\"], input[type=\"tel\"] {\n      width: 100%; border: 1px solid #dbe4ee; border-radius: 7px; padding: 10px; font-size: 1em; margin-bottom: 10px; background: #f9fcff;\n    }\n    select { padding: 8px 8px; border-radius: 5px; font-size: 1em; margin-top: 1px; margin-bottom: 10px; }\n    .submit-btn {\n      width: 100%;\n      background: #2664d4;\n      color: #fff;\n      border: none;\n      padding: 16px 0;\n      border-radius: 7px;\n      font-size: 1.19em;\n      font-weight: 700;\n      margin-top: 18px;\n      cursor: pointer;\n      box-shadow: 0 2px 16px #d1dcf7;\n      transition: background 0.15s;\n    }\n    .submit-btn:hover { background: #163e88; }\n    .thanks { font-size: 1.22em; color: #249d48; text-align: center; margin-top: 30px; }\n    .question-block { margin-bottom: 16px; }\n    @media (max-width: 540px) {\n      .main-card { max-width: 96vw; padding: 7vw 3vw; }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"main-card\">\n    <div class=\"title\">${title}</div>\n    <div class=\"subtitle\" id=\"surveySubtitle\"></div>\n    <form id=\"npsForm\" autocomplete=\"off\">\n      <div class=\"question-block\">\n        <label class=\"question-label\">\n          Please rate your experience.\n          <span class=\"required\">*</span>\n        </label>\n        <div class=\"rating-row\" id=\"ratingButtons\">\n          ${ratingButtonsHtml}\n        </div>\n        <input type=\"hidden\" name=\"score\" id=\"score\" required>\n      </div>\n\n      <div class=\"question-block\">\n        <label class=\"question-label\" for=\"comments\">\n          Please add any details.<span class=\"required\">*</span>\n        </label>\n        <textarea id=\"comments\" name=\"comments\" rows=\"3\" required maxlength=\"1000\" placeholder=\"Type details here...\"></textarea>\n      </div>\n\n      <div class=\"question-block\">\n        <label class=\"question-label\" for=\"response_required\">\n          Would you like to be contacted?\n        </label>\n        <select id=\"response_required\" name=\"response_required\">\n          <option value=\"\">No</option>\n          <option value=\"y\">Yes</option>\n        </select>\n      </div>\n\n      <div id=\"contactFields\">\n        <div class=\"question-block\">\n          <label class=\"question-label\" for=\"contact_name\">Name</label>\n          <input type=\"text\" id=\"contact_name\" name=\"contact_name\" maxlength=\"80\" autocomplete=\"off\" />\n        </div>\n        <div class=\"question-block\">\n          <label class=\"question-label\" for=\"contact_mobile\">Phone Number</label>\n          <input type=\"tel\" id=\"contact_mobile\" name=\"contact_mobile\" maxlength=\"30\" autocomplete=\"off\" />\n        </div>\n        <div class=\"question-block\">\n          <label class=\"question-label\" for=\"contact_email\">Email</label>\n          <input type=\"email\" id=\"contact_email\" name=\"contact_email\" maxlength=\"120\" autocomplete=\"off\" />\n        </div>\n      </div>\n\n      <input type=\"hidden\" id=\"entity\" name=\"entity\" value=\"${entity}\">\n      <input type=\"hidden\" id=\"location\" name=\"location\" value=\"${location}\">\n      <input type=\"hidden\" id=\"area\" name=\"area\" value=\"${area}\">\n      <input type=\"hidden\" id=\"survey_source\" name=\"survey_source\" value=\"${source}\">\n      <input type=\"hidden\" id=\"patient_id\" name=\"patient_id\" value=\"${patient_id}\">\n\n      <button type=\"submit\" class=\"submit-btn\">Submit</button>\n    </form>\n    <div id=\"thankYouMsg\" class=\"thanks\" style=\"display:none;\">Thank you for your feedback!</div>\n  </div>\n\n  <script>\n    document.addEventListener('DOMContentLoaded', () => {\n      // Compose subtitle from location and area\n      const subtitleParts = [];\n      if (\"${location}\") subtitleParts.push(\"${location}\");\n      if (\"${area}\") subtitleParts.push(\"${area}\");\n      document.getElementById('surveySubtitle').textContent = subtitleParts.join(' | ');\n\n      const scoreInput = document.getElementById('score');\n      const ratingButtons = document.querySelectorAll('.rate-btn');\n\n      ratingButtons.forEach((btn, idx) => {\n        btn.addEventListener('click', (ev) => {\n          ev.preventDefault();\n\n          // Set hidden input value\n          scoreInput.value = idx + 1;\n\n          // Remove 'selected' from all buttons and add to clicked\n          ratingButtons.forEach(b => b.classList.remove('selected'));\n          btn.classList.add('selected');\n        });\n      });\n\n      const form = document.getElementById('npsForm');\n\n      form.addEventListener('submit', async (ev) => {\n        ev.preventDefault();\n\n        if (!scoreInput.value) {\n          alert(\"Please select a rating.\");\n          return;\n        }\n        if (!document.getElementById('comments').value.trim()) {\n          alert(\"Please add details.\");\n          return;\n        }\n\n        const formData = new FormData(form);\n        formData.append('date_sent', new Date().toISOString());\n\n        try {\n          const response = await fetch(\"${webhookUrl}\", {\n            method: \"POST\",\n            body: formData,\n          });\n          if (!response.ok) {\n            throw new Error('Server response was not OK');\n          }\n\n          ${\n            redirectUrl\n              ? `// Redirect if redirecturl present\n                 window.location.href = \"${redirectUrl}\";`\n              : `// Else show thank you message\n                 form.style.display = 'none';\n                 document.getElementById('thankYouMsg').style.display = 'block';`\n          }\n\n        } catch (error) {\n          alert(\"Failed to submit feedback: \" + error.message);\n        }\n      });\n    });\n  </script>\n</body>\n</html>\n`;\n\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "1ea988f5-806c-4b5a-8d88-af136e60a505",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "const query = items[0].json.query || {};\n\nconst title = query.title || \"NPS Survey\";\nconst location = query.location || \"\";\nconst area = query.area || \"\";\nconst entity = query.entity || \"\";\nconst source = query.source || \"\";\nconst patient_id = query.patient_id || \"\";\n\nconst webhookUrl = \"https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990\";\n\nconst ratingEmojis = ['üòû', 'üòï', 'üòê', 'üôÇ', 'üòÑ'];\n\n// Build the rating buttons HTML server-side\nlet ratingButtonsHtml = '';\nfor(let i = 0; i < ratingEmojis.length; i++) {\n  const emoji = ratingEmojis[i];\n  ratingButtonsHtml += `<button type=\"button\" class=\"rate-btn\" title=\"Rate ${i+1}\">${emoji}</button>`;\n}\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>${title}</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <style>\n    body { background: #f6f8fa; font-family: 'Segoe UI', 'Inter', Arial, sans-serif; min-height: 100vh; margin: 0; }\n    .main-card { max-width: 440px; margin: 48px auto; background: #fff; border-radius: 16px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); padding: 34px 26px 30px 26px; }\n    .title { font-size: 2.2em; font-weight: 800; text-align: center; color: #173457; margin-bottom: 2px; letter-spacing: -0.02em; }\n    .subtitle { text-align: center; font-size: 1.14em; color: #5991c4; margin-bottom: 28px; font-weight: 500; letter-spacing: 0.01em; }\n    .question-label { display: block; font-size: 1.17em; font-weight: 600; margin-bottom: 13px; }\n    .required { color: #e53935; margin-left: 4px; }\n    .rating-row { display: flex; gap: 18px; justify-content: center; margin-bottom: 13px; }\n    .rate-btn {\n      background: #e3eaf6;\n      color: #193965;\n      border: none;\n      width: 54px;\n      height: 54px;\n      font-size: 2.1em;\n      font-weight: bold;\n      border-radius: 50%;\n      cursor: pointer;\n      box-shadow: 0 2px 10px #e8efff;\n      transition: background 0.16s, color 0.14s, box-shadow 0.18s;\n      outline: none;\n      line-height: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .rate-btn.selected, .rate-btn:focus {\n      background: #3f86e0;\n      color: #fff;\n      box-shadow: 0 3px 14px #b4cfff;\n    }\n    .rate-btn:hover:not(.selected) { background: #b3d1fa; }\n    textarea, input[type=\"text\"], input[type=\"email\"], input[type=\"tel\"] {\n      width: 100%; border: 1px solid #dbe4ee; border-radius: 7px; padding: 10px; font-size: 1em; margin-bottom: 10px; background: #f9fcff;\n    }\n    select { padding: 8px 8px; border-radius: 5px; font-size: 1em; margin-top: 1px; margin-bottom: 10px; }\n    .submit-btn {\n      width: 100%;\n      background: #2664d4;\n      color: #fff;\n      border: none;\n      padding: 16px 0;\n      border-radius: 7px;\n      font-size: 1.19em;\n      font-weight: 700;\n      margin-top: 18px;\n      cursor: pointer;\n      box-shadow: 0 2px 16px #d1dcf7;\n      transition: background 0.15s;\n    }\n    .submit-btn:hover { background: #163e88; }\n    .thanks { font-size: 1.22em; color: #249d48; text-align: center; margin-top: 30px; }\n    .question-block { margin-bottom: 16px; }\n    @media (max-width: 540px) {\n      .main-card { max-width: 96vw; padding: 7vw 3vw; }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"main-card\">\n    <div class=\"title\">${title}</div>\n    <div class=\"subtitle\" id=\"surveySubtitle\"></div>\n    <form id=\"npsForm\" autocomplete=\"off\">\n      <div class=\"question-block\">\n        <label class=\"question-label\">\n          Please rate your experience.\n          <span class=\"required\">*</span>\n        </label>\n        <div class=\"rating-row\" id=\"ratingButtons\">\n          ${ratingButtonsHtml}\n        </div>\n        <input type=\"hidden\" name=\"score\" id=\"score\" required>\n      </div>\n\n      <div class=\"question-block\">\n        <label class=\"question-label\" for=\"comments\">\n          Please add any details.<span class=\"required\">*</span>\n        </label>\n        <textarea id=\"comments\" name=\"comments\" rows=\"3\" required maxlength=\"1000\" placeholder=\"Type details here...\"></textarea>\n      </div>\n\n      <div class=\"question-block\">\n        <label class=\"question-label\" for=\"response_required\">\n          Would you like to be contacted?\n        </label>\n        <select id=\"response_required\" name=\"response_required\">\n          <option value=\"\">No</option>\n          <option value=\"y\">Yes</option>\n        </select>\n      </div>\n\n      <div id=\"contactFields\">\n        <div class=\"question-block\">\n          <label class=\"question-label\" for=\"contact_name\">Name</label>\n          <input type=\"text\" id=\"contact_name\" name=\"contact_name\" maxlength=\"80\" autocomplete=\"off\" />\n        </div>\n        <div class=\"question-block\">\n          <label class=\"question-label\" for=\"contact_mobile\">Phone Number</label>\n          <input type=\"tel\" id=\"contact_mobile\" name=\"contact_mobile\" maxlength=\"30\" autocomplete=\"off\" />\n        </div>\n        <div class=\"question-block\">\n          <label class=\"question-label\" for=\"contact_email\">Email</label>\n          <input type=\"email\" id=\"contact_email\" name=\"contact_email\" maxlength=\"120\" autocomplete=\"off\" />\n        </div>\n      </div>\n\n      <input type=\"hidden\" id=\"entity\" name=\"entity\" value=\"${entity}\">\n      <input type=\"hidden\" id=\"location\" name=\"location\" value=\"${location}\">\n      <input type=\"hidden\" id=\"area\" name=\"area\" value=\"${area}\">\n      <input type=\"hidden\" id=\"survey_source\" name=\"survey_source\" value=\"${source}\">\n      <input type=\"hidden\" id=\"patient_id\" name=\"patient_id\" value=\"${patient_id}\">\n\n      <button type=\"submit\" class=\"submit-btn\">Submit</button>\n    </form>\n    <div id=\"thankYouMsg\" class=\"thanks\" style=\"display:none;\">Thank you for your feedback!</div>\n  </div>\n\n  <script>\n    document.addEventListener('DOMContentLoaded', () => {\n      // Compose subtitle from location and area\n      const subtitleParts = [];\n      if (\"${location}\") subtitleParts.push(\"${location}\");\n      if (\"${area}\") subtitleParts.push(\"${area}\");\n      document.getElementById('surveySubtitle').textContent = subtitleParts.join(' | ');\n\n      const scoreInput = document.getElementById('score');\n      const ratingButtons = document.querySelectorAll('.rate-btn');\n\n      ratingButtons.forEach((btn, idx) => {\n        btn.addEventListener('click', (ev) => {\n          ev.preventDefault();\n\n          // Set hidden input value\n          scoreInput.value = idx + 1;\n\n          // Remove 'selected' from all buttons and add to clicked\n          ratingButtons.forEach(b => b.classList.remove('selected'));\n          btn.classList.add('selected');\n        });\n      });\n\n      // No show/hide needed for contact fields, they are always visible\n\n      // Form submission handler\n      document.getElementById('npsForm').addEventListener('submit', async function(ev) {\n        ev.preventDefault();\n\n        if (!scoreInput.value) {\n          alert(\"Please select a rating.\");\n          return;\n        }\n        if (!document.getElementById('comments').value.trim()) {\n          alert(\"Please add details.\");\n          return;\n        }\n\n        const formData = new FormData(ev.target);\n        formData.append('date_sent', new Date().toISOString());\n\n        try {\n          const response = await fetch(\"${webhookUrl}\", {\n            method: \"POST\",\n            body: formData,\n          });\n\n          if (!response.ok) {\n            throw new Error(\"Server response wasn't OK\");\n          }\n\n          ev.target.style.display = 'none';\n          document.getElementById('thankYouMsg').style.display = 'block';\n        } catch (error) {\n          alert(\"Failed to submit feedback: \" + error.message);\n        }\n      });\n    });\n  </script>\n</body>\n</html>\n`;\n\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        160
      ],
      "id": "12e6b900-4c63-45eb-b21d-9e9e37ad8ebb",
      "name": "Code1"
    },
    {
      "parameters": {
        "path": "ece6d39b-de5d-4fb1-bea1-a681440b1184",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -20,
        380
      ],
      "id": "5503207f-f4d9-4ee9-8ba1-45e006656c80",
      "name": "Webhook2",
      "webhookId": "ece6d39b-de5d-4fb1-bea1-a681440b1184"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{  $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        460,
        380
      ],
      "id": "6c539ce1-95f6-4db7-a2f3-648fc47fac35",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>NPS QR Code + PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text], input[type=url] {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; }\n  .smileys {\n    font-size: 60px;\n    margin: 1rem 0 1.5rem 0;\n    user-select: none;\n  }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1.5rem;\n  }\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Create NPS QR + PDF</h1>\n    <form id=\"npsForm\">\n      <label for=\"title\">NPS Title *</label>\n      <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"Customer Satisfaction Survey\" />\n      <label for=\"location\">Location</label>\n      <input id=\"location\" name=\"location\" type=\"text\" placeholder=\"Store #123\" />\n      <label for=\"area\">Area</label>\n      <input id=\"area\" name=\"area\" type=\"text\" placeholder=\"East Wing\" />\n      <label for=\"entity\">Entity</label>\n      <input id=\"entity\" name=\"entity\" type=\"text\" placeholder=\"Company/Dept\" />\n      <label for=\"source\">Source</label>\n      <input id=\"source\" name=\"source\" type=\"text\" placeholder=\"Mobile App / Website / In-store\" />\n      <label for=\"patient_id\">Patient ID</label>\n      <input id=\"patient_id\" name=\"patient_id\" type=\"text\" placeholder=\"Optional\" />\n      <label for=\"redirecturl\">Redirect URL after survey</label>\n      <input id=\"redirecturl\" name=\"redirecturl\" type=\"url\" placeholder=\"https://yourdomain.com/thankyou\" />\n\n      <button type=\"submit\">Generate QR & PDF</button>\n    </form>\n\n    <div class=\"result-area\" style=\"display:none;\">\n      <div class=\"smileys\">üòû üòï üòê üôÇ üòÑ</div>\n      <div id=\"qrcode\"></div>\n      <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n      <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n    </div>\n  </div>\n\n<script>\n// QR Code generator library (QRCode.js) - https://davidshimjs.github.io/qrcodejs/\n// Minimal copy of qrcodejs v1.0.0 https://github.com/davidshimjs/qrcodejs/blob/master/qrcode.min.js\n// We embed here raw; minified version inline (to avoid external libs):\n\n!function(o){\"use strict\";function t(o){this.mode=n.Mode.BYTE,this.data=o}function e(o,t){this.typeNumber=o,this.errorCorrectLevel=t,this.modules=null,this.moduleCount=0,this.dataCache=null,this.dataList=[]}function r(o,t){if(o.length!=t){throw new Error(\"code length mismatch\")}}function i(o,t){var e=0;for(var r=0;r<t.length;r++)e<<=8,e|=t.charCodeAt(r);return e.toString(16).toUpperCase()}function a(o){this.buffer=[],this.length=0,this.buffer.push(0)}function l(o,t,e){var r=!1;if(\"number\"==typeof e)var i=!0;else i=!1;var a=t||500,l=o/themi*e,w=a+Math.round(l);this.w=w,this.h=w,this.themi=e,this.data=o,this.option=l,this.isDark=!1}var n=function(){return{MODE_NUMBER:1,MODE_ALPHA_NUM:2,MODE_8BIT_BYTE:4,MODE_KANJI:8,Mode:{BYTE:4}},n}();!function(){e.prototype={addData:function(o){this.dataList.push(new t(o)),this.dataCache=null},isDark:function(o,t){if(o<0||this.moduleCount<=o||t<0||this.moduleCount<=t)throw new Error(o+\", \"+t);return this.modules[o][t]},getModuleCount:function(){return this.moduleCount},make:function(){this.makeImpl(!1,this.getBestMaskPattern())},makeImpl:function(o,t){this.moduleCount=4*this.typeNumber+17,this.modules=new Array(this.moduleCount);for(var e=0;e<this.moduleCount;e++){this.modules[e]=new Array(this.moduleCount);for(var r=0;r<this.moduleCount;r++)this.modules[e][r]=null}this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(this.moduleCount-7,0),this.setupPositionProbePattern(0,this.moduleCount-7),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(o,t),this.typeNumber>=7&&this.setupTypeNumber(o),this.mapData(this.createData(),t)},setupPositionProbePattern:function(o,t){for(var e=-1;e<=7;e++)if(!(o+e<=-1||this.moduleCount<=o+e))for(var r=-1;r<=7;r++)t=(r>=0&&r<=6&&e>=0&&e<=6&&(e==0||e==6||r==0||r==6)||r>=2&&r<=4&&e>=2&&e<=4)?!0:!1,this.modules[o+e][t+r]=t},setupPositionAdjustPattern:function(){},setupTimingPattern:function(){for(var o=8;o<this.moduleCount-8;o++)this.modules[o][6]=o%2==0,this.modules[6][o]=o%2==0},setupTypeInfo:function(o,t){},setupTypeNumber:function(o){},mapData:function(o,t){},createData:function(){return[]}},o.QRCode=e}(); /* minimal placeholder - full version avoided for brevity, but real QR requires full lib */ \n// For brevity, we use https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js instead below for production\n// So we will load qrcode.min.js library by adding a <script> tag dynamically below\n\n</script>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n\n<script>\ndocument.getElementById('npsForm').addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const title = document.getElementById('title').value.trim() || 'NPS Survey';\n  const location = document.getElementById('location').value.trim();\n  const area = document.getElementById('area').value.trim();\n  const entity = document.getElementById('entity').value.trim();\n  const source = document.getElementById('source').value.trim();\n  const patient_id = document.getElementById('patient_id').value.trim();\n  const redirecturl = document.getElementById('redirecturl').value.trim();\n\n  // Build NPS form URL (adjust your real url here)\n  const baseFormUrl = 'https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990';\n\n  const urlParams = new URLSearchParams({title, location, area, entity, source, patient_id, redirecturl});\n  const npsUrl = `${baseFormUrl}?${urlParams.toString()}`;\n\n  const qrContainer = document.getElementById('qrcode');\n  qrContainer.innerHTML = '';\n  await QRCode.toCanvas(npsUrl, {width:300, margin:1}, (err, canvas) => {\n    if(err) {\n      alert('Failed generating QR code: '+err);\n      return;\n    }\n    qrContainer.appendChild(canvas);\n  });\n\n  document.querySelector('.result-area').style.display = 'block';\n\n  // Prepare smileys for PDF display\n  const smileys = ['üòû', 'üòï', 'üòê', 'üôÇ', 'üòÑ'];\n\n  // Prepare jsPDF\n  const { jsPDF } = window.jspdf;\n  const doc = new jsPDF();\n\n  // Title\n  doc.setFontSize(22);\n  doc.setTextColor(\"#173457\");\n  doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, {align: 'center'});\n\n  // Subtitle (location | area)\n  const subtitle = [location, area].filter(x => x).join(' | ');\n  if(subtitle) {\n    doc.setFontSize(14);\n    doc.setTextColor(\"#5991c4\");\n    doc.text(subtitle, doc.internal.pageSize.getWidth()/2, 30, {align:'center'});\n  }\n\n  // Smileys in one line centered\n  doc.setFontSize(48);\n  doc.setTextColor(\"#193965\");\n  let smileysStr = smileys.join(' ');\n  doc.text(smileysStr, doc.internal.pageSize.getWidth() / 2, 70, {align:'center'});\n\n  // Add QR code image from canvas to PDF\n  const canvas = qrContainer.querySelector('canvas');\n  const imgData = canvas.toDataURL('image/png');\n\n  doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - 100)/2, 90, 100, 100);\n\n  // Store PDF to variable for download or print\n  window.generatedPDF = doc;\n});\n\ndocument.getElementById('downloadPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.save('nps-survey.pdf');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n\ndocument.getElementById('printPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.autoPrint();\n    window.generatedPDF.output('dataurlnewwindow');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n</script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        660,
        380
      ],
      "id": "a102ebb7-9a3b-457d-a535-33d9ba331f3e",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>NPS QR Code + PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text], input[type=url] {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; }\n  .smileys {\n    font-size: 60px;\n    margin: 1rem 0 1.5rem 0;\n    user-select: none;\n  }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1.5rem;\n  }\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Create NPS QR + PDF</h1>\n    <form id=\"npsForm\">\n      <label for=\"title\">NPS Title *</label>\n      <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"Customer Satisfaction Survey\" />\n      <label for=\"location\">Location</label>\n      <input id=\"location\" name=\"location\" type=\"text\" placeholder=\"Store #123\" />\n      <label for=\"area\">Area</label>\n      <input id=\"area\" name=\"area\" type=\"text\" placeholder=\"East Wing\" />\n      <label for=\"entity\">Entity</label>\n      <input id=\"entity\" name=\"entity\" type=\"text\" placeholder=\"Company/Dept\" />\n      <label for=\"source\">Source</label>\n      <input id=\"source\" name=\"source\" type=\"text\" placeholder=\"Mobile App / Website / In-store\" />\n      <label for=\"patient_id\">Patient ID</label>\n      <input id=\"patient_id\" name=\"patient_id\" type=\"text\" placeholder=\"Optional\" />\n      <label for=\"redirecturl\">Redirect URL after survey</label>\n      <input id=\"redirecturl\" name=\"redirecturl\" type=\"url\" placeholder=\"https://yourdomain.com/thankyou\" />\n\n      <button type=\"submit\">Generate QR & PDF</button>\n    </form>\n\n    <div class=\"result-area\" style=\"display:none;\">\n      <div class=\"smileys\">üòû üòï üòê üôÇ üòÑ</div>\n      <div id=\"qrcode\"></div>\n      <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n      <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n    </div>\n  </div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n\n<script>\ndocument.getElementById('npsForm').addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const title = document.getElementById('title').value.trim() || 'NPS Survey';\n  const location = document.getElementById('location').value.trim();\n  const area = document.getElementById('area').value.trim();\n  const entity = document.getElementById('entity').value.trim();\n  const source = document.getElementById('source').value.trim();\n  const patient_id = document.getElementById('patient_id').value.trim();\n  const redirecturl = document.getElementById('redirecturl').value.trim();\n\n  // Your webhook base URL:\n  const baseFormUrl = 'https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990';\n\n  const urlParams = new URLSearchParams({title, location, area, entity, source, patient_id, redirecturl});\n  const npsUrl = `${baseFormUrl}?${urlParams.toString()}`;\n\n  const qrContainer = document.getElementById('qrcode');\n  qrContainer.innerHTML = '';\n  await QRCode.toCanvas(npsUrl, {width:300, margin:1}, (err, canvas) => {\n    if(err) {\n      alert('Failed generating QR code: '+err);\n      return;\n    }\n    qrContainer.appendChild(canvas);\n  });\n\n  document.querySelector('.result-area').style.display = 'block';\n\n  // Prepare jsPDF\n  const { jsPDF } = window.jspdf;\n  const doc = new jsPDF();\n\n  // Title\n  doc.setFontSize(22);\n  doc.setTextColor(\"#173457\");\n  doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, {align: 'center'});\n\n  // Subtitle (location | area)\n  const subtitle = [location, area].filter(x => x).join(' | ');\n  if(subtitle) {\n    doc.setFontSize(14);\n    doc.setTextColor(\"#5991c4\");\n    doc.text(subtitle, doc.internal.pageSize.getWidth()/2, 30, {align:'center'});\n  }\n\n  // Feedback message instead of smileys\n  doc.setFontSize(20);\n  doc.setTextColor(\"#193965\");\n  doc.text(\"We want your feedback!\", doc.internal.pageSize.getWidth() / 2, 60, {align:'center'});\n\n  // Add QR code image from canvas to PDF\n  const canvas = qrContainer.querySelector('canvas');\n  const imgData = canvas.toDataURL('image/png');\n\n  doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - 100)/2, 80, 100, 100);\n\n  // Store PDF for download or print\n  window.generatedPDF = doc;\n});\n\ndocument.getElementById('downloadPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.save('nps-survey.pdf');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n\ndocument.getElementById('printPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.autoPrint();\n    window.generatedPDF.output('dataurlnewwindow');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n</script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        860,
        380
      ],
      "id": "3ad1e070-423f-4531-8de5-253ec4de7784",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "nps_score",
          "mode": "list",
          "cachedResultName": "nps_score"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "entity": "={{ $json.body.entity }}",
            "location": "={{ $json.body.location }}",
            "score": "={{ $json.body.score }}",
            "area": "={{ $json.body.area }}",
            "comments": "={{ $json.body.comments }}",
            "patient_id": "={{ $json.body.patient_id }}",
            "contact_mobile": "={{ $json.body.contact_mobile }}",
            "contact_email": "={{ $json.body.contact_email }}",
            "response_required": "={{ $json.body.response_required }}",
            "survey_source": "={{ $json.body.survey_source }}",
            "date_sent": "={{ $json.body.date_sent }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "entity",
              "displayName": "entity",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "area",
              "displayName": "area",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "patient_id",
              "displayName": "patient_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_mobile",
              "displayName": "contact_mobile",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_email",
              "displayName": "contact_email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "response_required",
              "displayName": "response_required",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "survey_source",
              "displayName": "survey_source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date_sent",
              "displayName": "date_sent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1260,
        0
      ],
      "id": "b53c3b3c-42d5-48df-bb4a-3f85038d1fb6",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "n0Iu2Lnz1XZ5gBke",
          "name": "Offices OPS"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "nps_score",
          "mode": "list",
          "cachedResultName": "nps_score"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1260,
        160
      ],
      "id": "4b6db349-d7a3-443a-ad9d-4a5c8b0c248b",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "n0Iu2Lnz1XZ5gBke",
          "name": "Offices OPS"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "4377c42c-64b0-4aee-9f49-82cce54896a7",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        280,
        -660
      ],
      "id": "bda6cfff-31a9-462f-98d6-94056e122af9",
      "name": "Webhook3",
      "webhookId": "4377c42c-64b0-4aee-9f49-82cce54896a7"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "maz6gfzo0vu40pw",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        140,
        380
      ],
      "id": "6b76e85b-b426-40ce-9ebb-9828d86df193",
      "name": "NocoDB",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        960,
        -660
      ],
      "id": "6bf20f04-e018-4d5e-96b3-020c538ae931",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>NPS QR Code + PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text], input[type=url] {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; }\n  .smileys {\n    font-size: 60px;\n    margin: 1rem 0 1.5rem 0;\n    user-select: none;\n  }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1.5rem;\n  }\n  #copyLink {\n    margin-top: 1rem;\n    background: #4caf50;\n  }\n  #copyLink:hover {\n    background: #357a38;\n  }\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Create NPS QR + PDF</h1>\n    <form id=\"npsForm\">\n      <label for=\"title\">NPS Title *</label>\n      <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"Customer Satisfaction Survey\" />\n      <label for=\"location\">Location</label>\n      <input id=\"location\" name=\"location\" type=\"text\" placeholder=\"Store #123\" />\n      <label for=\"area\">Area</label>\n      <input id=\"area\" name=\"area\" type=\"text\" placeholder=\"East Wing\" />\n      <label for=\"entity\">Entity</label>\n      <input id=\"entity\" name=\"entity\" type=\"text\" placeholder=\"Company/Dept\" />\n      <label for=\"source\">Source</label>\n      <input id=\"source\" name=\"source\" type=\"text\" placeholder=\"Mobile App / Website / In-store\" />\n      <label for=\"patient_id\">Patient ID</label>\n      <input id=\"patient_id\" name=\"patient_id\" type=\"text\" placeholder=\"Optional\" />\n      <label for=\"redirecturl\">Redirect URL after survey</label>\n      <input id=\"redirecturl\" name=\"redirecturl\" type=\"url\" placeholder=\"https://yourdomain.com/thankyou\" />\n\n      <button type=\"submit\">Generate QR & PDF</button>\n    </form>\n\n    <div class=\"result-area\" style=\"display:none;\">\n      <div class=\"smileys\">üòû üòï üòê üôÇ üòÑ</div>\n      <div id=\"qrcode\"></div>\n\n      <button id=\"copyLink\" class=\"pdf-button\">Copy Link</button>\n      <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n      <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n    </div>\n  </div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n\n<script>\nlet generatedLink = '';\n\ndocument.getElementById('npsForm').addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const title = document.getElementById('title').value.trim() || 'NPS Survey';\n  const location = document.getElementById('location').value.trim();\n  const area = document.getElementById('area').value.trim();\n  const entity = document.getElementById('entity').value.trim();\n  const source = document.getElementById('source').value.trim();\n  const patient_id = document.getElementById('patient_id').value.trim();\n  const redirecturl = document.getElementById('redirecturl').value.trim();\n\n  // Your webhook base URL:\n  const baseFormUrl = 'https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990';\n\n  const urlParams = new URLSearchParams({title, location, area, entity, source, patient_id, redirecturl});\n  generatedLink = `${baseFormUrl}?${urlParams.toString()}`;\n\n  const qrContainer = document.getElementById('qrcode');\n  qrContainer.innerHTML = '';\n  await QRCode.toCanvas(generatedLink, {width:300, margin:1}, (err, canvas) => {\n    if(err) {\n      alert('Failed generating QR code: '+err);\n      return;\n    }\n    qrContainer.appendChild(canvas);\n  });\n\n  document.querySelector('.result-area').style.display = 'block';\n\n  // Prepare jsPDF\n  const { jsPDF } = window.jspdf;\n  const doc = new jsPDF();\n\n  // Title\n  doc.setFontSize(22);\n  doc.setTextColor(\"#173457\");\n  doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, {align: 'center'});\n\n  // Subtitle (location | area)\n  const subtitle = [location, area].filter(x => x).join(' | ');\n  if(subtitle) {\n    doc.setFontSize(14);\n    doc.setTextColor(\"#5991c4\");\n    doc.text(subtitle, doc.internal.pageSize.getWidth()/2, 30, {align:'center'});\n  }\n\n  // Feedback message instead of smileys\n  doc.setFontSize(20);\n  doc.setTextColor(\"#193965\");\n  doc.text(\"We want your feedback!\", doc.internal.pageSize.getWidth() / 2, 60, {align:'center'});\n\n  // Add QR code image from canvas to PDF\n  const canvas = qrContainer.querySelector('canvas');\n  const imgData = canvas.toDataURL('image/png');\n\n  doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - 100)/2, 80, 100, 100);\n\n  // Store PDF for download or print\n  window.generatedPDF = doc;\n});\n\ndocument.getElementById('downloadPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.save('nps-survey.pdf');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n\ndocument.getElementById('printPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.autoPrint();\n    window.generatedPDF.output('dataurlnewwindow');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n\ndocument.getElementById('copyLink').addEventListener('click', () => {\n  if(generatedLink) {\n    navigator.clipboard.writeText(generatedLink).then(() => {\n      alert('NPS survey link copied to clipboard!');\n    }).catch(() => {\n      alert('Failed to copy. Please copy manually:\\n' + generatedLink);\n    });\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n</script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        460,
        520
      ],
      "id": "ce34be81-eb7c-4d45-8186-4c6387658be8",
      "name": "Respond to Webhook5"
    },
    {
      "parameters": {
        "jsCode": "// Input data processing\nlet inputArray = [];\n\nif(items.length > 0 && Array.isArray(items[0].json)) {\n  inputArray = items[0].json;\n} else if(items.length > 0) {\n  inputArray = items.map(i => i.json);\n} else {\n  inputArray = [];\n}\n\nconst fieldOptions = {\n  entity: new Set(),\n  location: new Set(),\n  area: new Set(),\n  survey_source: new Set(),\n};\n\nfor (const item of inputArray) {\n  const key = (item.Field || '').toLowerCase();\n  if (fieldOptions.hasOwnProperty(key)) {\n    if(item.Value) {\n      fieldOptions[key].add(String(item.Value));\n    }\n  }\n}\n\nconst entityOptions = Array.from(fieldOptions.entity).sort();\nconst locationOptions = Array.from(fieldOptions.location).sort();\nconst areaOptions = Array.from(fieldOptions.area).sort();\nconst sourceOptions = Array.from(fieldOptions.survey_source).sort();\n\nfunction escapeHtml(text) {\n  const map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n  };\n  return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\n}\n\nfunction createSearchableDropdown(fieldId, label, options) {\n  const listItems = options.map(o => `<li class=\"dropdown-item\" data-value=\"${escapeHtml(o)}\">${escapeHtml(o)}</li>`).join('');\n  const otherItem = `<li class=\"dropdown-item\" data-value=\"__other__\"><em>Other</em></li>`;\n\n  return `\n  <label for=\"${fieldId}-input\">${label}</label>\n  <div class=\"searchable-dropdown\" id=\"${fieldId}-container\">\n    <input type=\"text\" autocomplete=\"off\" id=\"${fieldId}-input\" name=\"${fieldId}\" placeholder=\"Type or select ${label.toLowerCase()}\" aria-autocomplete=\"list\" aria-haspopup=\"listbox\" aria-expanded=\"false\" />\n    <ul class=\"dropdown-list\" id=\"${fieldId}-list\" role=\"listbox\" tabindex=\"-1\">${listItems}${otherItem}</ul>\n    <div class=\"other-input-container\" id=\"${fieldId}-other-container\" style=\"display:none; margin-top:0.5rem;\">\n      <input type=\"text\" id=\"${fieldId}-other-input\" name=\"${fieldId}_other\" placeholder=\"Enter other ${label.toLowerCase()}\" />\n    </div>\n  </div>\n\n  <style>\n    #${fieldId}-container { position: relative; }\n    #${fieldId}-list {\n      position: absolute;\n      top: 100%; left: 0; right: 0;\n      background: white;\n      border: 1px solid #ccc;\n      max-height: 150px;\n      overflow-y: auto;\n      margin: 0;\n      padding: 0;\n      list-style: none;\n      z-index: 1000;\n      display: none;\n    }\n    .dropdown-item {\n      padding: 0.4rem 0.75rem;\n      cursor: pointer;\n    }\n    .dropdown-item:hover, .dropdown-item.selected {\n      background-color: #2664d4;\n      color: white;\n    }\n  </style>\n  `;\n}\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>NPS QR Code + PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text], input[type=url] {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; }\n  .smileys {\n    font-size: 60px;\n    margin: 1rem 0 1.5rem 0;\n    user-select: none;\n  }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1.5rem;\n  }\n  #copyLink {\n    margin-top: 1rem;\n    background: #4caf50;\n  }\n  #copyLink:hover {\n    background: #357a38;\n  }\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Create NPS QR + PDF</h1>\n    <form id=\"npsForm\" autocomplete=\"off\">\n      <label for=\"title\">NPS Title *</label>\n      <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"Customer Satisfaction Survey\" />\n\n      ${createSearchableDropdown('location', 'Location', locationOptions)}\n      ${createSearchableDropdown('area', 'Area', areaOptions)}\n      ${createSearchableDropdown('entity', 'Entity', entityOptions)}\n      ${createSearchableDropdown('source', 'Source', sourceOptions)}\n\n      <label for=\"patient_id\">Patient ID</label>\n      <input id=\"patient_id\" name=\"patient_id\" type=\"text\" placeholder=\"Optional\" />\n      <label for=\"redirecturl\">Redirect URL after survey</label>\n      <input id=\"redirecturl\" name=\"redirecturl\" type=\"url\" placeholder=\"https://yourdomain.com/thankyou\" />\n      <button type=\"submit\">Generate QR & PDF</button>\n    </form>\n\n    <div class=\"result-area\" style=\"display:none; text-align:center;\">\n      <div class=\"smileys\">üòû üòï üòê üôÇ üòÑ</div>\n      <div id=\"qrcode\"></div>\n      <button id=\"copyLink\" class=\"pdf-button\">Copy Link</button>\n      <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n      <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n    </div>\n  </div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\" ></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\" ></script>\n<script>\nfunction setupSearchableDropdown(fieldId) {\n  const container = document.getElementById(fieldId + '-container');\n  const input = document.getElementById(fieldId + '-input');\n  const list = document.getElementById(fieldId + '-list');\n  const otherInputContainer = document.getElementById(fieldId + '-other-container');\n  const otherInput = document.getElementById(fieldId + '-other-input');\n\n  // To track keyboard navigation in list\n  let currentFocusIndex = -1;\n\n  // Show list on focus\n  input.addEventListener('focus', () => {\n    filterList('');\n    list.style.display = 'block';\n    input.setAttribute('aria-expanded','true');\n  });\n\n  // Hide list when clicking outside\n  document.addEventListener('click', (e) => {\n    if (!container.contains(e.target)) {\n      list.style.display = 'none';\n      input.setAttribute('aria-expanded','false');\n      currentFocusIndex = -1;\n    }\n  });\n\n  // Filter list by input value\n  input.addEventListener('input', () => {\n    const val = input.value.toLowerCase();\n    filterList(val);\n    list.style.display = 'block';\n    input.setAttribute('aria-expanded','true');\n    otherInputContainer.style.display = 'none';\n    otherInput.required = false;\n  });\n\n  // Keyboard navigation for dropdown list\n  input.addEventListener('keydown', (e) => {\n    const items = Array.from(list.querySelectorAll('.dropdown-item')).filter(i => i.style.display !== 'none');\n    if(items.length === 0) return;\n\n    if(e.key === 'ArrowDown') {\n      currentFocusIndex = (currentFocusIndex + 1) % items.length;\n      setActive(items);\n      e.preventDefault();\n    } else if(e.key === 'ArrowUp') {\n      currentFocusIndex = (currentFocusIndex - 1 + items.length) % items.length;\n      setActive(items);\n      e.preventDefault();\n    } else if(e.key === 'Enter') {\n      if(currentFocusIndex > -1) {\n        e.preventDefault();\n        items[currentFocusIndex].click();\n      }\n    } else {\n      currentFocusIndex = -1;\n    }\n  });\n\n  function setActive(items) {\n    items.forEach(i => i.classList.remove('selected'));\n    if(currentFocusIndex > -1) {\n      items[currentFocusIndex].classList.add('selected');\n      items[currentFocusIndex].scrollIntoView({block: \"nearest\"});\n    }\n  }\n\n  // Filter helper\n  function filterList(filterText) {\n    const items = list.querySelectorAll('.dropdown-item');\n    let anyVisible = false;\n    items.forEach(item => {\n      if(item.textContent.toLowerCase().includes(filterText)) {\n        item.style.display = '';\n        anyVisible = true;\n      } else {\n        item.style.display = 'none';\n      }\n    });\n    if(!anyVisible) list.style.display = 'none';\n  }\n\n  // Click on option\n  list.addEventListener('click', e => {\n    if(e.target && e.target.classList.contains('dropdown-item')) {\n      const val = e.target.dataset.value;\n      if(val === '__other__') {\n        input.value = 'Other';\n        otherInputContainer.style.display = 'block';\n        otherInput.required = true;\n        otherInput.focus();\n      } else {\n        input.value = e.target.textContent;\n        otherInputContainer.style.display = 'none';\n        otherInput.required = false;\n        otherInput.value = '';\n      }\n      list.style.display = 'none';\n      input.setAttribute('aria-expanded','false');\n      currentFocusIndex = -1;\n    }\n  });\n\n  // Accessibility: aria-controls & roles\n  input.setAttribute('aria-controls', fieldId + '-list');\n  list.setAttribute('role', 'listbox');\n}\n\n// Initialize all dropdowns\n['location','area','entity','source'].forEach(setupSearchableDropdown);\n\nfunction getFieldValue(fieldId) {\n  const input = document.getElementById(fieldId + '-input');\n  const otherInputContainer = document.getElementById(fieldId + '-other-container');\n  const otherInput = document.getElementById(fieldId + '-other-input');\n\n  if(otherInputContainer.style.display !== 'none' && otherInput.value.trim() !== '') {\n    return otherInput.value.trim();\n  }\n  return input.value.trim() === 'Other' ? '' : input.value.trim();\n}\n\nlet generatedLink = '';\ndocument.getElementById('npsForm').addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const title = document.getElementById('title').value.trim() || 'NPS Survey';\n  const location = getFieldValue('location');\n  const area = getFieldValue('area');\n  const entity = getFieldValue('entity');\n  const source = getFieldValue('source');\n  const patient_id = document.getElementById('patient_id').value.trim();\n  const redirecturl = document.getElementById('redirecturl').value.trim();\n\n  const baseFormUrl = 'https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990';\n  const urlParams = new URLSearchParams({title, location, area, entity, source, patient_id, redirecturl});\n  generatedLink = \\`\\${baseFormUrl}?\\${urlParams.toString()}\\`;\n\n  const qrContainer = document.getElementById('qrcode');\n  qrContainer.innerHTML = '';\n  try {\n    await QRCode.toCanvas(generatedLink, {width:300, margin:1}, (err, canvas) => {\n      if(err) {\n        alert('Failed generating QR code: ' + err);\n        return;\n      }\n      qrContainer.appendChild(canvas);\n    });\n  } catch(err) {\n    alert('Failed generating QR code: ' + err);\n    return;\n  }\n\n  document.querySelector('.result-area').style.display = 'block';\n\n  const { jsPDF } = window.jspdf;\n  const doc = new jsPDF();\n  doc.setFontSize(22);\n  doc.setTextColor(\"#173457\");\n  doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, {align: 'center'});\n  const subtitle = [location, area].filter(Boolean).join(' | ');\n  if(subtitle) {\n    doc.setFontSize(14);\n    doc.setTextColor(\"#5991c4\");\n    doc.text(subtitle, doc.internal.pageSize.getWidth()/2, 30, {align:'center'});\n  }\n  doc.setFontSize(20);\n  doc.setTextColor(\"#193965\");\n  doc.text(\"We want your feedback!\", doc.internal.pageSize.getWidth() / 2, 60, {align: 'center'});\n  const canvas = qrContainer.querySelector('canvas');\n  const imgData = canvas.toDataURL('image/png');\n  doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - 100)/2, 80, 100, 100);\n  window.generatedPDF = doc;\n});\n\ndocument.getElementById('downloadPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.save('nps-survey.pdf');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\ndocument.getElementById('printPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.autoPrint();\n    window.generatedPDF.output('dataurlnewwindow');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\ndocument.getElementById('copyLink').addEventListener('click', () => {\n  if(generatedLink) {\n    navigator.clipboard.writeText(generatedLink).then(() => {\n      alert('NPS survey link copied to clipboard!');\n    }).catch(() => {\n      alert('Failed to copy. Please copy manually:\\\\n' + generatedLink);\n    });\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n</script>\n</body>\n</html>`;\n\n// Return the HTML content in output json property\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        380
      ],
      "id": "6695670f-ca83-429d-99bf-d0dd46f0f0fe",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "let inputArray = [];\n\n// Case 1: items[0].json is already an array (e.g. your entire dataset in one item)\nif(items.length > 0 && Array.isArray(items[0].json)) {\n  inputArray = items[0].json;\n} else if(items.length > 0) {\n  // Case 2: each item has a single record in .json, so aggregate all\n  inputArray = items.map(i => i.json);\n} else {\n  // No input\n  inputArray = [];\n}\n\nconst fieldOptions = {\n  entity: new Set(),\n  location: new Set(),\n  area: new Set(),\n  survey_source: new Set(),\n};\n\nfor (const item of inputArray) {\n  const key = (item.Field || '').toLowerCase();\n  if (fieldOptions.hasOwnProperty(key)) {\n    if(item.Value) {\n      fieldOptions[key].add(String(item.Value));\n    }\n  }\n}\n\n// Convert sets to sorted arrays\nconst entityOptions = Array.from(fieldOptions.entity).sort();\nconst locationOptions = Array.from(fieldOptions.location).sort();\nconst areaOptions = Array.from(fieldOptions.area).sort();\nconst sourceOptions = Array.from(fieldOptions.survey_source).sort();\n\nfunction escapeHtml(text) {\n  const map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n  };\n  return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\n}\n\nconst makeOptions = (options) => {\n  if(options.length === 0) return '<option value=\"\">(No options)</option>';\n  return options.map(o => `<option value=\"${escapeHtml(o)}\">${escapeHtml(o)}</option>`).join('\\n');\n};\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>NPS QR Code + PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text], input[type=url], select {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; }\n  .smileys {\n    font-size: 60px;\n    margin: 1rem 0 1.5rem 0;\n    user-select: none;\n  }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1.5rem;\n  }\n  #copyLink {\n    margin-top: 1rem;\n    background: #4caf50;\n  }\n  #copyLink:hover {\n    background: #357a38;\n  }\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Create NPS QR + PDF</h1>\n    <form id=\"npsForm\">\n      <label for=\"title\">NPS Title *</label>\n      <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"Customer Satisfaction Survey\" />\n\n      <label for=\"location\">Location</label>\n      <select id=\"location\" name=\"location\" >\n        <option value=\"\">-- Select Location --</option>\n        ${makeOptions(locationOptions)}\n      </select>\n\n      <label for=\"area\">Area</label>\n      <select id=\"area\" name=\"area\" >\n        <option value=\"\">-- Select Area --</option>\n        ${makeOptions(areaOptions)}\n      </select>\n\n      <label for=\"entity\">Entity</label>\n      <select id=\"entity\" name=\"entity\" >\n        <option value=\"\">-- Select Entity --</option>\n        ${makeOptions(entityOptions)}\n      </select>\n\n      <label for=\"source\">Source</label>\n      <select id=\"source\" name=\"source\" >\n        <option value=\"\">-- Select Source --</option>\n        ${makeOptions(sourceOptions)}\n      </select>\n\n      <label for=\"patient_id\">Patient ID</label>\n      <input id=\"patient_id\" name=\"patient_id\" type=\"text\" placeholder=\"Optional\" />\n      <label for=\"redirecturl\">Redirect URL after survey</label>\n      <input id=\"redirecturl\" name=\"redirecturl\" type=\"url\" placeholder=\"https://yourdomain.com/thankyou\" />\n      <button type=\"submit\">Generate QR & PDF</button>\n    </form>\n    <div class=\"result-area\" style=\"display:none;\">\n      <div class=\"smileys\">üòû üòï üòê üôÇ üòÑ</div>\n      <div id=\"qrcode\"></div>\n      <button id=\"copyLink\" class=\"pdf-button\">Copy Link</button>\n      <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n      <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n    </div>\n  </div>\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n<script>\nlet generatedLink = '';\ndocument.getElementById('npsForm').addEventListener('submit', async e => {\n  e.preventDefault();\n  const title = document.getElementById('title').value.trim() || 'NPS Survey';\n  const location = document.getElementById('location').value.trim();\n  const area = document.getElementById('area').value.trim();\n  const entity = document.getElementById('entity').value.trim();\n  const source = document.getElementById('source').value.trim();\n  const patient_id = document.getElementById('patient_id').value.trim();\n  const redirecturl = document.getElementById('redirecturl').value.trim();\n  const baseFormUrl = 'https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990';\n  const urlParams = new URLSearchParams({title, location, area, entity, source, patient_id, redirecturl});\n  generatedLink = \\`\\${baseFormUrl}?\\${urlParams.toString()}\\`;\n  const qrContainer = document.getElementById('qrcode');\n  qrContainer.innerHTML = '';\n  await QRCode.toCanvas(generatedLink, {width:300, margin:1}, (err, canvas) => {\n    if(err) {\n      alert('Failed generating QR code: ' + err);\n      return;\n    }\n    qrContainer.appendChild(canvas);\n  });\n  document.querySelector('.result-area').style.display = 'block';\n  const { jsPDF } = window.jspdf;\n  const doc = new jsPDF();\n  doc.setFontSize(22);\n  doc.setTextColor(\"#173457\");\n  doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, {align: 'center'});\n  const subtitle = [location, area].filter(x => x).join(' | ');\n  if(subtitle) {\n    doc.setFontSize(14);\n    doc.setTextColor(\"#5991c4\");\n    doc.text(subtitle, doc.internal.pageSize.getWidth()/2, 30, {align:'center'});\n  }\n  doc.setFontSize(20);\n  doc.setTextColor(\"#193965\");\n  doc.text(\"We want your feedback!\", doc.internal.pageSize.getWidth() / 2, 60, {align:'center'});\n  const canvas = qrContainer.querySelector('canvas');\n  const imgData = canvas.toDataURL('image/png');\n  doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - 100)/2, 80, 100, 100);\n  window.generatedPDF = doc;\n});\ndocument.getElementById('downloadPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.save('nps-survey.pdf');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\ndocument.getElementById('printPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.autoPrint();\n    window.generatedPDF.output('dataurlnewwindow');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\ndocument.getElementById('copyLink').addEventListener('click', () => {\n  if(generatedLink) {\n    navigator.clipboard.writeText(generatedLink).then(() => {\n      alert('NPS survey link copied to clipboard!');\n    }).catch(() => {\n      alert('Failed to copy. Please copy manually:\\\\n' + generatedLink);\n    });\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n</script>\n</body>\n</html>`;\n\n// Return the HTML as output for downstream node (like Webhook Response)\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        540
      ],
      "id": "a9569854-a899-439d-acf8-0b7eec915815",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "let inputArray = [];\n\nif(items.length > 0 && Array.isArray(items[0].json)) {\n  inputArray = items[0].json;\n} else if(items.length > 0) {\n  inputArray = items.map(i => i.json);\n} else {\n  inputArray = [];\n}\n\nconst fieldOptions = {\n  entity: new Set(),\n  location: new Set(),\n  area: new Set(),\n  survey_source: new Set(),\n};\n\nfor (const item of inputArray) {\n  const key = (item.Field || '').toLowerCase();\n  if (fieldOptions.hasOwnProperty(key)) {\n    if(item.Value) {\n      fieldOptions[key].add(String(item.Value));\n    }\n  }\n}\n\nconst entityOptions = Array.from(fieldOptions.entity).sort();\nconst locationOptions = Array.from(fieldOptions.location).sort();\nconst areaOptions = Array.from(fieldOptions.area).sort();\nconst sourceOptions = Array.from(fieldOptions.survey_source).sort();\n\nfunction escapeHtml(text) {\n  const map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n  };\n  return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\n}\n\nconst makeOptions = (options) => {\n  // Add \"Other\" option always at end\n  const opts = options.map(o => `<option value=\"${escapeHtml(o)}\">${escapeHtml(o)}</option>`);\n  opts.push('<option value=\"__other__\">Other</option>');\n  return opts.join('\\n');\n};\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>NPS QR Code + PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text], input[type=url], select {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; }\n  .smileys {\n    font-size: 60px;\n    margin: 1rem 0 1.5rem 0;\n    user-select: none;\n  }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1.5rem;\n  }\n  #copyLink {\n    margin-top: 1rem;\n    background: #4caf50;\n  }\n  #copyLink:hover {\n    background: #357a38;\n  }\n  .other-input-container {\n    margin-top: 0.5rem;\n    display: none;\n  }\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Create NPS QR + PDF</h1>\n    <form id=\"npsForm\">\n      <label for=\"title\">NPS Title *</label>\n      <input id=\"title\" name=\"title\" type=\"text\" required placeholder=\"Customer Satisfaction Survey\" />\n\n      ${generateComboWithOther('location', 'Location', locationOptions)}\n      ${generateComboWithOther('area', 'Area', areaOptions)}\n      ${generateComboWithOther('entity', 'Entity', entityOptions)}\n      ${generateComboWithOther('source', 'Source', sourceOptions)}\n\n      <label for=\"patient_id\">Patient ID</label>\n      <input id=\"patient_id\" name=\"patient_id\" type=\"text\" placeholder=\"Optional\" />\n      <label for=\"redirecturl\">Redirect URL after survey</label>\n      <input id=\"redirecturl\" name=\"redirecturl\" type=\"url\" placeholder=\"https://yourdomain.com/thankyou\" />\n      <button type=\"submit\">Generate QR & PDF</button>\n    </form>\n\n    <div class=\"result-area\" style=\"display:none;\">\n      <div class=\"smileys\">üòû üòï üòê üôÇ üòÑ</div>\n      <div id=\"qrcode\"></div>\n      <button id=\"copyLink\" class=\"pdf-button\">Copy Link</button>\n      <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n      <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n    </div>\n  </div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n<script>\n/**\n * Replace select + other input logic:\n * - When user selects \"Other\", show input, clear select value\n * - When input shown, typing sets hidden value for submit\n * - If \"Other\" NOT selected, hide input\n */\nfunction setupOtherInputHandler(selectId) {\n  const selectEl = document.getElementById(selectId);\n  const otherContainer = document.getElementById(selectId + '-other-container');\n  const otherInput = document.getElementById(selectId + '-other-input');\n\n  selectEl.addEventListener('change', () => {\n    if (selectEl.value === '__other__') {\n      otherContainer.style.display = 'block';\n      otherInput.required = true;\n      otherInput.focus();\n    } else {\n      otherContainer.style.display = 'none';\n      otherInput.required = false;\n      otherInput.value = '';\n    }\n  });\n}\n\n// Setup other inputs for all 4 selects\n['location','area','entity','source'].forEach(setupOtherInputHandler);\n\nlet generatedLink = '';\ndocument.getElementById('npsForm').addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const title = document.getElementById('title').value.trim() || 'NPS Survey';\n\n  // For each field, if 'Other' is selected use the corresponding input instead\n  function getFieldValue(fieldName) {\n    const sel = document.getElementById(fieldName);\n    if(sel.value === '__other__') {\n      const otherInp = document.getElementById(fieldName + '-other-input');\n      return otherInp.value.trim();\n    }\n    return sel.value.trim();\n  }\n\n  const location = getFieldValue('location');\n  const area = getFieldValue('area');\n  const entity = getFieldValue('entity');\n  const source = getFieldValue('source');\n  const patient_id = document.getElementById('patient_id').value.trim();\n  const redirecturl = document.getElementById('redirecturl').value.trim();\n\n  const baseFormUrl = 'https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990';\n  const urlParams = new URLSearchParams({title, location, area, entity, source, patient_id, redirecturl});\n  generatedLink = \\`\\${baseFormUrl}?\\${urlParams.toString()}\\`;\n\n  const qrContainer = document.getElementById('qrcode');\n  qrContainer.innerHTML = '';\n  await QRCode.toCanvas(generatedLink, {width:300, margin:1}, (err, canvas) => {\n    if(err) {\n      alert('Failed generating QR code: ' + err);\n      return;\n    }\n    qrContainer.appendChild(canvas);\n  });\n\n  document.querySelector('.result-area').style.display = 'block';\n\n  const { jsPDF } = window.jspdf;\n  const doc = new jsPDF();\n  doc.setFontSize(22);\n  doc.setTextColor(\"#173457\");\n  doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, {align: 'center'});\n  const subtitle = [location, area].filter(x => x).join(' | ');\n  if(subtitle) {\n    doc.setFontSize(14);\n    doc.setTextColor(\"#5991c4\");\n    doc.text(subtitle, doc.internal.pageSize.getWidth()/2, 30, {align:'center'});\n  }\n  doc.setFontSize(20);\n  doc.setTextColor(\"#193965\");\n  doc.text(\"We want your feedback!\", doc.internal.pageSize.getWidth() / 2, 60, {align: 'center'});\n  const canvas = qrContainer.querySelector('canvas');\n  const imgData = canvas.toDataURL('image/png');\n  doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - 100)/2, 80, 100, 100);\n  window.generatedPDF = doc;\n});\n\ndocument.getElementById('downloadPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.save('nps-survey.pdf');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\ndocument.getElementById('printPdf').addEventListener('click', () => {\n  if(window.generatedPDF) {\n    window.generatedPDF.autoPrint();\n    window.generatedPDF.output('dataurlnewwindow');\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\ndocument.getElementById('copyLink').addEventListener('click', () => {\n  if(generatedLink) {\n    navigator.clipboard.writeText(generatedLink).then(() => {\n      alert('NPS survey link copied to clipboard!');\n    }).catch(() => {\n      alert('Failed to copy. Please copy manually:\\\\n' + generatedLink);\n    });\n  } else {\n    alert('Please generate the QR and PDF first by submitting the form above.');\n  }\n});\n</script>\n</body>\n</html>`;\n\n// Helper function to generate select + \"Other\" input combo HTML\nfunction generateComboWithOther(id, label, optionsArray) {\n  const optionsHtml = optionsArray.map(o => `<option value=\"${escapeHtml(o)}\">${escapeHtml(o)}</option>`).join('\\n') +\n    '<option value=\"__other__\">Other</option>';\n\n  return `\n    <label for=\"${id}\">${label}</label>\n    <select id=\"${id}\" name=\"${id}\">\n      <option value=\"\">-- Select ${label} --</option>\n      ${optionsHtml}\n    </select>\n    <div class=\"other-input-container\" id=\"${id}-other-container\">\n      <input type=\"text\" id=\"${id}-other-input\" name=\"${id}_other\" placeholder=\"Enter other ${label.toLowerCase()}\" />\n    </div>\n  `;\n}\n\n// Because generateComboWithOther is used inside template literal, define it here globally\nglobalThis.generateComboWithOther = generateComboWithOther;\nglobalThis.escapeHtml = escapeHtml;\n\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        700
      ],
      "id": "9109c65a-1c55-4747-aa89-a717d02d95f2",
      "name": "Code4"
    },
    {
      "parameters": {
        "height": 820,
        "width": 1000,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        180,
        -1120
      ],
      "typeVersion": 1,
      "id": "10ef0b5e-04df-4139-9609-6769b105b1cc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "path": "4d4e12fa-fd8d-49a2-8763-e3ae12ea5ceb",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        280,
        -1000
      ],
      "id": "a6b7395a-c376-49e3-88ab-e3225609283e",
      "name": "Webhook4",
      "webhookId": "4d4e12fa-fd8d-49a2-8763-e3ae12ea5ceb"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "maz6gfzo0vu40pw",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        500,
        -1000
      ],
      "id": "3f6d5d0d-0b3e-4bd2-9bac-be6e7080bef4",
      "name": "NocoDB1",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const rawRecords = items.map(item => item.json); // each input item is one record\n// Mapping lowercase field keys to display names for tabs\nconst fieldMap = {\n  entity: \"Entity\",\n  location: \"Location\",\n  area: \"Area\",\n  survey_source: \"Survey Source\",\n};\nconst recordsPerPage = 15;\nconst webhookURL = \"https://xl.epicpc.com/webhook/4377c42c-64b0-4aee-9f49-82cce54896a7\";\nconst qrGeneratorURL = \"https://xl.epicpc.com/webhook/ece6d39b-de5d-4fb1-bea1-a681440b1184\";\n// Group records by lowercase key, keeping displayField for UI\nconst groupedRecords = {\n  entity: [],\n  location: [],\n  area: [],\n  survey_source: [],\n};\nfor (const r of rawRecords) {\n  const f = (r.Field || \"\").toLowerCase();\n  if (groupedRecords[f]) {\n    groupedRecords[f].push({\n      id: r.Id,\n      field: f,   // lowercase for posting\n      displayField: fieldMap[f], // display\n      value: r.Value,\n      createdAt: r.CreatedAt,\n      updatedAt: r.UpdatedAt,\n    });\n  }\n}\nconst fieldTypes = Object.keys(groupedRecords); // ['entity', 'location', ...]\n\nfunction escapeHtml(text) {\n  return String(text)\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nreturn [\n  {\n    json: {\n      html: `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>NPS System Standard Values</title>\n<style>\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 40px 20px 60px;\n    background-color: #f8fafc;\n    color: #1e293b;\n    display: flex;\n    justify-content: center;\n  }\n  #appContainer {\n    width: 100%;\n    max-width: 960px;\n    min-width: 320px;\n    background: #fff;\n    padding: 30px 40px;\n    border-radius: 12px;\n    box-shadow: 0 8px 30px rgba(30,64,175,0.12);\n    box-sizing: border-box;\n  }\n  h1 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    font-size: 2rem;\n    color: #0f172a;\n  }\n  .tabs {\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 2px solid #e2e8f0;\n  }\n  .tab {\n    padding: 12px 25px;\n    margin-right: 5px;\n    font-weight: 600;\n    color: #64748b;\n    cursor: pointer;\n    border: 1.5px solid transparent;\n    border-bottom: none;\n    border-radius: 8px 8px 0 0;\n    background-color: #f1f5f9;\n    transition: all 0.25s ease-in-out;\n    user-select: none;\n  }\n  .tab:hover {\n    color: #1e40af;\n  }\n  .tab.active {\n    background-color: #ffffff;\n    color: #1e40af;\n    border-color: #1e40af;\n    border-bottom: 2px solid #ffffff;\n    box-shadow: 0 2px 10px rgba(30, 64, 175, 0.15);\n  }\n  .tab.add-record-tab {\n    margin-left: auto;\n    background-color: #2563eb;\n    color: white;\n  }\n  .tab.add-record-tab:hover {\n    background-color: #1d4ed8;\n    color: white;\n  }\n  .tab.add-record-tab.active {\n    box-shadow: 0 2px 10px rgba(37, 99, 235, 0.5);\n  }\n  .content {\n    background: #fff;\n    border: 1.5px solid #e2e8f0;\n    border-radius: 0 8px 8px 8px;\n    padding: 20px;\n    box-shadow: 0 4px 18px rgba(0,0,0,0.05);\n    min-height: 320px;\n    margin-bottom: 30px;\n  }\n  /* Search filter styling */\n  .search-container {\n    margin-bottom: 15px;\n  }\n  #searchInput {\n    width: 100%;\n    padding: 10px 14px;\n    font-size: 1rem;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 12px;\n    box-sizing: border-box;\n    transition: border-color 0.3s ease;\n    color: #334155;\n  }\n  #searchInput:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 6px rgba(30, 64, 175, 0.25);\n  }\n  .pagination {\n    margin-top: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  .page-btn {\n    margin-right: 10px;\n    padding: 8px 14px;\n    font-weight: 600;\n    color: #64748b;\n    background: #e2e8f0;\n    border-radius: 6px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  .page-btn:hover:not(:disabled) {\n    background-color: #cbd5e1;\n    color: #1e293b;\n  }\n  .page-btn:disabled,\n  .page-btn.disabled {\n    color: #a1a1aa;\n    background-color: #f1f5f9;\n    cursor: not-allowed;\n  }\n  .record-tile {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    margin-bottom: 12px;\n    border-radius: 10px;\n    background: #f8fafc;\n    border: 1px solid #e2e8f0;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.05);\n    transition: box-shadow 0.3s ease;\n  }\n  .record-tile:hover {\n    box-shadow: 0 4px 22px rgba(30, 64, 175, 0.12);\n  }\n  .record-value {\n    flex: 1;\n    font-weight: 600;\n    font-size: 1.05rem;\n    color: #334155;\n    word-break: break-word;\n  }\n  .record-value input[type=\"text\"] {\n    width: 100%;\n    padding: 6px 10px;\n    font-size: 1rem;\n    color: #334155;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 8px;\n    transition: border-color 0.3s ease;\n  }\n  .record-value input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 6px rgba(30, 64, 175, 0.25);\n  }\n  button {\n    font-weight: 600;\n    border: none;\n    padding: 8px 14px;\n    margin-left: 8px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.3s ease, color 0.3s ease;\n    box-shadow: 0 2px 7px rgba(30, 64, 175, 0.15);\n  }\n  button:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    box-shadow: none;\n  }\n  button.update-btn {\n    background-color: #2563eb;\n    color: white;\n  }\n  button.update-btn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  button.delete-btn {\n    background-color: #ef4444;\n    color: white;\n  }\n  button.delete-btn:hover:not(:disabled) {\n    background-color: #dc2626;\n  }\n  button.cancel-update-btn {\n    background-color: #64748b;\n    color: white;\n  }\n  button.cancel-update-btn:hover:not(:disabled) {\n    background-color: #475569;\n  }\n  button.add-btn, button.qr-btn {\n    margin-top: 0;\n    background-color: #2563eb;\n    color: white;\n    font-size: 1rem;\n    padding: 12px 30px;\n    display: inline-block;\n    box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\n    transition: background-color 0.25s ease;\n    border-radius: 10px;\n  }\n  button.add-btn:hover, button.qr-btn:hover {\n    background-color: #1d4ed8;\n  }\n  #buttonContainer {\n    margin-top: 10px;\n    display: flex;\n    gap: 15px;\n  }\n  /* Add Popup overlay (fallback) */\n  #addPopupOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15, 23, 42, 0.54);\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n  }\n  #addPopup {\n    background: white;\n    padding: 36px 40px 36px 40px;\n    border-radius: 16px;\n    box-shadow: 0 10px 35px rgba(30, 64, 175, 0.25);\n    min-width: 320px;\n    max-width: 400px;\n    box-sizing: border-box;\n  }\n  #addPopup h3 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    color: #0f172a;\n    font-size: 1.4rem;\n  }\n  #addPopup label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 600;\n    color: #475569;\n  }\n  #addPopup select, #addPopup input[type=\"text\"] {\n    width: 100%;\n    padding: 14px 14px;\n    font-size: 1rem;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 12px;\n    margin-bottom: 24px;\n    color: #334155;\n    box-sizing: border-box;\n    transition: border-color 0.3s ease;\n  }\n  #addPopup select:focus, #addPopup input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 8px rgba(30,64,175,0.35);\n  }\n  #addPopupButtons {\n    text-align: right;\n  }\n  #addPopupButtons button {\n    padding: 10px 24px;\n    border-radius: 12px;\n    font-size: 1rem;\n    box-shadow: 0 4px 10px rgba(30, 64, 175, 0.2);\n    margin-left: 10px;\n  }\n  #addSubmitBtn {\n    background-color: #2563eb;\n    color: white;\n  }\n  #addSubmitBtn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  #addCancelBtn {\n    background-color: #475569;\n    color: white;\n  }\n  #addCancelBtn:hover:not(:disabled) {\n    background-color: #334155;\n  }\n  /* Confirmation popup overlay */\n  #confirmDeleteOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15,23,42,0.7);\n    z-index: 10001;\n    justify-content: center;\n    align-items: center;\n  }\n  #confirmDelete {\n    background: white;\n    padding: 30px 40px;\n    border-radius: 16px;\n    max-width: 400px;\n    box-shadow: 0 10px 35px rgba(30,64,175,0.3);\n    text-align: center;\n    font-size: 1.1rem;\n    color: #0f172a;\n  }\n  #confirmDelete h2 {\n    margin-bottom: 24px;\n  }\n  #confirmDeleteButtons button {\n    padding: 10px 30px;\n    border-radius: 12px;\n    font-weight: 700;\n    font-size: 1rem;\n    margin: 0 10px;\n    box-shadow: 0 4px 10px rgba(30,64,175,0.2);\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  #confirmDeleteDeleteBtn {\n    background: #ef4444;\n    color: white;\n  }\n  #confirmDeleteDeleteBtn:hover {\n    background: #dc2626;\n  }\n  #confirmDeleteCancelBtn {\n    background: #64748b;\n    color: white;\n  }\n  #confirmDeleteCancelBtn:hover {\n    background: #475569;\n  }\n  /* Loader */\n  #loader {\n    display: none;\n    position: fixed;\n    top: 15px; right: 15px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 10px 18px;\n    border-radius: 14px;\n    font-weight: 700;\n    font-size: 1rem;\n    box-shadow: 0 4px 14px rgba(59,130,246,0.6);\n    z-index: 10002;\n  }\n</style>\n</head>\n<body>\n<div id=\"appContainer\">\n<h1>NPS System Standard Values</h1>\n<div class=\"tabs\" id=\"tabs\" role=\"tablist\" aria-label=\"Record categories\">\n  ${fieldTypes.map(f => `<div class=\"tab${f===\"entity\" ? \" active\" : \"\"}\" data-tab=\"${escapeHtml(f)}\" role=\"tab\" tabindex=\"${f===\"entity\" ? \"0\" : \"-1\"}\" aria-selected=\"${f===\"entity\" ? \"true\": \"false\"}\">${escapeHtml(fieldMap[f])}</div>`).join('')}\n  <!-- Add Record tab will be appended dynamically -->\n</div>\n<div id=\"contents\">\n  ${fieldTypes.map(f => `\n    <div class=\"content\" id=\"content-${escapeHtml(f)}\" role=\"tabpanel\" aria-labelledby=\"tab-${escapeHtml(f)}\" style=\"display:${f===\"entity\" ? \"block\" : \"none\"};\">\n      <div class=\"search-container\">\n        <input type=\"text\" id=\"searchInput-${escapeHtml(f)}\" placeholder=\"Search ${escapeHtml(fieldMap[f])}‚Ä¶\" aria-label=\"Search ${escapeHtml(fieldMap[f])}\" autocomplete=\"off\" />\n      </div>\n      <div id=\"records-${escapeHtml(f)}\"></div>\n      <div class=\"pagination\" id=\"pagination-${escapeHtml(f)}\"></div>\n    </div>\n  `).join('')}\n</div>\n<div id=\"buttonContainer\">\n  <button id=\"addBtn\" class=\"add-btn\" type=\"button\">Add Record</button>\n  <button id=\"openQRBtn\" class=\"qr-btn\" type=\"button\" title=\"Open QR Generator in new tab\">Open QR Generator</button>\n</div>\n</div>\n\n<!-- Add Popup fallback -->\n<div id=\"addPopupOverlay\" aria-hidden=\"true\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addPopupTitle\" tabindex=\"-1\">\n  <div id=\"addPopup\">\n    <h3 id=\"addPopupTitle\">Add New Record</h3>\n    <label for=\"addField\">Field Type:</label>\n    <select id=\"addField\" aria-required=\"true\">\n      ${fieldTypes.map(f => `<option value=\"${escapeHtml(f)}\">${escapeHtml(fieldMap[f])}</option>`).join('')}\n    </select>\n    <label for=\"addValue\">Value:</label>\n    <input type=\"text\" id=\"addValue\" placeholder=\"Enter value\" aria-required=\"true\" />\n    <div id=\"addPopupButtons\">\n      <button id=\"addSubmitBtn\" type=\"button\">Add</button>\n      <button id=\"addCancelBtn\" type=\"button\">Cancel</button>\n    </div>\n  </div>\n</div>\n\n<!-- Confirmation Popup -->\n<div id=\"confirmDeleteOverlay\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"confirmDeleteTitle\" aria-describedby=\"confirmDeleteMsg\" tabindex=\"-1\">\n  <div id=\"confirmDelete\">\n    <h2 id=\"confirmDeleteTitle\">Are you sure?</h2>\n    <p id=\"confirmDeleteMsg\">This action will permanently delete the record.</p>\n    <div id=\"confirmDeleteButtons\">\n      <button id=\"confirmDeleteDeleteBtn\" type=\"button\">Delete</button>\n      <button id=\"confirmDeleteCancelBtn\" type=\"button\">Whoops, oh no</button>\n    </div>\n  </div>\n</div>\n<div id=\"loader\">Processing...</div>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', () => {\n  const recordsPerPage = ${recordsPerPage};\n  const webhookURL = \"${webhookURL}\";\n  const qrGeneratorURL = \"${qrGeneratorURL}\";\n  const fieldTypes = ${JSON.stringify(fieldTypes)};\n  const fieldMap = ${JSON.stringify(fieldMap)};\n  const groupedRecords = ${JSON.stringify(groupedRecords)};\n  let currentTab = \"entity\";\n  const currentPages = {};\n  const currentFilters = {};\n  fieldTypes.forEach(f => {\n    currentPages[f] = 0;\n    currentFilters[f] = '';\n  });\n  const addRecordTabKey = \"add_record\";\n\n  function el(id) { return document.getElementById(id); }\n  function createElement(tag, props = {}, ...children) {\n    const e = document.createElement(tag);\n    for(const k in props) {\n      if (k === 'className') e.className = props[k];\n      else if (k === 'innerHTML') e.innerHTML = props[k];\n      else if (k.startsWith('on') && typeof props[k] === 'function') {\n        e.addEventListener(k.substr(2).toLowerCase(), props[k]);\n      } else {\n        e.setAttribute(k, props[k]);\n      }\n    }\n    for(const c of children) {\n      if (typeof c === 'string') e.appendChild(document.createTextNode(c));\n      else if (c instanceof Node) e.appendChild(c);\n    }\n    return e;\n  }\n\n  function escapeHtml(text) {\n    return String(text)\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n\n  function setLoading(loading) {\n    const loader = el('loader');\n    const addBtn = el('addBtn');\n    const openQRBtn = el('openQRBtn');\n    if (loading) {\n      loader.style.display = 'block';\n      addBtn.disabled = true;\n      openQRBtn.disabled = true;\n      disableAllButtons(true);\n    } else {\n      loader.style.display = 'none';\n      addBtn.disabled = false;\n      openQRBtn.disabled = false;\n      disableAllButtons(false);\n    }\n  }\n\n  function disableAllButtons(disable) {\n    document.querySelectorAll('button').forEach(btn => {\n      if (!btn.disabled && btn.id !== 'addBtn' && btn.id !== 'openQRBtn') btn.disabled = disable;\n      else if (btn.disabled && !disable) btn.disabled = false;\n    });\n  }\n\n  function renderPagination(field, filteredRecs) {\n    const container = el('pagination-' + field);\n    const recs = filteredRecs || groupedRecords[field];\n    const totalRecs = recs.length;\n    const totalPages = Math.ceil(totalRecs / recordsPerPage);\n    const currentPage = currentPages[field];\n    container.innerHTML = '';\n    const prevBtn = createElement('button', {\n      className: 'page-btn' + (currentPage === 0 ? ' disabled' : ''),\n      disabled: currentPage === 0,\n      onclick: () => {\n        if(currentPages[field] > 0) {\n          currentPages[field]--;\n          renderRecords(field);\n        }\n      }\n    }, 'Prev');\n    container.appendChild(prevBtn);\n    const pageInfo = createElement('span', { style: 'margin:0 10px; font-weight: 600; color: #475569;' }, 'Page ' + (currentPage + 1) + ' / ' + (totalPages || 1));\n    container.appendChild(pageInfo);\n    const nextBtn = createElement('button', {\n      className: 'page-btn' + (currentPage >= totalPages - 1 ? ' disabled' : ''),\n      disabled: currentPage >= totalPages - 1,\n      onclick: () => {\n        if(currentPages[field] < totalPages - 1) {\n          currentPages[field]++;\n          renderRecords(field);\n        }\n      }\n    }, 'Next');\n    container.appendChild(nextBtn);\n  }\n\n  function renderRecords(field) {\n    const container = el('records-' + field);\n    container.innerHTML = '';\n    const allRecs = groupedRecords[field];\n    const filterText = currentFilters[field].toLowerCase();\n    let recs = allRecs;\n    if(filterText) {\n      recs = allRecs.filter(r => r.value.toLowerCase().includes(filterText));\n    }\n    const page = currentPages[field];\n    const start = page * recordsPerPage;\n    const end = Math.min(start + recordsPerPage, recs.length);\n    // If current page is out of bounds due to filtering, reset to page 0\n    if(page > 0 && start >= recs.length) {\n      currentPages[field] = 0;\n    }\n    for(let i = start; i < end; i++) {\n      const rec = recs[i];\n      const tile = createElement('div', { className: 'record-tile' });\n      const valContainer = createElement('div', { className: 'record-value' }, escapeHtml(rec.value));\n      tile.appendChild(valContainer);\n      const updateBtn = createElement('button', { type: 'button', className: 'update-btn' }, 'Update');\n      const deleteBtn = createElement('button', { type: 'button', className: 'delete-btn' }, 'Delete');\n      const cancelUpdateBtn = createElement('button', { type: 'button', className: 'cancel-update-btn', style: 'display:none;' }, 'Cancel');\n      let isEditing = false;\n      function exitEditMode(save) {\n        if (!isEditing) return;\n        isEditing = false;\n        cancelUpdateBtn.style.display = 'none';\n        deleteBtn.disabled = false;\n        if(save) updateBtn.textContent = 'Update';\n        else {\n          valContainer.textContent = rec.value;\n          updateBtn.textContent = 'Update';\n        }\n      }\n      updateBtn.onclick = () => {\n        if (!isEditing) {\n          const input = createElement('input', { type: 'text', value: rec.value });\n          valContainer.innerHTML = '';\n          valContainer.appendChild(input);\n          isEditing = true;\n          updateBtn.textContent = 'Submit';\n          cancelUpdateBtn.style.display = 'inline-block';\n          deleteBtn.disabled = true;\n          function cancelOnEsc(e) {\n            if(e.key === 'Escape') {\n              exitEditMode(false);\n              document.removeEventListener('keydown', cancelOnEsc);\n              document.removeEventListener('click', onDocClick, true);\n            }\n          }\n          function onDocClick(e) {\n            if (!valContainer.contains(e.target) && e.target !== updateBtn && e.target !== cancelUpdateBtn) {\n              exitEditMode(false);\n              document.removeEventListener('keydown', cancelOnEsc);\n              document.removeEventListener('click', onDocClick, true);\n            }\n          }\n          document.addEventListener('keydown', cancelOnEsc);\n          document.addEventListener('click', onDocClick, true);\n          input.focus();\n        } else {\n          const input = valContainer.querySelector('input');\n          if (!input) return;\n          const newValue = input.value.trim();\n          if (newValue === '') {\n            alert('Value cannot be empty');\n            input.focus();\n            return;\n          }\n          setLoading(true);\n          const formData = new URLSearchParams();\n          formData.append('id', rec.id);\n          formData.append('action', 'update');\n          formData.append('field', rec.field);\n          formData.append('value', newValue);\n          fetch(webhookURL, {\n            method: 'POST',\n            body: formData,\n          })\n          .then(response => {\n            if (!response.ok) throw new Error('HTTP ' + response.status);\n            window.location.reload();\n          })\n          .catch(err => {\n            setLoading(false);\n            alert('Update failed: ' + err.message);\n          });\n        }\n      };\n      cancelUpdateBtn.onclick = () => {\n        exitEditMode(false);\n      };\n      deleteBtn.onclick = () => {\n        showDeleteConfirm(async () => {\n          setLoading(true);\n          const formData = new URLSearchParams();\n          formData.append('id', rec.id);\n          formData.append('action', 'delete');\n          try {\n            const res = await fetch(webhookURL, {\n              method: 'POST',\n              body: formData,\n            });\n            if (!res.ok) throw new Error('HTTP ' + res.status);\n            window.location.reload();\n          } catch(e) {\n            setLoading(false);\n            alert('Delete failed: ' + e.message);\n          }\n        });\n      };\n      tile.appendChild(updateBtn);\n      tile.appendChild(cancelUpdateBtn);\n      tile.appendChild(deleteBtn);\n      container.appendChild(tile);\n    }\n    renderPagination(field, recs);\n  }\n\n  (function setupTabs() {\n    const tabsContainer = el('tabs');\n\n    if (!tabsContainer.querySelector(\\`[data-tab=\"\\${addRecordTabKey}\"]\\`)) {\n      const addRecordTab = createElement('div', {\n        className: 'tab add-record-tab',\n        'data-tab': addRecordTabKey,\n        'role': 'tab',\n        'tabindex': '-1',\n        'aria-selected': 'false',\n        title: 'Add New Record',\n      }, 'Add Record');\n      tabsContainer.appendChild(addRecordTab);\n    }\n\n    if (!el('content-' + addRecordTabKey)) {\n      const contents = el('contents');\n      const addRecordContent = createElement('div', {\n        className: 'content',\n        id: 'content-' + addRecordTabKey,\n        role: 'tabpanel',\n        'aria-label': 'Add New Record',\n        'aria-hidden': 'true',\n        style: 'display:none; padding: 20px;'\n      });\n\n      addRecordContent.innerHTML = \\`\n        <h3 style=\"margin-top: 0; color: #0f172a;\">Add New Record</h3>\n        <label for=\"addFieldTab\">Field Type:</label>\n        <select id=\"addFieldTab\" aria-required=\"true\" style=\"width: 100%; padding: 14px 14px; font-size: 1rem; border-radius: 12px; border: 1.5px solid #cbd5e1; margin-bottom: 24px; color: #334155;\">\n          \\${fieldTypes.map(f => \\`<option value=\"\\${escapeHtml(f)}\">\\${escapeHtml(fieldMap[f])}</option>\\`).join('')}\n        </select>\n        <label for=\"addValueTab\">Value:</label>\n        <input type=\"text\" id=\"addValueTab\" placeholder=\"Enter value\" aria-required=\"true\" style=\"width: 100%; padding:14px; font-size: 1rem; border-radius: 12px; border: 1.5px solid #cbd5e1; margin-bottom:24px; color: #334155;\" />\n        <div style=\"text-align: right;\">\n          <button id=\"addSubmitTabBtn\" type=\"button\" style=\"background-color: #2563eb; color: white; padding: 12px 30px; border-radius: 10px; font-size: 1rem; cursor: pointer; box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\">Add</button>\n        </div>\n      \\`;\n\n      contents.appendChild(addRecordContent);\n    }\n\n    const tabs = tabsContainer.querySelectorAll('.tab');\n\n    function activateTab(newTabKey) {\n      if(newTabKey === currentTab) return;\n      const currentActiveTab = tabsContainer.querySelector('.tab.active');\n      if(currentActiveTab) {\n        currentActiveTab.classList.remove('active');\n        currentActiveTab.setAttribute('aria-selected', 'false');\n        currentActiveTab.setAttribute('tabindex', '-1');\n      }\n      const newActiveTab = tabsContainer.querySelector(\\`.tab[data-tab=\"\\${newTabKey}\"]\\`);\n      if(newActiveTab) {\n        newActiveTab.classList.add('active');\n        newActiveTab.setAttribute('aria-selected', 'true');\n        newActiveTab.setAttribute('tabindex', '0');\n        newActiveTab.focus();\n      }\n      if(el('content-' + currentTab)) {\n        el('content-' + currentTab).style.display = 'none';\n        el('content-' + currentTab).setAttribute('aria-hidden', 'true');\n      }\n      if(el('content-' + newTabKey)) {\n        el('content-' + newTabKey).style.display = 'block';\n        el('content-' + newTabKey).setAttribute('aria-hidden', 'false');\n        if(newTabKey !== addRecordTabKey) {\n          renderRecords(newTabKey);\n          attachSearchListener(newTabKey);\n        } else {\n          setTimeout(() => {\n            const addValueTab = el('addValueTab');\n            if(addValueTab) addValueTab.focus();\n          }, 100);\n        }\n      }\n      currentTab = newTabKey;\n    }\n\n    tabs.forEach(tab => {\n      tab.addEventListener('click', () => {\n        activateTab(tab.dataset.tab);\n      });\n      tab.addEventListener('keydown', (ev) => {\n        if(ev.key === 'Enter' || ev.key === ' ') {\n          ev.preventDefault();\n          tab.click();\n        }\n      });\n    });\n  })();\n\n  // Attach search input event listener for a given field tab\n  function attachSearchListener(field) {\n    const searchInput = el('searchInput-' + field);\n    if(!searchInput) return;\n    searchInput.value = currentFilters[field] || '';\n    searchInput.oninput = () => {\n      const value = searchInput.value.trim();\n      if(currentFilters[field] !== value) {\n        currentFilters[field] = value;\n        currentPages[field] = 0; // reset to first page on filter change\n        renderRecords(field);\n      }\n    };\n  }\n\n  const addBtn = el('addBtn');\n  const openQRBtn = el('openQRBtn');\n\n  const addPopupOverlay = el('addPopupOverlay');\n  const addSubmitBtn = el('addSubmitBtn');\n  const addCancelBtn = el('addCancelBtn');\n  const addFieldSelect = el('addField');\n  const addValueInput = el('addValue');\n\n  addBtn.addEventListener('click', () => {\n    const tabsContainer = el('tabs');\n    const addRecordTab = tabsContainer.querySelector(\\`[data-tab=\"\\${addRecordTabKey}\"]\\`);\n    if(addRecordTab) {\n      addRecordTab.click();\n    } else {\n      addFieldSelect.value = fieldTypes[0];\n      addValueInput.value = '';\n      addPopupOverlay.style.display = 'flex';\n      addValueInput.focus();\n    }\n  });\n\n  addCancelBtn.addEventListener('click', () => {\n    addPopupOverlay.style.display = 'none';\n  });\n\n  addPopupOverlay.addEventListener('click', (e) => {\n    if(e.target === addPopupOverlay) {\n      addPopupOverlay.style.display = 'none';\n    }\n  });\n\n  addSubmitBtn.addEventListener('click', async () => {\n    const selectedField = addFieldSelect.value;\n    const val = addValueInput.value.trim();\n    if(val === '') {\n      alert('Value is required');\n      addValueInput.focus();\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new URLSearchParams();\n      formData.append('action', 'add');\n      formData.append('field', selectedField);\n      formData.append('value', val);\n      const resp = await fetch(webhookURL, {\n        method: 'POST',\n        body: formData,\n      });\n      if(!resp.ok) throw new Error('HTTP ' + resp.status);\n      addPopupOverlay.style.display = 'none';\n      window.location.reload();\n    } catch(e) {\n      setLoading(false);\n      alert('Add failed: ' + e.message);\n    }\n  });\n\n  const addSubmitTabBtn = el('addSubmitTabBtn');\n  const addFieldTab = el('addFieldTab');\n  const addValueTab = el('addValueTab');\n\n  if(addSubmitTabBtn && addFieldTab && addValueTab) {\n    addSubmitTabBtn.addEventListener('click', async () => {\n      const selectedField = addFieldTab.value;\n      const val = addValueTab.value.trim();\n      if(val === '') {\n        alert('Value is required');\n        addValueTab.focus();\n        return;\n      }\n      setLoading(true);\n      try {\n        const formData = new URLSearchParams();\n        formData.append('action', 'add');\n        formData.append('field', selectedField);\n        formData.append('value', val);\n        const resp = await fetch(webhookURL, {\n          method: 'POST',\n          body: formData,\n        });\n        if(!resp.ok) throw new Error('HTTP ' + resp.status);\n        window.location.reload();\n      } catch(e) {\n        setLoading(false);\n        alert('Add failed: ' + e.message);\n      }\n    });\n  }\n\n  openQRBtn.addEventListener('click', () => {\n    window.open(qrGeneratorURL, '_blank');\n  });\n\n  const confirmDeleteOverlay = el('confirmDeleteOverlay');\n  const confirmDeleteDeleteBtn = el('confirmDeleteDeleteBtn');\n  const confirmDeleteCancelBtn = el('confirmDeleteCancelBtn');\n  let onConfirmDelete = null;\n\n  function showDeleteConfirm(onConfirm) {\n    onConfirmDelete = onConfirm;\n    confirmDeleteOverlay.style.display = 'flex';\n    confirmDeleteDeleteBtn.focus();\n  }\n  function hideDeleteConfirm() {\n    confirmDeleteOverlay.style.display = 'none';\n    onConfirmDelete = null;\n  }\n  confirmDeleteDeleteBtn.addEventListener('click', () => {\n    if (typeof onConfirmDelete === 'function') {\n      onConfirmDelete();\n    }\n    hideDeleteConfirm();\n  });\n  confirmDeleteCancelBtn.addEventListener('click', hideDeleteConfirm);\n  confirmDeleteOverlay.addEventListener('click', (e) => {\n    if(e.target === confirmDeleteOverlay) {\n      hideDeleteConfirm();\n    }\n  });\n\n  // Initial render and attach search input for default tab\n  renderRecords(currentTab);\n  attachSearchListener(currentTab);\n});\n</script>\n\n</body>\n</html>\n      `\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        -1000
      ],
      "id": "fee65ee1-766c-4dd2-8c8e-738cbfce4d22",
      "name": "Code5"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        940,
        -1000
      ],
      "id": "4a0627de-0293-40ff-beca-a048a736db78",
      "name": "Respond to Webhook6"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.action }}",
                    "rightValue": "delete",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f4cadfb0-5f15-477d-88de-38668eb1ae8d"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "056612e7-2d91-45a4-99d7-d5a9de8c84ec",
                    "leftValue": "={{ $json.body.action }}",
                    "rightValue": "update",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "85b2f232-f407-42b9-a534-6915702d2d23",
                    "leftValue": "={{ $json.body.action }}",
                    "rightValue": "add",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        500,
        -660
      ],
      "id": "886198cd-7b72-44dd-bc5f-72198664729c",
      "name": "Switch"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "delete",
        "projectId": "pltr87351hgxdjk",
        "table": "maz6gfzo0vu40pw",
        "id": "={{ $('Webhook3').item.json.body.id }}"
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        720,
        -820
      ],
      "id": "ea332f63-7608-4f79-947a-92bccea36069",
      "name": "NocoDB2",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "pltr87351hgxdjk",
        "table": "maz6gfzo0vu40pw",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Field",
              "fieldValue": "={{ $json.body.field }}"
            },
            {
              "fieldName": "Value",
              "fieldValue": "={{ $json.body.value }}"
            },
            {
              "fieldName": "id",
              "fieldValue": "={{ $json.body.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        720,
        -640
      ],
      "id": "52f95927-5b7a-406a-9fa4-89a83dd7b344",
      "name": "NocoDB3",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pltr87351hgxdjk",
        "table": "maz6gfzo0vu40pw",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Field",
              "fieldValue": "={{ $json.body.field }}"
            },
            {
              "fieldName": "Value",
              "fieldValue": "={{ $json.body.value }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        720,
        -460
      ],
      "id": "6629b080-be87-4a63-b8cd-472e4ca1d109",
      "name": "NocoDB4",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Incoming data is an array on items[0].json (or just items as an array?)\n// For safety, let's assume items here is like:\n// items = [\n//   { json: { Id, Field, CreatedAt, UpdatedAt, Value }},\n//   ...\n// ]\n\n// Extract all records from all input items\nconst rawRecords = items.map(item => item.json); // each item is 1 record\n\n// Normalize field name mapping: lowercase field from input to display name (and tab display)\nconst fieldMap = {\n  entity: \"Entity\",\n  location: \"Location\",\n  area: \"Area\",\n  survey_source: \"Survey Source\",\n};\n\nconst recordsPerPage = 15;\nconst webhookURL = \"https://xl.epicpc.com/webhook/4377c42c-64b0-4aee-9f49-82cce54896a7\";\n\n// Normalize and group by display field\nconst groupedRecords = {\n  \"Entity\": [],\n  \"Location\": [],\n  \"Area\": [],\n  \"Survey Source\": [],\n};\n\nfor (const r of rawRecords) {\n  const f = (r.Field || \"\").toLowerCase();\n  const displayField = fieldMap[f];\n  if (displayField) {\n    groupedRecords[displayField].push({\n      id: r.Id,\n      field: displayField,\n      value: r.Value,\n      createdAt: r.CreatedAt,\n      updatedAt: r.UpdatedAt,\n    });\n  }\n}\n\n// HTML escape helper\nfunction escapeHtml(text) {\n  return String(text)\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nconst fieldTypes = Object.keys(groupedRecords);\n\nreturn [\n  {\n    json: {\n      html: `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>NoCoDB Records</title>\n<style>\n  body { font-family: Arial, sans-serif; margin: 20px; }\n  .tabs { display: flex; margin-bottom: 10px; cursor: pointer; }\n  .tab {\n    padding: 10px 20px; border: 1px solid #ccc; border-bottom: none;\n    background: #eee; user-select:none;\n  }\n  .tab.active {\n    background: white; font-weight: bold;\n  }\n  .content {\n    border: 1px solid #ccc; padding: 10px; background: white;\n  }\n  .pagination {\n    margin-top: 10px;\n  }\n  .page-btn {\n    margin: 0 5px; padding: 5px 10px;\n    cursor: pointer; border: 1px solid #ccc; background: #f9f9f9;\n  }\n  .page-btn.disabled {\n    color: #999;\n    cursor: default;\n  }\n  .record-tile {\n    border: 1px solid #ddd; padding: 8px 10px;\n    margin: 5px 0; display: flex; justify-content: space-between;\n    align-items: center;\n    border-radius: 4px;\n  }\n  .record-value {\n    flex: 1;\n    padding-right: 10px;\n    word-break: break-word;\n  }\n  button {\n    margin-left: 5px;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n  button:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  /* Add button styles */\n  #addBtn {\n    margin-top: 15px;\n    padding: 8px 15px;\n    font-size: 16px;\n  }\n\n  /* Popup/mask */\n  #addPopupOverlay {\n    display: none;\n    position: fixed; \n    top:0; left:0; right:0; bottom:0;\n    background: rgba(0,0,0,0.5);\n    justify-content: center;\n    align-items: center;\n  }\n  #addPopup {\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    min-width: 300px;\n  }\n  #addPopup label {\n    display: block;\n    margin-top: 10px;\n    margin-bottom: 5px;\n  }\n  #addPopup select, #addPopup input {\n    width: 100%;\n    padding: 6px 8px;\n    box-sizing: border-box;\n  }\n  #addPopupButtons {\n    margin-top: 15px;\n    text-align: right;\n  }\n\n  #loader {\n    display: none;\n    position: fixed;\n    top: 10px; right: 10px;\n    background: rgba(255,255,255,0.9);\n    border: 1px solid #ccc;\n    padding: 10px;\n    border-radius: 5px;\n    font-weight: bold;\n  }\n</style>\n</head>\n<body>\n\n<h1>NoCoDB Records</h1>\n\n<div class=\"tabs\" id=\"tabs\">\n  ${fieldTypes.map((f, i) => `<div class=\"tab${i===0?' active':''}\" data-tab=\"${escapeHtml(f)}\">${escapeHtml(f)}</div>`).join('')}\n</div>\n\n<div id=\"contents\">\n${fieldTypes.map(f => {\n  const recs = groupedRecords[f];\n  // Initial page 0\n  return `<div class=\"content\" id=\"content-${escapeHtml(f)}\" style=\"display:${f === fieldTypes[0] ? 'block' : 'none'};\">\n    <div id=\"records-${escapeHtml(f)}\"></div>\n    <div class=\"pagination\" id=\"pagination-${escapeHtml(f)}\"></div>\n  </div>`;\n}).join('')}\n</div>\n\n<button id=\"addBtn\">Add Record</button>\n\n<!-- Add Popup -->\n<div id=\"addPopupOverlay\">\n  <div id=\"addPopup\">\n    <h3>Add New Record</h3>\n    <label for=\"addField\">Field Type:</label>\n    <select id=\"addField\">\n      ${fieldTypes.map(f => `<option value=\"${escapeHtml(f)}\">${escapeHtml(f)}</option>`).join('')}\n    </select>\n    <label for=\"addValue\">Value:</label>\n    <input type=\"text\" id=\"addValue\" placeholder=\"Enter value\" />\n    <div id=\"addPopupButtons\">\n      <button id=\"addSubmitBtn\">Add</button>\n      <button id=\"addCancelBtn\">Cancel</button>\n    </div>\n  </div>\n</div>\n\n<div id=\"loader\">Processing...</div>\n\n<script>\n  const recordsPerPage = ${recordsPerPage};\n  const webhookURL = \"${webhookURL}\";\n\n  // Data: grouped by field name, each is array of records {id,field,value,createdAt,updatedAt}\n  const groupedRecords = ${JSON.stringify(groupedRecords)};\n\n  let currentTab = \"${fieldTypes[0]}\";\n  const currentPages = {}; // Track current page per tab. Init 0\n  ${fieldTypes.map(f=>`currentPages[\"${f}\"] = 0;`).join(' ')}\n\n  // Utilities\n  function el(id) { return document.getElementById(id); }\n  function createElement(tag, props = {}, ...children) {\n    const e = document.createElement(tag);\n    for(const k in props) {\n      if (k === 'className') e.className = props[k];\n      else if (k === 'innerHTML') e.innerHTML = props[k];\n      else if (k.startsWith('on') && typeof props[k] === 'function') {\n        e.addEventListener(k.substr(2).toLowerCase(), props[k]);\n      } else {\n        e.setAttribute(k, props[k]);\n      }\n    }\n    for(const c of children) {\n      if (typeof c === 'string') e.appendChild(document.createTextNode(c));\n      else if (c instanceof Node) e.appendChild(c);\n    }\n    return e;\n  }\n  \n  // Escape HTML (simple)\n  function escapeHtml(text) {\n    return String(text)\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n\n  // Show or hide loader and disable buttons\n  function setLoading(loading) {\n    const loader = el('loader');\n    const addBtn = el('addBtn');\n    if(loading) {\n      loader.style.display = 'block';\n      addBtn.disabled = true;\n      disableAllButtons(true);\n    } else {\n      loader.style.display = 'none';\n      addBtn.disabled = false;\n      disableAllButtons(false);\n    }\n  }\n  function disableAllButtons(disable) {\n    document.querySelectorAll('button').forEach(btn => {\n      if (!btn.disabled && btn.id !== 'addBtn') btn.disabled = disable;\n      else if (btn.disabled && !disable) btn.disabled = false;\n    });\n  }\n\n  // Render pagination buttons for a tab\n  function renderPagination(field) {\n    const container = el('pagination-' + field);\n    const totalRecs = groupedRecords[field].length;\n    const totalPages = Math.ceil(totalRecs / recordsPerPage);\n    const currentPage = currentPages[field];\n    container.innerHTML = '';\n\n    // Prev button\n    const prevBtn = createElement('button', {\n      className: 'page-btn' + (currentPage === 0 ? ' disabled' : ''),\n      disabled: currentPage === 0,\n      onclick: () => {\n        if(currentPages[field] > 0) {\n          currentPages[field]--;\n          renderRecords(field);\n        }\n      }\n    }, 'Prev');\n    container.appendChild(prevBtn);\n\n    // Show simple page count\n    const pageInfo = createElement('span', { style: 'margin:0 10px;' }, 'Page ' + (currentPage + 1) + ' / ' + (totalPages || 1));\n    container.appendChild(pageInfo);\n\n    // Next button\n    const nextBtn = createElement('button', {\n      className: 'page-btn' + (currentPage >= totalPages - 1 ? ' disabled' : ''),\n      disabled: currentPage >= totalPages - 1,\n      onclick: () => {\n        if(currentPages[field] < totalPages - 1) {\n          currentPages[field]++;\n          renderRecords(field);\n        }\n      }\n    }, 'Next');\n    container.appendChild(nextBtn);\n  }\n\n  // Render record tiles for shown records in page of a tab\n  function renderRecords(field) {\n    const container = el('records-' + field);\n    container.innerHTML = '';\n    const page = currentPages[field];\n    const recs = groupedRecords[field];\n    const start = page * recordsPerPage;\n    const end = Math.min(start + recordsPerPage, recs.length);\n    for(let i = start; i < end; i++) {\n      const rec = recs[i];\n      const tile = createElement('div', { className: 'record-tile' });\n      // Value display / editable input container\n      const valContainer = createElement('div', { className: 'record-value' }, escapeHtml(rec.value));\n      tile.appendChild(valContainer);\n\n      // Buttons container\n      const buttons = [];\n\n      // Update button\n      const updateBtn = createElement('button', { type: 'button' }, 'Update');\n      updateBtn.onclick = () => {\n        // If button says Update, swap to editing mode:\n        if(updateBtn.textContent === 'Update') {\n          // Turn valContainer to input\n          const input = createElement('input', { type: 'text', value: rec.value, style: 'width:100%;' });\n          valContainer.innerHTML = '';\n          valContainer.appendChild(input);\n          updateBtn.textContent = 'Submit';\n          updateBtn.disabled = false;\n\n          // Disable delete button while editing\n          if(deleteBtn) deleteBtn.disabled = true;\n\n          // Also disable add button and other tabs buttons handled globally when POSTing later\n        } else {\n          // Submit mode:\n          const input = valContainer.querySelector('input');\n          if(!input) return;\n          const newValue = input.value.trim();\n          if(newValue === '') {\n            alert('Value cannot be empty');\n            input.focus();\n            return;\n          }\n          // POST update\n          postAction({\n            id: rec.id,\n            action: 'update',\n            field: field,\n            value: newValue,\n          }).then(() => {\n            // Update local value and UI\n            rec.value = newValue;\n            valContainer.textContent = newValue;\n            updateBtn.textContent = 'Update';\n            if(deleteBtn) deleteBtn.disabled = false;\n          }).catch(err => {\n            alert('Update failed: ' + err.message);\n          });\n        }\n      };\n      buttons.push(updateBtn);\n\n      // Delete button\n      const deleteBtn = createElement('button', { type: 'button' }, 'Delete');\n      deleteBtn.onclick = () => {\n        if(!confirm('Delete this record?')) return;\n        postAction({\n          id: rec.id,\n          action: 'delete'\n        }).then(() => {\n          // Remove from local groupedRecords and re-render current tab\n          groupedRecords[field] = groupedRecords[field].filter(r => r.id !== rec.id);\n          // If current page now out of range, go back one page\n          const totalPages = Math.ceil(groupedRecords[field].length / recordsPerPage);\n          if(currentPages[field] > totalPages - 1) currentPages[field] = Math.max(0, totalPages -1);\n          renderRecords(field);\n          renderPagination(field);\n        }).catch(err => {\n          alert('Delete failed: ' + err.message);\n        });\n      };\n      buttons.push(deleteBtn);\n\n      buttons.forEach(b => tile.appendChild(b));\n\n      container.appendChild(tile);\n    }\n    renderPagination(field);\n  }\n\n  // POST action to webhook for delete or update\n  async function postAction(data) {\n    setLoading(true);\n    try {\n      const postData = new URLSearchParams();\n      if(data.id) postData.append('id', data.id);\n      if(data.action) postData.append('action', data.action);\n      if(data.field) postData.append('field', data.field);\n      if(data.value !== undefined) postData.append('value', data.value);\n\n      const response = await fetch(webhookURL, {\n        method: 'POST',\n        body: postData,\n      });\n\n      if(!response.ok) {\n        throw new Error('HTTP ' + response.status);\n      }\n      \n      // Wait a moment before refresh (or just refresh immediately)\n      // Here we update the UI without full refresh\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Tabs switching handler\n  (function setupTabs() {\n    const tabsContainer = el('tabs');\n    tabsContainer.querySelectorAll('.tab').forEach(tab => {\n      tab.addEventListener('click', () => {\n        if(tab.classList.contains('active')) return;\n        // Remove active from old\n        tabsContainer.querySelector('.tab.active').classList.remove('active');\n        // Hide old content\n        el('content-' + currentTab).style.display = 'none';\n\n        currentTab = tab.dataset.tab;\n        // Show new content\n        el('content-' + currentTab).style.display = 'block';\n        tab.classList.add('active');\n        renderRecords(currentTab);\n      });\n    });\n  })();\n\n  // Add Button Popup Logic\n  const addBtn = el('addBtn');\n  const addPopupOverlay = el('addPopupOverlay');\n  const addSubmitBtn = el('addSubmitBtn');\n  const addCancelBtn = el('addCancelBtn');\n  const addFieldSelect = el('addField');\n  const addValueInput = el('addValue');\n\n  addBtn.addEventListener('click', () => {\n    addFieldSelect.value = fieldTypes[0];\n    addValueInput.value = '';\n    addPopupOverlay.style.display = 'flex';\n    addValueInput.focus();\n  });\n\n  addCancelBtn.addEventListener('click', () => {\n    addPopupOverlay.style.display = 'none';\n  });\n\n  addSubmitBtn.addEventListener('click', async () => {\n    const selectedField = addFieldSelect.value;\n    const val = addValueInput.value.trim();\n    if(val === '') {\n      alert('Value is required');\n      addValueInput.focus();\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const formData = new URLSearchParams();\n      formData.append('action', 'add');\n      formData.append('field', selectedField);\n      formData.append('value', val);\n\n      const resp = await fetch(webhookURL, {\n        method: 'POST',\n        body: formData,\n      });\n      if(!resp.ok) throw new Error('HTTP ' + resp.status);\n\n      // After add - reload page or update local data and UI\n      alert('Record added. Please refresh to load latest data.');\n      addPopupOverlay.style.display = 'none';\n    } catch(e) {\n      alert('Add failed: ' + e.message);\n    } finally {\n      setLoading(false);\n    }\n  });\n\n  // Initial render\n  renderRecords(currentTab);\n\n</script>\n\n</body>\n</html>\n      `\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        -1160
      ],
      "id": "cc3b37c6-adb9-4122-8096-ccd3ff055982",
      "name": "Code6"
    },
    {
      "parameters": {
        "jsCode": "const rawRecords = items.map(item => item.json); // each input item is one record\n\n// Mapping lowercase field keys to display names for tabs\nconst fieldMap = {\n  entity: \"Entity\",\n  location: \"Location\",\n  area: \"Area\",\n  survey_source: \"Survey Source\",\n};\n\nconst recordsPerPage = 15;\nconst webhookURL = \"https://xl.epicpc.com/webhook/4377c42c-64b0-4aee-9f49-82cce54896a7\";\nconst qrGeneratorURL = \"https://xl.epicpc.com/webhook/ece6d39b-de5d-4fb1-bea1-a681440b1184\";\n\n// Group records by lowercase key, keeping displayField for UI\nconst groupedRecords = {\n  entity: [],\n  location: [],\n  area: [],\n  survey_source: [],\n};\n\nfor (const r of rawRecords) {\n  const f = (r.Field || \"\").toLowerCase();\n  if (groupedRecords[f]) {\n    groupedRecords[f].push({\n      id: r.Id,\n      field: f,   // lowercase for posting\n      displayField: fieldMap[f], // display\n      value: r.Value,\n      createdAt: r.CreatedAt,\n      updatedAt: r.UpdatedAt,\n    });\n  }\n}\n\nconst fieldTypes = Object.keys(groupedRecords); // ['entity', 'location', ...]\n\nfunction escapeHtml(text) {\n  return String(text)\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nreturn [\n  {\n    json: {\n      html: `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>NoCoDB Records</title>\n<style>\n  /* ======= STYLES SAME AS BEFORE with added styles for confirmation popup ======= */\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 40px 20px 60px;\n    background-color: #f8fafc;\n    color: #1e293b;\n    display: flex;\n    justify-content: center;\n  }\n  #appContainer {\n    width: 100%;\n    max-width: 960px;\n    min-width: 320px;\n    background: #fff;\n    padding: 30px 40px;\n    border-radius: 12px;\n    box-shadow: 0 8px 30px rgba(30,64,175,0.12);\n    box-sizing: border-box;\n  }\n  h1 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    font-size: 2rem;\n    color: #0f172a;\n  }\n\n  .tabs {\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 2px solid #e2e8f0;\n  }\n  .tab {\n    padding: 12px 25px;\n    margin-right: 5px;\n    font-weight: 600;\n    color: #64748b;\n    cursor: pointer;\n    border: 1.5px solid transparent;\n    border-bottom: none;\n    border-radius: 8px 8px 0 0;\n    background-color: #f1f5f9;\n    transition: all 0.25s ease-in-out;\n    user-select: none;\n  }\n  .tab:hover {\n    color: #1e40af;\n  }\n  .tab.active {\n    background-color: #ffffff;\n    color: #1e40af;\n    border-color: #1e40af;\n    border-bottom: 2px solid #ffffff;\n    box-shadow: 0 2px 10px rgba(30, 64, 175, 0.15);\n  }\n\n  .content {\n    background: #fff;\n    border: 1.5px solid #e2e8f0;\n    border-radius: 0 8px 8px 8px;\n    padding: 20px;\n    box-shadow: 0 4px 18px rgba(0,0,0,0.05);\n    min-height: 320px;\n    margin-bottom: 30px;\n  }\n\n  .pagination {\n    margin-top: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  .page-btn {\n    margin-right: 10px;\n    padding: 8px 14px;\n    font-weight: 600;\n    color: #64748b;\n    background: #e2e8f0;\n    border-radius: 6px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  .page-btn:hover:not(:disabled) {\n    background-color: #cbd5e1;\n    color: #1e293b;\n  }\n  .page-btn:disabled,\n  .page-btn.disabled {\n    color: #a1a1aa;\n    background-color: #f1f5f9;\n    cursor: not-allowed;\n  }\n\n  .record-tile {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    margin-bottom: 12px;\n    border-radius: 10px;\n    background: #f8fafc;\n    border: 1px solid #e2e8f0;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.05);\n    transition: box-shadow 0.3s ease;\n  }\n  .record-tile:hover {\n    box-shadow: 0 4px 22px rgba(30, 64, 175, 0.12);\n  }\n  .record-value {\n    flex: 1;\n    font-weight: 600;\n    font-size: 1.05rem;\n    color: #334155;\n    word-break: break-word;\n  }\n  .record-value input[type=\"text\"] {\n    width: 100%;\n    padding: 6px 10px;\n    font-size: 1rem;\n    color: #334155;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 8px;\n    transition: border-color 0.3s ease;\n  }\n  .record-value input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 6px rgba(30, 64, 175, 0.25);\n  }\n\n  button {\n    font-weight: 600;\n    border: none;\n    padding: 8px 14px;\n    margin-left: 8px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.3s ease, color 0.3s ease;\n    box-shadow: 0 2px 7px rgba(30, 64, 175, 0.15);\n  }\n  button:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    box-shadow: none;\n  }\n  button.update-btn {\n    background-color: #2563eb;\n    color: white;\n  }\n  button.update-btn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  button.delete-btn {\n    background-color: #ef4444;\n    color: white;\n  }\n  button.delete-btn:hover:not(:disabled) {\n    background-color: #dc2626;\n  }\n  button.cancel-update-btn {\n    background-color: #64748b;\n    color: white;\n  }\n  button.cancel-update-btn:hover:not(:disabled) {\n    background-color: #475569;\n  }\n  button.add-btn, button.qr-btn {\n    margin-top: 0;\n    background-color: #2563eb;\n    color: white;\n    font-size: 1rem;\n    padding: 12px 30px;\n    display: inline-block;\n    box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\n    transition: background-color 0.25s ease;\n    border-radius: 10px;\n  }\n  button.add-btn:hover, button.qr-btn:hover {\n    background-color: #1d4ed8;\n  }\n  #buttonContainer {\n    margin-top: 10px;\n    display: flex;\n    gap: 15px;\n  }\n\n  #addPopupOverlay {\n    display: none;\n    position: fixed; \n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15, 23, 42, 0.54);\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n  }\n  #addPopup {\n    background: white;\n    padding: 36px 40px 36px 40px;\n    border-radius: 16px;\n    box-shadow: 0 10px 35px rgba(30, 64, 175, 0.25);\n    min-width: 320px;\n    max-width: 400px;\n    box-sizing: border-box;\n  }\n  #addPopup h3 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    color: #0f172a;\n    font-size: 1.4rem;\n  }\n  #addPopup label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 600;\n    color: #475569;\n  }\n  #addPopup select, #addPopup input[type=\"text\"] {\n    width: 100%;\n    padding: 14px 14px;\n    font-size: 1rem;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 12px;\n    margin-bottom: 24px;\n    color: #334155;\n    box-sizing: border-box;\n    transition: border-color 0.3s ease;\n  }\n  #addPopup select:focus, #addPopup input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 8px rgba(30,64,175,0.35);\n  }\n  #addPopupButtons {\n    text-align: right;\n  }\n  #addPopupButtons button {\n    padding: 10px 24px;\n    border-radius: 12px;\n    font-size: 1rem;\n    box-shadow: 0 4px 10px rgba(30, 64, 175, 0.2);\n    margin-left: 10px;\n  }\n  #addSubmitBtn {\n    background-color: #2563eb;\n    color: white;\n  }\n  #addSubmitBtn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  #addCancelBtn {\n    background-color: #475569;\n    color: white;\n  }\n  #addCancelBtn:hover:not(:disabled) {\n    background-color: #334155;\n  }\n\n  /* Confirmation popup overlay */\n  #confirmDeleteOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15,23,42,0.7);\n    z-index: 10001;\n    justify-content: center;\n    align-items: center;\n  }\n  #confirmDelete {\n    background: white;\n    padding: 30px 40px;\n    border-radius: 16px;\n    max-width: 400px;\n    box-shadow: 0 10px 35px rgba(30,64,175,0.3);\n    text-align: center;\n    font-size: 1.1rem;\n    color: #0f172a;\n  }\n  #confirmDelete h2 {\n    margin-bottom: 24px;\n  }\n  #confirmDeleteButtons button {\n    padding: 10px 30px;\n    border-radius: 12px;\n    font-weight: 700;\n    font-size: 1rem;\n    margin: 0 10px;\n    box-shadow: 0 4px 10px rgba(30,64,175,0.2);\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  #confirmDeleteDeleteBtn {\n    background: #ef4444;\n    color: white;\n  }\n  #confirmDeleteDeleteBtn:hover {\n    background: #dc2626;\n  }\n  #confirmDeleteCancelBtn {\n    background: #64748b;\n    color: white;\n  }\n  #confirmDeleteCancelBtn:hover {\n    background: #475569;\n  }\n\n  /* Loader */\n  #loader {\n    display: none;\n    position: fixed;\n    top: 15px; right: 15px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 10px 18px;\n    border-radius: 14px;\n    font-weight: 700;\n    font-size: 1rem;\n    box-shadow: 0 4px 14px rgba(59,130,246,0.6);\n    z-index: 10002;\n  }\n</style>\n</head>\n<body>\n\n<div id=\"appContainer\">\n\n<h1>NoCoDB Records</h1>\n\n<div class=\"tabs\" id=\"tabs\">\n  ${fieldTypes.map(f => `<div class=\"tab${f===\"entity\" ? \" active\" : \"\"}\" data-tab=\"${escapeHtml(f)}\">${escapeHtml(fieldMap[f])}</div>`).join('')}\n</div>\n\n<div id=\"contents\">\n  ${fieldTypes.map(f => `\n    <div class=\"content\" id=\"content-${escapeHtml(f)}\" style=\"display:${f===\"entity\" ? \"block\" : \"none\"};\">\n      <div id=\"records-${escapeHtml(f)}\"></div>\n      <div class=\"pagination\" id=\"pagination-${escapeHtml(f)}\"></div>\n    </div>\n  `).join('')}\n</div>\n\n<div id=\"buttonContainer\">\n  <button id=\"addBtn\" class=\"add-btn\" type=\"button\">Add Record</button>\n  <button id=\"openQRBtn\" class=\"qr-btn\" type=\"button\" title=\"Open QR Generator in new tab\">Open QR Generator</button>\n</div>\n\n</div>\n\n<!-- Add Popup -->\n<div id=\"addPopupOverlay\" aria-hidden=\"true\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addPopupTitle\" tabindex=\"-1\">\n  <div id=\"addPopup\">\n    <h3 id=\"addPopupTitle\">Add New Record</h3>\n    <label for=\"addField\">Field Type:</label>\n    <select id=\"addField\" aria-required=\"true\">\n      ${fieldTypes.map(f => `<option value=\"${escapeHtml(f)}\">${escapeHtml(fieldMap[f])}</option>`).join('')}\n    </select>\n    <label for=\"addValue\">Value:</label>\n    <input type=\"text\" id=\"addValue\" placeholder=\"Enter value\" aria-required=\"true\" />\n    <div id=\"addPopupButtons\">\n      <button id=\"addSubmitBtn\" type=\"button\">Add</button>\n      <button id=\"addCancelBtn\" type=\"button\">Cancel</button>\n    </div>\n  </div>\n</div>\n\n<!-- Confirmation Popup -->\n<div id=\"confirmDeleteOverlay\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"confirmDeleteTitle\" aria-describedby=\"confirmDeleteMsg\" tabindex=\"-1\">\n  <div id=\"confirmDelete\">\n    <h2 id=\"confirmDeleteTitle\">Are you sure?</h2>\n    <p id=\"confirmDeleteMsg\">This action will permanently delete the record.</p>\n    <div id=\"confirmDeleteButtons\">\n      <button id=\"confirmDeleteDeleteBtn\" type=\"button\">Delete</button>\n      <button id=\"confirmDeleteCancelBtn\" type=\"button\">Whoops, oh no</button>\n    </div>\n  </div>\n</div>\n\n<div id=\"loader\">Processing...</div>\n\n<script>\n  document.addEventListener('DOMContentLoaded', () => {\n    const recordsPerPage = ${recordsPerPage};\n    const webhookURL = \"${webhookURL}\";\n    const qrGeneratorURL = \"${qrGeneratorURL}\";\n\n    const groupedRecords = ${JSON.stringify(groupedRecords)};\n    let currentTab = \"entity\";\n    const currentPages = {};\n    ${fieldTypes.map(f => `currentPages[\"${f}\"] = 0;`).join(' ')}\n\n    function el(id) { return document.getElementById(id); }\n    function createElement(tag, props = {}, ...children) {\n      const e = document.createElement(tag);\n      for(const k in props) {\n        if (k === 'className') e.className = props[k];\n        else if (k === 'innerHTML') e.innerHTML = props[k];\n        else if (k.startsWith('on') && typeof props[k] === 'function') {\n          e.addEventListener(k.substr(2).toLowerCase(), props[k]);\n        } else {\n          e.setAttribute(k, props[k]);\n        }\n      }\n      for(const c of children) {\n        if (typeof c === 'string') e.appendChild(document.createTextNode(c));\n        else if (c instanceof Node) e.appendChild(c);\n      }\n      return e;\n    }\n    function escapeHtml(text) {\n      return String(text)\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n    }\n    function setLoading(loading) {\n      const loader = el('loader');\n      const addBtn = el('addBtn');\n      const openQRBtn = el('openQRBtn');\n      if (loading) {\n        loader.style.display = 'block';\n        addBtn.disabled = true;\n        openQRBtn.disabled = true;\n        disableAllButtons(true);\n      } else {\n        loader.style.display = 'none';\n        addBtn.disabled = false;\n        openQRBtn.disabled = false;\n        disableAllButtons(false);\n      }\n    }\n    function disableAllButtons(disable) {\n      document.querySelectorAll('button').forEach(btn => {\n        if (!btn.disabled && btn.id !== 'addBtn' && btn.id !== 'openQRBtn') btn.disabled = disable;\n        else if (btn.disabled && !disable) btn.disabled = false;\n      });\n    }\n    function renderPagination(field) {\n      const container = el('pagination-' + field);\n      const totalRecs = groupedRecords[field].length;\n      const totalPages = Math.ceil(totalRecs / recordsPerPage);\n      const currentPage = currentPages[field];\n      container.innerHTML = '';\n      const prevBtn = createElement('button', {\n        className: 'page-btn' + (currentPage === 0 ? ' disabled' : ''),\n        disabled: currentPage === 0,\n        onclick: () => {\n          if(currentPages[field] > 0) {\n            currentPages[field]--;\n            renderRecords(field);\n          }\n        }\n      }, 'Prev');\n      container.appendChild(prevBtn);\n      const pageInfo = createElement('span', { style: 'margin:0 10px; font-weight: 600; color: #475569;' }, 'Page ' + (currentPage + 1) + ' / ' + (totalPages || 1));\n      container.appendChild(pageInfo);\n      const nextBtn = createElement('button', {\n        className: 'page-btn' + (currentPage >= totalPages - 1 ? ' disabled' : ''),\n        disabled: currentPage >= totalPages - 1,\n        onclick: () => {\n          if(currentPages[field] < totalPages - 1) {\n            currentPages[field]++;\n            renderRecords(field);\n          }\n        }\n      }, 'Next');\n      container.appendChild(nextBtn);\n    }\n    function renderRecords(field) {\n      const container = el('records-' + field);\n      container.innerHTML = '';\n      const page = currentPages[field];\n      const recs = groupedRecords[field];\n      const start = page * recordsPerPage;\n      const end = Math.min(start + recordsPerPage, recs.length);\n      for(let i = start; i < end; i++) {\n        const rec = recs[i];\n        const tile = createElement('div', { className: 'record-tile' });\n        const valContainer = createElement('div', { className: 'record-value' }, escapeHtml(rec.value));\n        tile.appendChild(valContainer);\n\n        const updateBtn = createElement('button', { type: 'button', className: 'update-btn' }, 'Update');\n        const deleteBtn = createElement('button', { type: 'button', className: 'delete-btn' }, 'Delete');\n\n        // Cancel button for update mode (hidden by default)\n        const cancelUpdateBtn = createElement('button', { type: 'button', className: 'cancel-update-btn', style: 'display:none;' }, 'Cancel');\n\n        let isEditing = false;\n\n        function exitEditMode(save) {\n          if (!isEditing) return;\n          isEditing = false;\n          cancelUpdateBtn.style.display = 'none';\n          deleteBtn.disabled = false;\n          if(save) updateBtn.textContent = 'Update';\n          else {\n            valContainer.textContent = rec.value;\n            updateBtn.textContent = 'Update';\n          }\n        }\n\n        updateBtn.onclick = () => {\n          if (!isEditing) {\n            // Enter edit mode\n            const input = createElement('input', { type: 'text', value: rec.value });\n            valContainer.innerHTML = '';\n            valContainer.appendChild(input);\n            isEditing = true;\n            updateBtn.textContent = 'Submit';\n            cancelUpdateBtn.style.display = 'inline-block';\n            deleteBtn.disabled = true;\n\n            // Clicking outside input or pressing Escape cancels edit\n            function cancelOnEsc(e) {\n              if(e.key === 'Escape') {\n                exitEditMode(false);\n                document.removeEventListener('keydown', cancelOnEsc);\n                document.removeEventListener('click', onDocClick, true);\n              }\n            }\n            function onDocClick(e) {\n              if (!valContainer.contains(e.target) && e.target !== updateBtn && e.target !== cancelUpdateBtn) {\n                exitEditMode(false);\n                document.removeEventListener('keydown', cancelOnEsc);\n                document.removeEventListener('click', onDocClick, true);\n              }\n            }\n            document.addEventListener('keydown', cancelOnEsc);\n            document.addEventListener('click', onDocClick, true);\n\n          } else {\n            // Submit update\n            const input = valContainer.querySelector('input');\n            if (!input) return;\n            const newValue = input.value.trim();\n            if (newValue === '') {\n              alert('Value cannot be empty');\n              input.focus();\n              return;\n            }\n            setLoading(true);\n            const formData = new URLSearchParams();\n            formData.append('id', rec.id);\n            formData.append('action', 'update');\n            formData.append('field', rec.field);\n            formData.append('value', newValue);\n            fetch(webhookURL, {\n              method: 'POST',\n              body: formData,\n            })\n            .then(response => {\n              if (!response.ok) throw new Error('HTTP ' + response.status);\n              window.location.reload();\n            })\n            .catch(err => {\n              setLoading(false);\n              alert('Update failed: ' + err.message);\n            });\n          }\n        };\n\n        cancelUpdateBtn.onclick = () => {\n          exitEditMode(false);\n        };\n\n        // Delete button shows confirmation popup\n        deleteBtn.onclick = () => {\n          showDeleteConfirm(async () => {\n            setLoading(true);\n            const formData = new URLSearchParams();\n            formData.append('id', rec.id);\n            formData.append('action', 'delete');\n            try {\n              const res = await fetch(webhookURL, {\n                method: 'POST',\n                body: formData,\n              });\n              if (!res.ok) throw new Error('HTTP ' + res.status);\n              window.location.reload();\n            } catch(e) {\n              setLoading(false);\n              alert('Delete failed: ' + e.message);\n            }\n          });\n        };\n\n        tile.appendChild(updateBtn);\n        tile.appendChild(cancelUpdateBtn);\n        tile.appendChild(deleteBtn);\n        container.appendChild(tile);\n      }\n      renderPagination(field);\n    }\n\n    (function setupTabs() {\n      const tabsContainer = el('tabs');\n      tabsContainer.querySelectorAll('.tab').forEach(tab => {\n        tab.addEventListener('click', () => {\n          if(tab.classList.contains('active')) return;\n          tabsContainer.querySelector('.tab.active').classList.remove('active');\n          el('content-' + currentTab).style.display = 'none';\n          currentTab = tab.dataset.tab;\n          el('content-' + currentTab).style.display = 'block';\n          tab.classList.add('active');\n          renderRecords(currentTab);\n        });\n      });\n    })();\n\n    const addBtn = el('addBtn');\n    const openQRBtn = el('openQRBtn');\n    const addPopupOverlay = el('addPopupOverlay');\n    const addSubmitBtn = el('addSubmitBtn');\n    const addCancelBtn = el('addCancelBtn');\n    const addFieldSelect = el('addField');\n    const addValueInput = el('addValue');\n\n    addBtn.addEventListener('click', () => {\n      addFieldSelect.value = fieldTypes[0];\n      addValueInput.value = '';\n      addPopupOverlay.style.display = 'flex';\n      addValueInput.focus();\n    });\n\n    addCancelBtn.addEventListener('click', () => {\n      addPopupOverlay.style.display = 'none';\n    });\n\n    addSubmitBtn.addEventListener('click', async () => {\n      const selectedField = addFieldSelect.value;\n      const val = addValueInput.value.trim();\n      if(val === '') {\n        alert('Value is required');\n        addValueInput.focus();\n        return;\n      }\n      setLoading(true);\n      try {\n        const formData = new URLSearchParams();\n        formData.append('action', 'add');\n        formData.append('field', selectedField);\n        formData.append('value', val);\n        const resp = await fetch(webhookURL, {\n          method: 'POST',\n          body: formData,\n        });\n        if(!resp.ok) throw new Error('HTTP ' + resp.status);\n        addPopupOverlay.style.display = 'none';\n        window.location.reload();\n      } catch(e) {\n        setLoading(false);\n        alert('Add failed: ' + e.message);\n      }\n    });\n\n    openQRBtn.addEventListener('click', () => {\n      window.open(qrGeneratorURL, '_blank');\n    });\n\n    // Confirmation popup elements & logic\n    const confirmDeleteOverlay = el('confirmDeleteOverlay');\n    const confirmDeleteDeleteBtn = el('confirmDeleteDeleteBtn');\n    const confirmDeleteCancelBtn = el('confirmDeleteCancelBtn');\n    let onConfirmDelete = null;\n\n    function showDeleteConfirm(onConfirm) {\n      onConfirmDelete = onConfirm;\n      confirmDeleteOverlay.style.display = 'flex';\n      confirmDeleteDeleteBtn.focus();\n    }\n\n    function hideDeleteConfirm() {\n      confirmDeleteOverlay.style.display = 'none';\n      onConfirmDelete = null;\n    }\n\n    confirmDeleteDeleteBtn.addEventListener('click', () => {\n      if (typeof onConfirmDelete === 'function') {\n        onConfirmDelete();\n      }\n      hideDeleteConfirm();\n    });\n\n    confirmDeleteCancelBtn.addEventListener('click', hideDeleteConfirm);\n\n    // Close confirmation on clicking outside dialog content\n    confirmDeleteOverlay.addEventListener('click', (e) => {\n      if(e.target === confirmDeleteOverlay) {\n        hideDeleteConfirm();\n      }\n    });\n\n    // Close add popup by clicking outside popup area\n    addPopupOverlay.addEventListener('click', (e) => {\n      if(e.target === addPopupOverlay) {\n        addPopupOverlay.style.display = 'none';\n      }\n    });\n\n    renderRecords(currentTab);\n  });\n</script>\n\n</body>\n</html>\n      `\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        -1300
      ],
      "id": "82582325-a2c2-4bea-b30b-5e5bdbd2c177",
      "name": "Code7"
    },
    {
      "parameters": {
        "jsCode": "const rawRecords = items.map(item => item.json); // each input item is one record\n// Mapping lowercase field keys to display names for tabs\nconst fieldMap = {\n  entity: \"Entity\",\n  location: \"Location\",\n  area: \"Area\",\n  survey_source: \"Survey Source\",\n};\nconst recordsPerPage = 15;\nconst webhookURL = \"https://xl.epicpc.com/webhook/4377c42c-64b0-4aee-9f49-82cce54896a7\";\nconst qrGeneratorURL = \"https://xl.epicpc.com/webhook/ece6d39b-de5d-4fb1-bea1-a681440b1184\";\n// Group records by lowercase key, keeping displayField for UI\nconst groupedRecords = {\n  entity: [],\n  location: [],\n  area: [],\n  survey_source: [],\n};\nfor (const r of rawRecords) {\n  const f = (r.Field || \"\").toLowerCase();\n  if (groupedRecords[f]) {\n    groupedRecords[f].push({\n      id: r.Id,\n      field: f,   // lowercase for posting\n      displayField: fieldMap[f], // display\n      value: r.Value,\n      createdAt: r.CreatedAt,\n      updatedAt: r.UpdatedAt,\n    });\n  }\n}\nconst fieldTypes = Object.keys(groupedRecords); // ['entity', 'location', ...]\n\nfunction escapeHtml(text) {\n  return String(text)\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nreturn [\n  {\n    json: {\n      html: `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>NPS System Standard Values</title>\n<style>\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 40px 20px 60px;\n    background-color: #f8fafc;\n    color: #1e293b;\n    display: flex;\n    justify-content: center;\n  }\n  #appContainer {\n    width: 100%;\n    max-width: 960px;\n    min-width: 320px;\n    background: #fff;\n    padding: 30px 40px;\n    border-radius: 12px;\n    box-shadow: 0 8px 30px rgba(30,64,175,0.12);\n    box-sizing: border-box;\n  }\n  h1 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    font-size: 2rem;\n    color: #0f172a;\n  }\n  .tabs {\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 2px solid #e2e8f0;\n  }\n  .tab {\n    padding: 12px 25px;\n    margin-right: 5px;\n    font-weight: 600;\n    color: #64748b;\n    cursor: pointer;\n    border: 1.5px solid transparent;\n    border-bottom: none;\n    border-radius: 8px 8px 0 0;\n    background-color: #f1f5f9;\n    transition: all 0.25s ease-in-out;\n    user-select: none;\n  }\n  .tab:hover {\n    color: #1e40af;\n  }\n  .tab.active {\n    background-color: #ffffff;\n    color: #1e40af;\n    border-color: #1e40af;\n    border-bottom: 2px solid #ffffff;\n    box-shadow: 0 2px 10px rgba(30, 64, 175, 0.15);\n  }\n  .tab.add-record-tab {\n    margin-left: auto;\n    background-color: #2563eb;\n    color: white;\n  }\n  .tab.add-record-tab:hover {\n    background-color: #1d4ed8;\n    color: white;\n  }\n  .tab.add-record-tab.active {\n    box-shadow: 0 2px 10px rgba(37, 99, 235, 0.5);\n  }\n  .content {\n    background: #fff;\n    border: 1.5px solid #e2e8f0;\n    border-radius: 0 8px 8px 8px;\n    padding: 20px;\n    box-shadow: 0 4px 18px rgba(0,0,0,0.05);\n    min-height: 320px;\n    margin-bottom: 30px;\n  }\n  .pagination {\n    margin-top: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  .page-btn {\n    margin-right: 10px;\n    padding: 8px 14px;\n    font-weight: 600;\n    color: #64748b;\n    background: #e2e8f0;\n    border-radius: 6px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  .page-btn:hover:not(:disabled) {\n    background-color: #cbd5e1;\n    color: #1e293b;\n  }\n  .page-btn:disabled,\n  .page-btn.disabled {\n    color: #a1a1aa;\n    background-color: #f1f5f9;\n    cursor: not-allowed;\n  }\n  .record-tile {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    margin-bottom: 12px;\n    border-radius: 10px;\n    background: #f8fafc;\n    border: 1px solid #e2e8f0;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.05);\n    transition: box-shadow 0.3s ease;\n  }\n  .record-tile:hover {\n    box-shadow: 0 4px 22px rgba(30, 64, 175, 0.12);\n  }\n  .record-value {\n    flex: 1;\n    font-weight: 600;\n    font-size: 1.05rem;\n    color: #334155;\n    word-break: break-word;\n  }\n  .record-value input[type=\"text\"] {\n    width: 100%;\n    padding: 6px 10px;\n    font-size: 1rem;\n    color: #334155;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 8px;\n    transition: border-color 0.3s ease;\n  }\n  .record-value input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 6px rgba(30, 64, 175, 0.25);\n  }\n  button {\n    font-weight: 600;\n    border: none;\n    padding: 8px 14px;\n    margin-left: 8px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.3s ease, color 0.3s ease;\n    box-shadow: 0 2px 7px rgba(30, 64, 175, 0.15);\n  }\n  button:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    box-shadow: none;\n  }\n  button.update-btn {\n    background-color: #2563eb;\n    color: white;\n  }\n  button.update-btn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  button.delete-btn {\n    background-color: #ef4444;\n    color: white;\n  }\n  button.delete-btn:hover:not(:disabled) {\n    background-color: #dc2626;\n  }\n  button.cancel-update-btn {\n    background-color: #64748b;\n    color: white;\n  }\n  button.cancel-update-btn:hover:not(:disabled) {\n    background-color: #475569;\n  }\n  button.add-btn, button.qr-btn {\n    margin-top: 0;\n    background-color: #2563eb;\n    color: white;\n    font-size: 1rem;\n    padding: 12px 30px;\n    display: inline-block;\n    box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\n    transition: background-color 0.25s ease;\n    border-radius: 10px;\n  }\n  button.add-btn:hover, button.qr-btn:hover {\n    background-color: #1d4ed8;\n  }\n  #buttonContainer {\n    margin-top: 10px;\n    display: flex;\n    gap: 15px;\n  }\n  /* Add Popup overlay (fallback) */\n  #addPopupOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15, 23, 42, 0.54);\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n  }\n  #addPopup {\n    background: white;\n    padding: 36px 40px 36px 40px;\n    border-radius: 16px;\n    box-shadow: 0 10px 35px rgba(30, 64, 175, 0.25);\n    min-width: 320px;\n    max-width: 400px;\n    box-sizing: border-box;\n  }\n  #addPopup h3 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    color: #0f172a;\n    font-size: 1.4rem;\n  }\n  #addPopup label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 600;\n    color: #475569;\n  }\n  #addPopup select, #addPopup input[type=\"text\"] {\n    width: 100%;\n    padding: 14px 14px;\n    font-size: 1rem;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 12px;\n    margin-bottom: 24px;\n    color: #334155;\n    box-sizing: border-box;\n    transition: border-color 0.3s ease;\n  }\n  #addPopup select:focus, #addPopup input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 8px rgba(30,64,175,0.35);\n  }\n  #addPopupButtons {\n    text-align: right;\n  }\n  #addPopupButtons button {\n    padding: 10px 24px;\n    border-radius: 12px;\n    font-size: 1rem;\n    box-shadow: 0 4px 10px rgba(30, 64, 175, 0.2);\n    margin-left: 10px;\n  }\n  #addSubmitBtn {\n    background-color: #2563eb;\n    color: white;\n  }\n  #addSubmitBtn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  #addCancelBtn {\n    background-color: #475569;\n    color: white;\n  }\n  #addCancelBtn:hover:not(:disabled) {\n    background-color: #334155;\n  }\n  /* Confirmation popup overlay */\n  #confirmDeleteOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15,23,42,0.7);\n    z-index: 10001;\n    justify-content: center;\n    align-items: center;\n  }\n  #confirmDelete {\n    background: white;\n    padding: 30px 40px;\n    border-radius: 16px;\n    max-width: 400px;\n    box-shadow: 0 10px 35px rgba(30,64,175,0.3);\n    text-align: center;\n    font-size: 1.1rem;\n    color: #0f172a;\n  }\n  #confirmDelete h2 {\n    margin-bottom: 24px;\n  }\n  #confirmDeleteButtons button {\n    padding: 10px 30px;\n    border-radius: 12px;\n    font-weight: 700;\n    font-size: 1rem;\n    margin: 0 10px;\n    box-shadow: 0 4px 10px rgba(30,64,175,0.2);\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  #confirmDeleteDeleteBtn {\n    background: #ef4444;\n    color: white;\n  }\n  #confirmDeleteDeleteBtn:hover {\n    background: #dc2626;\n  }\n  #confirmDeleteCancelBtn {\n    background: #64748b;\n    color: white;\n  }\n  #confirmDeleteCancelBtn:hover {\n    background: #475569;\n  }\n  /* Loader */\n  #loader {\n    display: none;\n    position: fixed;\n    top: 15px; right: 15px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 10px 18px;\n    border-radius: 14px;\n    font-weight: 700;\n    font-size: 1rem;\n    box-shadow: 0 4px 14px rgba(59,130,246,0.6);\n    z-index: 10002;\n  }\n</style>\n</head>\n<body>\n<div id=\"appContainer\">\n<h1>NPS System Standard Values</h1>\n<div class=\"tabs\" id=\"tabs\" role=\"tablist\" aria-label=\"Record categories\">\n  ${fieldTypes.map(f => `<div class=\"tab${f===\"entity\" ? \" active\" : \"\"}\" data-tab=\"${escapeHtml(f)}\" role=\"tab\" tabindex=\"${f===\"entity\" ? \"0\" : \"-1\"}\" aria-selected=\"${f===\"entity\" ? \"true\": \"false\"}\">${escapeHtml(fieldMap[f])}</div>`).join('')}\n  <!-- Add Record tab will be appended dynamically -->\n</div>\n<div id=\"contents\">\n  ${fieldTypes.map(f => `\n    <div class=\"content\" id=\"content-${escapeHtml(f)}\" role=\"tabpanel\" aria-labelledby=\"tab-${escapeHtml(f)}\" style=\"display:${f===\"entity\" ? \"block\" : \"none\"};\">\n      <div id=\"records-${escapeHtml(f)}\"></div>\n      <div class=\"pagination\" id=\"pagination-${escapeHtml(f)}\"></div>\n    </div>\n  `).join('')}\n</div>\n<div id=\"buttonContainer\">\n  <button id=\"addBtn\" class=\"add-btn\" type=\"button\">Add Record</button>\n  <button id=\"openQRBtn\" class=\"qr-btn\" type=\"button\" title=\"Open QR Generator in new tab\">Open QR Generator</button>\n</div>\n</div>\n\n<!-- Add Popup fallback -->\n<div id=\"addPopupOverlay\" aria-hidden=\"true\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addPopupTitle\" tabindex=\"-1\">\n  <div id=\"addPopup\">\n    <h3 id=\"addPopupTitle\">Add New Record</h3>\n    <label for=\"addField\">Field Type:</label>\n    <select id=\"addField\" aria-required=\"true\">\n      ${fieldTypes.map(f => `<option value=\"${escapeHtml(f)}\">${escapeHtml(fieldMap[f])}</option>`).join('')}\n    </select>\n    <label for=\"addValue\">Value:</label>\n    <input type=\"text\" id=\"addValue\" placeholder=\"Enter value\" aria-required=\"true\" />\n    <div id=\"addPopupButtons\">\n      <button id=\"addSubmitBtn\" type=\"button\">Add</button>\n      <button id=\"addCancelBtn\" type=\"button\">Cancel</button>\n    </div>\n  </div>\n</div>\n\n<!-- Confirmation Popup -->\n<div id=\"confirmDeleteOverlay\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"confirmDeleteTitle\" aria-describedby=\"confirmDeleteMsg\" tabindex=\"-1\">\n  <div id=\"confirmDelete\">\n    <h2 id=\"confirmDeleteTitle\">Are you sure?</h2>\n    <p id=\"confirmDeleteMsg\">This action will permanently delete the record.</p>\n    <div id=\"confirmDeleteButtons\">\n      <button id=\"confirmDeleteDeleteBtn\" type=\"button\">Delete</button>\n      <button id=\"confirmDeleteCancelBtn\" type=\"button\">Whoops, oh no</button>\n    </div>\n  </div>\n</div>\n<div id=\"loader\">Processing...</div>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', () => {\n  const recordsPerPage = ${recordsPerPage};\n  const webhookURL = \"${webhookURL}\";\n  const qrGeneratorURL = \"${qrGeneratorURL}\";\n  const fieldTypes = ${JSON.stringify(fieldTypes)};\n  const fieldMap = ${JSON.stringify(fieldMap)};\n  const groupedRecords = ${JSON.stringify(groupedRecords)};\n  let currentTab = \"entity\";\n  const currentPages = {};\n  fieldTypes.forEach(f => currentPages[f] = 0);\n  const addRecordTabKey = \"add_record\";\n\n  function el(id) { return document.getElementById(id); }\n  function createElement(tag, props = {}, ...children) {\n    const e = document.createElement(tag);\n    for(const k in props) {\n      if (k === 'className') e.className = props[k];\n      else if (k === 'innerHTML') e.innerHTML = props[k];\n      else if (k.startsWith('on') && typeof props[k] === 'function') {\n        e.addEventListener(k.substr(2).toLowerCase(), props[k]);\n      } else {\n        e.setAttribute(k, props[k]);\n      }\n    }\n    for(const c of children) {\n      if (typeof c === 'string') e.appendChild(document.createTextNode(c));\n      else if (c instanceof Node) e.appendChild(c);\n    }\n    return e;\n  }\n\n  function escapeHtml(text) {\n    return String(text)\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n\n  function setLoading(loading) {\n    const loader = el('loader');\n    const addBtn = el('addBtn');\n    const openQRBtn = el('openQRBtn');\n    if (loading) {\n      loader.style.display = 'block';\n      addBtn.disabled = true;\n      openQRBtn.disabled = true;\n      disableAllButtons(true);\n    } else {\n      loader.style.display = 'none';\n      addBtn.disabled = false;\n      openQRBtn.disabled = false;\n      disableAllButtons(false);\n    }\n  }\n\n  function disableAllButtons(disable) {\n    document.querySelectorAll('button').forEach(btn => {\n      if (!btn.disabled && btn.id !== 'addBtn' && btn.id !== 'openQRBtn') btn.disabled = disable;\n      else if (btn.disabled && !disable) btn.disabled = false;\n    });\n  }\n\n  function renderPagination(field) {\n    const container = el('pagination-' + field);\n    const totalRecs = groupedRecords[field].length;\n    const totalPages = Math.ceil(totalRecs / recordsPerPage);\n    const currentPage = currentPages[field];\n    container.innerHTML = '';\n    const prevBtn = createElement('button', {\n      className: 'page-btn' + (currentPage === 0 ? ' disabled' : ''),\n      disabled: currentPage === 0,\n      onclick: () => {\n        if(currentPages[field] > 0) {\n          currentPages[field]--;\n          renderRecords(field);\n        }\n      }\n    }, 'Prev');\n    container.appendChild(prevBtn);\n    const pageInfo = createElement('span', { style: 'margin:0 10px; font-weight: 600; color: #475569;' }, 'Page ' + (currentPage + 1) + ' / ' + (totalPages || 1));\n    container.appendChild(pageInfo);\n    const nextBtn = createElement('button', {\n      className: 'page-btn' + (currentPage >= totalPages - 1 ? ' disabled' : ''),\n      disabled: currentPage >= totalPages - 1,\n      onclick: () => {\n        if(currentPages[field] < totalPages - 1) {\n          currentPages[field]++;\n          renderRecords(field);\n        }\n      }\n    }, 'Next');\n    container.appendChild(nextBtn);\n  }\n\n  function renderRecords(field) {\n    const container = el('records-' + field);\n    container.innerHTML = '';\n    const page = currentPages[field];\n    const recs = groupedRecords[field];\n    const start = page * recordsPerPage;\n    const end = Math.min(start + recordsPerPage, recs.length);\n    for(let i = start; i < end; i++) {\n      const rec = recs[i];\n      const tile = createElement('div', { className: 'record-tile' });\n      const valContainer = createElement('div', { className: 'record-value' }, escapeHtml(rec.value));\n      tile.appendChild(valContainer);\n      const updateBtn = createElement('button', { type: 'button', className: 'update-btn' }, 'Update');\n      const deleteBtn = createElement('button', { type: 'button', className: 'delete-btn' }, 'Delete');\n      const cancelUpdateBtn = createElement('button', { type: 'button', className: 'cancel-update-btn', style: 'display:none;' }, 'Cancel');\n      let isEditing = false;\n      function exitEditMode(save) {\n        if (!isEditing) return;\n        isEditing = false;\n        cancelUpdateBtn.style.display = 'none';\n        deleteBtn.disabled = false;\n        if(save) updateBtn.textContent = 'Update';\n        else {\n          valContainer.textContent = rec.value;\n          updateBtn.textContent = 'Update';\n        }\n      }\n      updateBtn.onclick = () => {\n        if (!isEditing) {\n          const input = createElement('input', { type: 'text', value: rec.value });\n          valContainer.innerHTML = '';\n          valContainer.appendChild(input);\n          isEditing = true;\n          updateBtn.textContent = 'Submit';\n          cancelUpdateBtn.style.display = 'inline-block';\n          deleteBtn.disabled = true;\n          function cancelOnEsc(e) {\n            if(e.key === 'Escape') {\n              exitEditMode(false);\n              document.removeEventListener('keydown', cancelOnEsc);\n              document.removeEventListener('click', onDocClick, true);\n            }\n          }\n          function onDocClick(e) {\n            if (!valContainer.contains(e.target) && e.target !== updateBtn && e.target !== cancelUpdateBtn) {\n              exitEditMode(false);\n              document.removeEventListener('keydown', cancelOnEsc);\n              document.removeEventListener('click', onDocClick, true);\n            }\n          }\n          document.addEventListener('keydown', cancelOnEsc);\n          document.addEventListener('click', onDocClick, true);\n        } else {\n          const input = valContainer.querySelector('input');\n          if (!input) return;\n          const newValue = input.value.trim();\n          if (newValue === '') {\n            alert('Value cannot be empty');\n            input.focus();\n            return;\n          }\n          setLoading(true);\n          const formData = new URLSearchParams();\n          formData.append('id', rec.id);\n          formData.append('action', 'update');\n          formData.append('field', rec.field);\n          formData.append('value', newValue);\n          fetch(webhookURL, {\n            method: 'POST',\n            body: formData,\n          })\n          .then(response => {\n            if (!response.ok) throw new Error('HTTP ' + response.status);\n            window.location.reload();\n          })\n          .catch(err => {\n            setLoading(false);\n            alert('Update failed: ' + err.message);\n          });\n        }\n      };\n      cancelUpdateBtn.onclick = () => {\n        exitEditMode(false);\n      };\n      deleteBtn.onclick = () => {\n        showDeleteConfirm(async () => {\n          setLoading(true);\n          const formData = new URLSearchParams();\n          formData.append('id', rec.id);\n          formData.append('action', 'delete');\n          try {\n            const res = await fetch(webhookURL, {\n              method: 'POST',\n              body: formData,\n            });\n            if (!res.ok) throw new Error('HTTP ' + res.status);\n            window.location.reload();\n          } catch(e) {\n            setLoading(false);\n            alert('Delete failed: ' + e.message);\n          }\n        });\n      };\n      tile.appendChild(updateBtn);\n      tile.appendChild(cancelUpdateBtn);\n      tile.appendChild(deleteBtn);\n      container.appendChild(tile);\n    }\n    renderPagination(field);\n  }\n\n  (function setupTabs() {\n    const tabsContainer = el('tabs');\n\n    if (!tabsContainer.querySelector(\\`[data-tab=\"\\${addRecordTabKey}\"]\\`)) {\n      const addRecordTab = createElement('div', {\n        className: 'tab add-record-tab',\n        'data-tab': addRecordTabKey,\n        'role': 'tab',\n        'tabindex': '-1',\n        'aria-selected': 'false',\n        title: 'Add New Record',\n      }, 'Add Record');\n      tabsContainer.appendChild(addRecordTab);\n    }\n\n    if (!el('content-' + addRecordTabKey)) {\n      const contents = el('contents');\n      const addRecordContent = createElement('div', {\n        className: 'content',\n        id: 'content-' + addRecordTabKey,\n        role: 'tabpanel',\n        'aria-label': 'Add New Record',\n        'aria-hidden': 'true',\n        style: 'display:none; padding: 20px;'\n      });\n\n      addRecordContent.innerHTML = \\`\n        <h3 style=\"margin-top: 0; color: #0f172a;\">Add New Record</h3>\n        <label for=\"addFieldTab\">Field Type:</label>\n        <select id=\"addFieldTab\" aria-required=\"true\" style=\"width: 100%; padding: 14px 14px; font-size: 1rem; border-radius: 12px; border: 1.5px solid #cbd5e1; margin-bottom: 24px; color: #334155;\">\n          \\${fieldTypes.map(f => \\`<option value=\"\\${escapeHtml(f)}\">\\${escapeHtml(fieldMap[f])}</option>\\`).join('')}\n        </select>\n        <label for=\"addValueTab\">Value:</label>\n        <input type=\"text\" id=\"addValueTab\" placeholder=\"Enter value\" aria-required=\"true\" style=\"width: 100%; padding:14px; font-size: 1rem; border-radius: 12px; border: 1.5px solid #cbd5e1; margin-bottom:24px; color: #334155;\" />\n        <div style=\"text-align: right;\">\n          <button id=\"addSubmitTabBtn\" type=\"button\" style=\"background-color: #2563eb; color: white; padding: 12px 30px; border-radius: 10px; font-size: 1rem; cursor: pointer; box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\">Add</button>\n        </div>\n      \\`;\n\n      contents.appendChild(addRecordContent);\n    }\n\n    const tabs = tabsContainer.querySelectorAll('.tab');\n\n    function activateTab(newTabKey) {\n      if(newTabKey === currentTab) return;\n      const currentActiveTab = tabsContainer.querySelector('.tab.active');\n      if(currentActiveTab) {\n        currentActiveTab.classList.remove('active');\n        currentActiveTab.setAttribute('aria-selected', 'false');\n        currentActiveTab.setAttribute('tabindex', '-1');\n      }\n      const newActiveTab = tabsContainer.querySelector(\\`.tab[data-tab=\"\\${newTabKey}\"]\\`);\n      if(newActiveTab) {\n        newActiveTab.classList.add('active');\n        newActiveTab.setAttribute('aria-selected', 'true');\n        newActiveTab.setAttribute('tabindex', '0');\n        newActiveTab.focus();\n      }\n      if(el('content-' + currentTab)) {\n        el('content-' + currentTab).style.display = 'none';\n        el('content-' + currentTab).setAttribute('aria-hidden', 'true');\n      }\n      if(el('content-' + newTabKey)) {\n        el('content-' + newTabKey).style.display = 'block';\n        el('content-' + newTabKey).setAttribute('aria-hidden', 'false');\n        if(newTabKey !== addRecordTabKey) {\n          renderRecords(newTabKey);\n        } else {\n          setTimeout(() => {\n            const addValueTab = el('addValueTab');\n            if(addValueTab) addValueTab.focus();\n          }, 100);\n        }\n      }\n      currentTab = newTabKey;\n    }\n\n    tabs.forEach(tab => {\n      tab.addEventListener('click', () => {\n        activateTab(tab.dataset.tab);\n      });\n      tab.addEventListener('keydown', (ev) => {\n        if(ev.key === 'Enter' || ev.key === ' ') {\n          ev.preventDefault();\n          tab.click();\n        }\n      });\n    });\n  })();\n\n  const addBtn = el('addBtn');\n  const openQRBtn = el('openQRBtn');\n\n  const addPopupOverlay = el('addPopupOverlay');\n  const addSubmitBtn = el('addSubmitBtn');\n  const addCancelBtn = el('addCancelBtn');\n  const addFieldSelect = el('addField');\n  const addValueInput = el('addValue');\n\n  addBtn.addEventListener('click', () => {\n    const tabsContainer = el('tabs');\n    const addRecordTab = tabsContainer.querySelector(\\`[data-tab=\"\\${addRecordTabKey}\"]\\`);\n    if(addRecordTab) {\n      addRecordTab.click();\n    } else {\n      addFieldSelect.value = fieldTypes[0];\n      addValueInput.value = '';\n      addPopupOverlay.style.display = 'flex';\n      addValueInput.focus();\n    }\n  });\n\n  addCancelBtn.addEventListener('click', () => {\n    addPopupOverlay.style.display = 'none';\n  });\n\n  addPopupOverlay.addEventListener('click', (e) => {\n    if(e.target === addPopupOverlay) {\n      addPopupOverlay.style.display = 'none';\n    }\n  });\n\n  addSubmitBtn.addEventListener('click', async () => {\n    const selectedField = addFieldSelect.value;\n    const val = addValueInput.value.trim();\n    if(val === '') {\n      alert('Value is required');\n      addValueInput.focus();\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new URLSearchParams();\n      formData.append('action', 'add');\n      formData.append('field', selectedField);\n      formData.append('value', val);\n      const resp = await fetch(webhookURL, {\n        method: 'POST',\n        body: formData,\n      });\n      if(!resp.ok) throw new Error('HTTP ' + resp.status);\n      addPopupOverlay.style.display = 'none';\n      window.location.reload();\n    } catch(e) {\n      setLoading(false);\n      alert('Add failed: ' + e.message);\n    }\n  });\n\n  const addSubmitTabBtn = el('addSubmitTabBtn');\n  const addFieldTab = el('addFieldTab');\n  const addValueTab = el('addValueTab');\n\n  if(addSubmitTabBtn && addFieldTab && addValueTab) {\n    addSubmitTabBtn.addEventListener('click', async () => {\n      const selectedField = addFieldTab.value;\n      const val = addValueTab.value.trim();\n      if(val === '') {\n        alert('Value is required');\n        addValueTab.focus();\n        return;\n      }\n      setLoading(true);\n      try {\n        const formData = new URLSearchParams();\n        formData.append('action', 'add');\n        formData.append('field', selectedField);\n        formData.append('value', val);\n        const resp = await fetch(webhookURL, {\n          method: 'POST',\n          body: formData,\n        });\n        if(!resp.ok) throw new Error('HTTP ' + resp.status);\n        window.location.reload();\n      } catch(e) {\n        setLoading(false);\n        alert('Add failed: ' + e.message);\n      }\n    });\n  }\n\n  openQRBtn.addEventListener('click', () => {\n    window.open(qrGeneratorURL, '_blank');\n  });\n\n  const confirmDeleteOverlay = el('confirmDeleteOverlay');\n  const confirmDeleteDeleteBtn = el('confirmDeleteDeleteBtn');\n  const confirmDeleteCancelBtn = el('confirmDeleteCancelBtn');\n  let onConfirmDelete = null;\n\n  function showDeleteConfirm(onConfirm) {\n    onConfirmDelete = onConfirm;\n    confirmDeleteOverlay.style.display = 'flex';\n    confirmDeleteDeleteBtn.focus();\n  }\n  function hideDeleteConfirm() {\n    confirmDeleteOverlay.style.display = 'none';\n    onConfirmDelete = null;\n  }\n  confirmDeleteDeleteBtn.addEventListener('click', () => {\n    if (typeof onConfirmDelete === 'function') {\n      onConfirmDelete();\n    }\n    hideDeleteConfirm();\n  });\n  confirmDeleteCancelBtn.addEventListener('click', hideDeleteConfirm);\n  confirmDeleteOverlay.addEventListener('click', (e) => {\n    if(e.target === confirmDeleteOverlay) {\n      hideDeleteConfirm();\n    }\n  });\n\n  renderRecords(currentTab);\n});\n</script>\n\n</body>\n</html>\n      `\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        -1440
      ],
      "id": "0503044b-f676-4c28-9f76-699e00a5f89b",
      "name": "Code8"
    },
    {
      "parameters": {
        "height": 1220,
        "width": 1260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1860,
        100
      ],
      "typeVersion": 1,
      "id": "1b5fcb76-5b4e-41a9-abc8-e4c4856beae1",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "path": "8e0030a4-aaae-4ade-a75d-3ab11b269b08",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        2060,
        200
      ],
      "id": "f4580113-b3b7-47ad-8b34-fb49b5c0fe3b",
      "name": "Webhook5",
      "webhookId": "8e0030a4-aaae-4ade-a75d-3ab11b269b08"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "mo7mc8d3rjioxlk",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        2280,
        200
      ],
      "id": "da925930-c6fb-4b2d-a863-b3b7cf8bb050",
      "name": "Get many rows",
      "credentials": {
        "nocoDbApiToken": {
          "id": "tJrRYhH9PABi968X",
          "name": "NCDB http"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ===== Process input data =====\nlet inputArray = [];\n\nif(items.length > 0 && Array.isArray(items[0].json)) {\n  inputArray = items[0].json;\n} else if(items.length > 0) {\n  inputArray = items.map(i => i.json);\n} else {\n  inputArray = [];\n}\n\n// We pick Resource options from Resource property\n// Location and Area from Field/Value objects as before\nconst fieldOptions = {\n  resource: new Set(),\n  location: new Set(),\n  area: new Set(),\n};\n\nfor (const item of inputArray) {\n  if(item.Resource) {\n    fieldOptions.resource.add(String(item.Resource));\n  }\n  if(item.Field && item.Value) {\n    const key = item.Field.toLowerCase();\n    if(fieldOptions.hasOwnProperty(key)) {\n      fieldOptions[key].add(String(item.Value));\n    }\n  }\n}\n\nconst resourceOptions = Array.from(fieldOptions.resource).sort();\nconst locationOptions = Array.from(fieldOptions.location).sort();\nconst areaOptions = Array.from(fieldOptions.area).sort();\n\n// JSON string to expose input data to client scripts\nconst inputDataJson = JSON.stringify(inputArray);\n\nfunction escapeHtml(text) {\n  const map = {'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#039;'};\n  return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\n\nfunction createSearchableDropdown(fieldId,label,options) {\n  const listItems = options.map(o => `<li class=\"dropdown-item\" data-value=\"${escapeHtml(o)}\">${escapeHtml(o)}</li>`).join('');\n  const otherItem = `<li class=\"dropdown-item\" data-value=\"__other__\"><em>Other</em></li>`;\n  return `\n  <label for=\"${fieldId}-input\">${label}</label>\n  <div class=\"searchable-dropdown\" id=\"${fieldId}-container\">\n    <input type=\"text\" autocomplete=\"off\" id=\"${fieldId}-input\" name=\"${fieldId}\" \n      placeholder=\"Type or select ${label.toLowerCase()}\" aria-autocomplete=\"list\" aria-haspopup=\"listbox\" aria-expanded=\"false\" required />\n    <ul class=\"dropdown-list\" id=\"${fieldId}-list\" role=\"listbox\" tabindex=\"-1\">${listItems}${otherItem}</ul>\n    <div class=\"other-input-container\" id=\"${fieldId}-other-container\" style=\"display:none; margin-top:0.5rem;\">\n      <input type=\"text\" id=\"${fieldId}-other-input\" name=\"${fieldId}_other\" placeholder=\"Enter other ${label.toLowerCase()}\" required />\n    </div>\n  </div>\n  <style>\n    #${fieldId}-container { position: relative; }\n    #${fieldId}-list {\n      position: absolute; top: 100%; left: 0; right: 0;\n      background: white; border: 1px solid #ccc;\n      max-height: 150px; overflow-y: auto;\n      margin: 0; padding: 0; list-style: none;\n      z-index: 1000; display: none;\n    }\n    .dropdown-item {\n      padding: 0.4rem 0.75rem;\n      cursor: pointer;\n    }\n    .dropdown-item:hover, .dropdown-item.selected {\n      background-color: #2664d4;\n      color: white;\n    }\n  </style>\n  `;\n}\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>QR & PDF Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; margin-bottom: 1.5rem; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text] {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem; box-sizing: border-box;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  .result-area { margin-top: 2rem; text-align: center; display:none; }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n  .pdf-button {\n    margin-top: 1rem;\n  }\n</style>\n</head>\n<body>\n\n<script>window.inputData = ${inputDataJson};</script>\n\n<div class=\"container\">\n  <h1>QR & PDF Generator</h1>\n  <form id=\"npsForm\" autocomplete=\"off\">\n\n    ${createSearchableDropdown('resource', 'Resource', resourceOptions)}\n    ${createSearchableDropdown('location', 'Location', locationOptions)}\n    ${createSearchableDropdown('area', 'Area', areaOptions)}\n\n    <button type=\"submit\">Generate QR & PDF</button>\n  </form>\n\n  <div class=\"result-area\" id=\"resultArea\">\n    <div id=\"qrcode\"></div>\n    <button id=\"downloadPdf\" class=\"pdf-button\">Download PDF</button>\n    <button id=\"printPdf\" class=\"pdf-button\">Print PDF</button>\n  </div>\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n<script>\n  // Dropdown logic copied/adapted from your original\n  function setupSearchableDropdown(fieldId) {\n    const container = document.getElementById(fieldId + '-container');\n    const input = document.getElementById(fieldId + '-input');\n    const list = document.getElementById(fieldId + '-list');\n    const otherInputContainer = document.getElementById(fieldId + '-other-container');\n    const otherInput = document.getElementById(fieldId + '-other-input');\n    let currentFocusIndex = -1;\n\n    function filterList(filterText) {\n      const items = list.querySelectorAll('.dropdown-item');\n      let anyVisible = false;\n      items.forEach(item => {\n        if (item.textContent.toLowerCase().includes(filterText)) {\n          item.style.display = '';\n          anyVisible = true;\n        } else {\n          item.style.display = 'none';\n        }\n      });\n      if (!anyVisible) list.style.display = 'none';\n    }\n\n    function setActive(items) {\n      items.forEach(i => i.classList.remove('selected'));\n      if (currentFocusIndex > -1) {\n        items[currentFocusIndex].classList.add('selected');\n        items[currentFocusIndex].scrollIntoView({ block: \"nearest\" });\n      }\n    }\n\n    input.addEventListener('focus', () => {\n      filterList('');\n      list.style.display = 'block';\n      input.setAttribute('aria-expanded', 'true');\n    });\n\n    document.addEventListener('click', (e) => {\n      if (!container.contains(e.target)) {\n        list.style.display = 'none';\n        input.setAttribute('aria-expanded', 'false');\n        currentFocusIndex = -1;\n      }\n    });\n\n    input.addEventListener('input', () => {\n      const val = input.value.toLowerCase();\n      filterList(val);\n      list.style.display = 'block';\n      input.setAttribute('aria-expanded', 'true');\n      otherInputContainer.style.display = 'none';\n      otherInput.required = false;\n    });\n\n    input.addEventListener('keydown', (e) => {\n      const items = Array.from(list.querySelectorAll('.dropdown-item')).filter(i => i.style.display !== 'none');\n      if (items.length === 0) return;\n\n      if (e.key === 'ArrowDown') {\n        currentFocusIndex = (currentFocusIndex + 1) % items.length;\n        setActive(items);\n        e.preventDefault();\n      } else if (e.key === 'ArrowUp') {\n        currentFocusIndex = (currentFocusIndex - 1 + items.length) % items.length;\n        setActive(items);\n        e.preventDefault();\n      } else if (e.key === 'Enter') {\n        if (currentFocusIndex > -1) {\n          e.preventDefault();\n          items[currentFocusIndex].click();\n        }\n      } else {\n        currentFocusIndex = -1;\n      }\n    });\n\n    list.addEventListener('click', e => {\n      if (e.target && e.target.classList.contains('dropdown-item')) {\n        const val = e.target.dataset.value;\n        if (val === '__other__') {\n          input.value = 'Other';\n          otherInputContainer.style.display = 'block';\n          otherInput.required = true;\n          otherInput.focus();\n        } else {\n          input.value = e.target.textContent;\n          otherInputContainer.style.display = 'none';\n          otherInput.required = false;\n          otherInput.value = '';\n        }\n        list.style.display = 'none';\n        input.setAttribute('aria-expanded', 'false');\n        currentFocusIndex = -1;\n      }\n    });\n\n    input.setAttribute('aria-controls', fieldId + '-list');\n    list.setAttribute('role', 'listbox');\n  }\n\n  ['resource', 'location', 'area'].forEach(setupSearchableDropdown);\n\n  function getFieldValue(id) {\n    const input = document.getElementById(id + '-input');\n    const otherInputContainer = document.getElementById(id + '-other-container');\n    const otherInput = document.getElementById(id + '-other-input');\n    if(otherInputContainer.style.display !== 'none' && otherInput.value.trim() !== '') {\n      return otherInput.value.trim();\n    }\n    return input.value.trim() === 'Other' ? '' : input.value.trim();\n  }\n\n  let generatedPDF;\n  let currentQRUrl;\n\n  document.getElementById('npsForm').addEventListener('submit', async e => {\n    e.preventDefault();\n\n    const resourceTitle = getFieldValue('resource');\n    const location = getFieldValue('location');\n    const area = getFieldValue('area');\n\n    if(!resourceTitle) {\n      alert('Please select or enter a Resource.');\n      return;\n    }\n    if(!location) {\n      alert('Please select or enter a Location.');\n      return;\n    }\n    if(!area) {\n      alert('Please select or enter an Area.');\n      return;\n    }\n\n    // Find Resource object with ResourceURL\n    const resObj = window.inputData.find(r => r.Resource === resourceTitle);\n    if(!resObj || !resObj.ResourceURL) {\n      alert('Selected Resource has no ResourceURL.');\n      return;\n    }\n\n    // Compose qr code url: ResourceURL?location=...&room=...\n    const url = new URL(resObj.ResourceURL);\n    url.searchParams.set('location', location);\n    url.searchParams.set('room', area);\n    currentQRUrl = url.toString();\n\n    // Generate QR code on canvas\n    const qrContainer = document.getElementById('qrcode');\n    qrContainer.innerHTML = '';\n    try {\n      await QRCode.toCanvas(currentQRUrl, {width: 300, margin: 1}, (err, canvas) => {\n        if(err){\n          alert('Failed generating QR code: ' + err);\n          return;\n        }\n        qrContainer.appendChild(canvas);\n      });\n    } catch(err) {\n      alert('Failed generating QR code: ' + err);\n      return;\n    }\n\n    document.getElementById('resultArea').style.display = 'block';\n\n    // Generate PDF with large QR and labels\n    const { jsPDF } = window.jspdf;\n    const doc = new jsPDF({unit: 'pt', format: 'a4'});\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Title (Resource)\n    doc.setFontSize(28);\n    doc.setTextColor('#173457');\n    doc.text(resourceTitle, pageWidth/2, 60, {align: 'center'});\n\n    // Subtitle (Location | Area)\n    const subtitle = [location, area].filter(Boolean).join(' | ');\n    doc.setFontSize(18);\n    doc.setTextColor('#5991c4');\n    doc.text(subtitle, pageWidth/2, 90, {align: 'center'});\n\n    // Add large QR code centered, size ~250x250\n    const canvas = qrContainer.querySelector('canvas');\n    const imgData = canvas.toDataURL('image/png');\n    const qrSize = 250;\n    doc.addImage(imgData, 'PNG', (pageWidth - qrSize)/2, 120, qrSize, qrSize);\n\n    // Optional footer text\n    doc.setFontSize(14);\n    doc.setTextColor('#666666');\n    doc.text('Please scan this QR code.', pageWidth/2, 390, {align: 'center'});\n\n    generatedPDF = doc;\n  });\n\n  // Download PDF\n  document.getElementById('downloadPdf').addEventListener('click', () => {\n    if(generatedPDF) {\n      generatedPDF.save('nps-survey.pdf');\n    } else {\n      alert('Please generate the PDF first by submitting the form.');\n    }\n  });\n\n  // Print PDF\n  document.getElementById('printPdf').addEventListener('click', () => {\n    if(generatedPDF) {\n      generatedPDF.autoPrint();\n      generatedPDF.output('dataurlnewwindow');\n    } else {\n      alert('Please generate the PDF first by submitting the form.');\n    }\n  });\n</script>\n</body>\n</html>`;\n\n// Return the HTML in n8n output\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        760
      ],
      "id": "7969ed4d-c3f4-473d-a4ab-99a34cf1bc38",
      "name": "Code9"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2720,
        200
      ],
      "id": "b770cc61-9e17-411e-839b-71df0750b711",
      "name": "Respond to Webhook7"
    },
    {
      "parameters": {
        "content": "# nps VIEWER",
        "width": 940,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -280,
        -20
      ],
      "typeVersion": 1,
      "id": "6603ff62-49ec-4ae6-ae5a-57bf4947fb39",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Add to database",
        "width": 780
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        680,
        -20
      ],
      "typeVersion": 1,
      "id": "563fea5c-ae77-45c9-8cc5-9381463fd4af",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# NPS Creator",
        "width": 1380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -280,
        360
      ],
      "typeVersion": 1,
      "id": "1b65eeb6-9727-4a57-b94d-dab3de0751ef",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "path": "2db0e625-8dd8-46d2-93c9-6f5f1e4448e5",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        420,
        920
      ],
      "id": "fb68fd25-914e-46c5-84f2-1ea972eb6af7",
      "name": "Webhook6",
      "webhookId": "2db0e625-8dd8-46d2-93c9-6f5f1e4448e5"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "maz6gfzo0vu40pw",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        580,
        920
      ],
      "id": "d3cc3ba8-fdb2-42c3-b7ed-7b2c9e1b0101",
      "name": "NocoDB5",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{  $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1080,
        920
      ],
      "id": "b060688a-c55b-4560-859d-face88c64d7e",
      "name": "Respond to Webhook8"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1860,
        100
      ],
      "typeVersion": 1,
      "id": "4e906714-7eee-456e-b1d4-8aa00f8f0a8b",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "width": 1400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -120,
        900
      ],
      "typeVersion": 1,
      "id": "1d3c7a08-abe4-4b9c-8886-8c43abab56e7",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "m41g7th6tbbrqpq",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        580,
        760
      ],
      "id": "746378a8-e59d-4964-8be8-fe0bf0a1f6a4",
      "name": "Get many rows1",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        720,
        920
      ],
      "id": "f521f203-41b5-4324-b7fc-172dec82420e",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const resources = items.map(item => item.json);\n\n// Group and sort resources by Category (alphabetically)\nconst categories = {};\nresources.forEach(r => {\n  const cat = r.Category || 'Uncategorized';\n  if (!categories[cat]) categories[cat] = [];\n  categories[cat].push(r);\n});\nconst sortedCategoryKeys = Object.keys(categories).sort((a,b) => a.localeCompare(b));\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Resource Links with Favorites (localStorage)</title>\n  <style>\n    /* Reset */\n    *, *::before, *::after {\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      background: linear-gradient(135deg, #667eea, #764ba2);\n      color: #fff;\n      margin: 0;\n      padding: 2rem 1.5rem 6rem;\n      display: flex;\n      flex-direction: column;\n      min-height: 100vh;\n      align-items: center;\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    h1 {\n      font-size: 3rem;\n      margin-bottom: 1rem;\n      text-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      user-select: none;\n      max-width: 1400px;\n      width: 100%;\n      padding: 0 1rem;\n      box-sizing: border-box;\n    }\n\n    #searchInput {\n      max-width: 1400px;\n      width: 100%;\n      padding: 14px 24px;\n      border-radius: 50px;\n      border: none;\n      font-size: 1.3rem;\n      font-weight: 600;\n      margin-bottom: 2rem;\n      outline: none;\n      box-shadow: 0 0 20px rgba(255 215 0 / 0.75);\n      transition: box-shadow 0.3s ease;\n      color: #4a148c;\n      background-color: #fff;\n      user-select: text;\n      box-sizing: border-box;\n    }\n\n    #searchInput:focus {\n      box-shadow: 0 0 45px #ffd700cc;\n    }\n\n    /* Favorites Section */\n    #favoritesContainer {\n      max-width: 1400px;\n      width: 100%;\n      margin-bottom: 2rem;\n      padding: 2rem 3rem;\n      background: rgba(255,255,255,0.15);\n      border-radius: 15px;\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n      border: 1px solid rgba(255,255,255,0.18);\n      box-sizing: border-box;\n      display: block;\n    }\n    #favoritesContainer h2 {\n      font-size: 2.1rem;\n      margin-bottom: 1.5rem;\n      border-bottom: 3px solid #ffd700;\n      padding-bottom: 0.3rem;\n      user-select: none;\n    }\n    #favoritesList {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 1rem;\n    }\n    #favoritesList li {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 8px;\n      min-width: 280px;\n      max-width: 320px;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 15px;\n      padding: 1rem 1.5rem;\n      box-sizing: border-box;\n      box-shadow: 0 5px 15px rgba(255 215 0 / 0.3);\n      cursor: default;\n      position: relative;\n    }\n\n    /* Categories container */\n    #categoriesContainer {\n      max-width: 1400px;\n      width: 100%;\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n      gap: 2rem 2.5rem;\n      box-sizing: border-box;\n      padding: 0 1rem;\n    }\n\n    .category-section {\n      background: rgba(255,255,255,0.1);\n      border-radius: 15px;\n      padding: 2rem 3rem;\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n      border: 1px solid rgba(255,255,255,0.18);\n      transition: opacity 0.3s ease;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .category-title {\n      font-size: 2.1rem;\n      margin-bottom: 1.5rem;\n      border-bottom: 3px solid #ffd700;\n      padding-bottom: 0.3rem;\n      user-select: none;\n    }\n\n    ul {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n    }\n\n    li {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      position: relative;\n      gap: 8px;\n    }\n\n    a.resource-link {\n      cursor: pointer;\n      display: inline-block;\n      text-decoration: none;\n      color: #ffd700;\n      font-weight: 700;\n      font-size: 1.3rem;\n      border: 2px solid #ffd700;\n      padding: 12px 26px;\n      border-radius: 50px;\n      transition: all 0.3s ease;\n      box-shadow: 0 0 15px #ffd70066;\n      user-select: none;\n      white-space: nowrap;\n      line-height: 1.2;\n      width: 100%;\n      max-width: 320px;\n      text-align: center;\n      box-sizing: border-box;\n    }\n\n    a.resource-link:hover,\n    a.resource-link:focus {\n      background-color: #ffd700;\n      color: #4a148c;\n      box-shadow: 0 0 30px #ffd700cc;\n      transform: scale(1.1);\n      z-index: 1000;\n      position: relative;\n      outline: none;\n    }\n\n    a.resource-link:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    .thumbnail {\n      max-height: 90px;\n      max-width: 100%;\n      width: 100%;\n      object-fit: contain;\n      border-radius: 8px;\n      box-shadow: 0 0 10px #ffd70088;\n      user-select: none;\n    }\n\n    /* Favorite star button */\n    .favorite-btn {\n      position: absolute;\n      top: 6px;\n      right: 10px;\n      background: transparent;\n      border: none;\n      cursor: pointer;\n      user-select: none;\n      font-size: 1.7rem;\n      line-height: 1;\n      color: #ffd700aa;\n      transition: color 0.3s ease;\n      padding: 0;\n      outline-offset: 2px;\n    }\n    .favorite-btn:hover,\n    .favorite-btn:focus {\n      color: #ffd700;\n      outline: 3px solid #ffd700;\n      border-radius: 50%;\n    }\n    .favorite-btn.active {\n      color: #ffd700;\n      text-shadow:\n        0 0 8px #ffd700cc,\n        0 0 16px #ffd700cc;\n    }\n\n    #favoritesList li {\n      position: relative;\n    }\n    #favoritesList li .favorite-btn {\n      position: absolute;\n      top: 10px;\n      right: 14px;\n    }\n    li {\n      position: relative;\n    }\n\n    @media (max-width: 600px) {\n      #categoriesContainer {\n        grid-template-columns: 1fr;\n        padding: 0 1rem;\n      }\n\n      body {\n        padding: 2rem 1rem 7rem;\n      }\n\n      #searchInput {\n        font-size: 1.2rem;\n        padding: 12px 20px;\n      }\n\n      .category-title {\n        font-size: 1.8rem;\n      }\n\n      a.resource-link {\n        font-size: 1.15rem;\n        padding: 10px 18px;\n        max-width: 100%;\n      }\n\n      .thumbnail {\n        max-height: 70px;\n      }\n    }\n\n    .modal {\n      position: fixed;\n      background: #fff;\n      color: #3a0ca3;\n      border-radius: 20px;\n      padding: 3.5rem 4rem 3rem;\n      max-width: 520px;\n      width: 96vw;\n      box-shadow:\n        0 8px 40px rgba(118, 75, 162, 0.35),\n        0 12px 60px rgba(118, 75, 162, 0.25);\n      opacity: 0;\n      pointer-events: none;\n      user-select: text;\n      transition:\n        opacity 0.25s ease,\n        transform 0.25s ease;\n      z-index: 1100;\n      font-size: 1.4rem;\n      line-height: 1.65;\n      box-sizing: border-box;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      will-change: transform, opacity;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      overflow-y: auto;\n      max-height: 90vh;\n      outline: none;\n    }\n    .modal.active {\n      opacity: 1;\n      pointer-events: auto;\n      transform: translate(-50%, -50%);\n    }\n    .modal-header {\n      font-size: 2.4rem;\n      font-weight: 900;\n      margin-bottom: 1.6rem;\n      background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      user-select: text;\n      position: relative;\n      padding-right: 3rem;\n    }\n    .modal-close-btn {\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      font-size: 2.8rem;\n      color: #764ba2;\n      background: none;\n      border: none;\n      cursor: pointer;\n      user-select: none;\n      padding: 0 8px;\n      line-height: 1;\n      transition: color 0.3s ease;\n    }\n    .modal-close-btn:hover,\n    .modal-close-btn:focus {\n      color: #4a148c;\n      outline: 3px solid #4a148c;\n      outline-offset: 2px;\n    }\n\n    .modal-content p {\n      margin: 0.8rem 0;\n    }\n    .modal-content strong {\n      color: #764ba2;\n      user-select: text;\n    }\n\n    .modal-image-container {\n      margin-bottom: 1.5rem;\n      text-align: center;\n      max-height: 300px;\n      overflow: auto;\n    }\n    .modal-image-container img {\n      max-width: 100%;\n      max-height: 300px;\n      border-radius: 12px;\n      box-shadow: 0 0 30px #764ba2aa;\n      user-select: none;\n    }\n\n    .modal-redirect-btn {\n      margin-top: 2rem;\n      align-self: flex-start;\n      background-color: #ffd700;\n      border: none;\n      color: #4a148c;\n      font-weight: 800;\n      font-size: 1.25rem;\n      padding: 12px 28px;\n      border-radius: 50px;\n      cursor: pointer;\n      box-shadow: 0 0 20px #ffd700cc;\n      transition: background-color 0.3s ease, box-shadow 0.3s ease;\n      user-select: none;\n      text-decoration: none;\n      display: inline-block;\n    }\n    .modal-redirect-btn:hover,\n    .modal-redirect-btn:focus {\n      background-color: #e6c800;\n      box-shadow: 0 0 35px #ffd700ee;\n      outline: none;\n    }\n    .modal-redirect-btn:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    .modal-action-buttons {\n      margin-top: 2rem;\n      display: flex;\n      gap: 1rem;\n      flex-wrap: wrap;\n    }\n    .modal-action-btn {\n      background-color: #764ba2;\n      border: none;\n      color: #ffd700;\n      font-weight: 700;\n      font-size: 1.1rem;\n      padding: 10px 22px;\n      border-radius: 50px;\n      cursor: pointer;\n      box-shadow: 0 0 15px #764ba2cc;\n      transition: background-color 0.3s ease, box-shadow 0.3s ease;\n      user-select: none;\n      flex: 1 1 140px;\n      text-align: center;\n      position: relative;\n    }\n    .modal-action-btn:hover,\n    .modal-action-btn:focus {\n      background-color: #5c358f;\n      box-shadow: 0 0 30px #764ba2ee;\n      outline: none;\n    }\n    .modal-action-btn:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    /* Loader spinner for buttons */\n    .loader {\n      border: 2.5px solid #f3f3f3;\n      border-top: 2.5px solid #ffd700;\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n      animation: spin 1s linear infinite;\n      position: absolute;\n      right: 14px;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n    .modal-action-btn[disabled] {\n      opacity: 0.7;\n      cursor: not-allowed;\n      box-shadow: none !important;\n      pointer-events: none;\n    }\n\n    #popupOverlay {\n      position: fixed;\n      inset: 0;\n      background: rgba(0, 0, 0, 0.7);\n      display: none;\n      z-index: 1200;\n      align-items: center;\n      justify-content: center;\n      user-select: text;\n      padding: 1rem;\n    }\n    #popupOverlay.active {\n      display: flex;\n    }\n    #popup {\n      background: #fff;\n      color: #3a0ca3;\n      border-radius: 16px;\n      padding: 2rem 2.5rem;\n      max-width: 480px;\n      width: 100%;\n      box-shadow: 0 8px 40px rgba(118, 75, 162, 0.35);\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n      font-size: 1.2rem;\n      max-height: 90vh;\n      overflow-y: auto;\n      outline: none;\n    }\n    #popup h3 {\n      margin: 0;\n      user-select: text;\n    }\n    #popup textarea {\n      width: 100%;\n      font-size: 1rem;\n      font-family: inherit;\n      border: 2px solid #764ba2;\n      border-radius: 12px;\n      padding: 0.75rem 1rem;\n      resize: vertical;\n      min-height: 100px;\n      box-sizing: border-box;\n      color: #333;\n    }\n    #popup textarea:focus {\n      outline: none;\n      border-color: #667eea;\n      box-shadow: 0 0 10px #667eeaaa;\n    }\n    #popup label {\n      font-weight: 600;\n      margin-bottom: 0.5rem;\n      user-select: none;\n    }\n    #popup input[type=\"file\"] {\n      margin-top: 0.25rem;\n    }\n    #popup-buttons {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      flex-wrap: wrap;\n    }\n    #popup-buttons button {\n      background-color: #764ba2;\n      color: #ffd700;\n      border: none;\n      padding: 10px 22px;\n      border-radius: 50px;\n      font-weight: 700;\n      font-size: 1rem;\n      cursor: pointer;\n      box-shadow: 0 0 15px #764ba2cc;\n      transition: background-color 0.3s ease, box-shadow 0.3s ease;\n      user-select: none;\n    }\n    #popup-buttons button:hover,\n    #popup-buttons button:focus {\n      background-color: #5c358f;\n      box-shadow: 0 0 30px #764ba2ee;\n      outline: none;\n    }\n    #popup-buttons button:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    /* Loading overlay covering entire screen and blocking all interaction */\n    #loadingOverlay {\n      position: fixed;\n      inset: 0;\n      background: rgba(0, 0, 0, 0.5);\n      backdrop-filter: blur(3px);\n      z-index: 1300;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      user-select: none;\n      pointer-events: none;\n      transition: opacity 0.3s ease;\n    }\n    #loadingOverlay.active {\n      display: flex;\n      pointer-events: auto;\n    }\n    #loadingOverlay .spinner {\n      border: 6px solid #f3f3f3;\n      border-top: 6px solid #ffd700;\n      border-radius: 50%;\n      width: 64px;\n      height: 64px;\n      animation: spin 1s linear infinite;\n    }\n\n    @media (max-width: 600px) {\n      .modal {\n        max-height: 85vh;\n        overflow-y: auto;\n        padding: 2rem 2rem 2rem 2rem;\n      }\n      .modal-close-btn {\n        display: block;\n      }\n    }\n\n  </style>\n</head>\n<body>\n\n  <h1>Available Resources</h1>\n  <input \n    type=\"search\"\n    id=\"searchInput\"\n    aria-label=\"Search resources\"\n    placeholder=\"Search resources, categories or descriptions...\"\n    autocomplete=\"off\"\n    spellcheck=\"false\"\n  />\n\n  <!-- Favorites Section -->\n  <div id=\"favoritesContainer\" aria-live=\"polite\" aria-atomic=\"true\" aria-label=\"Favorite resources\">\n    <h2>Favorites</h2>\n    <ul id=\"favoritesList\">\n      <!-- Filled by JS -->\n    </ul>\n    <p id=\"noFavorites\" style=\"color: #ddd; text-align: center; margin-top: 1rem; display:none;\">No favorites yet. Add some!</p>\n  </div>\n\n  <div id=\"categoriesContainer\">\n    ${\n      sortedCategoryKeys.map(cat => {\n        const sectionItems = categories[cat].map(r => {\n          let thumbHtml = '';\n          if (Array.isArray(r.Image) && r.Image.length > 0) {\n            const signedPath = r.Image[0].signedPath;\n            if (signedPath) {\n              const imgUrl = 'https://ncdb.epicpc.com/' + signedPath;\n              const altText = (r.Image[0].title || r.Resource) + ' thumbnail';\n              thumbHtml = '<img src=\"' + imgUrl + '\" alt=\"' + altText.replace(/\"/g, '&quot;') + '\" class=\"thumbnail\" loading=\"lazy\" />';\n            }\n          }\n          const resourceEsc = (r.Resource || '').replace(/\"/g, '&quot;');\n          const descriptionEsc = ((r.Description) || '').replace(/\"/g, '&quot;');\n          const urlEsc = (r.url || '').replace(/\"/g, '&quot;');\n          const imageDataAttr = thumbHtml ? 'data-image=\"' + ((r.Image[0].signedPath || '').replace(/\"/g, '&quot;')) + '\"' : '';\n\n          return `\n          <li>\n            ${thumbHtml}\n            <button aria-label=\"Toggle favorite for ${resourceEsc}\" class=\"favorite-btn\" title=\"Toggle Favorite\" type=\"button\" data-url=\"${urlEsc}\">‚òÜ</button>\n            <a href=\"${urlEsc}\" \n               class=\"resource-link\"\n               tabindex=\"0\"\n               data-resource=\"${resourceEsc}\"\n               data-created=\"${r.CreatedAt}\"\n               data-description=\"${descriptionEsc}\"\n               data-url=\"${urlEsc}\"\n               ${imageDataAttr}\n            >\n               ${resourceEsc}\n            </a>\n          </li>\n          `;\n        }).join('');\n        return `\n          <section class=\"category-section\" aria-label=\"${cat} resources\" data-category=\"${cat.toLowerCase()}\">\n            <h2 class=\"category-title\">${cat}</h2>\n            <ul>\n              ${sectionItems}\n            </ul>\n          </section>\n        `;\n      }).join('')\n    }\n  </div>\n\n  <div class=\"modal\" id=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modalTitle\" aria-describedby=\"modalDescription\" tabindex=\"-1\">\n    <button class=\"modal-close-btn\" aria-label=\"Close modal\" id=\"modalCloseBtn\" title=\"Close modal\">&times;</button>\n    <div>\n      <div class=\"modal-header\" id=\"modalTitle\"></div>\n      <div class=\"modal-image-container\" id=\"modalImageContainer\" aria-live=\"polite\"></div>\n      <div class=\"modal-content\">\n        <p><strong>Created At:</strong> <span id=\"modalCreated\"></span></p>\n        <p><strong>Description:</strong> <span id=\"modalDescription\"></span></p>\n      </div>\n      <div class=\"modal-action-buttons\">\n        <button type=\"button\" class=\"modal-action-btn\" id=\"btnReportIssue\">Report an Issue</button>\n        <button type=\"button\" class=\"modal-action-btn\" id=\"btnFeatureRequest\">Feature Request</button>\n      </div>\n    </div>\n    <a href=\"#\" target=\"_blank\" rel=\"noopener\" class=\"modal-redirect-btn\" id=\"modalRedirectBtn\">Go to Resource</a>\n  </div>\n\n  <div id=\"popupOverlay\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"popupTitle\" aria-describedby=\"popupDesc\">\n    <div id=\"popup\" tabindex=\"-1\" role=\"document\">\n      <h3 id=\"popupTitle\"></h3>\n      <p id=\"popupDesc\">Please enter a message to submit with your request.</p>\n      <label for=\"popupMessage\">Message:</label>\n      <textarea id=\"popupMessage\" placeholder=\"Type your message here...\" aria-required=\"true\"></textarea>\n      <label for=\"popupFile\">Attach file (optional, CSV or image only):</label>\n      <input type=\"file\" id=\"popupFile\" accept=\".csv,image/*\" />\n      <div id=\"popup-buttons\">\n        <button type=\"button\" id=\"popupCancelBtn\">Cancel</button>\n        <button type=\"button\" id=\"popupSubmitBtn\">Submit</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Loading overlay -->\n  <div id=\"loadingOverlay\" aria-live=\"assertive\" aria-busy=\"true\" aria-label=\"Loading\">\n    <div class=\"spinner\" role=\"status\" aria-hidden=\"true\"></div>\n  </div>\n\n<script>\n  (function(){\n    const modal = document.getElementById('modal');\n    const modalTitle = document.getElementById('modalTitle');\n    const modalCreated = document.getElementById('modalCreated');\n    const modalDescription = document.getElementById('modalDescription');\n    const modalRedirectBtn = document.getElementById('modalRedirectBtn');\n    const modalImageContainer = document.getElementById('modalImageContainer');\n    const btnReportIssue = document.getElementById('btnReportIssue');\n    const btnFeatureRequest = document.getElementById('btnFeatureRequest');\n    const searchInput = document.getElementById('searchInput');\n    const popupOverlay = document.getElementById('popupOverlay');\n    const popup = document.getElementById('popup');\n    const popupTitle = document.getElementById('popupTitle');\n    const popupMessage = document.getElementById('popupMessage');\n    const popupFile = document.getElementById('popupFile');\n    const popupCancelBtn = document.getElementById('popupCancelBtn');\n    const popupSubmitBtn = document.getElementById('popupSubmitBtn');\n    const modalCloseBtn = document.getElementById('modalCloseBtn');\n    const loadingOverlay = document.getElementById('loadingOverlay');\n\n    const favoritesContainer = document.getElementById('favoritesContainer');\n    const favoritesListEl = document.getElementById('favoritesList');\n    const noFavoritesEl = document.getElementById('noFavorites');\n\n    const WEBHOOK_URL = 'https://xl.epicpc.com/webhook/3740ac2c-2310-449f-8baa-cb8086975b42';\n\n    let currentLink = null;\n    let currentRequestType = '';\n    let currentResource = '';\n    let currentURL = '';\n    let lastTapTime = 0;\n\n    // Map resources keyed by url lowercase\n    const resourceMap = {};\n    Array.from(document.querySelectorAll('a.resource-link')).forEach(a => {\n      const url = a.getAttribute('data-url') || '';\n      if(url) resourceMap[url.toLowerCase()] = a;\n    });\n\n    // FAVORITES STORAGE USING localStorage\n    const FAVORITES_KEY = 'favoritesList';\n\n    function loadFavorites() {\n      try {\n        const favsStr = localStorage.getItem(FAVORITES_KEY);\n        const favs = favsStr ? JSON.parse(favsStr) : [];\n        if(Array.isArray(favs)) return favs;\n      } catch {}\n      return [];\n    }\n    function saveFavorites(favs) {\n      localStorage.setItem(FAVORITES_KEY, JSON.stringify(favs));\n    }\n    let favorites = loadFavorites();\n\n    // Create a favorite list item element\n    function createFavoriteItem(url) {\n      const link = resourceMap[url.toLowerCase()];\n      if(!link) return null;\n\n      const li = document.createElement('li');\n\n      if(link.previousElementSibling && link.previousElementSibling.tagName === 'IMG') {\n        const img = link.previousElementSibling.cloneNode(true);\n        li.appendChild(img);\n      }\n\n      const favBtn = document.createElement('button');\n      favBtn.setAttribute('aria-label', \\`Remove favorite for \\${link.getAttribute('data-resource')}\\`);\n      favBtn.setAttribute('title', 'Remove Favorite');\n      favBtn.setAttribute('type', 'button');\n      favBtn.className = 'favorite-btn active';\n      favBtn.textContent = '‚òÖ';\n      favBtn.dataset.url = url;\n      li.appendChild(favBtn);\n\n      const a = document.createElement('a');\n      a.href = link.getAttribute('data-url');\n      a.className = 'resource-link';\n      a.tabIndex = 0;\n      a.setAttribute('data-resource', link.getAttribute('data-resource'));\n      a.setAttribute('data-created', link.getAttribute('data-created'));\n      a.setAttribute('data-description', link.getAttribute('data-description'));\n      a.setAttribute('data-url', link.getAttribute('data-url'));\n      const dataImage = link.getAttribute('data-image');\n      if(dataImage) a.setAttribute('data-image', dataImage);\n      a.textContent = link.getAttribute('data-resource');\n      li.appendChild(a);\n\n      return li;\n    }\n\n    function renderFavorites() {\n      favoritesListEl.innerHTML = '';\n      if(favorites.length === 0) {\n        noFavoritesEl.style.display = 'block';\n        favoritesContainer.style.display = 'block';\n      } else {\n        noFavoritesEl.style.display = 'none';\n        favorites.forEach(url => {\n          const item = createFavoriteItem(url);\n          if(item) favoritesListEl.appendChild(item);\n        });\n        favoritesContainer.style.display = 'block';\n      }\n      attachFavoriteBtnHandlers();\n      attachResourceLinkHandlers();\n    }\n\n    function toggleFavorite(url) {\n      url = url.toLowerCase();\n      const index = favorites.indexOf(url);\n      const alreadyFav = index !== -1;\n      if(alreadyFav) {\n        favorites.splice(index, 1);\n      } else {\n        favorites.push(url);\n      }\n      saveFavorites(favorites);\n      updateAllFavoriteButtons();\n      renderFavorites();\n      sendFavoriteWebhook(url, alreadyFav ? 'Removed Favorite' : 'Added Favorite');\n    }\n\n    function updateAllFavoriteButtons() {\n      document.querySelectorAll('.favorite-btn').forEach(btn => {\n        const u = btn.dataset.url && btn.dataset.url.toLowerCase();\n        if(!u) return;\n        if(favorites.includes(u)) {\n          btn.classList.add('active');\n          btn.textContent = '‚òÖ';\n          btn.setAttribute('aria-pressed','true');\n          btn.setAttribute('title', 'Remove Favorite');\n        } else {\n          btn.classList.remove('active');\n          btn.textContent = '‚òÜ';\n          btn.setAttribute('aria-pressed','false');\n          btn.setAttribute('title', 'Add Favorite');\n        }\n      });\n    }\n\n    function attachFavoriteBtnHandlers() {\n      document.querySelectorAll('.favorite-btn').forEach(btn => {\n        btn.removeEventListener('click', onFavoriteBtnClick);\n        btn.addEventListener('click', onFavoriteBtnClick);\n      });\n    }\n    function onFavoriteBtnClick(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const url = evt.currentTarget.dataset.url;\n      if(!url) return;\n      toggleFavorite(url);\n    }\n\n    function sendFavoriteWebhook(url, action) {\n      try {\n        const resourceLink = resourceMap[url.toLowerCase()];\n        if(!resourceLink) return;\n\n        const resourceName = resourceLink.getAttribute('data-resource') || url;\n        const payloadJson = {\n          type: 'Favorite Change',\n          action,\n          resource: resourceName,\n          url: url,\n          timestamp: new Date().toISOString(),\n        };\n\n        fetch(WEBHOOK_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payloadJson),\n        });\n      } catch {}\n    }\n\n    function attachResourceLinkHandlers() {\n      document.querySelectorAll('a.resource-link').forEach(link => {\n        link.removeEventListener('click', onClickLink);\n      });\n\n      document.querySelectorAll('a.resource-link').forEach(link => {\n        link.addEventListener('click', onClickLink);\n      });\n    }\n\n    function showModal(resource, created, description, url, button, imageSignedPath) {\n      modalTitle.textContent = resource;\n      modalCreated.textContent = created;\n      modalDescription.textContent = description || 'No description available.';\n      modalRedirectBtn.href = url;\n      currentResource = resource;\n      currentURL = url;\n      if (imageSignedPath) {\n        const imgUrl = 'https://ncdb.epicpc.com/' + imageSignedPath;\n        const parser = new DOMParser();\n        const decodedUrl = parser.parseFromString(imgUrl, 'text/html').body.textContent || imgUrl;\n        modalImageContainer.innerHTML = '<img src=\"' + decodedUrl + '\" alt=\"' + resource + ' image\" />';\n      } else {\n        modalImageContainer.innerHTML = '';\n      }\n      modal.classList.add('active');\n      currentLink = button;\n      modal.focus();\n    }\n\n    function hideModal() {\n      modal.classList.remove('active');\n      currentLink = null;\n      hidePopup();\n    }\n\n    function onDocumentClick(e) {\n      if (modal.classList.contains('active') && !modal.contains(e.target) && !popupOverlay.classList.contains('active')) {\n        hideModal();\n      }\n    }\n\n    function onClickLink(e) {\n      e.preventDefault();\n      const now = Date.now();\n      if ((now - lastTapTime) < 400 && currentLink === e.currentTarget) {\n        window.open(e.currentTarget.getAttribute('data-url'), '_blank', 'noopener');\n        hideModal();\n        lastTapTime = 0;\n        currentLink = null;\n        return;\n      }\n      lastTapTime = now;\n      const button = e.currentTarget;\n      const imageSignedPath = button.getAttribute('data-image');\n      showModal(\n        button.getAttribute('data-resource'),\n        button.getAttribute('data-created'),\n        button.getAttribute('data-description'),\n        button.getAttribute('data-url'),\n        button,\n        imageSignedPath\n      );\n    }\n\n    function isTouchDevice() {\n      return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\n    }\n\n    attachFavoriteBtnHandlers();\n    attachResourceLinkHandlers();\n\n    searchInput.addEventListener('input', () => {\n      const query = searchInput.value.trim().toLowerCase();\n\n      // Filter favorites list\n      let anyFavoriteVisible = false;\n      favoritesListEl.querySelectorAll('li').forEach(li => {\n        const a = li.querySelector('a.resource-link');\n        if(!a) return;\n        const resource = (a.getAttribute('data-resource') || '').toLowerCase();\n        const description = (a.getAttribute('data-description') || '').toLowerCase();\n        const url = (a.getAttribute('data-url') || '').toLowerCase();\n        const matches = resource.includes(query) || description.includes(query) || url.includes(query);\n        li.style.display = matches ? '' : 'none';\n        if(matches) anyFavoriteVisible = true;\n      });\n\n      if (query === '') {\n        favoritesContainer.style.display = 'block';\n      } else {\n        favoritesContainer.style.display = anyFavoriteVisible ? 'block' : 'none';\n      }\n\n      const sections = document.querySelectorAll('section.category-section');\n      sections.forEach(section => {\n        const categoryLabel = section.getAttribute('aria-label') || '';\n        const categoryLower = categoryLabel.toLowerCase();\n\n        let anyResourceVisible = false;\n        const resourceLinks = section.querySelectorAll('a.resource-link');\n\n        resourceLinks.forEach(link => {\n          const resource = (link.getAttribute('data-resource') || '').toLowerCase();\n          const description = (link.getAttribute('data-description') || '').toLowerCase();\n          const url = (link.getAttribute('data-url') || '').toLowerCase();\n\n          const matches =\n            resource.includes(query) ||\n            description.includes(query) ||\n            categoryLower.includes(query) ||\n            url.includes(query);\n\n          link.parentElement.style.display = matches ? '' : 'none';\n          if (matches) anyResourceVisible = true;\n        });\n\n        section.style.display =\n          anyResourceVisible || categoryLower.includes(query) ? '' : 'none';\n      });\n    });\n\n    renderFavorites();\n\n    modal.addEventListener('click', e => e.stopPropagation());\n    popupOverlay.addEventListener('click', onDocumentClick);\n    popup.addEventListener('click', e => e.stopPropagation());\n    popupMessage.addEventListener('click', e => e.stopPropagation());\n    popupFile.addEventListener('click', e => e.stopPropagation());\n\n    function setLoading(isLoading) {\n      [btnReportIssue, btnFeatureRequest, popupSubmitBtn, popupCancelBtn].forEach(btn => {\n        btn.disabled = isLoading;\n        let loader = btn.querySelector('.loader');\n        if(isLoading) {\n          if(!loader) {\n            loader = document.createElement('span');\n            loader.classList.add('loader');\n            btn.appendChild(loader);\n          }\n        } else {\n          if(loader) btn.removeChild(loader);\n        }\n      });\n\n      if(isLoading) {\n        loadingOverlay.classList.add('active');\n      } else {\n        loadingOverlay.classList.remove('active');\n      }\n    }\n\n    btnReportIssue.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      openPopup('Report an Issue');\n    });\n    btnFeatureRequest.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      openPopup('Feature Request');\n    });\n\n    function openPopup(type) {\n      currentRequestType = type;\n      popupTitle.textContent = type + ' for \"' + currentResource + '\"';\n      popupMessage.value = '';\n      popupFile.value = '';\n      popupOverlay.classList.add('active');\n      popup.focus();\n      setTimeout(() => popupMessage.focus(), 100);\n    }\n\n    function hidePopup() {\n      popupOverlay.classList.remove('active');\n      currentRequestType = '';\n      popupMessage.value = '';\n      popupFile.value = '';\n      setLoading(false);\n    }\n\n    popupCancelBtn.addEventListener('click', () => {\n      hidePopup();\n    });\n\n    popupSubmitBtn.addEventListener('click', () => {\n      submitRequest();\n    });\n\n    popupMessage.addEventListener('keydown', (e) => {\n      if(e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n        submitRequest();\n      }\n    });\n\n    function submitRequest() {\n      const message = popupMessage.value.trim();\n      if(!message) {\n        alert('Please enter a message before submitting.');\n        popupMessage.focus();\n        return;\n      }\n      const file = popupFile.files[0];\n      if(file) {\n        const allowedTypes = ['text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'image/png', 'image/jpeg', 'image/gif', 'image/webp'];\n        if(!allowedTypes.includes(file.type) && !file.name.toLowerCase().endsWith('.csv')) {\n          alert('Invalid file type. Please attach a CSV or image file.');\n          return;\n        }\n      }\n\n      setLoading(true);\n\n      const formData = new FormData();\n      const payloadJson = {\n        type: currentRequestType,\n        resource: currentResource,\n        url: currentURL,\n        message: message,\n        timestamp: new Date().toISOString(),\n      };\n      formData.append('payload_json', JSON.stringify(payloadJson));\n      if(file) {\n        formData.append('file', file);\n      }\n      fetch(WEBHOOK_URL, {\n        method: 'POST',\n        body: formData\n      }).then(res => {\n        setLoading(false);\n        if(res.ok) {\n          alert(currentRequestType + ' submitted successfully. Thank you!');\n          hidePopup();\n        } else {\n          alert('Failed to submit the request. Please try again later.');\n        }\n      }).catch(() => {\n        setLoading(false);\n        alert('Failed to submit the request. Please check your internet connection.');\n      });\n    }\n\n    modalCloseBtn.addEventListener('click', () => {\n      hideModal();\n    });\n\n    window.addEventListener('keydown', (e) => {\n      if(e.key === 'Escape') {\n        if(popupOverlay.classList.contains('active')) {\n          hidePopup();\n        } else if(modal.classList.contains('active')) {\n          hideModal();\n        }\n      }\n    });\n  })();\n</script>\n</body>\n</html>\n`;\n\nreturn [\n  { json: { html } },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2500,
        200
      ],
      "id": "96bab176-b225-4b0a-b5e9-779bbddaaadb",
      "name": "Code14"
    },
    {
      "parameters": {
        "jsCode": "// ===== Process input data =====\nlet inputArray = [];\n\nif(items.length > 0 && Array.isArray(items[0].json)) {\n  inputArray = items[0].json;\n} else if(items.length > 0) {\n  inputArray = items.map(i => i.json);\n} else {\n  inputArray = [];\n}\n\n// Collect unique options for fields: resource, location, area\nconst fieldOptions = {\n  resource: new Set(),\n  location: new Set(),\n  area: new Set(),\n};\n\n// Process input items:\n// - Items with direct Resource property => add Resource\n// - Items with Field and Value => add Value to relevant field sets (location/area)\nfor (const item of inputArray) {\n  // Add Resource if present\n  if (item.Resource) {\n    fieldOptions.resource.add(String(item.Resource));\n  }\n  \n  // When item has Field and Value, add accordingly (case-insensitive)\n  if (item.Field && item.Value) {\n    const fieldKey = item.Field.toLowerCase();\n    if (fieldKey === 'location') {\n      fieldOptions.location.add(String(item.Value));\n    } else if (fieldKey === 'area') {\n      fieldOptions.area.add(String(item.Value));\n    }\n    // Extend here if needed for other fields\n  }\n}\n\nconst resourceOptions = Array.from(fieldOptions.resource).sort();\nconst locationOptions = Array.from(fieldOptions.location).sort();\nconst areaOptions = Array.from(fieldOptions.area).sort();\n\n// Serialize inputArray for client-side use\nconst inputDataJson = JSON.stringify(inputArray);\n\nfunction escapeHtml(text) {\n  const map = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;',\n  };\n  return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\n}\n\nfunction createSearchableDropdown(fieldId, label, options) {\n  const listItems = options\n    .map(o => `<li class=\"dropdown-item\" data-value=\"${escapeHtml(o)}\">${escapeHtml(o)}</li>`)\n    .join('');\n  const otherItem = `<li class=\"dropdown-item\" data-value=\"__other__\"><em>Other</em></li>`;\n\n  return `\n  <label for=\"${fieldId}-input\">${label}</label>\n  <div class=\"searchable-dropdown\" id=\"${fieldId}-container\">\n    <input type=\"text\" autocomplete=\"off\" id=\"${fieldId}-input\" name=\"${fieldId}\" placeholder=\"Type or select ${label.toLowerCase()}\" aria-autocomplete=\"list\" aria-haspopup=\"listbox\" aria-expanded=\"false\" required />\n    <ul class=\"dropdown-list\" id=\"${fieldId}-list\" role=\"listbox\" tabindex=\"-1\">${listItems}${otherItem}</ul>\n    <div class=\"other-input-container\" id=\"${fieldId}-other-container\" style=\"display:none; margin-top:0.5rem;\">\n      <input type=\"text\" id=\"${fieldId}-other-input\" name=\"${fieldId}_other\" placeholder=\"Enter other ${label.toLowerCase()}\" required />\n    </div>\n  </div>\n\n  <style>\n    #${fieldId}-container { position: relative; }\n    #${fieldId}-list {\n      position: absolute; top: 100%; left: 0; right: 0;\n      background: white; border: 1px solid #ccc;\n      max-height: 150px; overflow-y: auto;\n      margin: 0; padding: 0; list-style: none;\n      z-index: 1000; display: none;\n    }\n    .dropdown-item {\n      padding: 0.4rem 0.75rem;\n      cursor: pointer;\n    }\n    .dropdown-item:hover, .dropdown-item.selected {\n      background-color: #2664d4;\n      color: white;\n    }\n  </style>\n  `;\n}\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<title>QR Code Generator</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<style>\n  body { font-family: Arial, sans-serif; background: #f6f8fa; margin: 0; padding: 1rem; }\n  .container { max-width: 450px; margin: 3rem auto; background: white; padding: 1.5rem 2rem; border-radius: 10px; box-shadow: 0 4px 28px rgba(0,0,0,0.08); }\n  h1 { text-align: center; color: #173457; margin-bottom: 1.5rem; }\n  label { display: block; margin-top: 1rem; font-weight: 600; color: #173457; }\n  input[type=text] {\n    width: 100%; padding: 0.5rem; margin-top: 0.25rem; border: 1px solid #ccc; border-radius: 6px;\n    font-size: 1rem; box-sizing: border-box;\n  }\n  button {\n    margin-top: 1.5rem; width: 100%; padding: 1rem; border:none; border-radius: 8px; background: #2664d4;\n    color: white; font-size: 1.2rem; cursor: pointer;\n  }\n  button:hover { background: #163e88; }\n  button#testBtn {\n    background: #4caf50;\n  }\n  button#testBtn:hover {\n    background: #357a38;\n  }\n  button#saveBtn {\n    background: #777;\n    margin-top: 0.5rem;\n  }\n  button#saveBtn:hover {\n    background: #555;\n  }\n  .result-area { margin-top: 2rem; text-align: center; display:none; }\n  #qrcode {\n    margin: auto;\n    width: 300px;\n    height: 300px;\n  }\n</style>\n</head>\n<body>\n\n<script>\n  // expose input data to client script\n  window.inputData = ${inputDataJson};\n</script>\n\n<div class=\"container\">\n  <h1>QR Code Generator</h1>\n  <form id=\"mainForm\" autocomplete=\"off\">\n\n    ${createSearchableDropdown('resource', 'Resource', resourceOptions)}\n    ${createSearchableDropdown('location', 'Location', locationOptions)}\n    ${createSearchableDropdown('area', 'Area', areaOptions)}\n\n    <button type=\"submit\">Generate QR Code</button>\n    <button id=\"testBtn\" type=\"button\" style=\"display:none;\">Test Link</button>\n    <button id=\"saveBtn\" type=\"button\" style=\"display:none;\">Save QR as Image</button>\n  </form>\n\n  <div class=\"result-area\" id=\"resultArea\">\n    <div id=\"qrcode\"></div>\n    <p id=\"generatedUrl\" style=\"margin-top:1rem; word-break: break-word;\"></p>\n  </div>\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js\"></script>\n<script>\n  // Setup dropdown logic for the searchable dropdowns\n  function setupSearchableDropdown(fieldId) {\n    const container = document.getElementById(fieldId + '-container');\n    const input = document.getElementById(fieldId + '-input');\n    const list = document.getElementById(fieldId + '-list');\n    const otherInputContainer = document.getElementById(fieldId + '-other-container');\n    const otherInput = document.getElementById(fieldId + '-other-input');\n\n    let currentFocusIndex = -1;\n\n    input.addEventListener('focus', () => {\n      filterList('');\n      list.style.display = 'block';\n      input.setAttribute('aria-expanded', 'true');\n    });\n\n    document.addEventListener('click', (e) => {\n      if (!container.contains(e.target)) {\n        list.style.display = 'none';\n        input.setAttribute('aria-expanded', 'false');\n        currentFocusIndex = -1;\n      }\n    });\n\n    input.addEventListener('input', () => {\n      const val = input.value.toLowerCase();\n      filterList(val);\n      list.style.display = 'block';\n      input.setAttribute('aria-expanded', 'true');\n      otherInputContainer.style.display = 'none';\n      otherInput.required = false;\n    });\n\n    input.addEventListener('keydown', (e) => {\n      const items = Array.from(list.querySelectorAll('.dropdown-item')).filter(i => i.style.display !== 'none');\n      if (items.length === 0) return;\n\n      if (e.key === 'ArrowDown') {\n        currentFocusIndex = (currentFocusIndex + 1) % items.length;\n        setActive(items);\n        e.preventDefault();\n      } else if (e.key === 'ArrowUp') {\n        currentFocusIndex = (currentFocusIndex - 1 + items.length) % items.length;\n        setActive(items);\n        e.preventDefault();\n      } else if (e.key === 'Enter') {\n        if (currentFocusIndex > -1) {\n          e.preventDefault();\n          items[currentFocusIndex].click();\n        }\n      } else {\n        currentFocusIndex = -1;\n      }\n    });\n\n    function setActive(items) {\n      items.forEach(i => i.classList.remove('selected'));\n      if (currentFocusIndex > -1) {\n        items[currentFocusIndex].classList.add('selected');\n        items[currentFocusIndex].scrollIntoView({ block: \"nearest\" });\n      }\n    }\n\n    function filterList(filterText) {\n      const items = list.querySelectorAll('.dropdown-item');\n      let anyVisible = false;\n      items.forEach(item => {\n        if (item.textContent.toLowerCase().includes(filterText)) {\n          item.style.display = '';\n          anyVisible = true;\n        } else {\n          item.style.display = 'none';\n        }\n      });\n      if (!anyVisible) list.style.display = 'none';\n    }\n\n    list.addEventListener('click', e => {\n      if (e.target && e.target.classList.contains('dropdown-item')) {\n        const val = e.target.dataset.value;\n        if (val === '__other__') {\n          input.value = 'Other';\n          otherInputContainer.style.display = 'block';\n          otherInput.required = true;\n          otherInput.focus();\n        } else {\n          input.value = e.target.textContent;\n          otherInputContainer.style.display = 'none';\n          otherInput.required = false;\n          otherInput.value = '';\n        }\n        list.style.display = 'none';\n        input.setAttribute('aria-expanded', 'false');\n        currentFocusIndex = -1;\n      }\n    });\n\n    input.setAttribute('aria-controls', fieldId + '-list');\n    list.setAttribute('role', 'listbox');\n  }\n\n  ['resource', 'location', 'area'].forEach(setupSearchableDropdown);\n\n  // Helper to get current field value (including \"Other\" input when used)\n  function getFieldValue(fieldId) {\n    const input = document.getElementById(fieldId + '-input');\n    const otherInputContainer = document.getElementById(fieldId + '-other-container');\n    const otherInput = document.getElementById(fieldId + '-other-input');\n\n    if (otherInputContainer.style.display !== 'none' && otherInput.value.trim() !== '') {\n      return otherInput.value.trim();\n    }\n    return input.value.trim() === 'Other' ? '' : input.value.trim();\n  }\n\n  let currentGeneratedUrl = '';\n\n  // Form submission event - generate QR code\n  document.getElementById('mainForm').addEventListener('submit', async e => {\n    e.preventDefault();\n\n    const resourceTitle = getFieldValue('resource');\n    const location = getFieldValue('location');\n    const area = getFieldValue('area');\n\n    if (!resourceTitle) {\n      alert('Please select or enter a Resource.');\n      return;\n    }\n    if (!location) {\n      alert('Please select or enter a Location.');\n      return;\n    }\n    if (!area) {\n      alert('Please select or enter an Area.');\n      return;\n    }\n\n    // Find the ResourceURL matching the selected Resource\n    const resourceObj = window.inputData.find(r => r.Resource === resourceTitle);\n\n    if (!resourceObj || !resourceObj.ResourceURL) {\n      alert('Selected Resource has no associated ResourceURL.');\n      return;\n    }\n\n    // Build URL: {ResourceURL}?location={Location}&room={Area}\n    const url = new URL(resourceObj.ResourceURL);\n    url.searchParams.set('location', location);\n    url.searchParams.set('room', area);\n    currentGeneratedUrl = url.toString();\n\n    // Generate QR code canvas and display\n    const qrContainer = document.getElementById('qrcode');\n    qrContainer.innerHTML = '';\n    try {\n      await QRCode.toCanvas(currentGeneratedUrl, { width: 300, margin: 1 }, (err, canvas) => {\n        if (err) {\n          alert('Failed generating QR code: ' + err);\n          return;\n        }\n        qrContainer.appendChild(canvas);\n      });\n    } catch (err) {\n      alert('Failed generating QR code: ' + err);\n      return;\n    }\n\n    // Show generated URL text and result area\n    document.getElementById('generatedUrl').textContent = currentGeneratedUrl;\n    document.getElementById('resultArea').style.display = 'block';\n\n    // Show Test Link & Save buttons\n    document.getElementById('testBtn').style.display = 'inline-block';\n    document.getElementById('saveBtn').style.display = 'inline-block';\n  });\n\n  // Test button opens link in new tab\n  document.getElementById('testBtn').addEventListener('click', () => {\n    if (currentGeneratedUrl) {\n      window.open(currentGeneratedUrl, '_blank');\n    } else {\n      alert('Please generate QR code first.');\n    }\n  });\n\n  // Save QR as Image button\n  document.getElementById('saveBtn').addEventListener('click', () => {\n    const qrContainer = document.getElementById('qrcode');\n    const canvas = qrContainer.querySelector('canvas');\n    if (!canvas) {\n      alert('Please generate QR code first.');\n      return;\n    }\n    const link = document.createElement('a');\n    link.download = 'qr-code.png';\n    link.href = canvas.toDataURL('image/png');\n    link.click();\n  });\n</script>\n</body>\n</html>`;\n\n// Return HTML in n8n output\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        920
      ],
      "id": "14a154c9-1d0f-4415-a5e3-40c5bfb18b24",
      "name": "Code13"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "mo7mc8d3rjioxlk",
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        2280,
        420
      ],
      "id": "bb1301c0-8f0b-402c-af77-12289e24d6ab",
      "name": "Get many rows2",
      "credentials": {
        "nocoDbApiToken": {
          "id": "tJrRYhH9PABi968X",
          "name": "NCDB http"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "3740ac2c-2310-449f-8baa-cb8086975b42",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1900,
        520
      ],
      "id": "12c7d3db-bee5-4574-8b51-8bc55345b139",
      "name": "Webhook7",
      "webhookId": "3740ac2c-2310-449f-8baa-cb8086975b42"
    },
    {
      "parameters": {
        "jsCode": "// Assuming input is an array of items\nconst input = items;\n\n// Parse body.payload_json for each item and return as separate fields\nreturn input.map(item => {\n  // Extract the payload_json string\n  const payloadStr = item.json.body?.payload_json;\n\n  // Parse the JSON string safely\n  let payload = {};\n  if (payloadStr) {\n    try {\n      payload = JSON.parse(payloadStr);\n    } catch (error) {\n      // Handle JSON parse error if needed\n      console.error('Failed to parse payload_json:', error);\n    }\n  }\n\n  // Return the parsed object as flat key-values\n  return { json: payload };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2260,
        600
      ],
      "id": "482ac59b-cf51-4cb4-b2ec-6c733d882ad2",
      "name": "Code10"
    },
    {
      "parameters": {
        "jsCode": "const resources = items.map(item => item.json);\n\n// Group and sort resources by Category (alphabetically)\nconst categories = {};\nresources.forEach(r => {\n  const cat = r.Category || 'Uncategorized';\n  if (!categories[cat]) categories[cat] = [];\n  categories[cat].push(r);\n});\nconst sortedCategoryKeys = Object.keys(categories).sort((a,b) => a.localeCompare(b));\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Resource Links with Favorites (localStorage)</title>\n  <style>\n    /* Reset */\n    *, *::before, *::after {\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      background: linear-gradient(135deg, #667eea, #764ba2);\n      color: #fff;\n      margin: 0;\n      padding: 2rem 1.5rem 6rem;\n      display: flex;\n      flex-direction: column;\n      min-height: 100vh;\n      align-items: center;\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    h1 {\n      font-size: 3rem;\n      margin-bottom: 1rem;\n      text-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      user-select: none;\n      max-width: 1400px;\n      width: 100%;\n      padding: 0 1rem;\n      box-sizing: border-box;\n    }\n\n    #searchInput {\n      max-width: 1400px;\n      width: 100%;\n      padding: 14px 24px;\n      border-radius: 50px;\n      border: none;\n      font-size: 1.3rem;\n      font-weight: 600;\n      margin-bottom: 2rem;\n      outline: none;\n      box-shadow: 0 0 20px rgba(255 215 0 / 0.75);\n      transition: box-shadow 0.3s ease;\n      color: #4a148c;\n      background-color: #fff;\n      user-select: text;\n      box-sizing: border-box;\n    }\n\n    #searchInput:focus {\n      box-shadow: 0 0 45px #ffd700cc;\n    }\n\n    /* Favorites Section */\n    #favoritesContainer {\n      max-width: 1400px;\n      width: 100%;\n      margin-bottom: 2rem;\n      padding: 2rem 3rem;\n      background: rgba(255,255,255,0.15);\n      border-radius: 15px;\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n      border: 1px solid rgba(255,255,255,0.18);\n      box-sizing: border-box;\n      display: block;\n    }\n    #favoritesContainer h2 {\n      font-size: 2.1rem;\n      margin-bottom: 1.5rem;\n      border-bottom: 3px solid #ffd700;\n      padding-bottom: 0.3rem;\n      user-select: none;\n    }\n    #favoritesList {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 1rem;\n    }\n    #favoritesList li {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 8px;\n      min-width: 280px;\n      max-width: 320px;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 15px;\n      padding: 1rem 1.5rem;\n      box-sizing: border-box;\n      box-shadow: 0 5px 15px rgba(255 215 0 / 0.3);\n      cursor: default;\n      position: relative;\n    }\n\n    /* Categories container */\n    #categoriesContainer {\n      max-width: 1400px;\n      width: 100%;\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n      gap: 2rem 2.5rem;\n      box-sizing: border-box;\n      padding: 0 1rem;\n    }\n\n    .category-section {\n      background: rgba(255,255,255,0.1);\n      border-radius: 15px;\n      padding: 2rem 3rem;\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);\n      backdrop-filter: blur(8px);\n      -webkit-backdrop-filter: blur(8px);\n      border: 1px solid rgba(255,255,255,0.18);\n      transition: opacity 0.3s ease;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .category-title {\n      font-size: 2.1rem;\n      margin-bottom: 1.5rem;\n      border-bottom: 3px solid #ffd700;\n      padding-bottom: 0.3rem;\n      user-select: none;\n    }\n\n    ul {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n    }\n\n    li {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      position: relative;\n      gap: 8px;\n    }\n\n    a.resource-link {\n      cursor: pointer;\n      display: inline-block;\n      text-decoration: none;\n      color: #ffd700;\n      font-weight: 700;\n      font-size: 1.3rem;\n      border: 2px solid #ffd700;\n      padding: 12px 26px;\n      border-radius: 50px;\n      transition: all 0.3s ease;\n      box-shadow: 0 0 15px #ffd70066;\n      user-select: none;\n      white-space: nowrap;\n      line-height: 1.2;\n      width: 100%;\n      max-width: 320px;\n      text-align: center;\n      box-sizing: border-box;\n    }\n\n    a.resource-link:hover,\n    a.resource-link:focus {\n      background-color: #ffd700;\n      color: #4a148c;\n      box-shadow: 0 0 30px #ffd700cc;\n      transform: scale(1.1);\n      z-index: 1000;\n      position: relative;\n      outline: none;\n    }\n\n    a.resource-link:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    .thumbnail {\n      max-height: 90px;\n      max-width: 100%;\n      width: 100%;\n      object-fit: contain;\n      border-radius: 8px;\n      box-shadow: 0 0 10px #ffd70088;\n      user-select: none;\n    }\n\n    /* Favorite star button */\n    .favorite-btn {\n      position: absolute;\n      top: 6px;\n      right: 10px;\n      background: transparent;\n      border: none;\n      cursor: pointer;\n      user-select: none;\n      font-size: 1.7rem;\n      line-height: 1;\n      color: #ffd700aa;\n      transition: color 0.3s ease;\n      padding: 0;\n      outline-offset: 2px;\n    }\n    .favorite-btn:hover,\n    .favorite-btn:focus {\n      color: #ffd700;\n      outline: 3px solid #ffd700;\n      border-radius: 50%;\n    }\n    .favorite-btn.active {\n      color: #ffd700;\n      text-shadow:\n        0 0 8px #ffd700cc,\n        0 0 16px #ffd700cc;\n    }\n\n    #favoritesList li {\n      position: relative;\n    }\n    #favoritesList li .favorite-btn {\n      position: absolute;\n      top: 10px;\n      right: 14px;\n    }\n    li {\n      position: relative;\n    }\n\n    @media (max-width: 600px) {\n      #categoriesContainer {\n        grid-template-columns: 1fr;\n        padding: 0 1rem;\n      }\n\n      body {\n        padding: 2rem 1rem 7rem;\n      }\n\n      #searchInput {\n        font-size: 1.2rem;\n        padding: 12px 20px;\n      }\n\n      .category-title {\n        font-size: 1.8rem;\n      }\n\n      a.resource-link {\n        font-size: 1.15rem;\n        padding: 10px 18px;\n        max-width: 100%;\n      }\n\n      .thumbnail {\n        max-height: 70px;\n      }\n    }\n\n    .modal {\n      position: fixed;\n      background: #fff;\n      color: #3a0ca3;\n      border-radius: 20px;\n      padding: 3.5rem 4rem 3rem;\n      max-width: 520px;\n      width: 96vw;\n      box-shadow:\n        0 8px 40px rgba(118, 75, 162, 0.35),\n        0 12px 60px rgba(118, 75, 162, 0.25);\n      opacity: 0;\n      pointer-events: none;\n      user-select: text;\n      transition:\n        opacity 0.25s ease,\n        transform 0.25s ease;\n      z-index: 1100;\n      font-size: 1.4rem;\n      line-height: 1.65;\n      box-sizing: border-box;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      will-change: transform, opacity;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      overflow-y: auto;\n      max-height: 90vh;\n      outline: none;\n    }\n    .modal.active {\n      opacity: 1;\n      pointer-events: auto;\n      transform: translate(-50%, -50%);\n    }\n    .modal-header {\n      font-size: 2.4rem;\n      font-weight: 900;\n      margin-bottom: 1.6rem;\n      background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      user-select: text;\n      position: relative;\n      padding-right: 3rem;\n    }\n    .modal-close-btn {\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      font-size: 2.8rem;\n      color: #764ba2;\n      background: none;\n      border: none;\n      cursor: pointer;\n      user-select: none;\n      padding: 0 8px;\n      line-height: 1;\n      transition: color 0.3s ease;\n    }\n    .modal-close-btn:hover,\n    .modal-close-btn:focus {\n      color: #4a148c;\n      outline: 3px solid #4a148c;\n      outline-offset: 2px;\n    }\n\n    .modal-content p {\n      margin: 0.8rem 0;\n    }\n    .modal-content strong {\n      color: #764ba2;\n      user-select: text;\n    }\n\n    .modal-image-container {\n      margin-bottom: 1.5rem;\n      text-align: center;\n      max-height: 300px;\n      overflow: auto;\n    }\n    .modal-image-container img {\n      max-width: 100%;\n      max-height: 300px;\n      border-radius: 12px;\n      box-shadow: 0 0 30px #764ba2aa;\n      user-select: none;\n    }\n\n    .modal-redirect-btn {\n      margin-top: 2rem;\n      align-self: flex-start;\n      background-color: #ffd700;\n      border: none;\n      color: #4a148c;\n      font-weight: 800;\n      font-size: 1.25rem;\n      padding: 12px 28px;\n      border-radius: 50px;\n      cursor: pointer;\n      box-shadow: 0 0 20px #ffd700cc;\n      transition: background-color 0.3s ease, box-shadow 0.3s ease;\n      user-select: none;\n      text-decoration: none;\n      display: inline-block;\n    }\n    .modal-redirect-btn:hover,\n    .modal-redirect-btn:focus {\n      background-color: #e6c800;\n      box-shadow: 0 0 35px #ffd700ee;\n      outline: none;\n    }\n    .modal-redirect-btn:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    .modal-action-buttons {\n      margin-top: 2rem;\n      display: flex;\n      gap: 1rem;\n      flex-wrap: wrap;\n    }\n    .modal-action-btn {\n      background-color: #764ba2;\n      border: none;\n      color: #ffd700;\n      font-weight: 700;\n      font-size: 1.1rem;\n      padding: 10px 22px;\n      border-radius: 50px;\n      cursor: pointer;\n      box-shadow: 0 0 15px #764ba2cc;\n      transition: background-color 0.3s ease, box-shadow 0.3s ease;\n      user-select: none;\n      flex: 1 1 140px;\n      text-align: center;\n      position: relative;\n    }\n    .modal-action-btn:hover,\n    .modal-action-btn:focus {\n      background-color: #5c358f;\n      box-shadow: 0 0 30px #764ba2ee;\n      outline: none;\n    }\n    .modal-action-btn:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    /* Loader spinner for buttons */\n    .loader {\n      border: 2.5px solid #f3f3f3;\n      border-top: 2.5px solid #ffd700;\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n      animation: spin 1s linear infinite;\n      position: absolute;\n      right: 14px;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n    .modal-action-btn[disabled] {\n      opacity: 0.7;\n      cursor: not-allowed;\n      box-shadow: none !important;\n      pointer-events: none;\n    }\n\n    #popupOverlay {\n      position: fixed;\n      inset: 0;\n      background: rgba(0, 0, 0, 0.7);\n      display: none;\n      z-index: 1200;\n      align-items: center;\n      justify-content: center;\n      user-select: text;\n      padding: 1rem;\n    }\n    #popupOverlay.active {\n      display: flex;\n    }\n    #popup {\n      background: #fff;\n      color: #3a0ca3;\n      border-radius: 16px;\n      padding: 2rem 2.5rem;\n      max-width: 480px;\n      width: 100%;\n      box-shadow: 0 8px 40px rgba(118, 75, 162, 0.35);\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n      font-size: 1.2rem;\n      max-height: 90vh;\n      overflow-y: auto;\n      outline: none;\n    }\n    #popup h3 {\n      margin: 0;\n      user-select: text;\n    }\n    #popup textarea {\n      width: 100%;\n      font-size: 1rem;\n      font-family: inherit;\n      border: 2px solid #764ba2;\n      border-radius: 12px;\n      padding: 0.75rem 1rem;\n      resize: vertical;\n      min-height: 100px;\n      box-sizing: border-box;\n      color: #333;\n    }\n    #popup textarea:focus {\n      outline: none;\n      border-color: #667eea;\n      box-shadow: 0 0 10px #667eeaaa;\n    }\n    #popup label {\n      font-weight: 600;\n      margin-bottom: 0.5rem;\n      user-select: none;\n    }\n    #popup input[type=\"file\"] {\n      margin-top: 0.25rem;\n    }\n    #popup-buttons {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      flex-wrap: wrap;\n    }\n    #popup-buttons button {\n      background-color: #764ba2;\n      color: #ffd700;\n      border: none;\n      padding: 10px 22px;\n      border-radius: 50px;\n      font-weight: 700;\n      font-size: 1rem;\n      cursor: pointer;\n      box-shadow: 0 0 15px #764ba2cc;\n      transition: background-color 0.3s ease, box-shadow 0.3s ease;\n      user-select: none;\n    }\n    #popup-buttons button:hover,\n    #popup-buttons button:focus {\n      background-color: #5c358f;\n      box-shadow: 0 0 30px #764ba2ee;\n      outline: none;\n    }\n    #popup-buttons button:focus-visible {\n      outline: 3px solid #4a148c;\n    }\n\n    /* Loading overlay covering entire screen and blocking all interaction */\n    #loadingOverlay {\n      position: fixed;\n      inset: 0;\n      background: rgba(0, 0, 0, 0.5);\n      backdrop-filter: blur(3px);\n      z-index: 1300;\n      display: none;\n      align-items: center;\n      justify-content: center;\n      user-select: none;\n      pointer-events: none;\n      transition: opacity 0.3s ease;\n    }\n    #loadingOverlay.active {\n      display: flex;\n      pointer-events: auto;\n    }\n    #loadingOverlay .spinner {\n      border: 6px solid #f3f3f3;\n      border-top: 6px solid #ffd700;\n      border-radius: 50%;\n      width: 64px;\n      height: 64px;\n      animation: spin 1s linear infinite;\n    }\n\n    @media (max-width: 600px) {\n      .modal {\n        max-height: 85vh;\n        overflow-y: auto;\n        padding: 2rem 2rem 2rem 2rem;\n      }\n      .modal-close-btn {\n        display: block;\n      }\n    }\n\n  </style>\n</head>\n<body>\n\n  <h1>Available Resources</h1>\n  <input \n    type=\"search\"\n    id=\"searchInput\"\n    aria-label=\"Search resources\"\n    placeholder=\"Search resources, categories or descriptions...\"\n    autocomplete=\"off\"\n    spellcheck=\"false\"\n  />\n\n  <!-- Favorites Section -->\n  <div id=\"favoritesContainer\" aria-live=\"polite\" aria-atomic=\"true\" aria-label=\"Favorite resources\">\n    <h2>Favorites</h2>\n    <ul id=\"favoritesList\">\n      <!-- Filled by JS -->\n    </ul>\n    <p id=\"noFavorites\" style=\"color: #ddd; text-align: center; margin-top: 1rem; display:none;\">No favorites yet. Add some!</p>\n  </div>\n\n  <div id=\"categoriesContainer\">\n    ${\n      sortedCategoryKeys.map(cat => {\n        const sectionItems = categories[cat].map(r => {\n          let thumbHtml = '';\n          if (Array.isArray(r.Image) && r.Image.length > 0) {\n            const signedPath = r.Image[0].signedPath;\n            if (signedPath) {\n              const imgUrl = 'https://ncdb.epicpc.com/' + signedPath;\n              const altText = (r.Image[0].title || r.Resource) + ' thumbnail';\n              thumbHtml = '<img src=\"' + imgUrl + '\" alt=\"' + altText.replace(/\"/g, '&quot;') + '\" class=\"thumbnail\" loading=\"lazy\" />';\n            }\n          }\n          const resourceEsc = (r.Resource || '').replace(/\"/g, '&quot;');\n          const descriptionEsc = ((r.Description) || '').replace(/\"/g, '&quot;');\n          const urlEsc = (r.url || '').replace(/\"/g, '&quot;');\n          const imageDataAttr = thumbHtml ? 'data-image=\"' + ((r.Image[0].signedPath || '').replace(/\"/g, '&quot;')) + '\"' : '';\n\n          return `\n          <li>\n            ${thumbHtml}\n            <button aria-label=\"Toggle favorite for ${resourceEsc}\" class=\"favorite-btn\" title=\"Toggle Favorite\" type=\"button\" data-url=\"${urlEsc}\">‚òÜ</button>\n            <a href=\"${urlEsc}\" \n               class=\"resource-link\"\n               tabindex=\"0\"\n               data-resource=\"${resourceEsc}\"\n               data-created=\"${r.CreatedAt}\"\n               data-description=\"${descriptionEsc}\"\n               data-url=\"${urlEsc}\"\n               ${imageDataAttr}\n            >\n               ${resourceEsc}\n            </a>\n          </li>\n          `;\n        }).join('');\n        return `\n          <section class=\"category-section\" aria-label=\"${cat} resources\" data-category=\"${cat.toLowerCase()}\">\n            <h2 class=\"category-title\">${cat}</h2>\n            <ul>\n              ${sectionItems}\n            </ul>\n          </section>\n        `;\n      }).join('')\n    }\n  </div>\n\n  <div class=\"modal\" id=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modalTitle\" aria-describedby=\"modalDescription\" tabindex=\"-1\">\n    <button class=\"modal-close-btn\" aria-label=\"Close modal\" id=\"modalCloseBtn\" title=\"Close modal\">&times;</button>\n    <div>\n      <div class=\"modal-header\" id=\"modalTitle\"></div>\n      <div class=\"modal-image-container\" id=\"modalImageContainer\" aria-live=\"polite\"></div>\n      <div class=\"modal-content\">\n        <p><strong>Created At:</strong> <span id=\"modalCreated\"></span></p>\n        <p><strong>Description:</strong> <span id=\"modalDescription\"></span></p>\n      </div>\n      <div class=\"modal-action-buttons\">\n        <button type=\"button\" class=\"modal-action-btn\" id=\"btnReportIssue\">Report an Issue</button>\n        <button type=\"button\" class=\"modal-action-btn\" id=\"btnFeatureRequest\">Feature Request</button>\n      </div>\n    </div>\n    <a href=\"#\" target=\"_blank\" rel=\"noopener\" class=\"modal-redirect-btn\" id=\"modalRedirectBtn\">Go to Resource</a>\n  </div>\n\n  <div id=\"popupOverlay\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"popupTitle\" aria-describedby=\"popupDesc\">\n    <div id=\"popup\" tabindex=\"-1\" role=\"document\">\n      <h3 id=\"popupTitle\"></h3>\n      <p id=\"popupDesc\">Please enter a message to submit with your request.</p>\n      <label for=\"popupMessage\">Message:</label>\n      <textarea id=\"popupMessage\" placeholder=\"Type your message here...\" aria-required=\"true\"></textarea>\n      <label for=\"popupFile\">Attach file (optional, CSV or image only):</label>\n      <input type=\"file\" id=\"popupFile\" accept=\".csv,image/*\" />\n      <div id=\"popup-buttons\">\n        <button type=\"button\" id=\"popupCancelBtn\">Cancel</button>\n        <button type=\"button\" id=\"popupSubmitBtn\">Submit</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Loading overlay -->\n  <div id=\"loadingOverlay\" aria-live=\"assertive\" aria-busy=\"true\" aria-label=\"Loading\">\n    <div class=\"spinner\" role=\"status\" aria-hidden=\"true\"></div>\n  </div>\n\n<script>\n  (function(){\n    const modal = document.getElementById('modal');\n    const modalTitle = document.getElementById('modalTitle');\n    const modalCreated = document.getElementById('modalCreated');\n    const modalDescription = document.getElementById('modalDescription');\n    const modalRedirectBtn = document.getElementById('modalRedirectBtn');\n    const modalImageContainer = document.getElementById('modalImageContainer');\n    const btnReportIssue = document.getElementById('btnReportIssue');\n    const btnFeatureRequest = document.getElementById('btnFeatureRequest');\n    const searchInput = document.getElementById('searchInput');\n    const popupOverlay = document.getElementById('popupOverlay');\n    const popup = document.getElementById('popup');\n    const popupTitle = document.getElementById('popupTitle');\n    const popupMessage = document.getElementById('popupMessage');\n    const popupFile = document.getElementById('popupFile');\n    const popupCancelBtn = document.getElementById('popupCancelBtn');\n    const popupSubmitBtn = document.getElementById('popupSubmitBtn');\n    const modalCloseBtn = document.getElementById('modalCloseBtn');\n    const loadingOverlay = document.getElementById('loadingOverlay');\n\n    const favoritesContainer = document.getElementById('favoritesContainer');\n    const favoritesListEl = document.getElementById('favoritesList');\n    const noFavoritesEl = document.getElementById('noFavorites');\n\n    const WEBHOOK_URL = 'https://xl.epicpc.com/webhook/3740ac2c-2310-449f-8baa-cb8086975b42';\n\n    let currentLink = null;\n    let currentRequestType = '';\n    let currentResource = '';\n    let currentURL = '';\n    let lastTapTime = 0;\n\n    // Map resources keyed by url lowercase\n    const resourceMap = {};\n    Array.from(document.querySelectorAll('a.resource-link')).forEach(a => {\n      const url = a.getAttribute('data-url') || '';\n      if(url) resourceMap[url.toLowerCase()] = a;\n    });\n\n    // FAVORITES STORAGE USING localStorage\n    const FAVORITES_KEY = 'favoritesList';\n\n    function loadFavorites() {\n      try {\n        const favsStr = localStorage.getItem(FAVORITES_KEY);\n        const favs = favsStr ? JSON.parse(favsStr) : [];\n        if(Array.isArray(favs)) return favs;\n      } catch {}\n      return [];\n    }\n    function saveFavorites(favs) {\n      localStorage.setItem(FAVORITES_KEY, JSON.stringify(favs));\n    }\n    let favorites = loadFavorites();\n\n    // Create a favorite list item element\n    function createFavoriteItem(url) {\n      const link = resourceMap[url.toLowerCase()];\n      if(!link) return null;\n\n      const li = document.createElement('li');\n\n      if(link.previousElementSibling && link.previousElementSibling.tagName === 'IMG') {\n        const img = link.previousElementSibling.cloneNode(true);\n        li.appendChild(img);\n      }\n\n      const favBtn = document.createElement('button');\n      favBtn.setAttribute('aria-label', \\`Remove favorite for \\${link.getAttribute('data-resource')}\\`);\n      favBtn.setAttribute('title', 'Remove Favorite');\n      favBtn.setAttribute('type', 'button');\n      favBtn.className = 'favorite-btn active';\n      favBtn.textContent = '‚òÖ';\n      favBtn.dataset.url = url;\n      li.appendChild(favBtn);\n\n      const a = document.createElement('a');\n      a.href = link.getAttribute('data-url');\n      a.className = 'resource-link';\n      a.tabIndex = 0;\n      a.setAttribute('data-resource', link.getAttribute('data-resource'));\n      a.setAttribute('data-created', link.getAttribute('data-created'));\n      a.setAttribute('data-description', link.getAttribute('data-description'));\n      a.setAttribute('data-url', link.getAttribute('data-url'));\n      const dataImage = link.getAttribute('data-image');\n      if(dataImage) a.setAttribute('data-image', dataImage);\n      a.textContent = link.getAttribute('data-resource');\n      li.appendChild(a);\n\n      return li;\n    }\n\n    function renderFavorites() {\n      favoritesListEl.innerHTML = '';\n      if(favorites.length === 0) {\n        noFavoritesEl.style.display = 'block';\n        favoritesContainer.style.display = 'block';\n      } else {\n        noFavoritesEl.style.display = 'none';\n        favorites.forEach(url => {\n          const item = createFavoriteItem(url);\n          if(item) favoritesListEl.appendChild(item);\n        });\n        favoritesContainer.style.display = 'block';\n      }\n      attachFavoriteBtnHandlers();\n      attachResourceLinkHandlers();\n    }\n\n    function toggleFavorite(url) {\n      url = url.toLowerCase();\n      const index = favorites.indexOf(url);\n      const alreadyFav = index !== -1;\n      if(alreadyFav) {\n        favorites.splice(index, 1);\n      } else {\n        favorites.push(url);\n      }\n      saveFavorites(favorites);\n      updateAllFavoriteButtons();\n      renderFavorites();\n      sendFavoriteWebhook(url, alreadyFav ? 'Removed Favorite' : 'Added Favorite');\n    }\n\n    function updateAllFavoriteButtons() {\n      document.querySelectorAll('.favorite-btn').forEach(btn => {\n        const u = btn.dataset.url && btn.dataset.url.toLowerCase();\n        if(!u) return;\n        if(favorites.includes(u)) {\n          btn.classList.add('active');\n          btn.textContent = '‚òÖ';\n          btn.setAttribute('aria-pressed','true');\n          btn.setAttribute('title', 'Remove Favorite');\n        } else {\n          btn.classList.remove('active');\n          btn.textContent = '‚òÜ';\n          btn.setAttribute('aria-pressed','false');\n          btn.setAttribute('title', 'Add Favorite');\n        }\n      });\n    }\n\n    function attachFavoriteBtnHandlers() {\n      document.querySelectorAll('.favorite-btn').forEach(btn => {\n        btn.removeEventListener('click', onFavoriteBtnClick);\n        btn.addEventListener('click', onFavoriteBtnClick);\n      });\n    }\n    function onFavoriteBtnClick(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const url = evt.currentTarget.dataset.url;\n      if(!url) return;\n      toggleFavorite(url);\n    }\n\n    function sendFavoriteWebhook(url, action) {\n      try {\n        const resourceLink = resourceMap[url.toLowerCase()];\n        if(!resourceLink) return;\n\n        const resourceName = resourceLink.getAttribute('data-resource') || url;\n        const payloadJson = {\n          type: 'Favorite Change',\n          action,\n          resource: resourceName,\n          url: url,\n          timestamp: new Date().toISOString(),\n        };\n\n        fetch(WEBHOOK_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payloadJson),\n        });\n      } catch {}\n    }\n\n    function attachResourceLinkHandlers() {\n      document.querySelectorAll('a.resource-link').forEach(link => {\n        link.removeEventListener('click', onClickLink);\n      });\n\n      document.querySelectorAll('a.resource-link').forEach(link => {\n        link.addEventListener('click', onClickLink);\n      });\n    }\n\n    function showModal(resource, created, description, url, button, imageSignedPath) {\n      modalTitle.textContent = resource;\n      modalCreated.textContent = created;\n      modalDescription.textContent = description || 'No description available.';\n      modalRedirectBtn.href = url;\n      currentResource = resource;\n      currentURL = url;\n      if (imageSignedPath) {\n        const imgUrl = 'https://ncdb.epicpc.com/' + imageSignedPath;\n        const parser = new DOMParser();\n        const decodedUrl = parser.parseFromString(imgUrl, 'text/html').body.textContent || imgUrl;\n        modalImageContainer.innerHTML = '<img src=\"' + decodedUrl + '\" alt=\"' + resource + ' image\" />';\n      } else {\n        modalImageContainer.innerHTML = '';\n      }\n      modal.classList.add('active');\n      currentLink = button;\n      modal.focus();\n    }\n\n    function hideModal() {\n      modal.classList.remove('active');\n      currentLink = null;\n      hidePopup();\n    }\n\n    function onDocumentClick(e) {\n      if (modal.classList.contains('active') && !modal.contains(e.target) && !popupOverlay.classList.contains('active')) {\n        hideModal();\n      }\n    }\n\n    function onClickLink(e) {\n      e.preventDefault();\n      const now = Date.now();\n      if ((now - lastTapTime) < 400 && currentLink === e.currentTarget) {\n        window.open(e.currentTarget.getAttribute('data-url'), '_blank', 'noopener');\n        hideModal();\n        lastTapTime = 0;\n        currentLink = null;\n        return;\n      }\n      lastTapTime = now;\n      const button = e.currentTarget;\n      const imageSignedPath = button.getAttribute('data-image');\n      showModal(\n        button.getAttribute('data-resource'),\n        button.getAttribute('data-created'),\n        button.getAttribute('data-description'),\n        button.getAttribute('data-url'),\n        button,\n        imageSignedPath\n      );\n    }\n\n    function isTouchDevice() {\n      return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\n    }\n\n    attachFavoriteBtnHandlers();\n    attachResourceLinkHandlers();\n\n    searchInput.addEventListener('input', () => {\n      const query = searchInput.value.trim().toLowerCase();\n\n      // Filter favorites list\n      let anyFavoriteVisible = false;\n      favoritesListEl.querySelectorAll('li').forEach(li => {\n        const a = li.querySelector('a.resource-link');\n        if(!a) return;\n        const resource = (a.getAttribute('data-resource') || '').toLowerCase();\n        const description = (a.getAttribute('data-description') || '').toLowerCase();\n        const url = (a.getAttribute('data-url') || '').toLowerCase();\n        const matches = resource.includes(query) || description.includes(query) || url.includes(query);\n        li.style.display = matches ? '' : 'none';\n        if(matches) anyFavoriteVisible = true;\n      });\n\n      if (query === '') {\n        favoritesContainer.style.display = 'block';\n      } else {\n        favoritesContainer.style.display = anyFavoriteVisible ? 'block' : 'none';\n      }\n\n      const sections = document.querySelectorAll('section.category-section');\n      sections.forEach(section => {\n        const categoryLabel = section.getAttribute('aria-label') || '';\n        const categoryLower = categoryLabel.toLowerCase();\n\n        let anyResourceVisible = false;\n        const resourceLinks = section.querySelectorAll('a.resource-link');\n\n        resourceLinks.forEach(link => {\n          const resource = (link.getAttribute('data-resource') || '').toLowerCase();\n          const description = (link.getAttribute('data-description') || '').toLowerCase();\n          const url = (link.getAttribute('data-url') || '').toLowerCase();\n\n          const matches =\n            resource.includes(query) ||\n            description.includes(query) ||\n            categoryLower.includes(query) ||\n            url.includes(query);\n\n          link.parentElement.style.display = matches ? '' : 'none';\n          if (matches) anyResourceVisible = true;\n        });\n\n        section.style.display =\n          anyResourceVisible || categoryLower.includes(query) ? '' : 'none';\n      });\n    });\n\n    renderFavorites();\n\n    modal.addEventListener('click', e => e.stopPropagation());\n    popupOverlay.addEventListener('click', onDocumentClick);\n    popup.addEventListener('click', e => e.stopPropagation());\n    popupMessage.addEventListener('click', e => e.stopPropagation());\n    popupFile.addEventListener('click', e => e.stopPropagation());\n\n    function setLoading(isLoading) {\n      [btnReportIssue, btnFeatureRequest, popupSubmitBtn, popupCancelBtn].forEach(btn => {\n        btn.disabled = isLoading;\n        let loader = btn.querySelector('.loader');\n        if(isLoading) {\n          if(!loader) {\n            loader = document.createElement('span');\n            loader.classList.add('loader');\n            btn.appendChild(loader);\n          }\n        } else {\n          if(loader) btn.removeChild(loader);\n        }\n      });\n\n      if(isLoading) {\n        loadingOverlay.classList.add('active');\n      } else {\n        loadingOverlay.classList.remove('active');\n      }\n    }\n\n    btnReportIssue.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      openPopup('Report an Issue');\n    });\n    btnFeatureRequest.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      openPopup('Feature Request');\n    });\n\n    function openPopup(type) {\n      currentRequestType = type;\n      popupTitle.textContent = type + ' for \"' + currentResource + '\"';\n      popupMessage.value = '';\n      popupFile.value = '';\n      popupOverlay.classList.add('active');\n      popup.focus();\n      setTimeout(() => popupMessage.focus(), 100);\n    }\n\n    function hidePopup() {\n      popupOverlay.classList.remove('active');\n      currentRequestType = '';\n      popupMessage.value = '';\n      popupFile.value = '';\n      setLoading(false);\n    }\n\n    popupCancelBtn.addEventListener('click', () => {\n      hidePopup();\n    });\n\n    popupSubmitBtn.addEventListener('click', () => {\n      submitRequest();\n    });\n\n    popupMessage.addEventListener('keydown', (e) => {\n      if(e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n        submitRequest();\n      }\n    });\n\n    function submitRequest() {\n      const message = popupMessage.value.trim();\n      if(!message) {\n        alert('Please enter a message before submitting.');\n        popupMessage.focus();\n        return;\n      }\n      const file = popupFile.files[0];\n      if(file) {\n        const allowedTypes = ['text/csv', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'image/png', 'image/jpeg', 'image/gif', 'image/webp'];\n        if(!allowedTypes.includes(file.type) && !file.name.toLowerCase().endsWith('.csv')) {\n          alert('Invalid file type. Please attach a CSV or image file.');\n          return;\n        }\n      }\n\n      setLoading(true);\n\n      const formData = new FormData();\n      const payloadJson = {\n        type: currentRequestType,\n        resource: currentResource,\n        url: currentURL,\n        message: message,\n        timestamp: new Date().toISOString(),\n      };\n      formData.append('payload_json', JSON.stringify(payloadJson));\n      if(file) {\n        formData.append('file', file);\n      }\n      fetch(WEBHOOK_URL, {\n        method: 'POST',\n        body: formData\n      }).then(res => {\n        setLoading(false);\n        if(res.ok) {\n          alert(currentRequestType + ' submitted successfully. Thank you!');\n          hidePopup();\n        } else {\n          alert('Failed to submit the request. Please try again later.');\n        }\n      }).catch(() => {\n        setLoading(false);\n        alert('Failed to submit the request. Please check your internet connection.');\n      });\n    }\n\n    modalCloseBtn.addEventListener('click', () => {\n      hideModal();\n    });\n\n    window.addEventListener('keydown', (e) => {\n      if(e.key === 'Escape') {\n        if(popupOverlay.classList.contains('active')) {\n          hidePopup();\n        } else if(modal.classList.contains('active')) {\n          hideModal();\n        }\n      }\n    });\n  })();\n</script>\n</body>\n</html>\n`;\n\nreturn [\n  { json: { html } },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2600,
        360
      ],
      "id": "bedd8cc6-0ef8-41b8-969f-6b8ba9e29c1e",
      "name": "Code19"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pgonbiu01evr0cz",
        "table": "maefqt7voma4dbq",
        "dataToSend": "autoMapInputData"
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        2780,
        620
      ],
      "id": "65dcc583-3599-4a5f-8c8e-9c6d7a1fcb78",
      "name": "Create a row",
      "credentials": {
        "nocoDbApiToken": {
          "id": "tJrRYhH9PABi968X",
          "name": "NCDB http"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://prod-103.westus.logic.azure.com:443/workflows/3161dd3c9b0e401483b3c668aa3f61d7/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nL5rPx0pK2tGzLnUYG1eqtMuaNpHZoBCxZ0GbWsbxXQ",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "user",
              "value": "=tstilwell@epichs.org"
            },
            {
              "name": "taskid",
              "value": "="
            },
            {
              "name": "description",
              "value": "="
            },
            {
              "name": "comments",
              "value": "=test"
            },
            {
              "name": "teamsmessage",
              "value": "=<table\n  width=\"100%\"\n  cellpadding=\"0\"\n  cellspacing=\"0\"\n  style=\"\n    max-width:550px;\n    margin:0 auto;\n    border:1px solid #dcdcdc;\n    border-radius:6px;\n    overflow:hidden;\n    font-family:'Segoe UI',Arial,sans-serif;\n  \"\n>\n  <!-- Header -->\n  <tr>\n    <td\n      align=\"center\"\n      style=\"\n        background-color:#e81123;\n        padding:14px 12px;\n        border-bottom:2px solid #c50f1f;\n      \"\n    >\n      <span\n        style=\"\n          font-size:20px;\n          font-weight:600;\n          color:#ffffff;\n          letter-spacing:1px;\n        \"\n      >\n        TURBO TOOLS\n      </span>\n    </td>\n  </tr>\n\n  <!-- Core Message -->\n  <tr>\n    <td\n      style=\"\n        background-color:#ffffff;\n        padding:16px;\n        color:#323130;\n        font-size:15px;\n        line-height:1.5;\n      \"\n    >\n     {{ $json.message }}\n<br>\n    </td>\n  </tr>\n\n  <!-- Details Label + Link -->\n  <tr>\n    <td\n      style=\"\n        background-color:#f9f9f9;\n        padding:12px 16px;\n        border-top:1px solid #dcdcdc;\n      \"\n    >\n      <strong\n        style=\"\n          font-size:14px;\n          color:#323130;\n          margin-right:6px;\n        \"\n      >\n        Details: {{ $json.type }}, {{ $json.resource }}, {{ $json.user }}\n      \n    </td>\n  </tr>\n\n  <!-- Image -->\n  <tr>\n    <td\n      align=\"center\"\n      style=\"background-color:#ffffff;padding:12px 16px 16px;\"\n    >\n      <img\n        src=\"\"\n        alt=\"Emergency Alert Illustration\"\n        style=\"\n          display:block;\n          max-width:100%;\n          height:auto;\n          border-radius:4px;\n          border:1px solid #dcdcdc;\n        \"\n      />\n    </td>\n  </tr>\n</table>\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2780,
        760
      ],
      "id": "d1865605-50e4-46c0-a026-f5a5b0eda5a4",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "path": "4b40d089-97c6-466a-b96c-13c147cbb810",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1900,
        940
      ],
      "id": "8c8a8085-1207-4e3d-b05f-2a60a3f97ace",
      "name": "Webhook8",
      "webhookId": "4b40d089-97c6-466a-b96c-13c147cbb810"
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "={{ $json.ResourceURL }}?user={{ $json.user }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2840,
        960
      ],
      "id": "11fe9937-f86f-4700-bb1c-6ea098b439af",
      "name": "Respond to Webhook9"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3d6d0d1d-7fe9-49a1-ad0e-2643eba1e40e",
              "name": "referer",
              "value": "={{ $json.headers.referer }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        940
      ],
      "id": "cc0bd75c-b7e2-4ba0-9b21-b4601977009b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const referer = item.json.referer;\n  if (!referer) {\n    return { json: item.json };\n  }\n\n  // Find the start of the query string\n  const queryStart = referer.indexOf('?');\n  if (queryStart === -1) {\n    // No query string present\n    return { json: item.json };\n  }\n\n  // Get the query string part after '?'\n  const queryString = referer.substring(queryStart + 1);\n\n  // Split into key=value pairs\n  const pairs = queryString.split('&');\n\n  // Parse pairs to object\n  const params = {};\n  for (const pair of pairs) {\n    if (!pair) continue;\n    const [key, value] = pair.split('=');\n    // Decode URI components and assign to params\n    params[decodeURIComponent(key)] = value ? decodeURIComponent(value) : '';\n  }\n\n  // Merge parsed params back into the original JSON\n  return {\n    json: {\n      ...item.json,\n      ...params,\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        940
      ],
      "id": "624921a8-e579-4b36-aa13-59cba5abc2c4",
      "name": "Code11"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pltr87351hgxdjk",
        "table": "mo7mc8d3rjioxlk",
        "returnAll": true,
        "options": {
          "where": "=(Resource,eq,{{ $json.query.Resource }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        2380,
        1140
      ],
      "id": "718980a7-5533-48f0-9fbe-98f1c4a1f74c",
      "name": "Get many rows3",
      "credentials": {
        "nocoDbApiToken": {
          "id": "tJrRYhH9PABi968X",
          "name": "NCDB http"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2680,
        960
      ],
      "id": "817998c0-a498-4a4e-ae6d-0605806e4aa2",
      "name": "Merge1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2560,
        760
      ],
      "id": "4b111ec4-3681-43fd-bf92-838baf5cc314",
      "name": "Merge2"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const referer = item.json.referer;\n  if (!referer) {\n    return { json: item.json };\n  }\n\n  // Find the start of the query string\n  const queryStart = referer.indexOf('?');\n  if (queryStart === -1) {\n    // No query string present\n    return { json: item.json };\n  }\n\n  // Get the query string part after '?'\n  const queryString = referer.substring(queryStart + 1);\n\n  // Split into key=value pairs\n  const pairs = queryString.split('&');\n\n  // Parse pairs to object\n  const params = {};\n  for (const pair of pairs) {\n    if (!pair) continue;\n    const [key, value] = pair.split('=');\n    // Decode URI components and assign to params\n    params[decodeURIComponent(key)] = value ? decodeURIComponent(value) : '';\n  }\n\n  // Merge parsed params back into the original JSON\n  return {\n    json: {\n      ...item.json,\n      ...params,\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2340,
        760
      ],
      "id": "c7bc311d-10b8-43f4-a973-3a734f4b1fd4",
      "name": "Code12"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3d6d0d1d-7fe9-49a1-ad0e-2643eba1e40e",
              "name": "referer",
              "value": "={{ $json.headers.referer }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        760
      ],
      "id": "6884353e-bce1-492e-970a-516557e9b1be",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7358cea0-f86c-4aa5-bc28-30e6b66b0628",
              "leftValue": "={{ $json.body.type }}",
              "rightValue": "Favorite Change",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        760
      ],
      "id": "4885888c-3b9b-4f65-ad78-b95f9a4e967f",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "const rawRecords = items.map(item => item.json); // each input item is one record\n// Mapping lowercase field keys to display names for tabs\nconst fieldMap = {\n  entity: \"Entity\",\n  location: \"Location\",\n  area: \"Area\",\n  survey_source: \"Survey Source\",\n};\nconst recordsPerPage = 15;\nconst webhookURL = \"https://xl.epicpc.com/webhook/4377c42c-64b0-4aee-9f49-82cce54896a7\";\nconst qrGeneratorURL = \"https://xl.epicpc.com/webhook/ece6d39b-de5d-4fb1-bea1-a681440b1184\";\n// Group records by lowercase key, keeping displayField for UI\nconst groupedRecords = {\n  entity: [],\n  location: [],\n  area: [],\n  survey_source: [],\n};\nfor (const r of rawRecords) {\n  const f = (r.Field || \"\").toLowerCase();\n  if (groupedRecords[f]) {\n    groupedRecords[f].push({\n      id: r.Id,\n      field: f,   // lowercase for posting\n      displayField: fieldMap[f], // display\n      value: r.Value,\n      createdAt: r.CreatedAt,\n      updatedAt: r.UpdatedAt,\n    });\n  }\n}\nconst fieldTypes = Object.keys(groupedRecords); // ['entity', 'location', ...]\n\nfunction escapeHtml(text) {\n  return String(text)\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nreturn [\n  {\n    json: {\n      html: `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>NPS System Standard Values</title>\n<style>\n  body {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 40px 20px 60px;\n    background-color: #f8fafc;\n    color: #1e293b;\n    display: flex;\n    justify-content: center;\n  }\n  #appContainer {\n    width: 100%;\n    max-width: 960px;\n    min-width: 320px;\n    background: #fff;\n    padding: 30px 40px;\n    border-radius: 12px;\n    box-shadow: 0 8px 30px rgba(30,64,175,0.12);\n    box-sizing: border-box;\n  }\n  h1 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    font-size: 2rem;\n    color: #0f172a;\n  }\n  .tabs {\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 2px solid #e2e8f0;\n  }\n  .tab {\n    padding: 12px 25px;\n    margin-right: 5px;\n    font-weight: 600;\n    color: #64748b;\n    cursor: pointer;\n    border: 1.5px solid transparent;\n    border-bottom: none;\n    border-radius: 8px 8px 0 0;\n    background-color: #f1f5f9;\n    transition: all 0.25s ease-in-out;\n    user-select: none;\n  }\n  .tab:hover {\n    color: #1e40af;\n  }\n  .tab.active {\n    background-color: #ffffff;\n    color: #1e40af;\n    border-color: #1e40af;\n    border-bottom: 2px solid #ffffff;\n    box-shadow: 0 2px 10px rgba(30, 64, 175, 0.15);\n  }\n  .tab.add-record-tab {\n    margin-left: auto;\n    background-color: #2563eb;\n    color: white;\n  }\n  .tab.add-record-tab:hover {\n    background-color: #1d4ed8;\n    color: white;\n  }\n  .tab.add-record-tab.active {\n    box-shadow: 0 2px 10px rgba(37, 99, 235, 0.5);\n  }\n  .content {\n    background: #fff;\n    border: 1.5px solid #e2e8f0;\n    border-radius: 0 8px 8px 8px;\n    padding: 20px;\n    box-shadow: 0 4px 18px rgba(0,0,0,0.05);\n    min-height: 320px;\n    margin-bottom: 30px;\n  }\n  .pagination {\n    margin-top: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  .page-btn {\n    margin-right: 10px;\n    padding: 8px 14px;\n    font-weight: 600;\n    color: #64748b;\n    background: #e2e8f0;\n    border-radius: 6px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  .page-btn:hover:not(:disabled) {\n    background-color: #cbd5e1;\n    color: #1e293b;\n  }\n  .page-btn:disabled,\n  .page-btn.disabled {\n    color: #a1a1aa;\n    background-color: #f1f5f9;\n    cursor: not-allowed;\n  }\n  .record-tile {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 12px 16px;\n    margin-bottom: 12px;\n    border-radius: 10px;\n    background: #f8fafc;\n    border: 1px solid #e2e8f0;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.05);\n    transition: box-shadow 0.3s ease;\n  }\n  .record-tile:hover {\n    box-shadow: 0 4px 22px rgba(30, 64, 175, 0.12);\n  }\n  .record-value {\n    flex: 1;\n    font-weight: 600;\n    font-size: 1.05rem;\n    color: #334155;\n    word-break: break-word;\n  }\n  .record-value input[type=\"text\"] {\n    width: 100%;\n    padding: 6px 10px;\n    font-size: 1rem;\n    color: #334155;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 8px;\n    transition: border-color 0.3s ease;\n  }\n  .record-value input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 6px rgba(30, 64, 175, 0.25);\n  }\n  button {\n    font-weight: 600;\n    border: none;\n    padding: 8px 14px;\n    margin-left: 8px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.3s ease, color 0.3s ease;\n    box-shadow: 0 2px 7px rgba(30, 64, 175, 0.15);\n  }\n  button:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    box-shadow: none;\n  }\n  button.update-btn {\n    background-color: #2563eb;\n    color: white;\n  }\n  button.update-btn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  button.delete-btn {\n    background-color: #ef4444;\n    color: white;\n  }\n  button.delete-btn:hover:not(:disabled) {\n    background-color: #dc2626;\n  }\n  button.cancel-update-btn {\n    background-color: #64748b;\n    color: white;\n  }\n  button.cancel-update-btn:hover:not(:disabled) {\n    background-color: #475569;\n  }\n  button.add-btn, button.qr-btn {\n    margin-top: 0;\n    background-color: #2563eb;\n    color: white;\n    font-size: 1rem;\n    padding: 12px 30px;\n    display: inline-block;\n    box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\n    transition: background-color 0.25s ease;\n    border-radius: 10px;\n  }\n  button.add-btn:hover, button.qr-btn:hover {\n    background-color: #1d4ed8;\n  }\n  #buttonContainer {\n    margin-top: 10px;\n    display: flex;\n    gap: 15px;\n  }\n  /* Add Popup overlay (fallback) */\n  #addPopupOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15, 23, 42, 0.54);\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n  }\n  #addPopup {\n    background: white;\n    padding: 36px 40px 36px 40px;\n    border-radius: 16px;\n    box-shadow: 0 10px 35px rgba(30, 64, 175, 0.25);\n    min-width: 320px;\n    max-width: 400px;\n    box-sizing: border-box;\n  }\n  #addPopup h3 {\n    font-weight: 700;\n    margin-bottom: 25px;\n    color: #0f172a;\n    font-size: 1.4rem;\n  }\n  #addPopup label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: 600;\n    color: #475569;\n  }\n  #addPopup select, #addPopup input[type=\"text\"] {\n    width: 100%;\n    padding: 14px 14px;\n    font-size: 1rem;\n    border: 1.5px solid #cbd5e1;\n    border-radius: 12px;\n    margin-bottom: 24px;\n    color: #334155;\n    box-sizing: border-box;\n    transition: border-color 0.3s ease;\n  }\n  #addPopup select:focus, #addPopup input[type=\"text\"]:focus {\n    outline: none;\n    border-color: #1e40af;\n    box-shadow: 0 0 8px rgba(30,64,175,0.35);\n  }\n  #addPopupButtons {\n    text-align: right;\n  }\n  #addPopupButtons button {\n    padding: 10px 24px;\n    border-radius: 12px;\n    font-size: 1rem;\n    box-shadow: 0 4px 10px rgba(30, 64, 175, 0.2);\n    margin-left: 10px;\n  }\n  #addSubmitBtn {\n    background-color: #2563eb;\n    color: white;\n  }\n  #addSubmitBtn:hover:not(:disabled) {\n    background-color: #1d4ed8;\n  }\n  #addCancelBtn {\n    background-color: #475569;\n    color: white;\n  }\n  #addCancelBtn:hover:not(:disabled) {\n    background-color: #334155;\n  }\n  /* Confirmation popup overlay */\n  #confirmDeleteOverlay {\n    display: none;\n    position: fixed;\n    top:0; left:0; right:0; bottom:0;\n    background: rgba(15,23,42,0.7);\n    z-index: 10001;\n    justify-content: center;\n    align-items: center;\n  }\n  #confirmDelete {\n    background: white;\n    padding: 30px 40px;\n    border-radius: 16px;\n    max-width: 400px;\n    box-shadow: 0 10px 35px rgba(30,64,175,0.3);\n    text-align: center;\n    font-size: 1.1rem;\n    color: #0f172a;\n  }\n  #confirmDelete h2 {\n    margin-bottom: 24px;\n  }\n  #confirmDeleteButtons button {\n    padding: 10px 30px;\n    border-radius: 12px;\n    font-weight: 700;\n    font-size: 1rem;\n    margin: 0 10px;\n    box-shadow: 0 4px 10px rgba(30,64,175,0.2);\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  #confirmDeleteDeleteBtn {\n    background: #ef4444;\n    color: white;\n  }\n  #confirmDeleteDeleteBtn:hover {\n    background: #dc2626;\n  }\n  #confirmDeleteCancelBtn {\n    background: #64748b;\n    color: white;\n  }\n  #confirmDeleteCancelBtn:hover {\n    background: #475569;\n  }\n  /* Loader */\n  #loader {\n    display: none;\n    position: fixed;\n    top: 15px; right: 15px;\n    background: rgba(59, 130, 246, 0.9);\n    color: white;\n    padding: 10px 18px;\n    border-radius: 14px;\n    font-weight: 700;\n    font-size: 1rem;\n    box-shadow: 0 4px 14px rgba(59,130,246,0.6);\n    z-index: 10002;\n  }\n</style>\n</head>\n<body>\n<div id=\"appContainer\">\n<h1>NPS System Standard Values</h1>\n<div class=\"tabs\" id=\"tabs\" role=\"tablist\" aria-label=\"Record categories\">\n  ${fieldTypes.map(f => `<div class=\"tab${f===\"entity\" ? \" active\" : \"\"}\" data-tab=\"${escapeHtml(f)}\" role=\"tab\" tabindex=\"${f===\"entity\" ? \"0\" : \"-1\"}\" aria-selected=\"${f===\"entity\" ? \"true\": \"false\"}\">${escapeHtml(fieldMap[f])}</div>`).join('')}\n  <!-- Add Record tab will be appended dynamically -->\n</div>\n<div id=\"contents\">\n  ${fieldTypes.map(f => `\n    <div class=\"content\" id=\"content-${escapeHtml(f)}\" role=\"tabpanel\" aria-labelledby=\"tab-${escapeHtml(f)}\" style=\"display:${f===\"entity\" ? \"block\" : \"none\"};\">\n      <div id=\"records-${escapeHtml(f)}\"></div>\n      <div class=\"pagination\" id=\"pagination-${escapeHtml(f)}\"></div>\n    </div>\n  `).join('')}\n</div>\n<div id=\"buttonContainer\">\n  <button id=\"addBtn\" class=\"add-btn\" type=\"button\">Add Record</button>\n  <button id=\"openQRBtn\" class=\"qr-btn\" type=\"button\" title=\"Open QR Generator in new tab\">Open QR Generator</button>\n</div>\n</div>\n\n<!-- Add Popup fallback -->\n<div id=\"addPopupOverlay\" aria-hidden=\"true\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addPopupTitle\" tabindex=\"-1\">\n  <div id=\"addPopup\">\n    <h3 id=\"addPopupTitle\">Add New Record</h3>\n    <label for=\"addField\">Field Type:</label>\n    <select id=\"addField\" aria-required=\"true\">\n      ${fieldTypes.map(f => `<option value=\"${escapeHtml(f)}\">${escapeHtml(fieldMap[f])}</option>`).join('')}\n    </select>\n    <label for=\"addValue\">Value:</label>\n    <input type=\"text\" id=\"addValue\" placeholder=\"Enter value\" aria-required=\"true\" />\n    <div id=\"addPopupButtons\">\n      <button id=\"addSubmitBtn\" type=\"button\">Add</button>\n      <button id=\"addCancelBtn\" type=\"button\">Cancel</button>\n    </div>\n  </div>\n</div>\n\n<!-- Confirmation Popup -->\n<div id=\"confirmDeleteOverlay\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"confirmDeleteTitle\" aria-describedby=\"confirmDeleteMsg\" tabindex=\"-1\">\n  <div id=\"confirmDelete\">\n    <h2 id=\"confirmDeleteTitle\">Are you sure?</h2>\n    <p id=\"confirmDeleteMsg\">This action will permanently delete the record.</p>\n    <div id=\"confirmDeleteButtons\">\n      <button id=\"confirmDeleteDeleteBtn\" type=\"button\">Delete</button>\n      <button id=\"confirmDeleteCancelBtn\" type=\"button\">Whoops, oh no</button>\n    </div>\n  </div>\n</div>\n<div id=\"loader\">Processing...</div>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', () => {\n  const recordsPerPage = ${recordsPerPage};\n  const webhookURL = \"${webhookURL}\";\n  const qrGeneratorURL = \"${qrGeneratorURL}\";\n  const fieldTypes = ${JSON.stringify(fieldTypes)};\n  const fieldMap = ${JSON.stringify(fieldMap)};\n  const groupedRecords = ${JSON.stringify(groupedRecords)};\n  let currentTab = \"entity\";\n  const currentPages = {};\n  fieldTypes.forEach(f => currentPages[f] = 0);\n  const addRecordTabKey = \"add_record\";\n\n  function el(id) { return document.getElementById(id); }\n  function createElement(tag, props = {}, ...children) {\n    const e = document.createElement(tag);\n    for(const k in props) {\n      if (k === 'className') e.className = props[k];\n      else if (k === 'innerHTML') e.innerHTML = props[k];\n      else if (k.startsWith('on') && typeof props[k] === 'function') {\n        e.addEventListener(k.substr(2).toLowerCase(), props[k]);\n      } else {\n        e.setAttribute(k, props[k]);\n      }\n    }\n    for(const c of children) {\n      if (typeof c === 'string') e.appendChild(document.createTextNode(c));\n      else if (c instanceof Node) e.appendChild(c);\n    }\n    return e;\n  }\n\n  function escapeHtml(text) {\n    return String(text)\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n\n  function setLoading(loading) {\n    const loader = el('loader');\n    const addBtn = el('addBtn');\n    const openQRBtn = el('openQRBtn');\n    if (loading) {\n      loader.style.display = 'block';\n      addBtn.disabled = true;\n      openQRBtn.disabled = true;\n      disableAllButtons(true);\n    } else {\n      loader.style.display = 'none';\n      addBtn.disabled = false;\n      openQRBtn.disabled = false;\n      disableAllButtons(false);\n    }\n  }\n\n  function disableAllButtons(disable) {\n    document.querySelectorAll('button').forEach(btn => {\n      if (!btn.disabled && btn.id !== 'addBtn' && btn.id !== 'openQRBtn') btn.disabled = disable;\n      else if (btn.disabled && !disable) btn.disabled = false;\n    });\n  }\n\n  function renderPagination(field) {\n    const container = el('pagination-' + field);\n    const totalRecs = groupedRecords[field].length;\n    const totalPages = Math.ceil(totalRecs / recordsPerPage);\n    const currentPage = currentPages[field];\n    container.innerHTML = '';\n    const prevBtn = createElement('button', {\n      className: 'page-btn' + (currentPage === 0 ? ' disabled' : ''),\n      disabled: currentPage === 0,\n      onclick: () => {\n        if(currentPages[field] > 0) {\n          currentPages[field]--;\n          renderRecords(field);\n        }\n      }\n    }, 'Prev');\n    container.appendChild(prevBtn);\n    const pageInfo = createElement('span', { style: 'margin:0 10px; font-weight: 600; color: #475569;' }, 'Page ' + (currentPage + 1) + ' / ' + (totalPages || 1));\n    container.appendChild(pageInfo);\n    const nextBtn = createElement('button', {\n      className: 'page-btn' + (currentPage >= totalPages - 1 ? ' disabled' : ''),\n      disabled: currentPage >= totalPages - 1,\n      onclick: () => {\n        if(currentPages[field] < totalPages - 1) {\n          currentPages[field]++;\n          renderRecords(field);\n        }\n      }\n    }, 'Next');\n    container.appendChild(nextBtn);\n  }\n\n  function renderRecords(field) {\n    const container = el('records-' + field);\n    container.innerHTML = '';\n    const page = currentPages[field];\n    const recs = groupedRecords[field];\n    const start = page * recordsPerPage;\n    const end = Math.min(start + recordsPerPage, recs.length);\n    for(let i = start; i < end; i++) {\n      const rec = recs[i];\n      const tile = createElement('div', { className: 'record-tile' });\n      const valContainer = createElement('div', { className: 'record-value' }, escapeHtml(rec.value));\n      tile.appendChild(valContainer);\n      const updateBtn = createElement('button', { type: 'button', className: 'update-btn' }, 'Update');\n      const deleteBtn = createElement('button', { type: 'button', className: 'delete-btn' }, 'Delete');\n      const cancelUpdateBtn = createElement('button', { type: 'button', className: 'cancel-update-btn', style: 'display:none;' }, 'Cancel');\n      let isEditing = false;\n      function exitEditMode(save) {\n        if (!isEditing) return;\n        isEditing = false;\n        cancelUpdateBtn.style.display = 'none';\n        deleteBtn.disabled = false;\n        if(save) updateBtn.textContent = 'Update';\n        else {\n          valContainer.textContent = rec.value;\n          updateBtn.textContent = 'Update';\n        }\n      }\n      updateBtn.onclick = () => {\n        if (!isEditing) {\n          const input = createElement('input', { type: 'text', value: rec.value });\n          valContainer.innerHTML = '';\n          valContainer.appendChild(input);\n          isEditing = true;\n          updateBtn.textContent = 'Submit';\n          cancelUpdateBtn.style.display = 'inline-block';\n          deleteBtn.disabled = true;\n          function cancelOnEsc(e) {\n            if(e.key === 'Escape') {\n              exitEditMode(false);\n              document.removeEventListener('keydown', cancelOnEsc);\n              document.removeEventListener('click', onDocClick, true);\n            }\n          }\n          function onDocClick(e) {\n            if (!valContainer.contains(e.target) && e.target !== updateBtn && e.target !== cancelUpdateBtn) {\n              exitEditMode(false);\n              document.removeEventListener('keydown', cancelOnEsc);\n              document.removeEventListener('click', onDocClick, true);\n            }\n          }\n          document.addEventListener('keydown', cancelOnEsc);\n          document.addEventListener('click', onDocClick, true);\n        } else {\n          const input = valContainer.querySelector('input');\n          if (!input) return;\n          const newValue = input.value.trim();\n          if (newValue === '') {\n            alert('Value cannot be empty');\n            input.focus();\n            return;\n          }\n          setLoading(true);\n          const formData = new URLSearchParams();\n          formData.append('id', rec.id);\n          formData.append('action', 'update');\n          formData.append('field', rec.field);\n          formData.append('value', newValue);\n          fetch(webhookURL, {\n            method: 'POST',\n            body: formData,\n          })\n          .then(response => {\n            if (!response.ok) throw new Error('HTTP ' + response.status);\n            window.location.reload();\n          })\n          .catch(err => {\n            setLoading(false);\n            alert('Update failed: ' + err.message);\n          });\n        }\n      };\n      cancelUpdateBtn.onclick = () => {\n        exitEditMode(false);\n      };\n      deleteBtn.onclick = () => {\n        showDeleteConfirm(async () => {\n          setLoading(true);\n          const formData = new URLSearchParams();\n          formData.append('id', rec.id);\n          formData.append('action', 'delete');\n          try {\n            const res = await fetch(webhookURL, {\n              method: 'POST',\n              body: formData,\n            });\n            if (!res.ok) throw new Error('HTTP ' + res.status);\n            window.location.reload();\n          } catch(e) {\n            setLoading(false);\n            alert('Delete failed: ' + e.message);\n          }\n        });\n      };\n      tile.appendChild(updateBtn);\n      tile.appendChild(cancelUpdateBtn);\n      tile.appendChild(deleteBtn);\n      container.appendChild(tile);\n    }\n    renderPagination(field);\n  }\n\n  (function setupTabs() {\n    const tabsContainer = el('tabs');\n\n    if (!tabsContainer.querySelector(\\`[data-tab=\"\\${addRecordTabKey}\"]\\`)) {\n      const addRecordTab = createElement('div', {\n        className: 'tab add-record-tab',\n        'data-tab': addRecordTabKey,\n        'role': 'tab',\n        'tabindex': '-1',\n        'aria-selected': 'false',\n        title: 'Add New Record',\n      }, 'Add Record');\n      tabsContainer.appendChild(addRecordTab);\n    }\n\n    if (!el('content-' + addRecordTabKey)) {\n      const contents = el('contents');\n      const addRecordContent = createElement('div', {\n        className: 'content',\n        id: 'content-' + addRecordTabKey,\n        role: 'tabpanel',\n        'aria-label': 'Add New Record',\n        'aria-hidden': 'true',\n        style: 'display:none; padding: 20px;'\n      });\n\n      addRecordContent.innerHTML = \\`\n        <h3 style=\"margin-top: 0; color: #0f172a;\">Add New Record</h3>\n        <label for=\"addFieldTab\">Field Type:</label>\n        <select id=\"addFieldTab\" aria-required=\"true\" style=\"width: 100%; padding: 14px 14px; font-size: 1rem; border-radius: 12px; border: 1.5px solid #cbd5e1; margin-bottom: 24px; color: #334155;\">\n          \\${fieldTypes.map(f => \\`<option value=\"\\${escapeHtml(f)}\">\\${escapeHtml(fieldMap[f])}</option>\\`).join('')}\n        </select>\n        <label for=\"addValueTab\">Value:</label>\n        <input type=\"text\" id=\"addValueTab\" placeholder=\"Enter value\" aria-required=\"true\" style=\"width: 100%; padding:14px; font-size: 1rem; border-radius: 12px; border: 1.5px solid #cbd5e1; margin-bottom:24px; color: #334155;\" />\n        <div style=\"text-align: right;\">\n          <button id=\"addSubmitTabBtn\" type=\"button\" style=\"background-color: #2563eb; color: white; padding: 12px 30px; border-radius: 10px; font-size: 1rem; cursor: pointer; box-shadow: 0 5px 14px rgba(37, 99, 235, 0.5);\">Add</button>\n        </div>\n      \\`;\n\n      contents.appendChild(addRecordContent);\n    }\n\n    const tabs = tabsContainer.querySelectorAll('.tab');\n\n    function activateTab(newTabKey) {\n      if(newTabKey === currentTab) return;\n      const currentActiveTab = tabsContainer.querySelector('.tab.active');\n      if(currentActiveTab) {\n        currentActiveTab.classList.remove('active');\n        currentActiveTab.setAttribute('aria-selected', 'false');\n        currentActiveTab.setAttribute('tabindex', '-1');\n      }\n      const newActiveTab = tabsContainer.querySelector(\\`.tab[data-tab=\"\\${newTabKey}\"]\\`);\n      if(newActiveTab) {\n        newActiveTab.classList.add('active');\n        newActiveTab.setAttribute('aria-selected', 'true');\n        newActiveTab.setAttribute('tabindex', '0');\n        newActiveTab.focus();\n      }\n      if(el('content-' + currentTab)) {\n        el('content-' + currentTab).style.display = 'none';\n        el('content-' + currentTab).setAttribute('aria-hidden', 'true');\n      }\n      if(el('content-' + newTabKey)) {\n        el('content-' + newTabKey).style.display = 'block';\n        el('content-' + newTabKey).setAttribute('aria-hidden', 'false');\n        if(newTabKey !== addRecordTabKey) {\n          renderRecords(newTabKey);\n        } else {\n          setTimeout(() => {\n            const addValueTab = el('addValueTab');\n            if(addValueTab) addValueTab.focus();\n          }, 100);\n        }\n      }\n      currentTab = newTabKey;\n    }\n\n    tabs.forEach(tab => {\n      tab.addEventListener('click', () => {\n        activateTab(tab.dataset.tab);\n      });\n      tab.addEventListener('keydown', (ev) => {\n        if(ev.key === 'Enter' || ev.key === ' ') {\n          ev.preventDefault();\n          tab.click();\n        }\n      });\n    });\n  })();\n\n  const addBtn = el('addBtn');\n  const openQRBtn = el('openQRBtn');\n\n  const addPopupOverlay = el('addPopupOverlay');\n  const addSubmitBtn = el('addSubmitBtn');\n  const addCancelBtn = el('addCancelBtn');\n  const addFieldSelect = el('addField');\n  const addValueInput = el('addValue');\n\n  addBtn.addEventListener('click', () => {\n    const tabsContainer = el('tabs');\n    const addRecordTab = tabsContainer.querySelector(\\`[data-tab=\"\\${addRecordTabKey}\"]\\`);\n    if(addRecordTab) {\n      addRecordTab.click();\n    } else {\n      addFieldSelect.value = fieldTypes[0];\n      addValueInput.value = '';\n      addPopupOverlay.style.display = 'flex';\n      addValueInput.focus();\n    }\n  });\n\n  addCancelBtn.addEventListener('click', () => {\n    addPopupOverlay.style.display = 'none';\n  });\n\n  addPopupOverlay.addEventListener('click', (e) => {\n    if(e.target === addPopupOverlay) {\n      addPopupOverlay.style.display = 'none';\n    }\n  });\n\n  addSubmitBtn.addEventListener('click', async () => {\n    const selectedField = addFieldSelect.value;\n    const val = addValueInput.value.trim();\n    if(val === '') {\n      alert('Value is required');\n      addValueInput.focus();\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new URLSearchParams();\n      formData.append('action', 'add');\n      formData.append('field', selectedField);\n      formData.append('value', val);\n      const resp = await fetch(webhookURL, {\n        method: 'POST',\n        body: formData,\n      });\n      if(!resp.ok) throw new Error('HTTP ' + resp.status);\n      addPopupOverlay.style.display = 'none';\n      window.location.reload();\n    } catch(e) {\n      setLoading(false);\n      alert('Add failed: ' + e.message);\n    }\n  });\n\n  const addSubmitTabBtn = el('addSubmitTabBtn');\n  const addFieldTab = el('addFieldTab');\n  const addValueTab = el('addValueTab');\n\n  if(addSubmitTabBtn && addFieldTab && addValueTab) {\n    addSubmitTabBtn.addEventListener('click', async () => {\n      const selectedField = addFieldTab.value;\n      const val = addValueTab.value.trim();\n      if(val === '') {\n        alert('Value is required');\n        addValueTab.focus();\n        return;\n      }\n      setLoading(true);\n      try {\n        const formData = new URLSearchParams();\n        formData.append('action', 'add');\n        formData.append('field', selectedField);\n        formData.append('value', val);\n        const resp = await fetch(webhookURL, {\n          method: 'POST',\n          body: formData,\n        });\n        if(!resp.ok) throw new Error('HTTP ' + resp.status);\n        window.location.reload();\n      } catch(e) {\n        setLoading(false);\n        alert('Add failed: ' + e.message);\n      }\n    });\n  }\n\n  openQRBtn.addEventListener('click', () => {\n    window.open(qrGeneratorURL, '_blank');\n  });\n\n  const confirmDeleteOverlay = el('confirmDeleteOverlay');\n  const confirmDeleteDeleteBtn = el('confirmDeleteDeleteBtn');\n  const confirmDeleteCancelBtn = el('confirmDeleteCancelBtn');\n  let onConfirmDelete = null;\n\n  function showDeleteConfirm(onConfirm) {\n    onConfirmDelete = onConfirm;\n    confirmDeleteOverlay.style.display = 'flex';\n    confirmDeleteDeleteBtn.focus();\n  }\n  function hideDeleteConfirm() {\n    confirmDeleteOverlay.style.display = 'none';\n    onConfirmDelete = null;\n  }\n  confirmDeleteDeleteBtn.addEventListener('click', () => {\n    if (typeof onConfirmDelete === 'function') {\n      onConfirmDelete();\n    }\n    hideDeleteConfirm();\n  });\n  confirmDeleteCancelBtn.addEventListener('click', hideDeleteConfirm);\n  confirmDeleteOverlay.addEventListener('click', (e) => {\n    if(e.target === confirmDeleteOverlay) {\n      hideDeleteConfirm();\n    }\n  });\n\n  renderRecords(currentTab);\n});\n</script>\n\n</body>\n</html>\n      `\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        -1580
      ],
      "id": "94fca11f-0cb1-451a-976c-9b381b395b2f",
      "name": "Code15"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.67",
            "x-forwarded-for": "10.0.24.67",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua": "\"Chromium\";v=\"136\", \"Microsoft Edge\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "none",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "document",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDgzNDcxMjgsImV4cCI6MTc0ODk1MTkyOH0.SG2FQS9OuMkadcHgl5oVwxic6NYUqSvD8Y3Z5LqcjnM; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2Bi34GwaHeLhVy%2BR0ydHik0hawXZe7wjk8iI%2F9cKhkmeAPwCFTd2BNfPtKqOHDc0pokfZotR4LHQg%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX19WvMkyr9CuLpm4U2R94ubVfJwll2bln2QSp1in1fyTQyi0dU%2BFoUUWi1Ppx36WIi9y5Gmc6OSm0xH%2FOSTSHJKiWgjl2BVQ4gskMk%2BZhqedkPVWGKn9SC2hx1kwREQGnM3Z6ZLgW%2BwSACrEG3Z4%2F6WOYWNnHvMnG4U%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX19XmLZwN1vnnqyA56MAhnziRkr6a7lSlskC7snmiivAr2H7Xie2MX7xJVGDOmwTjy2Vrx%2FefF65pqq1lNhZfGo2nXmAOgwJtmam%2BityR%2FBH5p9mPvHU0bQEHQWtESfvleFDpDCXXJlA1g%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1748386402473%2C%22019713a3-e5bb-7f80-82ae-c3e65e23c724%22%2C1748381197755%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%2C%22%24configured_session_timeout_ms%22%3A1800000%2C%22%24client_session_props%22%3A%7B%22sessionId%22%3A%22019713a3-e5bb-7f80-82ae-c3e65e23c724%22%2C%22props%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fworkflows%2Fdemo%22%7D%7D%2C%22%24active_feature_flags%22%3A%5B%22028_schema_preview%22%2C%22027_free_openai_calls%22%2C%22024_credential_docs%22%2C%2220_canvas_auto_add_manual_trigger%22%2C%22011_ask_AI%22%2C%22006_cloud_opt_in%22%2C%22009_choosing_trial_plan%22%2C%22schema-view%22%2C%22017_template_credential_setup_v2%22%2C%22021_ai_debug_helper%22%5D%2C%22%24enabled_feature_flags%22%3A%7B%22028_schema_preview%22%3A%22variant%22%2C%22027_free_openai_calls%22%3A%22variant%22%2C%22024_credential_docs%22%3A%22control%22%2C%2220_canvas_auto_add_manual_trigger%22%3A%22control%22%2C%22011_ask_AI%22%3A%22gpt3%22%2C%22006_cloud_opt_in%22%3A%22control%22%2C%22009_choosing_trial_plan%22%3A%22variant%22%2C%22schema-view%22%3Atrue%2C%22017_template_credential_setup_v2%22%3Atrue%2C%22021_ai_debug_helper%22%3A%22variant%22%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%2C%22%24feature_flag_details%22%3A%7B%7D%2C%22%24user_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24had_persisted_distinct_id%22%3Atrue%2C%22%24device_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24stored_person_properties%22%3A%7B%22instance_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%22%2C%22created_at_timestamp%22%3A1698879072899%7D%2C%22%24capture_rate_limit%22%3A%7B%22tokens%22%3A98.21%2C%22last%22%3A1748386402472%7D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24session_recording_network_payload_capture%22%3A%7B%22capturePerformance%22%3Afalse%7D%2C%22%24session_recording_canvas_recording%22%3A%7B%7D%2C%22%24replay_sample_rate%22%3Anull%2C%22%24replay_minimum_duration%22%3Anull%2C%22%24autocapture_disabled_server_side%22%3Afalse%2C%22%24heatmaps_enabled_server_side%22%3Afalse%2C%22%24web_vitals_enabled_server_side%22%3Afalse%2C%22%24exception_capture_enabled_server_side%22%3Afalse%2C%22%24error_tracking_suppression_rules%22%3A%5B%5D%2C%22%24dead_clicks_enabled_server_side%22%3Afalse%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2B2%2Bg%2BBu4ZCpHvepOOVyhmQlmLlHcu4NvHhDFkMHvtLglDpHW03jZIrfQaLYvuIbnkNYWzN9uAuVWYkhqYloXBcTBg1T3oD0H5LMTvqRDf6rlk0G3KNldI0Vk%2By8U4lAdKOPLy5glsk1Q%3D%3D",
            "if-none-match": "W/\"1caf-HGX0uACmWmdW29buNFciGFj4mDo\""
          },
          "params": {},
          "query": {
            "title": "EPIC Health",
            "location": "Detroit",
            "area": "FrontDesk",
            "entity": "ehs",
            "source": "mobile"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990",
          "executionMode": "production"
        }
      }
    ],
    "Webhook1": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.71",
            "x-forwarded-for": "10.0.24.71",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "content-length": "1266",
            "sec-ch-ua-platform": "\"Windows\"",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
            "sec-ch-ua": "\"Chromium\";v=\"136\", \"Microsoft Edge\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
            "content-type": "multipart/form-data; boundary=----WebKitFormBoundaryktFXQba6qOSbvwSf",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "origin": "https://xl.epicpc.com",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "cors",
            "sec-fetch-dest": "empty",
            "referer": "https://xl.epicpc.com/webhook/ea1a00b6-e63d-49dc-bb65-7fa28b5e8990?title=EPIC%20Health&location=Detroit&area=FrontDesk&entity=ehs&source=mobile&patient_id=12345",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDgzNDcxMjgsImV4cCI6MTc0ODk1MTkyOH0.SG2FQS9OuMkadcHgl5oVwxic6NYUqSvD8Y3Z5LqcjnM; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2FGIecgkQeVkkOiZhRiFzqtIT%2Byt7RMly7eF%2ByRwG5QaLXk5%2BvH9q1fkzk0C9GyUJyaZAkh6uCQpQ%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX181jdCoLXyjJkPNZ7PnJpp2nYeURJXCrUrAS5lV23TsUPsguKr%2BDB5vvPVtfshuC%2BEgFZTJq1x%2BxU5mvZslTIaP6k3ln27irpa3lBtzroDQt%2FeOfcOm5Vxu0b8UYMvD6ge2NgEZH0b0%2BPRDhfD4jzIiaDYO9iQEHcE%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2ByMALo0RGG31ATQGd5pH%2BxzNmkl3DhKIU4mqoC%2B1QbgF9QZnBba9R%2F1INnRqfRlQZ5Td7kivE44us2O3bNLUEYNCgzibXsYKAzC3vuZRrx2tZvw%2Fskq6zDPECsaTOmokSkVizdV5zt8Q%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1748444289876%2C%2201971752-140a-71df-a57b-0532eb13c91f%22%2C1748442944522%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%2C%22%24configured_session_timeout_ms%22%3A1800000%2C%22%24client_session_props%22%3A%7B%22sessionId%22%3A%2201971752-140a-71df-a57b-0532eb13c91f%22%2C%22props%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fworkflow%2FlsTNqd8JeAqRcsht%2Fexecutions%2F3354486%22%7D%7D%2C%22%24active_feature_flags%22%3A%5B%22028_schema_preview%22%2C%22027_free_openai_calls%22%2C%22024_credential_docs%22%2C%2220_canvas_auto_add_manual_trigger%22%2C%22011_ask_AI%22%2C%22006_cloud_opt_in%22%2C%22009_choosing_trial_plan%22%2C%22schema-view%22%2C%22017_template_credential_setup_v2%22%2C%22021_ai_debug_helper%22%5D%2C%22%24enabled_feature_flags%22%3A%7B%22028_schema_preview%22%3A%22variant%22%2C%22027_free_openai_calls%22%3A%22variant%22%2C%22024_credential_docs%22%3A%22control%22%2C%2220_canvas_auto_add_manual_trigger%22%3A%22control%22%2C%22011_ask_AI%22%3A%22gpt3%22%2C%22006_cloud_opt_in%22%3A%22control%22%2C%22009_choosing_trial_plan%22%3A%22variant%22%2C%22schema-view%22%3Atrue%2C%22017_template_credential_setup_v2%22%3Atrue%2C%22021_ai_debug_helper%22%3A%22variant%22%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%2C%22%24feature_flag_details%22%3A%7B%7D%2C%22%24user_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24had_persisted_distinct_id%22%3Atrue%2C%22%24device_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24stored_person_properties%22%3A%7B%22instance_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%22%2C%22created_at_timestamp%22%3A1698879072899%7D%2C%22%24capture_rate_limit%22%3A%7B%22tokens%22%3A98.04%2C%22last%22%3A1748444289876%7D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24session_recording_network_payload_capture%22%3A%7B%22capturePerformance%22%3Afalse%7D%2C%22%24session_recording_canvas_recording%22%3A%7B%7D%2C%22%24replay_sample_rate%22%3Anull%2C%22%24replay_minimum_duration%22%3Anull%2C%22%24autocapture_disabled_server_side%22%3Afalse%2C%22%24heatmaps_enabled_server_side%22%3Afalse%2C%22%24web_vitals_enabled_server_side%22%3Afalse%2C%22%24exception_capture_enabled_server_side%22%3Afalse%2C%22%24error_tracking_suppression_rules%22%3A%5B%5D%2C%22%24dead_clicks_enabled_server_side%22%3Afalse%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2BwuszDn6%2BbfNpnmfkCD%2FZK3aPAEsq45c0P0CMMay%2FD3HFwI4JHwJfnbeEAEBiOClEtQ%2FguthAfJ0MaCRoX23QY3kwUPYyZIyENsi4CFzosClygXwaGa%2FvtrBD4XwRa4tX%2BI5oaC6b7Qg%3D%3D"
          },
          "params": {},
          "query": {},
          "body": {
            "score": "5",
            "comments": "Yay!",
            "response_required": "",
            "contact_name": "",
            "contact_mobile": "",
            "contact_email": "",
            "entity": "ehs",
            "location": "Detroit",
            "area": "FrontDesk",
            "survey_source": "mobile",
            "patient_id": "12345",
            "date_sent": "2025-05-28T15:01:25.128Z"
          },
          "webhookUrl": "https://xl.epicpc.com/webhook/2f300ab3-c5c9-4bc4-901f-f30fa1e63568",
          "executionMode": "production"
        }
      }
    ],
    "NocoDB": [
      {
        "json": {
          "Id": 1,
          "Field": "entity",
          "CreatedAt": "2025-06-17 16:32:21",
          "UpdatedAt": "2025-06-17 16:34:32",
          "Value": "EHS"
        }
      },
      {
        "json": {
          "Id": 2,
          "Field": "survey_source",
          "CreatedAt": "2025-06-17 16:34:33",
          "UpdatedAt": "2025-06-17 16:34:48",
          "Value": "Gemba"
        }
      },
      {
        "json": {
          "Id": 3,
          "Field": "location",
          "CreatedAt": "2025-06-17 16:34:51",
          "UpdatedAt": "2025-06-17 16:35:07",
          "Value": "EPIC Southfield 10 Mile"
        }
      },
      {
        "json": {
          "Id": 4,
          "Field": "area",
          "CreatedAt": "2025-06-17 16:35:12",
          "UpdatedAt": "2025-06-17 16:35:27",
          "Value": "Lobby"
        }
      }
    ],
    "NocoDB1": [
      {
        "json": {
          "Id": 1,
          "Field": "entity",
          "CreatedAt": "2025-06-17 16:32:21",
          "UpdatedAt": "2025-06-17 16:34:32",
          "Value": "EHS"
        }
      },
      {
        "json": {
          "Id": 2,
          "Field": "survey_source",
          "CreatedAt": "2025-06-17 16:34:33",
          "UpdatedAt": "2025-06-17 16:34:48",
          "Value": "Gemba"
        }
      },
      {
        "json": {
          "Id": 3,
          "Field": "location",
          "CreatedAt": "2025-06-17 16:34:51",
          "UpdatedAt": "2025-06-17 16:35:07",
          "Value": "EPIC Southfield 10 Mile"
        }
      },
      {
        "json": {
          "Id": 4,
          "Field": "area",
          "CreatedAt": "2025-06-17 16:35:12",
          "UpdatedAt": "2025-06-17 16:35:27",
          "Value": "Lobby"
        }
      }
    ],
    "Webhook3": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.155",
            "x-forwarded-for": "10.0.24.155",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "content-length": "50",
            "sec-ch-ua-platform": "\"Windows\"",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0",
            "sec-ch-ua": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"",
            "content-type": "application/x-www-form-urlencoded;charset=UTF-8",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "origin": "https://xl.epicpc.com",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "cors",
            "sec-fetch-dest": "empty",
            "referer": "https://xl.epicpc.com/webhook/4d4e12fa-fd8d-49a2-8763-e3ae12ea5ceb",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; patient_phone=2488726322; patient_dob_year=1988; patient_dob_month=02; patient_dob_day=01; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NTAwNzg1OTgsImV4cCI6MTc1MDY4MzM5OH0.0PASJrPh9HQERR3W9N1DUhB00106cWKtPb8PUhnG_m8; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX180GuubVpS00AS4QwKM%2BLMxd%2FHYbGbhOltOYNpcOhmeP%2Bx1N%2BEPrOPs8dwEiGk7BEQQsAhHE40oNQ%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2FObqv6xuK91vT9YSNLWsW7HwcJQZd%2F7g%2Bx%2Ff%2B3aSs0yRFsp5cQ0yYkJeKpJpUP7qt1Hc6qPKH9KUy1QJWTFfU7FQAT27Tf2NNSQ4bWiKoOFQ%2BMKNNZ3qchD6B1151EJ4yYSK647RuVkxdfxqQzNXbKclXzwhSpO2w%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX18tEB54o8oQyDzEa8KfTk00NgiOhE4%2FXhzB14cF7791coa0%2BGUS1XqFxHp9MLGyRmJrmquH%2FcESCtrv%2FW9H8jZ3pAkrbUaegU5DjDXsKNvKGYIrOBEgBfKDIeZ8jUohkEuy7b0ynv3i4Q%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1750179551389%2C%2201977eb4-063e-7d4e-91cc-a1c6d385c3d1%22%2C1750177416766%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX18rrmvNOoGY8RoX%2Bzp0WkqA0rqyMETLBRAB9sEC4A5iOegYiqd2i6i7ojU%2FR5jFS%2F2vgYSvNJnuW6y0hHGknQiYF94BCuymhG3jMhiT6QqrZnVT7Ky0pLbCKYYkUgrlq9eh75m92sRGxg%3D%3D"
          },
          "params": {},
          "query": {},
          "body": {
            "id": "2",
            "action": "update",
            "field": "Survey Source",
            "value": "Gemba"
          },
          "webhookUrl": "https://xl.epicpc.com/webhook/4377c42c-64b0-4aee-9f49-82cce54896a7",
          "executionMode": "production"
        }
      }
    ],
    "NocoDB5": [
      {
        "json": {
          "Id": 1,
          "Field": "entity",
          "CreatedAt": "2025-06-17 16:32:21",
          "UpdatedAt": "2025-06-17 16:34:32",
          "Value": "EHS"
        }
      },
      {
        "json": {
          "Id": 2,
          "Field": "survey_source",
          "CreatedAt": "2025-06-17 16:34:33",
          "UpdatedAt": "2025-06-17 16:34:48",
          "Value": "Gemba"
        }
      },
      {
        "json": {
          "Id": 3,
          "Field": "location",
          "CreatedAt": "2025-06-17 16:34:51",
          "UpdatedAt": "2025-06-17 16:35:07",
          "Value": "EPIC Southfield 10 Mile"
        }
      },
      {
        "json": {
          "Id": 4,
          "Field": "area",
          "CreatedAt": "2025-06-17 16:35:12",
          "UpdatedAt": "2025-06-17 16:35:27",
          "Value": "Lobby"
        }
      }
    ],
    "Get many rows1": [
      {
        "json": {
          "Id": 1,
          "Resource": "Virtual Checkout",
          "CreatedAt": "2025-07-16 19:12:57",
          "UpdatedAt": "2025-07-16 19:30:19",
          "ResourceURL": "https://xl.epicpc.com/webhook/0dfd1586-60f3-4735-b8e7-4ff7da3a0d83"
        }
      }
    ],
    "Webhook7": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.45",
            "x-forwarded-for": "10.0.24.45",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "content-length": "218",
            "sec-ch-ua-platform": "\"Windows\"",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
            "sec-ch-ua": "\"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\", \"Microsoft Edge\";v=\"138\"",
            "content-type": "application/json",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "origin": "https://xl.epicpc.com",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "cors",
            "sec-fetch-dest": "empty",
            "sec-fetch-storage-access": "active",
            "referer": "https://xl.epicpc.com/webhook/8e0030a4-aaae-4ade-a75d-3ab11b269b08?user=tstilwell",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9"
          },
          "params": {},
          "query": {},
          "body": {
            "type": "Favorite Change",
            "action": "Added Favorite",
            "resource": "Campaignerizer",
            "url": "https://xl.epicpc.com/webhook/4b40d089-97c6-466a-b96c-13c147cbb810?resource=campaignerizer",
            "timestamp": "2025-07-17T20:49:12.700Z"
          },
          "webhookUrl": "https://xl.epicpc.com/webhook/3740ac2c-2310-449f-8baa-cb8086975b42",
          "executionMode": "production"
        }
      }
    ],
    "Code10": [
      {
        "json": {
          "type": "Report an Issue",
          "resource": "NPS Creator",
          "url": "https://xl.epicpc.com/webhook/ece6d39b-de5d-4fb1-bea1-a681440b1184",
          "message": "The thing is something",
          "timestamp": "2025-07-17T12:41:26.716Z"
        }
      }
    ],
    "Webhook8": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.45",
            "x-forwarded-for": "10.0.24.45",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua": "\"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\", \"Microsoft Edge\";v=\"138\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "document",
            "referer": "https://xl.epicpc.com/webhook/8e0030a4-aaae-4ade-a75d-3ab11b269b08?user=tstilwell",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; patient_phone=2488726322; patient_dob_year=1988; patient_dob_month=02; patient_dob_day=01; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NTI3NTIwMzUsImV4cCI6MTc1MzM1NjgzNX0.060NCock4fUbvvdk5aph46hRZo8ql02fa0oFOmedyAA; XSRF-TOKEN=eyJpdiI6IlpBRDRWaDJUVUc0enBXUzhHbHlFNXc9PSIsInZhbHVlIjoiaXM5MWpCWUk4K0VkWkRsN09WXC9GM0ErMzRMRm9aa2YxbFZMWDBWeit6ZGpYNUQ2RmRyQXl4RVNnTHpybldtUkUiLCJtYWMiOiIxNzcwZTkxOWJiOGFiMmEwNGZiNTU3YTA2ODk2MGU4MGRlYWRmYzdmN2NhN2JkNTBjYWE2NjljYzNlZDk1Y2QzIn0%3D; epic_session=eyJpdiI6IjYyR05BRG1JVmdOb3NZQkFqQXdUQnc9PSIsInZhbHVlIjoiN2NNelAzcXlUQTkrQk1QNnZjd1wvQzM3OGc4OHdtOVlUWHhOTkhQVEZvMGtOakV4c1BTMkRMXC9PZGNRMGJKSXBWIiwibWFjIjoiYjgwNzE2MzUzZTY1ZDc2MGFiMmFmNDI5NjUyMjJkMmFkY2VkNTAyOTU0ODBlMWVhMmU3YjZjMTFjOWIwY2E5NiJ9; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2BaCkrI1SC5WwRHnbJDz9vaMF1Jo48a%2FIgRQnvZIJeO54atu%2BTHrAjDt8ASD1gSjR3EY2WlR3vJYw%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2FMnoyVSxnrEoplxHGcEEVkQYV1mPkWBetGLiCX0TSkjdTgKRGTmPIXI5%2BsefMCZDpZYKgeSChiYNMLNI6oEQY1LJWdLNuVPZhnBQaD4z7zlo2Q%2FB7E6%2BKnpdDGK%2BStfG2D8kSzBEuJWA5GU0%2Foz5xMr8BEBax5BfU%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2B%2BhpbXMUdofAl7k0GF1GWmH9Sn8fd3z29e6D5mSU89QFlXWedka3NKjJ8dWHVATx7M%2Fs%2FHvXf9WlQWBgROeGTtCnc93AsDy4olR%2BQBFhofdN2WMM6ag6tJVGS7Wd18l8Cho3ZQyrhX3w%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1752779234819%2C%22019819a0-a212-7943-a020-758a8762d1ea%22%2C1752776614415%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2BwCwW8WOTHN77nSlQlpnW9VjrTtTO0Nevjh7wPS34mIlHDYh1EvXTF63xlUsGNv8JRrxoBMXv6GNvmdJUMkbyZ3veQytnGZaorXISa4k8o7IiPf5OWzt2B0pbWvbtN5F2d3Vz22pBBmg%3D%3D"
          },
          "params": {},
          "query": {
            "Resource": "Campaignerizer"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/4b40d089-97c6-466a-b96c-13c147cbb810",
          "executionMode": "production"
        }
      }
    ],
    "Edit Fields": [
      {
        "json": {
          "referer": "https://xl.epicpc.com/webhook/8e0030a4-aaae-4ade-a75d-3ab11b269b08?user=tstilwell"
        }
      }
    ],
    "Code11": [
      {
        "json": {
          "referer": "https://xl.epicpc.com/webhook/8e0030a4-aaae-4ade-a75d-3ab11b269b08?user=tstilwell",
          "user": "tstilwell"
        }
      }
    ],
    "Get many rows3": [
      {
        "json": {
          "Id": 6,
          "Resource": "Campaignerizer",
          "CreatedAt": "2025-07-17 18:19:14",
          "UpdatedAt": "2025-07-17 19:01:59",
          "url": "https://xl.epicpc.com/webhook/4b40d089-97c6-466a-b96c-13c147cbb810?Resource=Campaignerizer",
          "Description": "Create automated sms or phone campaigns, or manual Turbo Call",
          "Category": "Contact Center",
          "Image": null,
          "ResourceURL": "https://xl.epicpc.com/webhook/838916fd-321b-423a-9e10-f5c35cfc5a29"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 9,
  "updatedAt": "2025-07-17T23:23:37.401Z",
  "versionId": "12c15a7f-b109-466d-aac1-f753c76eb1e9"
}