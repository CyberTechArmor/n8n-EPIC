{
  "active": false,
  "connections": {
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "Microsoft SQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Microsoft SQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If NOCOV": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 1
          },
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Patient_ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Merge10",
            "type": "main",
            "index": 1
          },
          {
            "node": "Merge9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Postgres Permanent Persisted",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres Monthly Persisted",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge10",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge9": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Patient_ID": {
      "main": [
        [
          {
            "node": "Merge10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge10": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Microsoft Provider": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Limit9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Microsoft Provider",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB": {
      "main": [
        []
      ]
    },
    "Microsoft Provider1": {
      "main": [
        [
          {
            "node": "NocoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit8": {
      "main": [
        [
          {
            "node": "HTTP Bitrix24 Unsure",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge7",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "NocoDB1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB1": {
      "main": [
        [
          {
            "node": "GOOD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB2": {
      "main": [
        [
          {
            "node": "GOOD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If HMO Plan": {
      "main": [
        [
          {
            "node": "If Medicade Plan",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Microsoft Provider",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If HMO Plan",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token10": {
      "main": [
        [
          {
            "node": "Extract PM Token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token10": {
      "main": [
        [
          {
            "node": "Check Token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token10": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "IF PM Token Valid5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "Execute Workflow6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid5": {
      "main": [
        [
          {
            "node": "Read PM Token11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token11": {
      "main": [
        [
          {
            "node": "Extract PM Token11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token11": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow6": {
      "main": [
        [
          {
            "node": "USER3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER3": {
      "main": [
        [
          {
            "node": "Read PM Token10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GOOD": {
      "main": [
        [
          {
            "node": "PM Auth",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PM Auth": {
      "main": [
        [
          {
            "node": "USER3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Bitrix24 Failed Inactive": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Bitrix24 Unsure1": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Bitrix24 Failed Inactive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit3": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 1
          },
          {
            "node": "USER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token": {
      "main": [
        [
          {
            "node": "Extract PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token": {
      "main": [
        [
          {
            "node": "Check Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "IF PM Token Valid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Execute Workflow7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid": {
      "main": [
        [
          {
            "node": "Read PM Token12",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token12": {
      "main": [
        [
          {
            "node": "Extract PM Token12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token12": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow7": {
      "main": [
        [
          {
            "node": "USER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER": {
      "main": [
        [
          {
            "node": "Read PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "Merge8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Bitrix24 Unsure": {
      "main": [
        [
          {
            "node": "Merge7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Confirm2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Confirm3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge11": {
      "main": [
        [
          {
            "node": "Pass or Fail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing6": {
      "main": [
        [
          {
            "node": "Merge11",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Postgres Monthly Persisted Check": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing7": {
      "main": [
        [
          {
            "node": "HTTP Bitrix24 Unsure1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge7": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres Drop Monthly Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "SendGrid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "SendGrid1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Date & Time2": {
      "main": [
        [
          {
            "node": "Date & Time3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time3": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Merge13",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge8": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Date & Time2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge12",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge12": {
      "main": [
        [
          {
            "node": "HTTP Confirm2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge13",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge13": {
      "main": [
        [
          {
            "node": "HTTP Confirm3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass or Fail": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge14",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Merge14",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge14": {
      "main": [
        [
          {
            "node": "If Within the Month",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Within the Month": {
      "main": [
        [
          {
            "node": "If NOCOV",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If Medicade Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Medicade Plan": {
      "main": [
        [
          {
            "node": "Microsoft Provider",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NocoDB2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit9": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare Datasets": {
      "main": [
        [
          {
            "node": "Limit8",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "GOOD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Compare Datasets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Compare Datasets",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "No Operation, do nothing8": {
      "main": [
        [
          {
            "node": "Postgres Monthly Persisted Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Microsoft SQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-21T19:41:36.271Z",
  "id": "FrAOBBHvHQrZVWJ4",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "P-Verify New",
  "nodes": [
    {
      "parameters": {},
      "id": "f5fdd1c3-d559-45ce-bdba-dfc256f0eb06",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -114,
        684
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "with genpatinfo as(\n \nselect g.Patient_ID,g.Patient_Number, g.Patient_Name,g.Patient_LFI,\n \ng.Patient_First_Name,g.Patient_Last_Name,g.Patient_Street1,g.Patient_City,g.Patient_State,g.Patient_Zip_Code,\n \ng.Patient_SSN,g.Patient_Sex,g.Patient_DOB, g.Patient_Age,g.Patient_Marital_Status,g.Patient_Home_Phone,g.Patient_Cell_Phone,\n \ng.Patient_Primary_Phone_Number,g.Patient_Email\n \nfrom [PM].[vwGenPatInfo] g\n \n),\n \npatid as(\n \nselect p.Patient_ID,p.Patient_Number,p.Date_Registered,\n \np.Comments,p.Account_ID,p.Contact_ID\n \nfrom [PM].[Patients] p\n \n),\n \npatpol as(\n \nselect pp.Patient_Policy_ID,pp.Policy_ID,pp.Patient_ID,\n \npp.Coverage,pp.Verified_Date\n \nfrom [PM].[Patient_Policies] pp\n \n),\n \ngenpol as( select po.Policy_ID,po.Group_No,po.Certificate_No,\n \npo.Comments,po.Effective_Date,po.Expiration_Date,\n \npo.Carrier_ID,po.Insurance_Plan_ID,po.Contact_ID,po.Account_ID\n \nfrom  [PM].[Policies] po\n \n),\n \nprimcov as(\n \nselect\n \n    g.Patient_ID, g.Patient_Number,g.Patient_Name,g.Patient_First_Name, g.Patient_Last_Name,\n \n    g.Patient_LFI,g.Patient_Street1,g.Patient_City,g.Patient_State,g.Patient_Zip_Code,\n \n    g.Patient_SSN,g.Patient_Sex,convert(varchar(10), g.Patient_DOB, 101) as Patient_DOB,\n \n    g.patient_age,g.Patient_Marital_Status,g.Patient_Home_Phone,g.Patient_Cell_Phone,\n \n    g.Patient_Email,p.Account_ID as Patient_Account_ID,p.Contact_ID as Patient_Contact_ID,\n \n    p.Date_Registered,p.Comments as Patient_Comments,pp.Patient_Policy_ID,\n \n    pp.Policy_ID as Patient_Policy_Policy_ID,pp.Coverage,pp.Verified_Date,\n \n    po.Account_ID as Policy_Account_ID,po.Carrier_ID as Policy_Carrier_ID,\n \n    c.Name as Carrier_Name,c.Payor_Number,i.CoPayment_Amount,po.Insurance_Plan_ID,\n \n    po.Carrier_ID as Insurance_Carrier_ID,po.Certificate_No,po.Group_No,\n \n    po.Comments as Policy_Comments,po.Effective_Date,po.Expiration_Date\n \nfrom genpatinfo g\n \nleft join patid p on p.Patient_ID = g.Patient_ID\n \nleft join patpol pp on pp.Patient_ID = p.Patient_ID\n \nleft join genpol po on po.Policy_ID = pp.Policy_ID\n \nleft join [PM].[Carriers] c on c.Carrier_ID = po.Carrier_ID\n \nleft join [PM].[Insurance_Plans] i on i.Insurance_Plan_ID = po.Insurance_Plan_ID\n \nwhere pp.Coverage in ('P')\n \n),\n \nsecondins as(\n \nselect\n \n    g.Patient_ID, g.Patient_Number,pp.Patient_Policy_ID as secPatient_Policy_ID ,\n \n    pp.Policy_ID as secPatient_Policy_Policy_ID,pp.Coverage as secCoverage,pp.Verified_Date as secVerified_date,\n \n    po.Account_ID as secPolicy_Account_ID,po.Carrier_ID as secPolicy_Carrier_ID,\n \n    c.Name as secCarrier_Name,c.Payor_Number as secPayor_Number,i.CoPayment_Amount as secCopayment,po.Insurance_Plan_ID as secIns_plan,\n \n    po.Carrier_ID as secInsurance_Carrier_ID,po.Certificate_No as secCertificate_No,po.Group_No as secGroup_No,\n \n    po.Comments as secPolicy_Comments,po.Effective_Date as secEffective_date,po.Expiration_Date as secExpiration_Date\n \nfrom genpatinfo g\n \nleft join patid p on p.Patient_ID = g.Patient_ID\n \nleft join patpol pp on pp.Patient_ID = p.Patient_ID\n \nleft join genpol po on po.Policy_ID = pp.Policy_ID\n \nleft join [PM].[Carriers] c on c.Carrier_ID = po.Carrier_ID\n \nleft join [PM].[Insurance_Plans] i on i.Insurance_Plan_ID = po.Insurance_Plan_ID\n \nwhere pp.Coverage in ('S')\n \n),\n \nappt3dayblock as(\n \nSELECT\n \n    [Patient_ID],\n \n    [Patient_Number],Appt_ID,\n \n    [Appt_DateTime],\n \n    CAST([Appt_DateTime] AS DATE) AS Appt_Date,\n \n    [Appt_Sched_Location_Abbr],\n \n    [Appt_Sched_Location_Descr],\n \n    [Appt_Resource_Abbr],\n \n    [Appt_Resource_Descr],\n \n    [Appt_Resource_Assoc_Prov_LFI],\n \n    [Appt_Type_Abbr],\n \n    [Appt_Type_Descr],\n \n    [Appt_Comments],\n \n    [Appt_Status],\n \n    [Appt_Booked_Date],\n \n    [Appt_Booked_By_Operator_Abbr],'1730156050' as NPI\n \nFROM [Ntier_EPIC].[dbo].[vwGenPatApptInfo] a\n \nWHERE CAST([Appt_DateTime] AS DATE) BETWEEN DATEADD(DAY, 0, CAST(GETDATE() AS DATE)) AND DATEADD(DAY, 5, CAST(GETDATE() AS DATE))\n \nand a.Appt_Status ='S'\n \n)\n \nselect a.*,po.Patient_First_Name,po.Patient_Last_Name,po.Patient_DOB,po.Patient_Policy_ID,\n \n    po.Patient_Policy_Policy_ID,\n \n\tcase when po.Coverage is null then 'nocov'\n \n\telse po.Coverage\n \n\tend as Coverage,\n \n\tpo.Verified_Date,\n \n    po.Policy_Account_ID,po.Policy_Carrier_ID,\n \n    po.Carrier_Name,po.Payor_Number,po.CoPayment_Amount,po.Insurance_Plan_ID,\n \n    po.Insurance_Carrier_ID,po.Certificate_No,po.Group_No,\n \n    po.Policy_Comments,po.Effective_Date,po.Expiration_Date,\n \ns.secPatient_Policy_ID,s.secPatient_Policy_Policy_ID,s.secCoverage,s.secVerified_date,s.secPolicy_Account_ID,\n \ns.secCarrier_Name,s.secPayor_Number,s.secCopayment,s.secIns_plan,s.secInsurance_Carrier_ID,s.secCertificate_No,\n \ns.secGroup_No,s.secPolicy_Comments,s.secEffective_date,s.secExpiration_Date\n \nfrom appt3dayblock a\n \nleft join primcov po on a.Patient_ID=po.Patient_ID\n \nleft join secondins s on a.Patient_ID=s.Patient_ID\n \nwhere a.Appt_Sched_Location_Descr in (\n \n    'EPIC Southfield 10 Mile',\n \n    'DIAG EP Southfield',\n \n    'Surgeon''s Choice Hospital',\n \n    'EPIC Detroit Livernois',\n \n    'EPIC Ferndale 9 Mile',\n \n    'DIAG EP Ferndale',\n \n    'EPIC Royal Oak Woodward',\n \n    'EPIC Hamtramck Davison',\n \n    'EPIC Eastpointe Kelly',\n \n    'SPEC EP Southfield Telegraph',\n \n    'EPIC SCS Harper',\n \n    'EPIC Southfield Telegraph',\n \n    'EPIC Clawson Maple',\n \n    'EPIC Detroit 7 Mile',\n \n    'DIAG EP 7 Mile',\n \n    'EPIC Westland Palmer',\n \n    'DIAG EP SCS Harper',\n \n    'DIAG EP Livernois',\n \n    'DIAG EP DAVISON',\n \n    'DIAG Eastpointe Kelly',\n \n    'DIAG EP Royal Oak Woodward',\n \n    'EPIC Video Visits'\n \n)"
      },
      "id": "4e230600-fdc9-4570-a9f9-67df897c6a81",
      "name": "Microsoft SQL",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        80,
        680
      ],
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {
        "content": "'billinglogic' and the table name is 'public.pverifgytoapminsurancemapping'\n \nand the query would be SELECT * FROM public.pverifgytoapminsurancemapping\n",
        "height": 584.202574676101,
        "width": 202.27744546346491
      },
      "id": "e792403c-6a35-460c-aea3-7c45a12be797",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "726466b7-a6bd-4ee5-8ae9-ba43e8241fe6",
              "name": "Insurance_Carrier_ID",
              "value": "={{ $json.Insurance_Carrier_ID }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "d3b944df-d429-452c-996d-fe0efb6c603d",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        66,
        464
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "33bf53db-5e9e-47ec-8894-d72e1b676932",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -114,
        464
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a014fbc1-3bbe-45d8-aedd-60357fbba50c",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1040,
        620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "86de9f0d-78d7-4f70-bab5-db024548d945",
              "leftValue": "={{ $json.Coverage }}",
              "rightValue": "nocov",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7e429733-2ee4-424e-85ff-c86e1c3c6d01",
      "name": "If NOCOV",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        1580,
        800
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM public.pverifgytoapminsurancemapping\nWHERE \"Ins Code\" = {{ $json.Insurance_Carrier_ID }};",
        "options": {}
      },
      "id": "9a84af99-7070-4462-a7b6-802ceac78ace",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2022,
        840
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "8QH3k8SLQmfJ5btw",
          "name": "BillingLogicforPverifytoVDInsuranceID"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "5183b098-2216-4818-9317-cddcc2159d68",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1780,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pverify.com/Token",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "Client_Id",
              "value": "2e795ff9-16c1-4981-b269-cbc1605d1a59"
            },
            {
              "name": "Client_Secret",
              "value": "VdcVMGMWqFYSEzpgVIWDOXAdqtxA"
            },
            {
              "name": "grant_type",
              "value": "client_credentials"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "f94361e3-a2bc-408a-89ed-6d82e7d4b45f",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2442,
        740
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "d04af114-cbc3-4a73-ba8c-09ae1a77e441",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2222,
        740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Mapping between JSON keys and PostgreSQL column names\nconst columnMapping = {\n    \"requestid\": \"RequestID\",\n    \"apiresponsecode\": \"APIResponseCode\",\n    \"apiresponsemessage\": \"APIResponseMessage\",\n    \"edierrormessage\": \"EDIErrorMessage\",\n    \"ispayerbackoffice\": \"IsPayerBackOffice\",\n    \"processedwitherror\": \"ProcessedWithError\",\n    \"errorcode\": \"ErrorCode\",\n    \"errordescription\": \"ErrorDescription\",\n    \"pverifypayercode\": \"PverifyPayerCode\",\n    \"payername\": \"PayerName\",\n    \"verificationtype\": \"VerificationType\",\n    \"dos\": \"DOS\",\n    \"exceptionnotes\": \"ExceptionNotes\",\n    \"ishmoplan\": \"IsHMOPlan\",\n    \"addtionalinfo\": \"AddtionalInfo\",\n    \"location\": \"Location\",\n    \"referrenceid\": \"ReferrenceId\",\n    \"internalid\": \"InternalId\",\n    \"customerid\": \"CustomerId\",\n    \"notes\": \"Notes\",\n    \"resultpracticetype\": \"ResultPracticeType\",\n    \"areallstcsprocessed\": \"AreAllSTCsProcessed\",\n    \"stcsstatusmessage\": \"STCsStatusMessage\",\n    \"isproviderinnetwork\": \"IsProviderInNetwork\",\n    \"recursivetype\": \"RecursiveType\",\n    \"recursiverequestid\": \"RecursiveRequestId\",\n    \"recursiveapiresponsecode\": \"RecursiveAPIResponseCode\",\n    \"recursiveapiresponsemessage\": \"RecursiveAPIResponseMessage\",\n    \"recursiveprocessedwitherror\": \"RecursiveProcessedWithError\",\n    \"isskipped\": \"IsSkipped\",\n    \"detailsurl\": \"DetailsURL\",\n    \"ispriorauthrequired\": \"IsPriorAuthRequired\",\n    \"processrealtime\": \"ProcessRealtime\",\n    \"subscriber_address1\": \"DemographicInfo.Subscriber.Address1\",\n    \"subscriber_address2\": \"DemographicInfo.Subscriber.Address2\",\n    \"subscriber_city\": \"DemographicInfo.Subscriber.City\",\n    \"subscriber_communicationnumber\": \"DemographicInfo.Subscriber.CommunicationNumber\",\n    \"subscriber_date_plan\": \"DemographicInfo.Subscriber.Date[0].Date\",\n    \"subscriber_dob_r\": \"DemographicInfo.Subscriber.DOB_R\",\n    \"subscriber_firstname\": \"DemographicInfo.Subscriber.Firstname\",\n    \"subscriber_gender_r\": \"DemographicInfo.Subscriber.Gender_R\",\n    \"subscriber_lastname_r\": \"DemographicInfo.Subscriber.Lastname_R\",\n    \"subscriber_middlename\": \"DemographicInfo.Subscriber.Middlename\",\n    \"subscriber_state\": \"DemographicInfo.Subscriber.State\",\n    \"subscriber_suffix\": \"DemographicInfo.Subscriber.Suffix\",\n    \"subscriber_zip\": \"DemographicInfo.Subscriber.Zip\",\n    \"subscriber_fullname\": \"DemographicInfo.Subscriber.FullName\",\n    \"plancoveragesummary_status\": \"PlanCoverageSummary.Status\",\n    \"plancoveragesummary_effectivedate\": \"PlanCoverageSummary.EffectiveDate\",\n    \"plancoveragesummary_expirydate\": \"PlanCoverageSummary.ExpiryDate\",\n    \"plancoveragesummary_planname\": \"PlanCoverageSummary.PlanName\",\n    \"plancoveragesummary_policytype\": \"PlanCoverageSummary.PolicyType\",\n    \"plancoveragesummary_groupnumber\": \"PlanCoverageSummary.GroupNumber\",\n    \"plancoveragesummary_groupname\": \"PlanCoverageSummary.GroupName\",\n    \"plancoveragesummary_plannetworkid\": \"PlanCoverageSummary.PlanNetworkID\",\n    \"plancoveragesummary_plannetworkname\": \"PlanCoverageSummary.PlanNetworkName\",\n    \"plancoveragesummary_subscriberrelationship\": \"PlanCoverageSummary.SubscriberRelationship\",\n    \"plancoveragesummary_plannumber\": \"PlanCoverageSummary.PlanNumber\",\n    \"plancoveragesummary_hraorhsalimitationsremaining\": \"PlanCoverageSummary.HRAorHSALimitationsRemaining\",\n    \"plancoveragesummary_lastupdateddateofedi\": \"PlanCoverageSummary.LastUpdatedDateOfEDI\",\n    \"plancoveragesummary_patientgender\": \"PlanCoverageSummary.PatientGender\",\n    \"plancoveragesummary_benefitplancode\": \"PlanCoverageSummary.BenefitPlanCode\",\n    \"plancoveragesummary_issuedate\": \"PlanCoverageSummary.IssueDate\",\n    \"pcpauthinfosummary_primarycareprovidername\": \"PCPAuthInfoSummary.PrimaryCareProviderName\",\n    \"pcpauthinfosummary_pcpstartdate\": \"PCPAuthInfoSummary.PCPStartDate\",\n    \"pcpauthinfosummary_primarycareproviderphonenumber\": \"PCPAuthInfoSummary.PrimaryCareProviderPhoneNumber\",\n    \"pcpauthinfosummary_innethbpcauthorizationinfo\": \"PCPAuthInfoSummary.InNetHBPCAuthorizationInfo\",\n    \"pcpauthinfosummary_outnethbpcauthorizationinfo\": \"PCPAuthInfoSummary.OutNetHBPCAuthorizationInfo\",\n    \"pcpauthinfosummary_utilizationmanagementorganizationname\": \"PCPAuthInfoSummary.UtilizationManagementOrganizationName\",\n    \"pcpauthinfosummary_umotelephone\": \"PCPAuthInfoSummary.UMOTelephone\",\n    \"pcpauthinfosummary_capitationfacilityname\": \"PCPAuthInfoSummary.CapitationFacilityName\",\n    \"hbpc_deductible_oop_summary_individualdeductibleinnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleInNet\",\n    \"hbpc_deductible_oop_summary_individualdeductibleoutnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleOutNet\",\n    \"hbpc_deductible_oop_summary_individualdeductibleremaininginnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleRemainingInNet\",\n    \"hbpc_deductible_oop_summary_individualdeductibleremainingoutnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleRemainingOutNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleinnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleInNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleOutNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleremaininginnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleRemainingInNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleremainingoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleRemainingOutNet\",\n    \"hbpc_deductible_oop_summary_individualoop_innet\": \"HBPC_Deductible_OOP_Summary.IndividualOOP_InNet\",\n    \"hbpc_deductible_oop_summary_individualoop_outnet\": \"HBPC_Deductible_OOP_Summary.IndividualOOP_OutNet\",\n    \"hbpc_deductible_oop_summary_individualoopremaininginnet\": \"HBPC_Deductible_OOP_Summary.IndividualOOPRemainingInNet\",\n    \"hbpc_deductible_oop_summary_individualoopremainingoutnet\": \"HBPC_Deductible_OOP_Summary.IndividualOOPRemainingOutNet\",\n    \"hbpc_deductible_oop_summary_familyoopinnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPInNet\",\n    \"hbpc_deductible_oop_summary_familyoopoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPOutNet\",\n    \"hbpc_deductible_oop_summary_familyoopremaininginnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPRemainingInNet\",\n    \"hbpc_deductible_oop_summary_familyoopremainingoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPRemainingOutNet\",\n    \"miscellaneousinfosummary_remainingspenddown\": \"MiscellaneousInfoSummary.RemainingSpendDown\",\n    \"miscellaneousinfosummary_isnpiinnetwork\": \"MiscellaneousInfoSummary.IsNPIInNetwork\",\n    \"miscellaneousinfosummary_memberid\": \"MiscellaneousInfoSummary.MemberID\",\n    \"servicedetails_servicename\": \"ServiceDetails[0].ServiceName\",\n    \"servicedetails_eligibilityorbenefit\": \"ServiceDetails[0].EligibilityDetails[0].EligibilityOrBenefit\",\n    \"servicedetails_eligibilitydetails_authorizationorcertificationr\": \"ServiceDetails[0].EligibilityDetails[0].AuthorizationOrCertificationRequired\",\n    \"servicedetails_eligibilitydetails_coveragelevel\": \"ServiceDetails[0].EligibilityDetails[0].CoverageLevel\",\n    \"servicedetails_eligibilitydetails_date\": \"ServiceDetails[0].EligibilityDetails[0].Date\",\n    \"servicedetails_eligibilitydetails_identifications\": \"ServiceDetails[0].EligibilityDetails[0].Identifications\",\n    \"servicedetails_eligibilitydetails_insurancetype\": \"ServiceDetails[0].EligibilityDetails[0].InsuranceType\",\n    \"servicedetails_eligibilitydetails_monetaryamount\": \"ServiceDetails[0].EligibilityDetails[0].MonetaryAmount\",\n    \"servicedetails_eligibilitydetails_percent\": \"ServiceDetails[0].EligibilityDetails[0].Percent\",\n    \"servicedetails_eligibilitydetails_plancoveragedescription\": \"ServiceDetails[0].EligibilityDetails[0].PlanCoverageDescription\",\n    \"servicedetails_eligibilitydetails_plannetworkindicator\": \"ServiceDetails[0].EligibilityDetails[0].PlanNetworkIndicator\",\n    \"servicedetails_eligibilitydetails_quantityqualifier\": \"ServiceDetails[0].EligibilityDetails[0].QuantityQualifier\",\n    \"servicedetails_eligibilitydetails_quantity\": \"ServiceDetails[0].EligibilityDetails[0].Quantity\",\n    \"servicedetails_eligibilitydetails_timeperiodqualifier\": \"ServiceDetails[0].EligibilityDetails[0].TimePeriodQualifier\",\n    \"servicedetails_eligibilitydetails_procedure\": \"ServiceDetails[0].EligibilityDetails[0].Procedure\",\n    \"servicedetails_eligibilitydetails_placeofservice\": \"ServiceDetails[0].EligibilityDetails[0].PlaceOfService\",\n    \"servicedetails_eligibilitydetails_benefitentities\": \"ServiceDetails[0].EligibilityDetails[0].BenefitEntities\",\n    \"servicedetails_eligibilitydetails_healthcareservicedeliveries\": \"ServiceDetails[0].EligibilityDetails[0].HealthCareServiceDeliveries\",\n    \"servicedetails_message\": \"ServiceDetails[0].EligibilityDetails[0].Message[0]\", // Newly added mapping\n    \"disclaimermessage\": \"DisclaimerMessage\",\n    \"eligibilityresult\": \"EligibilityResult\",\n    \"nonediresultpath\": \"NonEDIResultPath\",\n    \"dentalinfo\": \"DentalInfo\",\n    \"demographicinfo_dependent\": \"DemographicInfo.Dependent\",\n    \"otherpayerinfo\": \"OtherPayerInfo\",\n    \"ipadetails\": \"IPADetails\",\n    \"medicareinfosummary\": \"MedicareInfoSummary\",\n    \"primarycaresummary\": \"PrimaryCareSummary\",\n    \"iscptinfoupdated\": \"IsCptInfoUpdated\",\n    \"preventiveservices\": \"PreventiveServices\",\n    \"headers_cache_control\": \"headers.cache-control\",\n    \"headers_pragma\": \"headers.pragma\",\n    \"headers_content_type\": \"headers.content-type\",\n    \"headers_expires\": \"headers.expires\",\n    \"headers_x_moesif_transaction_id\": \"headers.x-moesif-transaction-id\",\n    \"headers_product_type\": \"headers.product_type\",\n    \"headers_transactionid\": \"headers.transactionid\",\n    \"headers_x_ip\": \"headers.x-ip\",\n    \"headers_strict_transport_security\": \"headers.strict-transport-security\",\n    \"headers_x_frame_options\": \"headers.x-frame-options\",\n    \"headers_content_security_policy\": \"headers.content-security-policy\",\n    \"headers_date\": \"headers.date\",\n    \"headers_via\": \"headers.via\",\n    \"headers_connection\": \"headers.connection\",\n    \"headers_transfer_encoding\": \"headers.transfer-encoding\",\n    \"statuscode\": \"statusCode\",\n    \"statusmessage\": \"statusMessage\"\n};\n\n// Function to map the JSON object based on the columnMapping\nfunction mapFields(mapping, jsonData) {\n    const mappedData = {};\n\n    for (let column in mapping) {\n        // Access nested fields based on the mapping\n        const keys = mapping[column].split('.');\n        let value = jsonData;\n        \n        for (let key of keys) {\n            if (value === null || value === undefined) {\n                break;\n            }\n\n            if (key.includes('[')) {\n                // Handle array indexing\n                const arrayIndex = parseInt(key.match(/\\[(\\d+)\\]/)[1], 10);\n                key = key.split('[')[0];\n\n                if (Array.isArray(value[key]) && value[key][arrayIndex] !== undefined) {\n                    value = value[key][arrayIndex];\n                } else {\n                    value = null;\n                }\n            } else {\n                value = value[key];\n            }\n        }\n\n        mappedData[column] = value !== undefined ? value : null;\n    }\n\n    return mappedData;\n}\n\n// Apply the mapping to the JSON body\nconst mappedJson = mapFields(columnMapping, $json.body);\n\n// Return the mapped data as the output of this node\nreturn {\n    json: mappedJson\n};\n"
      },
      "id": "4e816031-0a38-4402-bc8c-6eae6e430e11",
      "name": "Code2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2962,
        740
      ]
    },
    {
      "parameters": {
        "jsCode": "const mappedItems = $input.all().map(item => {\n  // Function to extract the start date from a range string and format it as YYYY-MM-DD\n  const extractStartDate = (dateRange) => {\n    if (!dateRange) return null;\n    const dates = dateRange.split(' - ');\n    if (dates.length > 0) {\n      const [month, day, year] = dates[0].split('/');\n      return `${year}-${month}-${day}`; // Reformat to YYYY-MM-DD\n    }\n    return null;\n  };\n\n  // Function to get the current date formatted as MM-DD-YYYY\n  const getCurrentFormattedDate = () => {\n    return `${String(new Date().getMonth() + 1).padStart(2, '0')}-${String(new Date().getDate()).padStart(2, '0')}-${new Date().getFullYear()}`;\n  };\n\n  // Function to validate boolean values and replace invalid values with null\n  const validateBoolean = (value) => {\n    if (value === true || value === false) {\n      return value;\n    }\n    return null;\n  };\n\n  return {\n    requestid: item.json.requestid,\n    apiresponsecode: item.json.apiresponsecode,\n    apiresponsemessage: item.json.apiresponsemessage,\n    edierrormessage: item.json.edierrormessage,\n    ispayerbackoffice: item.json.ispayerbackoffice,\n    processedwitherror: item.json.processedwitherror,\n    errorcode: item.json.errorcode,\n    errordescription: item.json.errordescription,\n    pverifypayercode: item.json.pverifypayercode,\n    payername: item.json.payername,\n    verificationtype: item.json.verificationtype,\n    dos: extractStartDate(item.json.dos), // Extract and format the start date\n    exceptionnotes: item.json.exceptionnotes,\n    ishmoplan: item.json.ishmoplan,\n    addtionalinfo: item.json.addtionalinfo,\n    location: item.json.location,\n    referrenceid: item.json.referrenceid,\n    internalid: item.json.internalid,\n    customerid: item.json.customerid,\n    notes: item.json.notes,\n    resultpracticetype: item.json.resultpracticetype,\n    areallstcsprocessed: item.json.areallstcsprocessed,\n    stcsstatusmessage: item.json.stcsstatusmessage,\n    isproviderinnetwork: item.json.isproviderinnetwork,\n    recursivetype: item.json.recursivetype,\n    recursiverequestid: item.json.recursiverequestid,\n    recursiveapiresponsecode: item.json.recursiveapiresponsecode,\n    recursiveapiresponsemessage: item.json.recursiveapiresponsemessage,\n    recursiveprocessedwitherror: item.json.recursiveprocessedwitherror,\n    isskipped: item.json.isskipped,\n    detailsurl: item.json.detailsurl,\n    ispriorauthrequired: item.json.ispriorauthrequired,\n    processrealtime: item.json.processrealtime,\n    subscriber_address1: item.json.subscriber_address1,\n    subscriber_address2: item.json.subscriber_address2,\n    subscriber_city: item.json.subscriber_city,\n    subscriber_communicationnumber: item.json.subscriber_communicationnumber,\n    subscriber_date_plan: getCurrentFormattedDate(), // Use the current formatted date\n    subscriber_dob_r: item.json.subscriber_dob_r,\n    subscriber_firstname: item.json.subscriber_firstname,\n    subscriber_gender_r: item.json.subscriber_gender_r,\n    subscriber_lastname_r: item.json.subscriber_lastname_r,\n    subscriber_middlename: item.json.subscriber_middlename,\n    subscriber_state: item.json.subscriber_state,\n    subscriber_suffix: item.json.subscriber_suffix,\n    subscriber_zip: item.json.subscriber_zip,\n    subscriber_fullname: item.json.subscriber_fullname,\n    plancoveragesummary_status: item.json.plancoveragesummary_status,\n    plancoveragesummary_effectivedate: item.json.plancoveragesummary_effectivedate,\n    plancoveragesummary_expirydate: item.json.plancoveragesummary_expirydate,\n    plancoveragesummary_planname: item.json.plancoveragesummary_planname,\n    plancoveragesummary_policytype: item.json.plancoveragesummary_policytype,\n    plancoveragesummary_groupnumber: item.json.plancoveragesummary_groupnumber,\n    plancoveragesummary_groupname: item.json.plancoveragesummary_groupname,\n    plancoveragesummary_plannetworkid: item.json.plancoveragesummary_plannetworkid,\n    plancoveragesummary_plannetworkname: item.json.plancoveragesummary_plannetworkname,\n    plancoveragesummary_subscriberrelationship: item.json.plancoveragesummary_subscriberrelationship,\n    plancoveragesummary_plannumber: item.json.plancoveragesummary_plannumber,\n    plancoveragesummary_hraorhsalimitationsremaining: item.json.plancoveragesummary_hraorhsalimitationsremaining,\n    plancoveragesummary_lastupdateddateofedi: item.json.plancoveragesummary_lastupdateddateofedi,\n    plancoveragesummary_patientgender: item.json.plancoveragesummary_patientgender,\n    plancoveragesummary_benefitplancode: item.json.plancoveragesummary_benefitplancode,\n    plancoveragesummary_issuedate: item.json.plancoveragesummary_issuedate,\n    pcpauthinfosummary_primarycareprovidername: item.json.pcpauthinfosummary_primarycareprovidername,\n    pcpauthinfosummary_pcpstartdate: item.json.pcpauthinfosummary_pcpstartdate,\n    pcpauthinfosummary_primarycareproviderphonenumber: item.json.pcpauthinfosummary_primarycareproviderphonenumber,\n    pcpauthinfosummary_innethbpcauthorizationinfo: item.json.pcpauthinfosummary_innethbpcauthorizationinfo,\n    pcpauthinfosummary_outnethbpcauthorizationinfo: item.json.pcpauthinfosummary_outnethbpcauthorizationinfo,\n    pcpauthinfosummary_utilizationmanagementorganizationname: item.json.pcpauthinfosummary_utilizationmanagementorganizationname,\n    pcpauthinfosummary_umotelephone: item.json.pcpauthinfosummary_umotelephone,\n    pcpauthinfosummary_capitationfacilityname: item.json.pcpauthinfosummary_capitationfacilityname,\n    hbpc_deductible_oop_summary_individualdeductibleinnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualdeductibleinnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualdeductibleoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualdeductibleoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualdeductibleremaininginnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualdeductibleremaininginnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualdeductibleremainingoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualdeductibleremainingoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familydeductibleinnet: parseFloat(item.json.hbpc_deductible_oop_summary_familydeductibleinnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familydeductibleoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_familydeductibleoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familydeductibleremaininginnet: parseFloat(item.json.hbpc_deductible_oop_summary_familydeductibleremaininginnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familydeductibleremainingoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_familydeductibleremainingoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualoop_innet: parseFloat(item.json.hbpc_deductible_oop_summary_individualoop_innet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualoop_outnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualoop_outnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualoopremaininginnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualoopremaininginnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_individualoopremainingoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_individualoopremainingoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familyoopinnet: parseFloat(item.json.hbpc_deductible_oop_summary_familyoopinnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familyoopoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_familyoopoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familyoopremaininginnet: parseFloat(item.json.hbpc_deductible_oop_summary_familyoopremaininginnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    hbpc_deductible_oop_summary_familyoopremainingoutnet: parseFloat(item.json.hbpc_deductible_oop_summary_familyoopremainingoutnet?.Value?.replace(/[^0-9.-]+/g, \"\")) || null,\n    miscellaneousinfosummary_remainingspenddown: item.json.miscellaneousinfosummary_remainingspenddown,\n    miscellaneousinfosummary_isnpiinnetwork: validateBoolean(item.json.miscellaneousinfosummary_isnpiinnetwork), // Validate boolean value\n    miscellaneousinfosummary_memberid: item.json.miscellaneousinfosummary_memberid,\n    servicedetails_eligibilityorbenefit: item.json.servicedetails_eligibilityorbenefit,\n    servicedetails_message: item.json.servicedetails_message,\n    disclaimermessage: item.json.disclaimermessage,\n    eligibilityresult: item.json.eligibilityresult,\n    nonediresultpath: item.json.nonediresultpath,\n    dentalinfo: item.json.dentalinfo,\n    demographicinfo_dependent: item.json.demographicinfo_dependent,\n    otherpayerinfo: item.json.otherpayerinfo,\n    ipadetails: item.json.ipadetails,\n    medicareinfosummary: item.json.medicareinfosummary,\n    primarycaresummary: item.json.primarycaresummary,\n    iscptinfoupdated: item.json.iscptinfoupdated,\n    preventiveservices: item.json.preventiveservices,\n    servicedetails_servicename: item.json.servicedetails_servicename,\n    servicedetails_eligibilitydetails_authorizationorcertificationr: item.json.servicedetails_eligibilitydetails_authorizationorcertificationr,\n    servicedetails_eligibilitydetails_coveragelevel: item.json.servicedetails_eligibilitydetails_coveragelevel,\n    servicedetails_eligibilitydetails_date: item.json.servicedetails_eligibilitydetails_date ? JSON.stringify(item.json.servicedetails_eligibilitydetails_date) : null,\n    servicedetails_eligibilitydetails_identifications: item.json.servicedetails_eligibilitydetails_identifications ? JSON.stringify(item.json.servicedetails_eligibilitydetails_identifications) : null,\n    servicedetails_eligibilitydetails_insurancetype: item.json.servicedetails_eligibilitydetails_insurancetype,\n    servicedetails_eligibilitydetails_monetaryamount: item.json.servicedetails_eligibilitydetails_monetaryamount,\n    servicedetails_eligibilitydetails_percent: item.json.servicedetails_eligibilitydetails_percent,\n    servicedetails_eligibilitydetails_plancoveragedescription: item.json.servicedetails_eligibilitydetails_plancoveragedescription,\n    servicedetails_eligibilitydetails_plannetworkindicator: item.json.servicedetails_eligibilitydetails_plannetworkindicator,\n    servicedetails_eligibilitydetails_quantityqualifier: item.json.servicedetails_eligibilitydetails_quantityqualifier,\n    servicedetails_eligibilitydetails_quantity: item.json.servicedetails_eligibilitydetails_quantity,\n    servicedetails_eligibilitydetails_timeperiodqualifier: item.json.servicedetails_eligibilitydetails_timeperiodqualifier,\n    servicedetails_eligibilitydetails_procedure: item.json.servicedetails_eligibilitydetails_procedure,\n    servicedetails_eligibilitydetails_placeofservice: item.json.servicedetails_eligibilitydetails_placeofservice,\n    servicedetails_eligibilitydetails_benefitentities: item.json.servicedetails_eligibilitydetails_benefitentities ? JSON.stringify(item.json.servicedetails_eligibilitydetails_benefitentities) : null,\n    servicedetails_eligibilitydetails_healthcareservicedeliveries: item.json.servicedetails_eligibilitydetails_healthcareservicedeliveries ? JSON.stringify(item.json.servicedetails_eligibilitydetails_healthcareservicedeliveries) : null,\n    headers_cache_control: item.json.headers_cache_control,\n    headers_pragma: item.json.headers_pragma,\n    headers_content_type: item.json.headers_content_type,\n    headers_expires: item.json.headers_expires,\n    headers_x_moesif_transaction_id: item.json.headers_x_moesif_transaction_id,\n    headers_product_type: item.json.headers_product_type,\n    headers_transactionid: item.json.headers_transactionid,\n    headers_x_ip: item.json.headers_x_ip,\n    headers_strict_transport_security: item.json.headers_strict_transport_security,\n    headers_x_frame_options: item.json.headers_x_frame_options,\n    headers_content_security_policy: item.json.headers_content_security_policy,\n    headers_date: item.json.headers_date,\n    headers_via: item.json.headers_via,\n    headers_connection: item.json.headers_connection,\n    headers_transfer_encoding: item.json.headers_transfer_encoding,\n    statuscode: item.json.statuscode,\n    statusmessage: item.json.statusmessage,\n    Patient_ID: item.json.Patient_ID ? String(item.json.Patient_ID) : null, // Add Patient_ID as text\n    Patient_Number: item.json.Patient_Number ? String(item.json.Patient_Number) : null // Add Patient_Number as text\n  };\n});\n\n// Output the mapped items to be used in further n8n nodes\nreturn mappedItems;\n"
      },
      "id": "46fe185f-0f0c-4bcb-ac84-2f9ec995e452",
      "name": "Code5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3042,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Mapping between JSON keys and PostgreSQL column names\nconst columnMapping = {\n    \"requestid\": \"RequestID\",\n    \"apiresponsecode\": \"APIResponseCode\",\n    \"apiresponsemessage\": \"APIResponseMessage\",\n    \"edierrormessage\": \"EDIErrorMessage\",\n    \"ispayerbackoffice\": \"IsPayerBackOffice\",\n    \"processedwitherror\": \"ProcessedWithError\",\n    \"errorcode\": \"ErrorCode\",\n    \"errordescription\": \"ErrorDescription\",\n    \"pverifypayercode\": \"PverifyPayerCode\",\n    \"payername\": \"PayerName\",\n    \"verificationtype\": \"VerificationType\",\n    \"dos\": \"DOS\",\n    \"exceptionnotes\": \"ExceptionNotes\",\n    \"ishmoplan\": \"IsHMOPlan\",\n    \"addtionalinfo\": \"AddtionalInfo\",\n    \"location\": \"Location\",\n    \"referrenceid\": \"ReferrenceId\",\n    \"internalid\": \"InternalId\",\n    \"customerid\": \"CustomerId\",\n    \"notes\": \"Notes\",\n    \"resultpracticetype\": \"ResultPracticeType\",\n    \"areallstcsprocessed\": \"AreAllSTCsProcessed\",\n    \"stcsstatusmessage\": \"STCsStatusMessage\",\n    \"isproviderinnetwork\": \"IsProviderInNetwork\",\n    \"recursivetype\": \"RecursiveType\",\n    \"recursiverequestid\": \"RecursiveRequestId\",\n    \"recursiveapiresponsecode\": \"RecursiveAPIResponseCode\",\n    \"recursiveapiresponsemessage\": \"RecursiveAPIResponseMessage\",\n    \"recursiveprocessedwitherror\": \"RecursiveProcessedWithError\",\n    \"isskipped\": \"IsSkipped\",\n    \"detailsurl\": \"DetailsURL\",\n    \"ispriorauthrequired\": \"IsPriorAuthRequired\",\n    \"processrealtime\": \"ProcessRealtime\",\n    \"subscriber_address1\": \"DemographicInfo.Subscriber.Address1\",\n    \"subscriber_address2\": \"DemographicInfo.Subscriber.Address2\",\n    \"subscriber_city\": \"DemographicInfo.Subscriber.City\",\n    \"subscriber_communicationnumber\": \"DemographicInfo.Subscriber.CommunicationNumber\",\n    \"subscriber_date_plan\": \"DemographicInfo.Subscriber.Date[0].Date\",\n    \"subscriber_dob_r\": \"DemographicInfo.Subscriber.DOB_R\",\n    \"subscriber_firstname\": \"DemographicInfo.Subscriber.Firstname\",\n    \"subscriber_gender_r\": \"DemographicInfo.Subscriber.Gender_R\",\n    \"subscriber_lastname_r\": \"DemographicInfo.Subscriber.Lastname_R\",\n    \"subscriber_middlename\": \"DemographicInfo.Subscriber.Middlename\",\n    \"subscriber_state\": \"DemographicInfo.Subscriber.State\",\n    \"subscriber_suffix\": \"DemographicInfo.Subscriber.Suffix\",\n    \"subscriber_zip\": \"DemographicInfo.Subscriber.Zip\",\n    \"subscriber_fullname\": \"DemographicInfo.Subscriber.FullName\",\n    \"plancoveragesummary_status\": \"PlanCoverageSummary.Status\",\n    \"plancoveragesummary_effectivedate\": \"PlanCoverageSummary.EffectiveDate\",\n    \"plancoveragesummary_expirydate\": \"PlanCoverageSummary.ExpiryDate\",\n    \"plancoveragesummary_planname\": \"PlanCoverageSummary.PlanName\",\n    \"plancoveragesummary_policytype\": \"PlanCoverageSummary.PolicyType\",\n    \"plancoveragesummary_groupnumber\": \"PlanCoverageSummary.GroupNumber\",\n    \"plancoveragesummary_groupname\": \"PlanCoverageSummary.GroupName\",\n    \"plancoveragesummary_plannetworkid\": \"PlanCoverageSummary.PlanNetworkID\",\n    \"plancoveragesummary_plannetworkname\": \"PlanCoverageSummary.PlanNetworkName\",\n    \"plancoveragesummary_subscriberrelationship\": \"PlanCoverageSummary.SubscriberRelationship\",\n    \"plancoveragesummary_plannumber\": \"PlanCoverageSummary.PlanNumber\",\n    \"plancoveragesummary_hraorhsalimitationsremaining\": \"PlanCoverageSummary.HRAorHSALimitationsRemaining\",\n    \"plancoveragesummary_lastupdateddateofedi\": \"PlanCoverageSummary.LastUpdatedDateOfEDI\",\n    \"plancoveragesummary_patientgender\": \"PlanCoverageSummary.PatientGender\",\n    \"plancoveragesummary_benefitplancode\": \"PlanCoverageSummary.BenefitPlanCode\",\n    \"plancoveragesummary_issuedate\": \"PlanCoverageSummary.IssueDate\",\n    \"pcpauthinfosummary_primarycareprovidername\": \"PCPAuthInfoSummary.PrimaryCareProviderName\",\n    \"pcpauthinfosummary_pcpstartdate\": \"PCPAuthInfoSummary.PCPStartDate\",\n    \"pcpauthinfosummary_primarycareproviderphonenumber\": \"PCPAuthInfoSummary.PrimaryCareProviderPhoneNumber\",\n    \"pcpauthinfosummary_innethbpcauthorizationinfo\": \"PCPAuthInfoSummary.InNetHBPCAuthorizationInfo\",\n    \"pcpauthinfosummary_outnethbpcauthorizationinfo\": \"PCPAuthInfoSummary.OutNetHBPCAuthorizationInfo\",\n    \"pcpauthinfosummary_utilizationmanagementorganizationname\": \"PCPAuthInfoSummary.UtilizationManagementOrganizationName\",\n    \"pcpauthinfosummary_umotelephone\": \"PCPAuthInfoSummary.UMOTelephone\",\n    \"pcpauthinfosummary_capitationfacilityname\": \"PCPAuthInfoSummary.CapitationFacilityName\",\n    \"hbpc_deductible_oop_summary_individualdeductibleinnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleInNet\",\n    \"hbpc_deductible_oop_summary_individualdeductibleoutnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleOutNet\",\n    \"hbpc_deductible_oop_summary_individualdeductibleremaininginnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleRemainingInNet\",\n    \"hbpc_deductible_oop_summary_individualdeductibleremainingoutnet\": \"HBPC_Deductible_OOP_Summary.IndividualDeductibleRemainingOutNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleinnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleInNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleOutNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleremaininginnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleRemainingInNet\",\n    \"hbpc_deductible_oop_summary_familydeductibleremainingoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyDeductibleRemainingOutNet\",\n    \"hbpc_deductible_oop_summary_individualoop_innet\": \"HBPC_Deductible_OOP_Summary.IndividualOOP_InNet\",\n    \"hbpc_deductible_oop_summary_individualoop_outnet\": \"HBPC_Deductible_OOP_Summary.IndividualOOP_OutNet\",\n    \"hbpc_deductible_oop_summary_individualoopremaininginnet\": \"HBPC_Deductible_OOP_Summary.IndividualOOPRemainingInNet\",\n    \"hbpc_deductible_oop_summary_individualoopremainingoutnet\": \"HBPC_Deductible_OOP_Summary.IndividualOOPRemainingOutNet\",\n    \"hbpc_deductible_oop_summary_familyoopinnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPInNet\",\n    \"hbpc_deductible_oop_summary_familyoopoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPOutNet\",\n    \"hbpc_deductible_oop_summary_familyoopremaininginnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPRemainingInNet\",\n    \"hbpc_deductible_oop_summary_familyoopremainingoutnet\": \"HBPC_Deductible_OOP_Summary.FamilyOOPRemainingOutNet\",\n    \"miscellaneousinfosummary_remainingspenddown\": \"MiscellaneousInfoSummary.RemainingSpendDown\",\n    \"miscellaneousinfosummary_isnpiinnetwork\": \"MiscellaneousInfoSummary.IsNPIInNetwork\",\n    \"miscellaneousinfosummary_memberid\": \"MiscellaneousInfoSummary.MemberID\",\n    \"servicedetails_servicename\": \"ServiceDetails[0].ServiceName\",\n    \"servicedetails_eligibilityorbenefit\": \"ServiceDetails[0].EligibilityDetails[0].EligibilityOrBenefit\",\n    \"servicedetails_eligibilitydetails_authorizationorcertificationr\": \"ServiceDetails[0].EligibilityDetails[0].AuthorizationOrCertificationRequired\",\n    \"servicedetails_eligibilitydetails_coveragelevel\": \"ServiceDetails[0].EligibilityDetails[0].CoverageLevel\",\n    \"servicedetails_eligibilitydetails_date\": \"ServiceDetails[0].EligibilityDetails[0].Date\",\n    \"servicedetails_eligibilitydetails_identifications\": \"ServiceDetails[0].EligibilityDetails[0].Identifications\",\n    \"servicedetails_eligibilitydetails_insurancetype\": \"ServiceDetails[0].EligibilityDetails[0].InsuranceType\",\n    \"servicedetails_eligibilitydetails_monetaryamount\": \"ServiceDetails[0].EligibilityDetails[0].MonetaryAmount\",\n    \"servicedetails_eligibilitydetails_percent\": \"ServiceDetails[0].EligibilityDetails[0].Percent\",\n    \"servicedetails_eligibilitydetails_plancoveragedescription\": \"ServiceDetails[0].EligibilityDetails[0].PlanCoverageDescription\",\n    \"servicedetails_eligibilitydetails_plannetworkindicator\": \"ServiceDetails[0].EligibilityDetails[0].PlanNetworkIndicator\",\n    \"servicedetails_eligibilitydetails_quantityqualifier\": \"ServiceDetails[0].EligibilityDetails[0].QuantityQualifier\",\n    \"servicedetails_eligibilitydetails_quantity\": \"ServiceDetails[0].EligibilityDetails[0].Quantity\",\n    \"servicedetails_eligibilitydetails_timeperiodqualifier\": \"ServiceDetails[0].EligibilityDetails[0].TimePeriodQualifier\",\n    \"servicedetails_eligibilitydetails_procedure\": \"ServiceDetails[0].EligibilityDetails[0].Procedure\",\n    \"servicedetails_eligibilitydetails_placeofservice\": \"ServiceDetails[0].EligibilityDetails[0].PlaceOfService\",\n    \"servicedetails_eligibilitydetails_benefitentities\": \"ServiceDetails[0].EligibilityDetails[0].BenefitEntities\",\n    \"servicedetails_eligibilitydetails_healthcareservicedeliveries\": \"ServiceDetails[0].EligibilityDetails[0].HealthCareServiceDeliveries\",\n    \"servicedetails_message\": \"ServiceDetails[0].EligibilityDetails[0].Message[0]\", // Newly added mapping\n    \"disclaimermessage\": \"DisclaimerMessage\",\n    \"eligibilityresult\": \"EligibilityResult\",\n    \"nonediresultpath\": \"NonEDIResultPath\",\n    \"dentalinfo\": \"DentalInfo\",\n    \"demographicinfo_dependent\": \"DemographicInfo.Dependent\",\n    \"otherpayerinfo\": \"OtherPayerInfo\",\n    \"ipadetails\": \"IPADetails\",\n    \"medicareinfosummary\": \"MedicareInfoSummary\",\n    \"primarycaresummary\": \"PrimaryCareSummary\",\n    \"iscptinfoupdated\": \"IsCptInfoUpdated\",\n    \"preventiveservices\": \"PreventiveServices\",\n    \"headers_cache_control\": \"headers.cache-control\",\n    \"headers_pragma\": \"headers.pragma\",\n    \"headers_content_type\": \"headers.content-type\",\n    \"headers_expires\": \"headers.expires\",\n    \"headers_x_moesif_transaction_id\": \"headers.x-moesif-transaction-id\",\n    \"headers_product_type\": \"headers.product_type\",\n    \"headers_transactionid\": \"headers.transactionid\",\n    \"headers_x_ip\": \"headers.x-ip\",\n    \"headers_strict_transport_security\": \"headers.strict-transport-security\",\n    \"headers_x_frame_options\": \"headers.x-frame-options\",\n    \"headers_content_security_policy\": \"headers.content-security-policy\",\n    \"headers_date\": \"headers.date\",\n    \"headers_via\": \"headers.via\",\n    \"headers_connection\": \"headers.connection\",\n    \"headers_transfer_encoding\": \"headers.transfer-encoding\",\n    \"statuscode\": \"statusCode\",\n    \"statusmessage\": \"statusMessage\"\n};\n\n// Function to map the JSON object based on the columnMapping\nfunction mapFields(mapping, jsonData) {\n    const mappedData = {};\n\n    for (let column in mapping) {\n        // Access nested fields based on the mapping\n        const keys = mapping[column].split('.');\n        let value = jsonData;\n        \n        for (let key of keys) {\n            if (value === null || value === undefined) {\n                break;\n            }\n\n            if (key.includes('[')) {\n                // Handle array indexing\n                const arrayIndex = parseInt(key.match(/\\[(\\d+)\\]/)[1], 10);\n                key = key.split('[')[0];\n\n                if (Array.isArray(value[key]) && value[key][arrayIndex] !== undefined) {\n                    value = value[key][arrayIndex];\n                } else {\n                    value = null;\n                }\n            } else {\n                value = value[key];\n            }\n        }\n\n        mappedData[column] = value !== undefined ? value : null;\n    }\n\n    return mappedData;\n}\n\n// Apply the mapping to the JSON body\nconst mappedJson = mapFields(columnMapping, $json.body);\n\n// Return the mapped data as the output of this node\nreturn {\n    json: mappedJson\n};\n"
      },
      "id": "30871539-4abf-45de-b2cc-d52f76d49cd5",
      "name": "Code6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2740,
        220
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pverify.com/api/EligibilitySummary",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('HTTP Request1').item.json.access_token }}"
            },
            {
              "name": "Client-API-Id",
              "value": "2e795ff9-16c1-4981-b269-cbc1605d1a59"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"payerCode\": \"{{ $('Merge').item.json[\"pVerify Payer Code\"] }}\",\n  \"provider\": {\n    \"firstName\": \"Ted\",\n    \"middleName\": \"\",\n    \"lastName\": \"Naman\",\n    \"npi\": \"{{ $('Merge').item.json[\"NPI\"] }}\",\n    \"pin\":\"\"\n  },\n  \"subscriber\": {\n    \"firstName\": \"{{ $('Merge').item.json[\"Patient_First_Name\"] }}\",\n    \"middleName\": \"\",\n    \"lastName\": \"{{ $('Merge').item.json[\"Patient_Last_Name\"] }}\",\n    \"dob\": \"{{ $('Merge').item.json[\"Patient_DOB\"] }}\",\n    \"memberID\": \"{{ $('Merge').item.json[\"Certificate_No\"] }}\"\n  },\n  \"dependent\":  {\n    \"patient\": {\n      \"firstName\": \"\",\n      \"middleName\": \"\",\n      \"lastName\": \"\",\n      \"dob\": \"\",\n      \"gender\": \"\"\n    },\n    \"relationWithSubscriber\": \"\"\n  },\n  \"isSubscriberPatient\": \"true\",\n  \"doS_StartDate\": \"{{ `${String(new Date().getMonth() + 1).padStart(2, '0')}/${String(new Date().getDate()).padStart(2, '0')}/${new Date().getFullYear()}` }}\",\n  \"doS_EndDate\": \"{{ `${String(new Date().getMonth() + 1).padStart(2, '0')}/${String(new Date().getDate()).padStart(2, '0')}/${new Date().getFullYear()}` }}\",\n  \"serviceCodes\": [\n    \"\"\n  ],\n     \"isHMOplan\": true,\n     \"IncludeTextResponse\": true,\n     \"referenceId\": \"\",\n     \"Location\": \"\",\n     \"InternalId\":\"\",\n    \"CustomerID\":\"\"\n}",
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "61d93cbd-c672-4538-b7af-52ffb2fcbad9",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2620,
        740
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f3e40ce5-90dc-4fd3-89b3-d0259784820d",
      "name": "Merge9",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2620,
        1080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f33bce8d-3346-4fd8-b540-a913a54612e1",
              "name": "Patient_ID",
              "value": "={{ $json.Patient_ID }}",
              "type": "number"
            },
            {
              "id": "58f47faa-68db-4e5b-a017-376156a4c458",
              "name": "Patient_Number",
              "value": "={{ $json.Patient_Number }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "357163aa-d838-4a11-b95b-ef04e327b0d7",
      "name": "Edit Patient_ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2562,
        560
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "d9e889c7-062a-4a98-97d2-162eb225a884",
      "name": "Merge10",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2862,
        500
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "enbsummarymonthlypersistent",
          "mode": "list",
          "cachedResultName": "enbsummarymonthlypersistent"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "recursiverequestid": "={{ $json.RecursiveRequestId }}",
            "hbpc_deductible_oop_summary_individualdeductibleinnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualDeductibleInNet }}",
            "hbpc_deductible_oop_summary_individualdeductibleoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualDeductibleOutNet }}",
            "hbpc_deductible_oop_summary_individualdeductibleremaininginnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualDeductibleRemainingInNet }}",
            "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualDeductibleRemainingOutNet }}",
            "hbpc_deductible_oop_summary_familydeductibleinnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyDeductibleInNet }}",
            "hbpc_deductible_oop_summary_familydeductibleoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyDeductibleOutNet }}",
            "hbpc_deductible_oop_summary_familydeductibleremaininginnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyDeductibleRemainingInNet }}",
            "hbpc_deductible_oop_summary_familydeductibleremainingoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyDeductibleRemainingOutNet }}",
            "hbpc_deductible_oop_summary_individualoop_innet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualOOP_InNet }}",
            "hbpc_deductible_oop_summary_individualoop_outnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualOOP_OutNet }}",
            "hbpc_deductible_oop_summary_individualoopremaininginnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualOOPRemainingInNet }}",
            "hbpc_deductible_oop_summary_individualoopremainingoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.IndividualOOPRemainingOutNet }}",
            "hbpc_deductible_oop_summary_familyoopinnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyOOPInNet }}",
            "hbpc_deductible_oop_summary_familyoopoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyOOPOutNet }}",
            "hbpc_deductible_oop_summary_familyoopremaininginnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyOOPRemainingInNet }}",
            "hbpc_deductible_oop_summary_familyoopremainingoutnet": "={{ $json.HBPC_Deductible_OOP_Summary.FamilyOOPRemainingOutNet }}",
            "miscellaneousinfosummary_remainingspenddown": "={{ $json.MiscellaneousInfoSummary.RemainingSpendDown }}",
            "requestid": "={{ $json.RequestID }}",
            "apiresponsecode": "={{ $json.APIResponseCode }}",
            "apiresponsemessage": "={{ $json.APIResponseMessage }}",
            "edierrormessage": "={{ $json.EDIErrorMessage }}",
            "ispayerbackoffice": "={{ $json.IsPayerBackOffice }}",
            "processedwitherror": "={{ $json.ProcessedWithError }}",
            "errorcode": "={{ $json.ErrorCode }}",
            "errordescription": "={{ $json.ErrorDescription }}",
            "pverifypayercode": "={{ $json.PverifyPayerCode }}",
            "payername": "={{ $json.PayerName }}",
            "verificationtype": "={{ $json.VerificationType }}",
            "dos": "={{ $json.DOS }}",
            "exceptionnotes": "={{ $json.ExceptionNotes }}",
            "ishmoplan": "={{ $json.IsHMOPlan }}",
            "addtionalinfo": "={{ $json.AddtionalInfo }}",
            "location": "={{ $json.Location }}",
            "referrenceid": "={{ $json.ReferrenceId }}",
            "internalid": "={{ $json.InternalId }}",
            "customerid": "={{ $json.CustomerId }}",
            "notes": "={{ $json.Notes }}",
            "resultpracticetype": "={{ $json.ResultPracticeType }}",
            "areallstcsprocessed": "={{ $json.AreAllSTCsProcessed }}",
            "stcsstatusmessage": "={{ $json.STCsStatusMessage }}",
            "isproviderinnetwork": "={{ $json.IsProviderInNetwork }}",
            "recursivetype": "={{ $json.RecursiveType }}",
            "recursiveapiresponsecode": "={{ $json.RecursiveAPIResponseCode }}",
            "recursiveapiresponsemessage": "={{ $json.RecursiveAPIResponseMessage }}",
            "recursiveprocessedwitherror": "={{ $json.RecursiveProcessedWithError }}",
            "isskipped": "={{ $json.IsSkipped }}",
            "detailsurl": "={{ $json.DetailsURL }}",
            "ispriorauthrequired": "={{ $json.IsPriorAuthRequired }}",
            "processrealtime": "={{ $json.ProcessRealtime }}",
            "subscriber_address1": "={{ $json.DemographicInfo.Subscriber.Address1 }}",
            "subscriber_address2": "={{ $json.DemographicInfo.Subscriber.Address2 }}",
            "subscriber_city": "={{ $json.DemographicInfo.Subscriber.City }}",
            "subscriber_communicationnumber": "={{ $json.DemographicInfo.Subscriber.CommunicationNumber }}",
            "subscriber_date_plan": "={{ $json.DemographicInfo.Subscriber.Date[0].Date }}",
            "subscriber_dob_r": "={{ $json.DemographicInfo.Subscriber.DOB_R }}",
            "subscriber_firstname": "={{ $json.DemographicInfo.Subscriber.Firstname }}",
            "subscriber_gender_r": "={{ $json.DemographicInfo.Subscriber.Gender_R }}",
            "subscriber_lastname_r": "={{ $json.DemographicInfo.Subscriber.Lastname_R }}",
            "subscriber_middlename": "={{ $json.DemographicInfo.Subscriber.Middlename }}",
            "subscriber_state": "={{ $json.DemographicInfo.Subscriber.State }}",
            "subscriber_suffix": "={{ $json.DemographicInfo.Subscriber.Suffix }}",
            "subscriber_zip": "={{ $json.DemographicInfo.Subscriber.Zip }}",
            "subscriber_fullname": "={{ $json.DemographicInfo.Subscriber.FullName }}",
            "plancoveragesummary_status": "={{ $json.PlanCoverageSummary.Status }}",
            "plancoveragesummary_effectivedate": "={{ $json.PlanCoverageSummary.EffectiveDate }}",
            "plancoveragesummary_expirydate": "={{ $json.PlanCoverageSummary.ExpiryDate }}",
            "plancoveragesummary_planname": "={{ $json.PlanCoverageSummary.PlanName }}",
            "plancoveragesummary_policytype": "={{ $json.PlanCoverageSummary.PolicyType }}",
            "plancoveragesummary_groupnumber": "={{ $json.PlanCoverageSummary.GroupNumber }}",
            "plancoveragesummary_groupname": "={{ $json.PlanCoverageSummary.GroupName }}",
            "plancoveragesummary_plannetworkid": "={{ $json.PlanCoverageSummary.PlanNetworkID }}",
            "plancoveragesummary_plannetworkname": "={{ $json.PlanCoverageSummary.PlanNetworkName }}",
            "plancoveragesummary_subscriberrelationship": "={{ $json.PlanCoverageSummary.SubscriberRelationship }}",
            "plancoveragesummary_plannumber": "={{ $json.PlanCoverageSummary.PlanNumber }}",
            "plancoveragesummary_hraorhsalimitationsremaining": "={{ $json.PlanCoverageSummary.HRAorHSALimitationsRemaining }}",
            "plancoveragesummary_lastupdateddateofedi": "={{ $json.PlanCoverageSummary.LastUpdatedDateOfEDI }}",
            "plancoveragesummary_patientgender": "={{ $json.PlanCoverageSummary.PatientGender }}",
            "plancoveragesummary_benefitplancode": "={{ $json.PlanCoverageSummary.BenefitPlanCode }}",
            "plancoveragesummary_issuedate": "={{ $json.PlanCoverageSummary.IssueDate }}",
            "pcpauthinfosummary_primarycareprovidername": "={{ $json.PCPAuthInfoSummary.PrimaryCareProviderName }}",
            "pcpauthinfosummary_pcpstartdate": "={{ $json.PCPAuthInfoSummary.PCPStartDate }}",
            "pcpauthinfosummary_primarycareproviderphonenumber": "={{ $json.PCPAuthInfoSummary.PrimaryCareProviderPhoneNumber }}",
            "pcpauthinfosummary_innethbpcauthorizationinfo": "={{ $json.PCPAuthInfoSummary.InNetHBPCAuthorizationInfo }}",
            "pcpauthinfosummary_outnethbpcauthorizationinfo": "={{ $json.PCPAuthInfoSummary.OutNetHBPCAuthorizationInfo }}",
            "pcpauthinfosummary_utilizationmanagementorganizationname": "={{ $json.PCPAuthInfoSummary.UtilizationManagementOrganizationName }}",
            "pcpauthinfosummary_umotelephone": "={{ $json.PCPAuthInfoSummary.UMOTelephone }}",
            "pcpauthinfosummary_capitationfacilityname": "={{ $json.PCPAuthInfoSummary.CapitationFacilityName }}",
            "miscellaneousinfosummary_isnpiinnetwork": "={{ $json.MiscellaneousInfoSummary.IsNPIInNetwork }}",
            "miscellaneousinfosummary_memberid": "={{ $json.MiscellaneousInfoSummary.MemberID }}",
            "servicedetails_eligibilityorbenefit": "={{ $json.ServiceDetails[0].EligibilityDetails[0].EligibilityOrBenefit }}",
            "servicedetails_message": "={{ $json.ServiceDetails[0].EligibilityDetails[0].Message[0] }}",
            "disclaimermessage": "={{ $json.DisclaimerMessage }}",
            "eligibilityresult": "={{ $json.EligibilityResult }}",
            "nonediresultpath": "={{ $json.NonEDIResultPath }}",
            "dentalinfo": "={{ $json.DentalInfo }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "requestid",
              "displayName": "requestid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "apiresponsecode",
              "displayName": "apiresponsecode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "apiresponsemessage",
              "displayName": "apiresponsemessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "edierrormessage",
              "displayName": "edierrormessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ispayerbackoffice",
              "displayName": "ispayerbackoffice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "processedwitherror",
              "displayName": "processedwitherror",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "errorcode",
              "displayName": "errorcode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "errordescription",
              "displayName": "errordescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pverifypayercode",
              "displayName": "pverifypayercode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "payername",
              "displayName": "payername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "verificationtype",
              "displayName": "verificationtype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "dos",
              "displayName": "dos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "exceptionnotes",
              "displayName": "exceptionnotes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ishmoplan",
              "displayName": "ishmoplan",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "addtionalinfo",
              "displayName": "addtionalinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "referrenceid",
              "displayName": "referrenceid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "internalid",
              "displayName": "internalid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "customerid",
              "displayName": "customerid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "notes",
              "displayName": "notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "resultpracticetype",
              "displayName": "resultpracticetype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "areallstcsprocessed",
              "displayName": "areallstcsprocessed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "stcsstatusmessage",
              "displayName": "stcsstatusmessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "isproviderinnetwork",
              "displayName": "isproviderinnetwork",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "recursivetype",
              "displayName": "recursivetype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "recursiverequestid",
              "displayName": "recursiverequestid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "recursiveapiresponsecode",
              "displayName": "recursiveapiresponsecode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "recursiveapiresponsemessage",
              "displayName": "recursiveapiresponsemessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "recursiveprocessedwitherror",
              "displayName": "recursiveprocessedwitherror",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "isskipped",
              "displayName": "isskipped",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "detailsurl",
              "displayName": "detailsurl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ispriorauthrequired",
              "displayName": "ispriorauthrequired",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "processrealtime",
              "displayName": "processrealtime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_address1",
              "displayName": "subscriber_address1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_address2",
              "displayName": "subscriber_address2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_city",
              "displayName": "subscriber_city",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_communicationnumber",
              "displayName": "subscriber_communicationnumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_date_plan",
              "displayName": "subscriber_date_plan",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_dob_r",
              "displayName": "subscriber_dob_r",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_firstname",
              "displayName": "subscriber_firstname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_gender_r",
              "displayName": "subscriber_gender_r",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_lastname_r",
              "displayName": "subscriber_lastname_r",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_middlename",
              "displayName": "subscriber_middlename",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_state",
              "displayName": "subscriber_state",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_suffix",
              "displayName": "subscriber_suffix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_zip",
              "displayName": "subscriber_zip",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_fullname",
              "displayName": "subscriber_fullname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_status",
              "displayName": "plancoveragesummary_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_effectivedate",
              "displayName": "plancoveragesummary_effectivedate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_expirydate",
              "displayName": "plancoveragesummary_expirydate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_planname",
              "displayName": "plancoveragesummary_planname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_policytype",
              "displayName": "plancoveragesummary_policytype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_groupnumber",
              "displayName": "plancoveragesummary_groupnumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_groupname",
              "displayName": "plancoveragesummary_groupname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_plannetworkid",
              "displayName": "plancoveragesummary_plannetworkid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_plannetworkname",
              "displayName": "plancoveragesummary_plannetworkname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_subscriberrelationship",
              "displayName": "plancoveragesummary_subscriberrelationship",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_plannumber",
              "displayName": "plancoveragesummary_plannumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_hraorhsalimitationsremaining",
              "displayName": "plancoveragesummary_hraorhsalimitationsremaining",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_lastupdateddateofedi",
              "displayName": "plancoveragesummary_lastupdateddateofedi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_patientgender",
              "displayName": "plancoveragesummary_patientgender",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_benefitplancode",
              "displayName": "plancoveragesummary_benefitplancode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plancoveragesummary_issuedate",
              "displayName": "plancoveragesummary_issuedate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_primarycareprovidername",
              "displayName": "pcpauthinfosummary_primarycareprovidername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_pcpstartdate",
              "displayName": "pcpauthinfosummary_pcpstartdate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_primarycareproviderphonenumber",
              "displayName": "pcpauthinfosummary_primarycareproviderphonenumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_innethbpcauthorizationinfo",
              "displayName": "pcpauthinfosummary_innethbpcauthorizationinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_outnethbpcauthorizationinfo",
              "displayName": "pcpauthinfosummary_outnethbpcauthorizationinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_utilizationmanagementorganizationname",
              "displayName": "pcpauthinfosummary_utilizationmanagementorganizationname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_umotelephone",
              "displayName": "pcpauthinfosummary_umotelephone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pcpauthinfosummary_capitationfacilityname",
              "displayName": "pcpauthinfosummary_capitationfacilityname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleinnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleinnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleoutnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleinnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleinnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleoutnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoop_innet",
              "displayName": "hbpc_deductible_oop_summary_individualoop_innet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoop_outnet",
              "displayName": "hbpc_deductible_oop_summary_individualoop_outnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoopremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_individualoopremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoopremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_individualoopremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopinnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopinnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopoutnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "miscellaneousinfosummary_remainingspenddown",
              "displayName": "miscellaneousinfosummary_remainingspenddown",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "miscellaneousinfosummary_isnpiinnetwork",
              "displayName": "miscellaneousinfosummary_isnpiinnetwork",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "miscellaneousinfosummary_memberid",
              "displayName": "miscellaneousinfosummary_memberid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "servicedetails_eligibilityorbenefit",
              "displayName": "servicedetails_eligibilityorbenefit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "servicedetails_message",
              "displayName": "servicedetails_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "disclaimermessage",
              "displayName": "disclaimermessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "eligibilityresult",
              "displayName": "eligibilityresult",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "nonediresultpath",
              "displayName": "nonediresultpath",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "dentalinfo",
              "displayName": "dentalinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "df229ada-47d4-405a-81c5-42b9a8b89f3e",
      "name": "Postgres Monthly Persisted",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3242,
        500
      ],
      "credentials": {
        "postgres": {
          "id": "fSif8hHWD9fgkMkb",
          "name": "P-Verify"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "enbsummarypersistent",
          "mode": "list",
          "cachedResultName": "enbsummarypersistent"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "ispayerbackoffice": false,
            "processedwitherror": false,
            "ishmoplan": false,
            "areallstcsprocessed": false,
            "isproviderinnetwork": false,
            "recursiveprocessedwitherror": false,
            "isskipped": false,
            "ispriorauthrequired": false,
            "processrealtime": false,
            "miscellaneousinfosummary_isnpiinnetwork": false,
            "iscptinfoupdated": false
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "requestid",
              "displayName": "requestid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "apiresponsecode",
              "displayName": "apiresponsecode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "apiresponsemessage",
              "displayName": "apiresponsemessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "edierrormessage",
              "displayName": "edierrormessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ispayerbackoffice",
              "displayName": "ispayerbackoffice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "processedwitherror",
              "displayName": "processedwitherror",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "errorcode",
              "displayName": "errorcode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "errordescription",
              "displayName": "errordescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pverifypayercode",
              "displayName": "pverifypayercode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payername",
              "displayName": "payername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "verificationtype",
              "displayName": "verificationtype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "dos",
              "displayName": "dos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "exceptionnotes",
              "displayName": "exceptionnotes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ishmoplan",
              "displayName": "ishmoplan",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "addtionalinfo",
              "displayName": "addtionalinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "referrenceid",
              "displayName": "referrenceid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "internalid",
              "displayName": "internalid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customerid",
              "displayName": "customerid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "notes",
              "displayName": "notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "resultpracticetype",
              "displayName": "resultpracticetype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "areallstcsprocessed",
              "displayName": "areallstcsprocessed",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "stcsstatusmessage",
              "displayName": "stcsstatusmessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "isproviderinnetwork",
              "displayName": "isproviderinnetwork",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "recursivetype",
              "displayName": "recursivetype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recursiverequestid",
              "displayName": "recursiverequestid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "recursiveapiresponsecode",
              "displayName": "recursiveapiresponsecode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recursiveapiresponsemessage",
              "displayName": "recursiveapiresponsemessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recursiveprocessedwitherror",
              "displayName": "recursiveprocessedwitherror",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "isskipped",
              "displayName": "isskipped",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "detailsurl",
              "displayName": "detailsurl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ispriorauthrequired",
              "displayName": "ispriorauthrequired",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "processrealtime",
              "displayName": "processrealtime",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_address1",
              "displayName": "subscriber_address1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_address2",
              "displayName": "subscriber_address2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_city",
              "displayName": "subscriber_city",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_communicationnumber",
              "displayName": "subscriber_communicationnumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_date_plan",
              "displayName": "subscriber_date_plan",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_dob_r",
              "displayName": "subscriber_dob_r",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_firstname",
              "displayName": "subscriber_firstname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_gender_r",
              "displayName": "subscriber_gender_r",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_lastname_r",
              "displayName": "subscriber_lastname_r",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_middlename",
              "displayName": "subscriber_middlename",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_state",
              "displayName": "subscriber_state",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_suffix",
              "displayName": "subscriber_suffix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_zip",
              "displayName": "subscriber_zip",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subscriber_fullname",
              "displayName": "subscriber_fullname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_status",
              "displayName": "plancoveragesummary_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_effectivedate",
              "displayName": "plancoveragesummary_effectivedate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_expirydate",
              "displayName": "plancoveragesummary_expirydate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_planname",
              "displayName": "plancoveragesummary_planname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_policytype",
              "displayName": "plancoveragesummary_policytype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_groupnumber",
              "displayName": "plancoveragesummary_groupnumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_groupname",
              "displayName": "plancoveragesummary_groupname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_plannetworkid",
              "displayName": "plancoveragesummary_plannetworkid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_plannetworkname",
              "displayName": "plancoveragesummary_plannetworkname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_subscriberrelationship",
              "displayName": "plancoveragesummary_subscriberrelationship",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_plannumber",
              "displayName": "plancoveragesummary_plannumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_hraorhsalimitationsremaining",
              "displayName": "plancoveragesummary_hraorhsalimitationsremaining",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_lastupdateddateofedi",
              "displayName": "plancoveragesummary_lastupdateddateofedi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_patientgender",
              "displayName": "plancoveragesummary_patientgender",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_benefitplancode",
              "displayName": "plancoveragesummary_benefitplancode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "plancoveragesummary_issuedate",
              "displayName": "plancoveragesummary_issuedate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_primarycareprovidername",
              "displayName": "pcpauthinfosummary_primarycareprovidername",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_pcpstartdate",
              "displayName": "pcpauthinfosummary_pcpstartdate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_primarycareproviderphonenumber",
              "displayName": "pcpauthinfosummary_primarycareproviderphonenumber",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_innethbpcauthorizationinfo",
              "displayName": "pcpauthinfosummary_innethbpcauthorizationinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_outnethbpcauthorizationinfo",
              "displayName": "pcpauthinfosummary_outnethbpcauthorizationinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_utilizationmanagementorganizationname",
              "displayName": "pcpauthinfosummary_utilizationmanagementorganizationname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_umotelephone",
              "displayName": "pcpauthinfosummary_umotelephone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pcpauthinfosummary_capitationfacilityname",
              "displayName": "pcpauthinfosummary_capitationfacilityname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleinnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleinnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleoutnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleinnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleinnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleoutnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familydeductibleremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_familydeductibleremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoop_innet",
              "displayName": "hbpc_deductible_oop_summary_individualoop_innet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoop_outnet",
              "displayName": "hbpc_deductible_oop_summary_individualoop_outnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoopremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_individualoopremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_individualoopremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_individualoopremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopinnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopinnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopoutnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopremaininginnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopremaininginnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hbpc_deductible_oop_summary_familyoopremainingoutnet",
              "displayName": "hbpc_deductible_oop_summary_familyoopremainingoutnet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "miscellaneousinfosummary_remainingspenddown",
              "displayName": "miscellaneousinfosummary_remainingspenddown",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "miscellaneousinfosummary_isnpiinnetwork",
              "displayName": "miscellaneousinfosummary_isnpiinnetwork",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "miscellaneousinfosummary_memberid",
              "displayName": "miscellaneousinfosummary_memberid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilityorbenefit",
              "displayName": "servicedetails_eligibilityorbenefit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_message",
              "displayName": "servicedetails_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "disclaimermessage",
              "displayName": "disclaimermessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "eligibilityresult",
              "displayName": "eligibilityresult",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nonediresultpath",
              "displayName": "nonediresultpath",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "dentalinfo",
              "displayName": "dentalinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "demographicinfo_dependent",
              "displayName": "demographicinfo_dependent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "otherpayerinfo",
              "displayName": "otherpayerinfo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "ipadetails",
              "displayName": "ipadetails",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "medicareinfosummary",
              "displayName": "medicareinfosummary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "primarycaresummary",
              "displayName": "primarycaresummary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "iscptinfoupdated",
              "displayName": "iscptinfoupdated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "preventiveservices",
              "displayName": "preventiveservices",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_servicename",
              "displayName": "servicedetails_servicename",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_authorizationorcertificationr",
              "displayName": "servicedetails_eligibilitydetails_authorizationorcertificationr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_coveragelevel",
              "displayName": "servicedetails_eligibilitydetails_coveragelevel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_date",
              "displayName": "servicedetails_eligibilitydetails_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_identifications",
              "displayName": "servicedetails_eligibilitydetails_identifications",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_insurancetype",
              "displayName": "servicedetails_eligibilitydetails_insurancetype",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_monetaryamount",
              "displayName": "servicedetails_eligibilitydetails_monetaryamount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_percent",
              "displayName": "servicedetails_eligibilitydetails_percent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_plancoveragedescription",
              "displayName": "servicedetails_eligibilitydetails_plancoveragedescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_plannetworkindicator",
              "displayName": "servicedetails_eligibilitydetails_plannetworkindicator",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_quantityqualifier",
              "displayName": "servicedetails_eligibilitydetails_quantityqualifier",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_quantity",
              "displayName": "servicedetails_eligibilitydetails_quantity",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_timeperiodqualifier",
              "displayName": "servicedetails_eligibilitydetails_timeperiodqualifier",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_procedure",
              "displayName": "servicedetails_eligibilitydetails_procedure",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_placeofservice",
              "displayName": "servicedetails_eligibilitydetails_placeofservice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_benefitentities",
              "displayName": "servicedetails_eligibilitydetails_benefitentities",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "servicedetails_eligibilitydetails_healthcareservicedeliveries",
              "displayName": "servicedetails_eligibilitydetails_healthcareservicedeliveries",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_cache_control",
              "displayName": "headers_cache_control",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_pragma",
              "displayName": "headers_pragma",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_content_type",
              "displayName": "headers_content_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_expires",
              "displayName": "headers_expires",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_x_moesif_transaction_id",
              "displayName": "headers_x_moesif_transaction_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_product_type",
              "displayName": "headers_product_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_transactionid",
              "displayName": "headers_transactionid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_x_ip",
              "displayName": "headers_x_ip",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_strict_transport_security",
              "displayName": "headers_strict_transport_security",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_x_frame_options",
              "displayName": "headers_x_frame_options",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_content_security_policy",
              "displayName": "headers_content_security_policy",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_date",
              "displayName": "headers_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_via",
              "displayName": "headers_via",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_connection",
              "displayName": "headers_connection",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers_transfer_encoding",
              "displayName": "headers_transfer_encoding",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "statuscode",
              "displayName": "statuscode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "statusmessage",
              "displayName": "statusmessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d9a8ec5f-5112-42c8-ae39-b98338e835d4",
      "name": "Postgres Permanent Persisted",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3242,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "fSif8hHWD9fgkMkb",
          "name": "P-Verify"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "with app_prov as(\nSELECT [Practitioner_ID]\n       ,[Is_Physician]\n      ,[Abbreviation]\n      ,[First_Name]\n      ,[Last_Name]\n      ,[Sex]\n      ,[Suffix]  \n      ,[Federal_ID_No]\n      ,[Federal_ID_Sub_No]\n      ,[Federal_ID_Suffix]\n      ,[UPIN]\n      ,[Specialty_ID]\n      ,[Is_Non_Person]\n      ,[Is_Mid_Level]\n      ,[GL_Sub_Account_Number]\n      ,[Inactivation_Date]\n      ,[Last_Modified_By]\n      ,[Last_Modified_DateTime]\n      ,[Is_Mid_Level_PA]\n  FROM [Ntier_EPIC].[PM].[Practitioners] p\n  where p.Inactivation_Date is null\n  and p.Last_Name not like 'CCM%'\n  and p.Last_Name not like 'ZZ%'\n  and p.Is_Physician != 1 and( p.Abbreviation like '%PA%' or p.Abbreviation like '%NP%')\n  ),\n  doc_prov as(\nSELECT [Practitioner_ID]\n       ,[Is_Physician]\n      ,[Abbreviation]\n      ,[First_Name]\n      ,[Last_Name]\n      ,[Sex]\n      ,[Suffix]  \n      ,[Federal_ID_No]\n      ,[Federal_ID_Sub_No]\n      ,[Federal_ID_Suffix]\n      ,[UPIN]\n      ,[Specialty_ID]\n      ,[Is_Non_Person]\n      ,[Is_Mid_Level]\n      ,[GL_Sub_Account_Number]\n      ,[Inactivation_Date]\n      ,[Last_Modified_By]\n      ,[Last_Modified_DateTime]\n      ,[Is_Mid_Level_PA]      \n  FROM [Ntier_EPIC].[PM].[Practitioners] p\n  where p.Inactivation_Date is null\n  and(p.Last_Name like '%Naman%'\n  or p.Last_Name like '%Valk%'\n  or p.Last_Name like '%kan%' \n  or p.Last_Name like '%Tam%'\n  or p.Last_Name like '%Aror%'\n  or p.Last_Name like '%Godb%'\n  or p.Last_Name like '%Rothenb%'\n  or p.Last_Name like '%Wash%'\n  or p.Last_Name like '%Brods%')\n  and p.Last_Name not like '%zzb%'\n  )\n  select a.*\n  from app_prov a\n  union \n  select d.*\n  from doc_prov d"
      },
      "id": "fdf5ae64-b926-44dc-8b7e-f60e9ef0f51a",
      "name": "Microsoft Provider",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        4000,
        1200
      ],
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "3e3bf6da-58fd-4bbb-b274-860a70a8e200",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4260,
        1180
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "02bbce6a-26f3-4536-ad50-921e14a4561e",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3780,
        1040
      ],
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pmpt3rgjipbcwej",
        "table": "mrvdbkbw6cbkgvs",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "requestid",
              "fieldValue": "={{ $json.requestid }}"
            },
            {
              "fieldName": "pcpauthinfosummary_primarycareprovidername",
              "fieldValue": "={{ $json.pcpauthinfosummary_primarycareprovidername }}"
            },
            {
              "fieldName": "Practitioner_ID",
              "fieldValue": "={{ $json.Practitioner_ID }}"
            },
            {
              "fieldName": "Abbreviation",
              "fieldValue": "={{ $json.Abbreviation }}"
            },
            {
              "fieldName": "Last_Name",
              "fieldValue": "={{ $json.Last_Name }}"
            },
            {
              "fieldName": "PCPFullName",
              "fieldValue": "={{ $json.First_Name }} {{ $json.Last_Name }}"
            },
            {
              "fieldName": "Match",
              "fieldValue": "No"
            }
          ]
        }
      },
      "id": "24c858c4-e89e-414d-b355-6a7c0af064b0",
      "name": "NocoDB",
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        5340,
        1020
      ],
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "with app_prov as(\nSELECT [Practitioner_ID]\n       ,[Is_Physician]\n      ,[Abbreviation]\n      ,[First_Name]\n      ,[Last_Name]\n      ,[Sex]\n      ,[Suffix]  \n      ,[Federal_ID_No]\n      ,[Federal_ID_Sub_No]\n      ,[Federal_ID_Suffix]\n      ,[UPIN]\n      ,[Specialty_ID]\n      ,[Is_Non_Person]\n      ,[Is_Mid_Level]\n      ,[GL_Sub_Account_Number]\n      ,[Inactivation_Date]\n      ,[Last_Modified_By]\n      ,[Last_Modified_DateTime]\n      ,[Is_Mid_Level_PA]\n  FROM [Ntier_EPIC].[PM].[Practitioners] p\n  where p.Inactivation_Date is null\n  and p.Last_Name not like 'CCM%'\n  and p.Last_Name not like 'ZZ%'\n  and p.Is_Physician != 1 and( p.Abbreviation like '%PA%' or p.Abbreviation like '%NP%')\n  ),\n  doc_prov as(\nSELECT [Practitioner_ID]\n       ,[Is_Physician]\n      ,[Abbreviation]\n      ,[First_Name]\n      ,[Last_Name]\n      ,[Sex]\n      ,[Suffix]  \n      ,[Federal_ID_No]\n      ,[Federal_ID_Sub_No]\n      ,[Federal_ID_Suffix]\n      ,[UPIN]\n      ,[Specialty_ID]\n      ,[Is_Non_Person]\n      ,[Is_Mid_Level]\n      ,[GL_Sub_Account_Number]\n      ,[Inactivation_Date]\n      ,[Last_Modified_By]\n      ,[Last_Modified_DateTime]\n      ,[Is_Mid_Level_PA]      \n  FROM [Ntier_EPIC].[PM].[Practitioners] p\n  where p.Inactivation_Date is null\n  and(p.Last_Name like '%Naman%'\n  or p.Last_Name like '%Valk%'\n  or p.Last_Name like '%kan%' \n  or p.Last_Name like '%Tam%'\n  or p.Last_Name like '%Aror%'\n  or p.Last_Name like '%Godb%'\n  or p.Last_Name like '%Rothenb%'\n  or p.Last_Name like '%Wash%'\n  or p.Last_Name like '%Brods%')\n  and p.Last_Name not like '%zzb%'\n  )\n  select a.*\n  from app_prov a\n  union \n  select d.*\n  from doc_prov d"
      },
      "id": "6f9f69f1-1f26-4fe3-b9da-6faead4bd1d5",
      "name": "Microsoft Provider1",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        5140,
        980
      ],
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "id": "ea75e5f7-4519-41ac-abad-3247354bd1c0",
      "name": "Limit8",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        5240,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "34727f54-02f2-4db8-8d39-52143e867f2f",
              "leftValue": "={{ $json.pcpauthinfosummary_primarycareprovidername }}",
              "rightValue": "={{ $json.First_Name.toUpperCase() }} {{ $json.Last_Name.toUpperCase() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "027bbd42-d7fa-4fe3-8817-41baa2734ee9",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        4520,
        1180
      ]
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pmpt3rgjipbcwej",
        "table": "mrvdbkbw6cbkgvs",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "requestid",
              "fieldValue": "={{ $json.requestid }}"
            },
            {
              "fieldName": "pcpauthinfosummary_primarycareprovidername",
              "fieldValue": "={{ $json.pcpauthinfosummary_primarycareprovidername }}"
            },
            {
              "fieldName": "Practitioner_ID",
              "fieldValue": "={{ $json.Practitioner_ID }}"
            },
            {
              "fieldName": "Abbreviation",
              "fieldValue": "={{ $json.Abbreviation }}"
            },
            {
              "fieldName": "Last_Name",
              "fieldValue": "={{ $json.Last_Name }}"
            },
            {
              "fieldName": "PCPFullName",
              "fieldValue": "={{ $json.First_Name }} {{ $json.Last_Name }}"
            },
            {
              "fieldName": "Match",
              "fieldValue": "Yes"
            }
          ]
        }
      },
      "id": "31ec5c1e-2e4a-4f15-bfeb-938170b3fd27",
      "name": "NocoDB1",
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        4860,
        960
      ],
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pmpt3rgjipbcwej",
        "table": "mrvdbkbw6cbkgvs",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "HMO",
              "fieldValue": "=false"
            }
          ]
        }
      },
      "id": "0da956df-b12b-4420-8860-f6b28dfe664b",
      "name": "NocoDB2",
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        4860,
        720
      ],
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "id": "19513329-8372-4205-a181-fa70ae571f47",
      "name": "GOOD",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5240,
        720
      ]
    },
    {
      "parameters": {
        "content": "# P-Verify API and Pushed into the Database",
        "height": 1013.7827991562326,
        "width": 1534.7050269193844,
        "color": 5
      },
      "id": "db3c2f64-366d-40ab-9f58-6918faf98592",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1760,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "2832b9d0-cdf0-477d-b0e0-1b5084d65a46",
              "leftValue": "={{ $json.ishmoplan }}",
              "rightValue": "false",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "36518f02-183d-427e-b53f-f9c8bca47e70",
      "name": "If HMO Plan",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        3920,
        740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "Inactive",
                    "rightValue": "={{ $json.servicedetails_eligibilityorbenefit }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5b8152e0-9c6f-49d2-8b37-21d5484532ab",
                    "leftValue": "Inactive",
                    "rightValue": "={{ $json.servicedetails_eligibilityorbenefit }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "ea635d04-bbe0-4679-bf81-cbbaedfb1b47",
                    "leftValue": "Error",
                    "rightValue": "={{ $json.servicedetails_eligibilityorbenefit }}",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "40ffe5e9-c941-4b3f-a844-99062afcc4e6",
                    "leftValue": "Error Reason",
                    "rightValue": "={{ $json.apiresponsemessage }}",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "27932ad6-6207-4a30-9aec-f315ac118334",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3560,
        740
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "0ba4d2cd-ebb4-49a0-a705-bd7260754b07",
      "name": "Read PM Token10",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        6200,
        400
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "2621c2df-6680-4147-8acf-0077bfb62c05",
      "name": "Extract PM Token10",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        6340,
        400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER3').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER3').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "107ea71d-6414-4b92-9bfd-55142e98a2c4",
      "name": "Check Token10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        6520,
        400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "545ef991-6133-4c84-a08c-8f9b2a0d6f7f",
      "name": "Code11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6660,
        400
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "fdff47a3-f3b5-446f-8b79-30455371159e",
      "name": "Wait6",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6960,
        500
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "9bce7795-00bd-49d1-ad3a-dcdd3ffad34c",
      "name": "IF PM Token Valid5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6800,
        400
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication enbverify",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "113a4818-7d3f-49ef-aac2-9c6f5d04c20e",
      "name": "Sticky Note28",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5780,
        300
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER3').item.json.user }}.txt",
        "options": {}
      },
      "id": "45591f66-00e8-4c08-aeb2-e45eb954da09",
      "name": "Read PM Token11",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7020,
        340
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "7dae12ab-cf0c-4ee4-bf4b-c3cba305abb1",
      "name": "Extract PM Token11",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7160,
        340
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "265bfaa0-e0ce-4611-92e1-0dc0c0cbe596",
      "name": "Execute Workflow6",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7140,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "enbverify",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "C0nn3ctme#1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e2fe7e6d-bea8-421b-9d21-f8a99d732216",
      "name": "USER3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6040,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c679b91d-31c3-4c54-8c54-c211a882cb6b",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        7320,
        340
      ]
    },
    {
      "parameters": {},
      "id": "c7ba51c2-fa2f-4d58-a646-1a64f2f380b6",
      "name": "PM Auth",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5780,
        400
      ]
    },
    {
      "parameters": {
        "content": "## Pass Verification",
        "height": 265.07578857059883,
        "width": 234.7444088695953,
        "color": 4
      },
      "id": "34faddb4-73c7-4871-9761-47cef1b15856",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8320,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"SavePatientNote\",\n\"AppUserID\":\"enbverify\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"{{ $json.Patient_ID }}\",\n\"Token\":\"{{ $json.Token }}\",\n  \"Parameter1\": \"<PatientNote><Text>E&B Passed Verification | Date passed: {{ $json.formattedDate }} | Note by: EV </Text><Subject></Subject><NoteTypeID>55</NoteTypeID><ExpDate>{{ $json.lastDayOfMonth }}</ExpDate></PatientNote>\",\n  \"Parameter2\": \"\",\n  \"Parameter3\": \"\",\n  \"Parameter4\": \"\",\n  \"Parameter5\": \"\",\n  \"Parameter6\": \"\",\n  \"Data\": \"\"\n}",
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "34052507-2ec1-47ad-9894-667e59428aa9",
      "name": "HTTP Confirm2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8600,
        620
      ]
    },
    {
      "parameters": {
        "content": "## Bitrix24 Fail Unsure",
        "height": 254.96108100555574,
        "width": 258.23869539618664,
        "color": 3
      },
      "id": "d3e77bd5-728c-406b-84e6-42d8236c2ea0",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5540,
        1140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ehs.unitycarecrm.com/rest/19/oqk9f0x6y0kopjiq/tasks.task.add.json",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"fields\": {\n       \"TITLE\": \"{{ $('No Operation, do nothing').item.json.Patient_Number }} {{ $('No Operation, do nothing').item.json.Patient_First_Name }} {{ $('No Operation, do nothing').item.json.Patient_Last_Name }} - Failed Unsure\",\n       \"GROUP_ID\":\"43\",\n       \"RESPONSIBLE_ID\": \"19\",\n       \"DESCRIPTION\": \"Verify PCP | Appointment ID: {{ $('No Operation, do nothing').item.json.Appt_ID }}\",\n       \"STAGE_ID\": \"233\",\n    \"DEADLINE\": \"{{ new Date(new Date($('No Operation, do nothing').item.json.Appt_DateTime).setDate(new Date($('No Operation, do nothing').item.json.Appt_DateTime).getDate() )).toISOString().split('T')[0] }}\",\n    \"TAGS\": [\"{{ $json.pcpauthinfosummary_primarycareprovidername }}\",\"{{ $('No Operation, do nothing').item.json.Appt_Sched_Location_Descr }}\"]\n   }\n}",
        "options": {}
      },
      "id": "2af669cb-ff0e-4be3-a794-3c48e517c6b4",
      "name": "HTTP Bitrix24 Unsure",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5840,
        1220
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Bitrix24 Fail",
        "height": 267.0987300836075,
        "width": 248.90482345320686,
        "color": 3
      },
      "id": "c2799c75-458c-4116-9cdd-a06e54afc015",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3900,
        1760
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ehs.unitycarecrm.com/rest/19/oqk9f0x6y0kopjiq/tasks.task.add.json",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"fields\": {\n       \"TITLE\": \"{{ $json.Patient_Number }} {{ $json.Patient_First_Name }} {{ $json.Patient_Last_Name }}\",\n       \"GROUP_ID\":\"43\",\n       \"RESPONSIBLE_ID\": \"19\",\n       \"DESCRIPTION\": \"Inactive\",\n       \"STAGE_ID\": \"234\",\n \"DEADLINE\": \"{{ new Date(new Date($json.Appt_DateTime).setDate(new Date($json.Appt_DateTime).getDate() )).toISOString().split('T')[0] }}\",\n    \"TAGS\": [\"{{ $json.pcpauthinfosummary_primarycareprovidername }}\",\"{{ $json.Appt_Sched_Location_Descr }}\"]\n   }\n}",
        "options": {}
      },
      "id": "b9b10cad-a1f2-4bc4-922f-6a6d50491316",
      "name": "HTTP Bitrix24 Failed Inactive",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4180,
        1820
      ]
    },
    {
      "parameters": {
        "content": "## Bitrix24 Fail Unsure",
        "height": 254.96108100555574,
        "width": 256.36987278362096,
        "color": 3
      },
      "id": "d6572e38-616c-4adf-a50a-f1cf31ad71b7",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3900,
        2260
      ],
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ehs.unitycarecrm.com/rest/19/oqk9f0x6y0kopjiq/tasks.task.add.json",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"fields\": {\n       \"TITLE\": \"{{ $json.Patient_Number }} {{ $json.Patient_First_Name }} {{ $json.Patient_Last_Name }}\",\n       \"GROUP_ID\":\"43\",\n       \"RESPONSIBLE_ID\": \"19\",\n       \"DESCRIPTION\":\"P-Verify Error: Please verify E&B\",\n       \"STAGE_ID\": \"236\",\n \"DEADLINE\": \"{{ new Date(new Date($json.Appt_DateTime).setDate(new Date($json.Appt_DateTime).getDate() )).toISOString().split('T')[0] }}\",\n    \"TAGS\": [\"{{ $json.pcpauthinfosummary_primarycareprovidername }}\",\"{{ $json.Appt_Sched_Location_Descr }}]\n   }\n}",
        "options": {}
      },
      "id": "785c4af1-dc75-43d2-afa9-dd225fe42a64",
      "name": "HTTP Bitrix24 Unsure1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4200,
        2320
      ]
    },
    {
      "parameters": {},
      "id": "38a91fe4-6d40-49a7-8283-1d3461f6f16b",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4000,
        1500
      ]
    },
    {
      "parameters": {
        "content": "## Fail Verification",
        "height": 247.7763621848571,
        "width": 195.64967409087782,
        "color": 3
      },
      "id": "42f8c7a9-c4b0-4f6c-bc21-5d573cd7ceac",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8120,
        2000
      ]
    },
    {
      "parameters": {},
      "id": "deb91f6a-2445-4112-9bbe-452eb60d0ad8",
      "name": "Limit3",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        6380,
        2100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"SavePatientNote\",\n\"AppUserID\":\"enbverify\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"{{ $json.Patient_ID }}\",\n\"Token\":\"{{ $json.Token }}\",\n  \"Parameter1\": \"<PatientNote><Text>E&B Failed Verification | Date Failed: {{ $json.formattedDate }} | Note by: EV </Text><Subject></Subject><NoteTypeID>55</NoteTypeID><ExpDate>{{ $json.lastDayOfMonth }}</ExpDate></PatientNote>\",\n  \"Parameter2\": \"\",\n  \"Parameter3\": \"\",\n  \"Parameter4\": \"\",\n  \"Parameter5\": \"\",\n  \"Parameter6\": \"\",\n  \"Data\": \"\"\n}",
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "698f07cc-423f-4571-adeb-6e21e1928b55",
      "name": "HTTP Confirm3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8400,
        2100
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "b74159b2-e955-48a6-a166-7f864be43916",
      "name": "Read PM Token",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7020,
        1720
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "26307b5d-ac59-47f2-86cb-8f11ceda8718",
      "name": "Extract PM Token",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7160,
        1720
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "d6fc1b1a-9f9a-40f6-85cb-c91725642153",
      "name": "Check Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        7340,
        1720
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "0c822194-6d62-4f48-9362-86c8e468fd31",
      "name": "Code12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7480,
        1720
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "536b1127-109a-4200-bf54-2c5dd2c394cd",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        7780,
        1820
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "ae5e6c9a-fb4a-4779-87df-3bef45eebe1f",
      "name": "IF PM Token Valid",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7620,
        1720
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication enbverify",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "eaa51c2d-92a7-493e-8a23-e7644aa06b7f",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6600,
        1620
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER').item.json.user }}.txt",
        "options": {}
      },
      "id": "156e9d0d-ea8b-4348-9031-5bd75e742ef9",
      "name": "Read PM Token12",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        7840,
        1660
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "88f4a2df-947a-4e5f-8730-c4b58509411e",
      "name": "Extract PM Token12",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7980,
        1660
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "b5412b5e-e5be-484e-9c29-6f6011877f93",
      "name": "Execute Workflow7",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7960,
        1820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "enbverify",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "C0nn3ctme#1234",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ca9f997a-e281-4e69-b912-2d685a96a7cd",
      "name": "USER",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6860,
        1720
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7f0bca33-6381-4f69-b0b1-f2b1ff4a7030",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        8160,
        1820
      ]
    },
    {
      "parameters": {},
      "id": "f65378f2-750d-4496-bb8f-ac95fa73a611",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8840,
        700
      ]
    },
    {
      "parameters": {},
      "id": "df9cbaab-d106-4183-9690-85a874de3fdf",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8620,
        2080
      ]
    },
    {
      "parameters": {},
      "id": "cb42891f-2c8f-4f96-9d7e-f24278342606",
      "name": "No Operation, do nothing4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8620,
        2440
      ]
    },
    {
      "parameters": {},
      "id": "644d0bdb-6b9d-4ee2-baab-da859fcbaaae",
      "name": "No Operation, do nothing5",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1300,
        2700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "bdecf82e-e9ba-454a-9604-934d4c254c44",
              "leftValue": "={{ $json.Patient_ID }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "84eae5e1-d125-499f-84d0-2f8ccd0980b0",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        920,
        -200
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f64bbd6d-c6de-43a6-af2c-f282b3b7bf10",
      "name": "Merge11",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1460,
        40
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6f6c1711-08d4-4514-b723-e7314d983e6a",
              "name": "check",
              "value": "pass",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c288cfa8-f60a-47ec-b400-b7c867884a4a",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        -300
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6f6c1711-08d4-4514-b723-e7314d983e6a",
              "name": "check",
              "value": "fail",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dc202bd2-e159-4ae1-a562-870727812136",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        -120
      ]
    },
    {
      "parameters": {
        "content": "## Check Monthly Table",
        "height": 531.8620320198718,
        "width": 921.3311056471478,
        "color": 5
      },
      "id": "d9d934fb-e005-4f4f-92de-713ede711681",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        660,
        -320
      ]
    },
    {
      "parameters": {},
      "id": "de18689b-da5e-4f2a-86b8-6f94a3a05d84",
      "name": "No Operation, do nothing6",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        820,
        60
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM public.enbsummarymonthlypersistent\nWHERE TRIM(\"Patient_ID\") = '{{ $json.Patient_ID }}'  -- Replace with the desired Patient_ID\n  AND EXTRACT(MONTH FROM TO_DATE(dos, 'YYYY-MM-DD')) = EXTRACT(MONTH FROM CURRENT_DATE)\n  AND EXTRACT(YEAR FROM TO_DATE(dos, 'YYYY-MM-DD')) = EXTRACT(YEAR FROM CURRENT_DATE);",
        "options": {}
      },
      "id": "b919dea6-3ebb-46c3-a022-4f2d05eacc5b",
      "name": "Postgres Monthly Persisted Check",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        740,
        -200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fSif8hHWD9fgkMkb",
          "name": "P-Verify"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM public.enbsummarymonthlypersistent\nWHERE TRIM(\"Patient_ID\") = '{{ $json.Patient_ID }}'  -- Replace with the desired Patient_ID\n  AND EXTRACT(MONTH FROM TO_DATE(dos, 'YYYY-MM-DD')) = EXTRACT(MONTH FROM CURRENT_DATE)\n  AND EXTRACT(YEAR FROM TO_DATE(dos, 'YYYY-MM-DD')) = EXTRACT(YEAR FROM CURRENT_DATE);",
        "options": {}
      },
      "id": "b63f498b-ce22-41c4-9a23-1e56473cf4f3",
      "name": "Postgres Permanent Persisted1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        6420,
        900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "fSif8hHWD9fgkMkb",
          "name": "P-Verify"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "c2952e76-c562-4ba2-acb1-e0bf4594d1f2",
      "name": "Merge5",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4640,
        1800
      ]
    },
    {
      "parameters": {},
      "id": "453ea6ac-4c73-425e-b35e-1e58ff5ec603",
      "name": "No Operation, do nothing7",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3940,
        2100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "c39f41a7-0a46-4307-8598-13c4751da996",
      "name": "Merge6",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4640,
        2100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "f462bed6-d01a-4031-952c-5083473e7c83",
      "name": "Merge7",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        5860,
        1720
      ]
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "enbsummarymonthlypersistent",
          "mode": "list",
          "cachedResultName": "enbsummarymonthlypersistent"
        },
        "options": {}
      },
      "id": "4d9a1c98-fa43-4b24-aca4-3b06dcdf8cd6",
      "name": "Postgres Drop Monthly Table",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2020,
        -700
      ],
      "credentials": {
        "postgres": {
          "id": "fSif8hHWD9fgkMkb",
          "name": "P-Verify"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months"
            }
          ]
        }
      },
      "id": "a6163032-50ed-4c51-ac1b-4595d6e3f0b6",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -120,
        -700
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Truncate Monthly",
        "height": 257.3330150924498,
        "width": 2393.804923712412,
        "color": 3
      },
      "id": "8dfe795e-8391-46bd-ad69-7fc21c798274",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        -760
      ]
    },
    {
      "parameters": {
        "resource": "mail",
        "fromEmail": "ithelpdesk@epicpc.com",
        "fromName": "P-Verify Check",
        "toEmail": "tstilwell@epichs.org,epicbilling@epicpc.com,lsalama@epichs.org",
        "subject": "P-Verify",
        "contentValue": "List of all patients for P-Verify check",
        "additionalFields": {
          "attachments": "data"
        }
      },
      "id": "b17905b6-a8fb-446b-a004-6efae9825d18",
      "name": "SendGrid",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1,
      "position": [
        480,
        440
      ],
      "credentials": {
        "sendGridApi": {
          "id": "tC3AFJ3SI4sGi9Xt",
          "name": "SendGrid account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "fileName": "all_patients_p-verify.csv"
        }
      },
      "id": "2c129c31-f943-42e2-bbd2-a1a78cd0b9fd",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        340,
        440
      ]
    },
    {
      "parameters": {
        "options": {
          "fileName": "all_patients_p-verify.csv"
        }
      },
      "id": "1d206e6c-8b4d-41cd-82fb-b0b78e67ee54",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1800,
        40
      ]
    },
    {
      "parameters": {
        "resource": "mail",
        "fromEmail": "ithelpdesk@epicpc.com",
        "fromName": "P-Verify Check",
        "toEmail": "tstilwell@epichs.org,epicbilling@epicpc.com",
        "subject": "P-Verify",
        "contentValue": "List of all patients for P-Verify check",
        "additionalFields": {
          "attachments": "data"
        }
      },
      "id": "cad86c9d-0cbb-434b-a5f4-ed6600215475",
      "name": "SendGrid1",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1,
      "position": [
        1940,
        40
      ],
      "credentials": {
        "sendGridApi": {
          "id": "tC3AFJ3SI4sGi9Xt",
          "name": "SendGrid account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c613b3d0-213b-4040-a4b7-939b366dac28",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7500,
        2220
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "options": {}
      },
      "id": "a5320b34-6bb3-42ce-8f24-ee03901dd886",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7640,
        2220
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "1d26322f-e548-4296-a5d7-aecfb9ad461f",
      "name": "Merge8",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7320,
        2080
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "51c90123-a1f4-4b57-866a-3f758afae704",
      "name": "Date & Time2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7720,
        840
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "options": {}
      },
      "id": "8f4cca71-b394-47dc-b1d2-698344131e9d",
      "name": "Date & Time3",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        7880,
        840
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "723cfa98-dc5a-4953-b988-0d9ad86f29a9",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7800,
        2100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "6f1b65b8-4851-4f2f-829e-eb35e4c41b43",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7980,
        700
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "80cf96d0-7024-4004-b2ac-5392014c47af",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7540,
        700
      ]
    },
    {
      "parameters": {
        "jsCode": "const today = new Date();\nconst lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\nconst formattedDate = `${String(lastDayOfMonth.getMonth() + 1).padStart(2, '0')}/${String(lastDayOfMonth.getDate()).padStart(2, '0')}/${lastDayOfMonth.getFullYear()}`;\n\nreturn [{ json: { lastDayOfMonth: formattedDate } }];\n"
      },
      "id": "9e132262-975c-4c93-ba78-08d8368010e8",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8180,
        820
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "3e1a9ee2-2390-480d-b38c-6871de90ab10",
      "name": "Merge12",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        8380,
        620
      ]
    },
    {
      "parameters": {
        "jsCode": "const today = new Date();\nconst lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\nconst formattedDate = `${String(lastDayOfMonth.getMonth() + 1).padStart(2, '0')}/${String(lastDayOfMonth.getDate()).padStart(2, '0')}/${lastDayOfMonth.getFullYear()}`;\n\nreturn [{ json: { lastDayOfMonth: formattedDate } }];\n"
      },
      "id": "865c2de8-7766-495e-8484-d6dce085138f",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        7980,
        2300
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "254ae4e8-2303-44ba-9eb0-548d7553e9f7",
      "name": "Merge13",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        8180,
        2100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "06e29054-ba39-4eaa-ab8e-435230200039",
              "leftValue": "={{ $json.check }}",
              "rightValue": "pass",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f9d6ee98-3dcf-473e-860f-a413ff9b09ea",
      "name": "Pass or Fail",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        1600,
        40
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0557e91a-a843-43fa-af7a-ec4970bfcb6a",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1707b1aa-8a2e-4bb9-a90f-5886ef65e2fb",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        -120
      ]
    },
    {
      "parameters": {
        "jsCode": "const today = new Date();\nconst lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\nconst formattedDate = `${String(lastDayOfMonth.getMonth() + 1).padStart(2, '0')}/${String(lastDayOfMonth.getDate()).padStart(2, '0')}/${lastDayOfMonth.getFullYear()}`;\n\nreturn [{ json: { lastDayOfMonth: formattedDate } }];\n"
      },
      "id": "e799d3d4-82d6-4647-9896-ee5302467703",
      "name": "Code3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        340
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "d6110698-68ec-4c6d-b2f4-72a4a46d9bcb",
      "name": "Merge14",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1680,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8c57ae63-7f04-43e5-9722-3238c5a2ffab",
              "leftValue": "={{ $json.Appt_Date }}",
              "rightValue": "={{ $json.lastDayOfMonth }}",
              "operator": {
                "type": "dateTime",
                "operation": "beforeOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6558ce4b-066a-4360-b88c-5fc427ec597b",
      "name": "If Within the Month",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        1580,
        540
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4040,
        580
      ],
      "id": "152c4c5e-cb65-4fad-8d74-fb6728791854",
      "name": "Edit Fields3",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "2832b9d0-cdf0-477d-b0e0-1b5084d65a46",
              "leftValue": "={{ $json.plancoveragesummary_policytype }}",
              "rightValue": "Medicaid",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "453c197c-be49-4993-8507-76f58ad128ba",
      "name": "If Medicade Plan",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        4320,
        740
      ]
    },
    {
      "parameters": {
        "maxItems": 100
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        380,
        680
      ],
      "id": "8050d3c4-e12b-4146-afb6-972d5f49253e",
      "name": "Limit",
      "disabled": true
    },
    {
      "parameters": {},
      "id": "65bb0e72-eef1-4cb1-a775-295513dc337d",
      "name": "Limit9",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        4380,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "epic_docs",
          "mode": "list",
          "cachedResultName": "epic_docs"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4560,
        1420
      ],
      "id": "e4835754-6514-4ccc-b51e-9c547ac3c0bc",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "fSif8hHWD9fgkMkb",
          "name": "P-Verify"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "=pcpauthinfosummary_primarycareprovidername",
              "field2": "=provider_full_name"
            }
          ]
        },
        "resolve": "preferInput1",
        "fuzzyCompare": true,
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        5060,
        1200
      ],
      "id": "d9b1702e-c309-4f8f-b1f8-02dc7564931c",
      "name": "Compare Datasets"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd83d14b-2f86-407d-a6ee-695409a13dc2",
              "name": "pcpauthinfosummary_primarycareprovidername",
              "value": "={{ $json.pcpauthinfosummary_primarycareprovidername.toUpperCase() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4800,
        1200
      ],
      "id": "8e8f6d0a-7659-4e74-b3a4-4d7056df2ad6",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd83d14b-2f86-407d-a6ee-695409a13dc2",
              "name": "provider_full_name",
              "value": "={{ $json.provider_full_name.toUpperCase() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4840,
        1420
      ],
      "id": "7e7f0bce-b393-41fd-8e2c-f9b7f3db0250",
      "name": "Edit Fields7"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        740,
        420
      ],
      "id": "d844b686-bfef-4402-8441-6eef2f57ec56",
      "name": "No Operation, do nothing8"
    },
    {
      "parameters": {
        "path": "0b53e8f7-7697-4f9b-b3d4-2e528a85496f",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -120,
        940
      ],
      "id": "1a20325e-5aec-45da-909c-c7f0c7f971d1",
      "name": "Webhook",
      "webhookId": "0b53e8f7-7697-4f9b-b3d4-2e528a85496f",
      "disabled": true
    }
  ],
  "pinData": {
    "Code6": [
      {
        "json": {
          "requestid": 136241141,
          "apiresponsecode": "0",
          "apiresponsemessage": "Processed",
          "edierrormessage": null,
          "ispayerbackoffice": false,
          "processedwitherror": false,
          "errorcode": null,
          "errordescription": null,
          "pverifypayercode": "01016",
          "payername": "BCBS of Michigan (Professional)",
          "verificationtype": "Dependent Verification",
          "dos": "08/08/2024 - 08/08/2024",
          "exceptionnotes": "Patient is dependent as per Payer Response\r\n",
          "ishmoplan": true,
          "addtionalinfo": null,
          "location": "MI",
          "referrenceid": "",
          "internalid": "",
          "customerid": "",
          "notes": null,
          "resultpracticetype": "Primary Care (30)",
          "areallstcsprocessed": true,
          "stcsstatusmessage": "",
          "isproviderinnetwork": null,
          "recursivetype": null,
          "recursiverequestid": 0,
          "recursiveapiresponsecode": null,
          "recursiveapiresponsemessage": null,
          "recursiveprocessedwitherror": false,
          "isskipped": false,
          "detailsurl": null,
          "ispriorauthrequired": null,
          "processrealtime": false,
          "subscriber_address1": "19923 EVERGREEN RD",
          "subscriber_address2": null,
          "subscriber_city": "DETROIT",
          "subscriber_communicationnumber": null,
          "subscriber_date_plan": null,
          "subscriber_dob_r": null,
          "subscriber_firstname": "TATYANNA",
          "subscriber_gender_r": "",
          "subscriber_lastname_r": "SPATES",
          "subscriber_middlename": null,
          "subscriber_state": "MI",
          "subscriber_suffix": null,
          "subscriber_zip": "48219",
          "subscriber_fullname": "TATYANNA SPATES",
          "plancoveragesummary_status": "Active",
          "plancoveragesummary_effectivedate": "01/01/2024",
          "plancoveragesummary_expirydate": "12/31/9999",
          "plancoveragesummary_planname": "COMMERCIAL",
          "plancoveragesummary_policytype": "HMO",
          "plancoveragesummary_groupnumber": "00609563",
          "plancoveragesummary_groupname": null,
          "plancoveragesummary_plannetworkid": "FPCP",
          "plancoveragesummary_plannetworkname": "NETWORK PLAN",
          "plancoveragesummary_subscriberrelationship": "Spouse",
          "plancoveragesummary_plannumber": null,
          "plancoveragesummary_hraorhsalimitationsremaining": null,
          "plancoveragesummary_lastupdateddateofedi": null,
          "plancoveragesummary_patientgender": "Female",
          "plancoveragesummary_benefitplancode": null,
          "plancoveragesummary_issuedate": null,
          "pcpauthinfosummary_primarycareprovidername": "TED NAMAN",
          "pcpauthinfosummary_pcpstartdate": null,
          "pcpauthinfosummary_primarycareproviderphonenumber": null,
          "pcpauthinfosummary_innethbpcauthorizationinfo": null,
          "pcpauthinfosummary_outnethbpcauthorizationinfo": null,
          "pcpauthinfosummary_utilizationmanagementorganizationname": null,
          "pcpauthinfosummary_umotelephone": null,
          "pcpauthinfosummary_capitationfacilityname": null,
          "hbpc_deductible_oop_summary_individualdeductibleinnet": {
            "Value": "$7950.00",
            "Notes": "THIS IS A HDHP PRODUCT"
          },
          "hbpc_deductible_oop_summary_individualdeductibleoutnet": null,
          "hbpc_deductible_oop_summary_individualdeductibleremaininginnet": {
            "Value": "$7755.27",
            "Notes": "THIS IS A HDHP PRODUCT"
          },
          "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet": null,
          "hbpc_deductible_oop_summary_familydeductibleinnet": {
            "Value": "$15900.00",
            "Notes": "THIS IS A HDHP PRODUCT"
          },
          "hbpc_deductible_oop_summary_familydeductibleoutnet": null,
          "hbpc_deductible_oop_summary_familydeductibleremaininginnet": {
            "Value": "$14221.13",
            "Notes": "THIS IS A HDHP PRODUCT"
          },
          "hbpc_deductible_oop_summary_familydeductibleremainingoutnet": null,
          "hbpc_deductible_oop_summary_individualoop_innet": {
            "Value": "$7950.00",
            "Notes": null
          },
          "hbpc_deductible_oop_summary_individualoop_outnet": null,
          "hbpc_deductible_oop_summary_individualoopremaininginnet": {
            "Value": "$7755.27",
            "Notes": null
          },
          "hbpc_deductible_oop_summary_individualoopremainingoutnet": null,
          "hbpc_deductible_oop_summary_familyoopinnet": {
            "Value": "$15900.00",
            "Notes": null
          },
          "hbpc_deductible_oop_summary_familyoopoutnet": null,
          "hbpc_deductible_oop_summary_familyoopremaininginnet": {
            "Value": "$14221.13",
            "Notes": null
          },
          "hbpc_deductible_oop_summary_familyoopremainingoutnet": null,
          "miscellaneousinfosummary_remainingspenddown": null,
          "miscellaneousinfosummary_isnpiinnetwork": null,
          "miscellaneousinfosummary_memberid": "XYW914239570",
          "servicedetails_servicename": "Others",
          "servicedetails_eligibilityorbenefit": "Other or Additional Payor",
          "servicedetails_eligibilitydetails_authorizationorcertificationr": null,
          "servicedetails_eligibilitydetails_coveragelevel": null,
          "servicedetails_eligibilitydetails_date": [
            {
              "Date": "01/01/2023",
              "Type": "Date of Last Update"
            }
          ],
          "servicedetails_eligibilitydetails_identifications": [],
          "servicedetails_eligibilitydetails_insurancetype": null,
          "servicedetails_eligibilitydetails_monetaryamount": null,
          "servicedetails_eligibilitydetails_percent": null,
          "servicedetails_eligibilitydetails_plancoveragedescription": null,
          "servicedetails_eligibilitydetails_plannetworkindicator": null,
          "servicedetails_eligibilitydetails_quantityqualifier": null,
          "servicedetails_eligibilitydetails_quantity": null,
          "servicedetails_eligibilitydetails_timeperiodqualifier": null,
          "servicedetails_eligibilitydetails_procedure": null,
          "servicedetails_eligibilitydetails_placeofservice": null,
          "servicedetails_eligibilitydetails_benefitentities": [],
          "servicedetails_eligibilitydetails_healthcareservicedeliveries": [],
          "servicedetails_message": null,
          "disclaimermessage": "Summary Objects information is parsed information from the payer and is not guaranteed.Look at the ServiceDetails object for the details from the payer.",
          "eligibilityresult": "PAYER :                                 BCBS of Michigan (Professional)\nDOS :                                   08/08/2024 - 08/08/2024\nVERIFICATION TYPE :                     Dependent Verification \n\n=================================================================\nSUBSCRIBER INFORMATION\n=================================================================\nName                                     : TATYANNA  SPATES\nAddress                                  : 19923 EVERGREEN RD \nCity-State-Zip                           : DETROIT-MI-48219\nGender                                   : \nDate Of Birth                            : \nLastname_R                               : SPATES\nFirstname                                : TATYANNA\nMember ID                                : XYW914239570\nGroup Number                             : 00609563\n\n=================================================================\nDEPENDENT INFORMATION\n=================================================================\nRelationship                             : Spouse\nName                                     : DASHAY  SPATES\nAddress                                  : 19923 EVERGREEN RD \nCity-State-Zip                           : DETROIT-MI-48219\nGender                                   : Female\nDate Of Birth                            : 01/17/1995\nRelationship                             : Spouse\nPlan                                     : 01/01/2024\nTerm Date                                : 12/31/9999\nService                                  : 08/08/2024\n\n=================================================================\nELIGIBILITY & BENEFIT INFORMATION\n=================================================================\n-----------------------------------------------------------------\nService Type : Health Benefit Plan Coverage\n-----------------------------------------------------------------\n\n    Active Coverage (COMMERCIAL)                        \n    Policy Type                                        : HMO\n    Plan Network ID Number                             : FPCP\n    Plan Group or Plan Network Name                    : NETWORK PLAN\n\n\nIn Plan-Network Status\n=================================================================\n    Family Calendar Year Deductible                    : $15900.00\n      ***  THIS IS A HDHP PRODUCT\n \r\n\n    Family Remaining Deductible                        : $14221.13\n      ***  THIS IS A HDHP PRODUCT\n \r\n\n    Individual Calendar Year Deductible                : $7950.00\n      ***  THIS IS A HDHP PRODUCT\n \r\n\n    Individual Remaining Deductible                    : $7755.27\n      ***  THIS IS A HDHP PRODUCT\n \r\n\n    Family Calendar Year Deductible                    : $15900.00\n\n    Family Remaining Deductible                        : $14221.13\n\n    Individual Calendar Year Deductible                : $7950.00\n\n    Individual Remaining Deductible                    : $7755.27\n\n    Family Calendar Year Out of Pocket                 : $0.00\n      ***  EXCLUDES DEDUCTIBLE AND COPAY FOR EMBEDDED\n          COINSURANCE MAXIMUM (ECM)\n \r\n\n    Family Remaining Out of Pocket                     : $0.00\n      ***  EXCLUDES DEDUCTIBLE AND COPAY FOR EMBEDDED\n          COINSURANCE MAXIMUM (ECM)\n \r\n\n    Individual Calendar Year Out of Pocket             : $0.00\n      ***  EXCLUDES DEDUCTIBLE AND COPAY FOR EMBEDDED\n          COINSURANCE MAXIMUM (ECM)\n \r\n\n    Individual Remaining Out of Pocket                 : $0.00\n      ***  EXCLUDES DEDUCTIBLE AND COPAY FOR EMBEDDED\n          COINSURANCE MAXIMUM (ECM)\n \r\n\n    Family Calendar Year Out of Pocket                 : $15900.00\n\n    Family Remaining Out of Pocket                     : $14221.13\n\n    Individual Calendar Year Out of Pocket             : $7950.00\n\n    Individual Remaining Out of Pocket                 : $7755.27\n\n\nOut of Plan-Network Status\n=================================================================\n    Non-Covered                                         \n\n\n-----------------------------------------------------------------\nService Type : Misc. Info\n-----------------------------------------------------------------\n\n    Benefit Disclaimer                                  \n      ***  UNLESS OTHERWISE REQUIRED BY STATE LAW, THIS\n          NOTICE IS NOT A GUARANTEE OF PAYMENT. BENEFITS ARE\n          SUBJECT TO ALL CONTRACT LIMITS AND THE MEMBER'S STATUS ON\n          THE DATE OF SERVICE. ACCUMULATED AMOUNTS SUCH AS\n          DEDUCTIBLE MAY CHANGE AS ADDITIONAL CLAIMS ARE PROCESSED\n \r\n    Health Care Facility                                \n    [Contracted Service Provider]                       \n    Last Name                                          : OAKLAND SOUTHFIELD PHYSICIANS\n    Health Care Facility                                \n      ***  PROVIDER NETWORK| PCP FOCUS IS A UNIQUE NETWORK\n          OF PRIMARY CARE PHYSICIANS BUT INCLUDES ALL\n          BCN-CONTRACTED SPECIALISTS AND FACILITIES.\n \r\n    Other or Additional Payor                           \n    Date of Last Update                                : 01/01/2023\n    Primary Care Provider                               \n    [Primary Care Provider]                             \n    First Name                                         : TED\n    Last Name                                          : NAMAN\n    HCFA National Provider ID                          : 1730156050\n\n\n-----------------------------------------------------------------\nService Type : Chiropractic\n-----------------------------------------------------------------\nIn Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : Unknown\n\n    Individual Calendar Year Limitations                \n    Visits                                             : 30\n    Authorization/Certification Required               : Unknown\n      ***  CHIROPRACTIC SPINAL MANIPULATION IS LIMITED\n \r\n\n    Individual Remaining Limitations                    \n    Visits                                             : 30\n    Authorization/Certification Required               : Unknown\n      ***  CHIROPRACTIC SPINAL MANIPULATION IS LIMITED\n \r\n\n\n-----------------------------------------------------------------\nService Type : Emergency Services\n-----------------------------------------------------------------\nApplies to In & Out Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : No\n      ***  WAIVED IF ADMITTED\n \r\n\n\n-----------------------------------------------------------------\nService Type : Hospital\n-----------------------------------------------------------------\n\n    Active Coverage (COMMERCIAL)                        \n    Policy Type                                        : HMO\n\n\n-----------------------------------------------------------------\nService Type : Hospital - Emergency Accident\n-----------------------------------------------------------------\nApplies to In & Out Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Place of Service                                   : Outpatient Hospital\n    Authorization/Certification Required               : No\n      ***  WAIVED IF ADMITTED\n \r\n\n\n-----------------------------------------------------------------\nService Type : Hospital - Emergency Medical\n-----------------------------------------------------------------\nApplies to In & Out Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Place of Service                                   : Outpatient Hospital\n    Authorization/Certification Required               : No\n      ***  WAIVED IF ADMITTED\n \r\n\n\n-----------------------------------------------------------------\nService Type : Hospital - Inpatient\n-----------------------------------------------------------------\nIn Plan-Network Status\n=================================================================\n    Individual Admisson Co-Payment                     : $0.00\n    Place of Service                                   : Inpatient Hospital\n    Authorization/Certification Required               : Yes\n      ***  SEE CERTIFICATE FOR SPECIFIC SURGICAL COINSURANCE\n \r\n\n\n-----------------------------------------------------------------\nService Type : Hospital - Outpatient\n-----------------------------------------------------------------\nIn Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Place of Service                                   : Outpatient Hospital\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Medical Care\n-----------------------------------------------------------------\n\n    Active Coverage (COMMERCIAL)                        \n    Policy Type                                        : HMO\n\n\n-----------------------------------------------------------------\nService Type : Mental Health\n-----------------------------------------------------------------\n\n    Active Coverage (COMMERCIAL)                        \n    Policy Type                                        : HMO\n\n\n-----------------------------------------------------------------\nService Type : Pharmacy\n-----------------------------------------------------------------\n\n    Active Coverage (COMMERCIAL)                        \n    Policy Type                                        : HMO\n\n\n-----------------------------------------------------------------\nService Type : Physician Visit - Office : Well\n-----------------------------------------------------------------\nIn Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Place of Service                                   : Office\n    Authorization/Certification Required               : No\n      ***  PCP VISIT\n \r\n\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : Unknown\n      ***  SPECIALIST\n \r\n\n\n-----------------------------------------------------------------\nService Type : Professional (Physician) Visit - Office\n-----------------------------------------------------------------\nIn Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : No\n      ***  FOR TELEMEDICINE/E-VISIT SERVICES WITH APPROVED\n          VENDOR\n \r\n\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : No\n      ***  PCP VISIT\n \r\n\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : Unknown\n      ***  SPECIALIST\n \r\n\n\nApplies to In & Out Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : Unknown\n      ***  ALLERGY\n \r\n\n\n-----------------------------------------------------------------\nService Type : Urgent Care\n-----------------------------------------------------------------\nApplies to In & Out Plan-Network Status\n=================================================================\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : No\n      ***  URGENT CARE\n \r\n\n    Individual Visit Co-Payment                        : $0.00\n    Authorization/Certification Required               : No\n      ***  RETAIL HEALTH CLINIC\n \r\n\n\n-----------------------------------------------------------------\nService Type : Vision (Optometry)\n-----------------------------------------------------------------\n\n    Active Coverage (COMMERCIAL)                        \n    Policy Type                                        : HMO\n\n\n",
          "nonediresultpath": null,
          "dentalinfo": null,
          "demographicinfo_dependent": {
            "DependentInfo": {
              "Address1": "19923 EVERGREEN RD",
              "Address2": null,
              "City": "DETROIT",
              "CommunicationNumber": null,
              "Date": [
                {
                  "Date": "01/01/2024",
                  "Type": "Plan"
                },
                {
                  "Date": "12/31/9999",
                  "Type": "Term Date"
                },
                {
                  "Date": "08/08/2024",
                  "Type": "Service"
                }
              ],
              "DOB_R": "01/17/1995",
              "Firstname": "DASHAY",
              "Gender_R": "Female",
              "Identification": [
                {
                  "Code": "Spouse",
                  "Type": "Relationship",
                  "Name": null
                }
              ],
              "Lastname_R": "SPATES",
              "Middlename": null,
              "State": "MI",
              "Suffix": null,
              "Zip": "48219",
              "MilitaryPersonnelInfo": null,
              "FullName": "DASHAY SPATES"
            },
            "Relationship": "Spouse"
          },
          "otherpayerinfo": {
            "PrimaryPayer": null,
            "Payer": null,
            "SecondaryPayer": null,
            "PlanSponsor": null,
            "IndependentPhysiciansAssociation_IPA": null,
            "WorkersCompensation": null,
            "ContractedServiceProvider": "OAKLAND SOUTHFIELD PHYSICIANS",
            "IPAStartDate": null,
            "IPAEndDate": null,
            "IPAAddress": null,
            "IPACity": null,
            "IPAState": null,
            "IPAZipCode": null,
            "IPAPhoneNumber": null,
            "OtherPayerMemberID": null,
            "COB_StartDate": null,
            "COB_EndDate": null
          },
          "ipadetails": null,
          "medicareinfosummary": null,
          "primarycaresummary": {
            "ServiceCoveredInNet": null,
            "ServiceCoveredOutNet": null,
            "CoPayInNet": {
              "Value": "$0.00",
              "Notes": "PCP VISIT"
            },
            "CoInsInNet": null,
            "CoPayOutNet": {
              "Value": "$0.00",
              "Notes": "ALLERGY"
            },
            "CoInsOutNet": null,
            "UMOName": null,
            "UMOTelephone": null,
            "InNetServiceAuthorizationInfo": "NO (May Depend on POS)",
            "OutNetServiceAuthorizationInfo": "Unknown (May Depend on POS)",
            "IndividualDeductibleInNet": null,
            "IndividualDeductibleOutNet": null,
            "IndividualDeductibleRemainingInNet": null,
            "IndividualDeductibleRemainingOutNet": null,
            "FamilyDeductibleInNet": null,
            "FamilyDeductibleOutNet": null,
            "FamilyDeductibleRemainingInNet": null,
            "FamilyDeductibleRemainingOutNet": null,
            "IndividualOOP_InNet": null,
            "IndividualOOP_OutNet": null,
            "IndividualOOPRemainingInNet": null,
            "IndividualOOPRemainingOutNet": null,
            "FamilyOOPInNet": null,
            "FamilyOOPOutNet": null,
            "FamilyOOPRemainingInNet": null,
            "FamilyOOPRemainingOutNet": null
          },
          "iscptinfoupdated": false,
          "preventiveservices": null,
          "headers_cache_control": null,
          "headers_pragma": null,
          "headers_content_type": null,
          "headers_expires": null,
          "headers_x_moesif_transaction_id": null,
          "headers_product_type": null,
          "headers_transactionid": null,
          "headers_x_ip": null,
          "headers_strict_transport_security": null,
          "headers_x_frame_options": null,
          "headers_content_security_policy": null,
          "headers_date": null,
          "headers_via": null,
          "headers_connection": null,
          "headers_transfer_encoding": null,
          "statuscode": null,
          "statusmessage": null
        }
      }
    ],
    "Edit Fields2": [
      {
        "json": {
          "requestid": 133389216,
          "apiresponsecode": "0",
          "apiresponsemessage": "Processed",
          "edierrormessage": null,
          "ispayerbackoffice": false,
          "processedwitherror": false,
          "errorcode": null,
          "errordescription": null,
          "pverifypayercode": "03561",
          "payername": "McLaren Health Plan",
          "verificationtype": "Subscriber Verification",
          "dos": "08/08/2024 - 08/08/2024",
          "exceptionnotes": null,
          "ishmoplan": false,
          "addtionalinfo": null,
          "location": "MI",
          "referrenceid": "",
          "internalid": "",
          "customerid": "",
          "notes": null,
          "resultpracticetype": "Primary Care (30)",
          "areallstcsprocessed": true,
          "stcsstatusmessage": "",
          "isproviderinnetwork": null,
          "recursivetype": null,
          "recursiverequestid": 0,
          "recursiveapiresponsecode": null,
          "recursiveapiresponsemessage": null,
          "recursiveprocessedwitherror": false,
          "isskipped": false,
          "detailsurl": null,
          "ispriorauthrequired": null,
          "processrealtime": false,
          "subscriber_address1": "19922 ASHTON AVE",
          "subscriber_address2": null,
          "subscriber_city": "DETROIT",
          "subscriber_communicationnumber": null,
          "subscriber_date_plan": "08/08/2024",
          "subscriber_dob_r": "05/01/1971",
          "subscriber_firstname": "WILLIAM",
          "subscriber_gender_r": "Male",
          "subscriber_lastname_r": "REECE",
          "subscriber_middlename": "B",
          "subscriber_state": "MI",
          "subscriber_suffix": null,
          "subscriber_zip": "48219",
          "subscriber_fullname": "WILLIAM REECE",
          "plancoveragesummary_status": "Inactive",
          "plancoveragesummary_effectivedate": "08/08/2024",
          "plancoveragesummary_expirydate": null,
          "plancoveragesummary_planname": null,
          "plancoveragesummary_policytype": null,
          "plancoveragesummary_groupnumber": "100006-002",
          "plancoveragesummary_groupname": null,
          "plancoveragesummary_plannetworkid": null,
          "plancoveragesummary_plannetworkname": null,
          "plancoveragesummary_subscriberrelationship": null,
          "plancoveragesummary_plannumber": null,
          "plancoveragesummary_hraorhsalimitationsremaining": null,
          "plancoveragesummary_lastupdateddateofedi": null,
          "plancoveragesummary_patientgender": "Male",
          "plancoveragesummary_benefitplancode": null,
          "plancoveragesummary_issuedate": null,
          "pcpauthinfosummary_primarycareprovidername": null,
          "pcpauthinfosummary_pcpstartdate": null,
          "pcpauthinfosummary_primarycareproviderphonenumber": null,
          "pcpauthinfosummary_innethbpcauthorizationinfo": null,
          "pcpauthinfosummary_outnethbpcauthorizationinfo": null,
          "pcpauthinfosummary_utilizationmanagementorganizationname": null,
          "pcpauthinfosummary_umotelephone": null,
          "pcpauthinfosummary_capitationfacilityname": null,
          "hbpc_deductible_oop_summary_individualdeductibleinnet": null,
          "hbpc_deductible_oop_summary_individualdeductibleoutnet": null,
          "hbpc_deductible_oop_summary_individualdeductibleremaininginnet": null,
          "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet": null,
          "hbpc_deductible_oop_summary_familydeductibleinnet": null,
          "hbpc_deductible_oop_summary_familydeductibleoutnet": null,
          "hbpc_deductible_oop_summary_familydeductibleremaininginnet": null,
          "hbpc_deductible_oop_summary_familydeductibleremainingoutnet": null,
          "hbpc_deductible_oop_summary_individualoop_innet": null,
          "hbpc_deductible_oop_summary_individualoop_outnet": null,
          "hbpc_deductible_oop_summary_individualoopremaininginnet": null,
          "hbpc_deductible_oop_summary_individualoopremainingoutnet": null,
          "hbpc_deductible_oop_summary_familyoopinnet": null,
          "hbpc_deductible_oop_summary_familyoopoutnet": null,
          "hbpc_deductible_oop_summary_familyoopremaininginnet": null,
          "hbpc_deductible_oop_summary_familyoopremainingoutnet": null,
          "miscellaneousinfosummary_remainingspenddown": null,
          "miscellaneousinfosummary_isnpiinnetwork": null,
          "miscellaneousinfosummary_memberid": "103528601000",
          "servicedetails_servicename": "Health Benefit Plan Coverage",
          "servicedetails_eligibilityorbenefit": "Inactive",
          "servicedetails_eligibilitydetails_authorizationorcertificationr": null,
          "servicedetails_eligibilitydetails_coveragelevel": null,
          "servicedetails_eligibilitydetails_date": [],
          "servicedetails_eligibilitydetails_identifications": [],
          "servicedetails_eligibilitydetails_insurancetype": null,
          "servicedetails_eligibilitydetails_monetaryamount": null,
          "servicedetails_eligibilitydetails_percent": null,
          "servicedetails_eligibilitydetails_plancoveragedescription": null,
          "servicedetails_eligibilitydetails_plannetworkindicator": null,
          "servicedetails_eligibilitydetails_quantityqualifier": null,
          "servicedetails_eligibilitydetails_quantity": null,
          "servicedetails_eligibilitydetails_timeperiodqualifier": null,
          "servicedetails_eligibilitydetails_procedure": null,
          "servicedetails_eligibilitydetails_placeofservice": null,
          "servicedetails_eligibilitydetails_benefitentities": [],
          "servicedetails_eligibilitydetails_healthcareservicedeliveries": [],
          "servicedetails_message": "NO ACTIVE MEDICAL PLAN FOUND FOR THE REQUESTED SERVICE DATE 08/08/2024",
          "disclaimermessage": "Summary Objects information is parsed information from the payer and is not guaranteed.Look at the ServiceDetails object for the details from the payer.",
          "eligibilityresult": "PAYER :                                 McLaren Health Plan\nDOS :                                   08/08/2024 - 08/08/2024\nVERIFICATION TYPE :                     Subscriber Verification \n\n=================================================================\nSUBSCRIBER INFORMATION\n=================================================================\nName                                     : WILLIAM B REECE\nAddress                                  : 19922 ASHTON AVE \nCity-State-Zip                           : DETROIT-MI-48219\nGender                                   : Male\nDate Of Birth                            : 05/01/1971\nLastname_R                               : REECE\nFirstname                                : WILLIAM\nMember ID                                : 103528601000\nGroup Number                             : 100006-002\nPlan                                     : 08/08/2024\n\n=================================================================\nELIGIBILITY & BENEFIT INFORMATION\n=================================================================\n-----------------------------------------------------------------\nService Type : Health Benefit Plan Coverage\n-----------------------------------------------------------------\n\n    Inactive                                            \n      ***  NO ACTIVE MEDICAL PLAN FOUND FOR THE REQUESTED\n          SERVICE DATE 08/08/2024\n \r\n\n\n",
          "nonediresultpath": null,
          "dentalinfo": null,
          "demographicinfo_dependent": null,
          "otherpayerinfo": null,
          "ipadetails": null,
          "medicareinfosummary": null,
          "primarycaresummary": null,
          "iscptinfoupdated": false,
          "preventiveservices": null,
          "headers_cache_control": null,
          "headers_pragma": null,
          "headers_content_type": null,
          "headers_expires": null,
          "headers_x_moesif_transaction_id": null,
          "headers_product_type": null,
          "headers_transactionid": null,
          "headers_x_ip": null,
          "headers_strict_transport_security": null,
          "headers_x_frame_options": null,
          "headers_content_security_policy": null,
          "headers_date": null,
          "headers_via": null,
          "headers_connection": null,
          "headers_transfer_encoding": null,
          "statuscode": null,
          "statusmessage": null
        }
      }
    ],
    "Microsoft Provider1": [
      {
        "json": {
          "Practitioner_ID": 4,
          "Is_Physician": false,
          "Abbreviation": "BB      ",
          "First_Name": "BURTON",
          "Last_Name": "BRODSKY",
          "Sex": "M",
          "Suffix": "MD",
          "Federal_ID_No": "383609391",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "G86089",
          "Specialty_ID": 13,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 113,
          "Is_Physician": true,
          "Abbreviation": "MSB     ",
          "First_Name": "MARC",
          "Last_Name": "BRODSKY",
          "Sex": null,
          "Suffix": "MD",
          "Federal_ID_No": "383477467",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "E61981",
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 205,
          "Is_Physician": true,
          "Abbreviation": "SK1     ",
          "First_Name": "SANFORD",
          "Last_Name": "KANER",
          "Sex": null,
          "Suffix": "DPM",
          "Federal_ID_No": "382712625",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "U20248",
          "Specialty_ID": 19,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 385,
          "Is_Physician": true,
          "Abbreviation": "MB1     ",
          "First_Name": "MARK",
          "Last_Name": "BUSTAMANTE",
          "Sex": null,
          "Suffix": null,
          "Federal_ID_No": "383593303",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "F58160",
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 559,
          "Is_Physician": true,
          "Abbreviation": "LAW     ",
          "First_Name": "LORI",
          "Last_Name": "WASHE",
          "Sex": null,
          "Suffix": null,
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "H01744",
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 665,
          "Is_Physician": false,
          "Abbreviation": "WS-PA   ",
          "First_Name": "Shannon",
          "Last_Name": "Webster",
          "Sex": "F",
          "Suffix": "PA-C",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-09-18T09:50:13.387Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 694,
          "Is_Physician": true,
          "Abbreviation": "GW      ",
          "First_Name": "GWENDOLYN",
          "Last_Name": "WASHINGTON",
          "Sex": "F",
          "Suffix": "M.D.",
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "A76415",
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 699,
          "Is_Physician": true,
          "Abbreviation": "MST     ",
          "First_Name": "MARTIN",
          "Last_Name": "TAMLER",
          "Sex": "M",
          "Suffix": null,
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "F34913",
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": -1,
          "Last_Modified_DateTime": "2017-03-07T01:14:11.480Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 766,
          "Is_Physician": true,
          "Abbreviation": "TN EP 9 ",
          "First_Name": "Ted",
          "Last_Name": "Naman",
          "Sex": "M",
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "H16600",
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-02-24T16:14:32.863Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 767,
          "Is_Physician": true,
          "Abbreviation": "GN EP 9 ",
          "First_Name": "Greg",
          "Last_Name": "Naman",
          "Sex": "M",
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "H16602",
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-02-16T14:18:46.010Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 781,
          "Is_Physician": true,
          "Abbreviation": "ST EP 9 ",
          "First_Name": "Susan",
          "Last_Name": "Tam",
          "Sex": "F",
          "Suffix": "DO",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": "H23171",
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-02-24T16:17:20.700Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2009,
          "Is_Physician": false,
          "Abbreviation": "AK-NP   ",
          "First_Name": "Amber",
          "Last_Name": "Kalabat",
          "Sex": "F",
          "Suffix": "FNP-BC",
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-08-12T08:17:32.867Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2018,
          "Is_Physician": false,
          "Abbreviation": "CG-PA   ",
          "First_Name": "Christopher",
          "Last_Name": "Gadoua",
          "Sex": "M",
          "Suffix": "PA-C",
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:23:27.730Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2019,
          "Is_Physician": false,
          "Abbreviation": "DC PA   ",
          "First_Name": "Deena",
          "Last_Name": "Chabaan",
          "Sex": "F",
          "Suffix": "PA-C",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:20:11.510Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2038,
          "Is_Physician": false,
          "Abbreviation": "FZ-NP   ",
          "First_Name": "Frank",
          "Last_Name": "Zuziak",
          "Sex": "M",
          "Suffix": "FNP-C",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-08-12T08:51:31.793Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2053,
          "Is_Physician": true,
          "Abbreviation": "PV-DO   ",
          "First_Name": "Pamela",
          "Last_Name": "Valka",
          "Sex": "F",
          "Suffix": "DO",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-02-24T16:17:43.520Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2094,
          "Is_Physician": false,
          "Abbreviation": "EM-NP   ",
          "First_Name": "Eric",
          "Last_Name": "Mozurkewich",
          "Sex": "M",
          "Suffix": "NP-C,RN",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-09-18T09:48:59.570Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2095,
          "Is_Physician": false,
          "Abbreviation": "MG-PAC  ",
          "First_Name": "Mary",
          "Last_Name": "Yaldoo",
          "Sex": "F",
          "Suffix": "PA-C",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-08-12T08:50:40.743Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2097,
          "Is_Physician": false,
          "Abbreviation": "KC-NP   ",
          "First_Name": "Kaitlyn",
          "Last_Name": "Cheedie",
          "Sex": "F",
          "Suffix": "FNP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:20:24.853Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2102,
          "Is_Physician": false,
          "Abbreviation": "PALAB   ",
          "First_Name": "Lab X-Ray",
          "Last_Name": "PA",
          "Sex": null,
          "Suffix": null,
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2021-09-14T15:36:44.883Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2122,
          "Is_Physician": false,
          "Abbreviation": "ML-NP   ",
          "First_Name": "Megan",
          "Last_Name": "Lennox",
          "Sex": "F",
          "Suffix": "NP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 3888,
          "Last_Modified_DateTime": "2024-05-10T09:22:41.300Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2124,
          "Is_Physician": true,
          "Abbreviation": "EK MD   ",
          "First_Name": "Eyas",
          "Last_Name": "Kanaan",
          "Sex": "M",
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:18:13.730Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2125,
          "Is_Physician": true,
          "Abbreviation": "HG MD   ",
          "First_Name": "Henri",
          "Last_Name": "Godbold",
          "Sex": "M",
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:24:16.247Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2133,
          "Is_Physician": false,
          "Abbreviation": "RJ-FNP  ",
          "First_Name": "rosilin",
          "Last_Name": "Joseph",
          "Sex": "F",
          "Suffix": "NP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:27:27.510Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2136,
          "Is_Physician": false,
          "Abbreviation": "KW-PAC  ",
          "First_Name": "Kara",
          "Last_Name": "Cavanaugh",
          "Sex": "F",
          "Suffix": "PA-C",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 3888,
          "Last_Modified_DateTime": "2024-01-18T09:17:14.487Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2145,
          "Is_Physician": false,
          "Abbreviation": "AT-FNP  ",
          "First_Name": "Allen",
          "Last_Name": "Toubia",
          "Sex": "M",
          "Suffix": "FNP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-10-17T11:46:04.117Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2178,
          "Is_Physician": false,
          "Abbreviation": "HC-NP   ",
          "First_Name": "Charmaine",
          "Last_Name": "Hudson",
          "Sex": "F",
          "Suffix": "NP",
          "Federal_ID_No": null,
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:26:46.307Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2185,
          "Is_Physician": false,
          "Abbreviation": "WK-PA   ",
          "First_Name": "Kelly",
          "Last_Name": "Wright",
          "Sex": "F",
          "Suffix": null,
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-05-02T22:16:33.807Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2195,
          "Is_Physician": false,
          "Abbreviation": "HK-PA   ",
          "First_Name": "Kimberly",
          "Last_Name": "Haggerty",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:25:20.823Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2197,
          "Is_Physician": false,
          "Abbreviation": "FN-FNP  ",
          "First_Name": "Nicolas",
          "Last_Name": "Fedirko",
          "Sex": "M",
          "Suffix": "FNP-BC",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:23:04.590Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2217,
          "Is_Physician": false,
          "Abbreviation": "SF-PA   ",
          "First_Name": "Faith",
          "Last_Name": "Stewart",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-09-05T17:03:09.173Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2222,
          "Is_Physician": false,
          "Abbreviation": "JS-PA   ",
          "First_Name": "Jessica",
          "Last_Name": "Sadler",
          "Sex": "F",
          "Suffix": "PA-C",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 3888,
          "Last_Modified_DateTime": "2024-06-19T09:49:43.197Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2227,
          "Is_Physician": false,
          "Abbreviation": "AH-PA   ",
          "First_Name": "Alison",
          "Last_Name": "Hobson",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-04T15:26:33.527Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2228,
          "Is_Physician": false,
          "Abbreviation": "NW-PA   ",
          "First_Name": "Nicole",
          "Last_Name": "Whitmore",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-08-28T11:32:05.157Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2233,
          "Is_Physician": false,
          "Abbreviation": "RW-PA   ",
          "First_Name": "Ryne",
          "Last_Name": "Weisenberger",
          "Sex": null,
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-11-06T08:40:30.973Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2234,
          "Is_Physician": false,
          "Abbreviation": "AC-PA   ",
          "First_Name": "Alexa",
          "Last_Name": "Cunningham",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-11-28T10:39:35.420Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2236,
          "Is_Physician": false,
          "Abbreviation": "AS-PA   ",
          "First_Name": "Amber",
          "Last_Name": "Sufi",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2023-12-28T08:18:29.450Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2239,
          "Is_Physician": false,
          "Abbreviation": "MW-FNP  ",
          "First_Name": "Morgan",
          "Last_Name": "Woolfolk",
          "Sex": "F",
          "Suffix": "FNP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-01-05T10:33:29.220Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2242,
          "Is_Physician": true,
          "Abbreviation": "RR-DO   ",
          "First_Name": "Ronald",
          "Last_Name": "Rothenberg",
          "Sex": "M",
          "Suffix": "DO",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-02-28T14:14:04.083Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2243,
          "Is_Physician": false,
          "Abbreviation": "MS-PA   ",
          "First_Name": "Margaret",
          "Last_Name": "Syms",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-01-08T14:49:44.040Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2244,
          "Is_Physician": false,
          "Abbreviation": "HZ-PA   ",
          "First_Name": "Hannah",
          "Last_Name": "Zawisa",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-01-08T14:51:36.580Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2245,
          "Is_Physician": false,
          "Abbreviation": "MMS-PA  ",
          "First_Name": "Mariam",
          "Last_Name": "Sareini",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-01-15T12:54:14.763Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2247,
          "Is_Physician": false,
          "Abbreviation": "BH-PA   ",
          "First_Name": "Bryan",
          "Last_Name": "Hnatio",
          "Sex": "M",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 3888,
          "Last_Modified_DateTime": "2024-01-19T14:32:31.277Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2248,
          "Is_Physician": true,
          "Abbreviation": "DW-MD   ",
          "First_Name": "David",
          "Last_Name": "Wash",
          "Sex": "M",
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-04-25T11:41:39.140Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2249,
          "Is_Physician": true,
          "Abbreviation": "MA-MD   ",
          "First_Name": "Mikita",
          "Last_Name": "Arora",
          "Sex": "F",
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-04-25T11:39:52.467Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2250,
          "Is_Physician": false,
          "Abbreviation": "LD-PA   ",
          "First_Name": "Linda",
          "Last_Name": "Dbouk",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-02-23T10:18:39.590Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2251,
          "Is_Physician": true,
          "Abbreviation": "BSB-MD  ",
          "First_Name": "Burton",
          "Last_Name": "Brodsky",
          "Sex": null,
          "Suffix": "MD",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 13,
          "Is_Non_Person": false,
          "Is_Mid_Level": false,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-04-25T11:33:43.173Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2255,
          "Is_Physician": false,
          "Abbreviation": "KD-NP   ",
          "First_Name": "Kelly",
          "Last_Name": "Doherty",
          "Sex": "F",
          "Suffix": "FNP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 3442,
          "Last_Modified_DateTime": "2024-05-02T17:20:04.620Z",
          "Is_Mid_Level_PA": false
        }
      },
      {
        "json": {
          "Practitioner_ID": 2258,
          "Is_Physician": false,
          "Abbreviation": "TN-PA   ",
          "First_Name": "Taylor",
          "Last_Name": "Newhart",
          "Sex": "F",
          "Suffix": "PA",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-08-12T14:16:25.100Z",
          "Is_Mid_Level_PA": true
        }
      },
      {
        "json": {
          "Practitioner_ID": 2259,
          "Is_Physician": false,
          "Abbreviation": "LH-NP   ",
          "First_Name": "Lauren",
          "Last_Name": "Hado",
          "Sex": "F",
          "Suffix": "FNP",
          "Federal_ID_No": "271484025",
          "Federal_ID_Sub_No": null,
          "Federal_ID_Suffix": null,
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "Is_Mid_Level": true,
          "GL_Sub_Account_Number": null,
          "Inactivation_Date": null,
          "Last_Modified_By": 1360,
          "Last_Modified_DateTime": "2024-08-30T07:46:04.630Z",
          "Is_Mid_Level_PA": false
        }
      }
    ],
    "Edit Fields1": [
      {
        "json": {
          "check": "pass",
          "Patient_ID": 175990,
          "Patient_Number": "516510",
          "Appt_ID": 2239147,
          "Appt_DateTime": "2024-11-15T08:00:00.000Z",
          "Appt_Date": "2024-11-15T00:00:00.000Z",
          "Appt_Sched_Location_Abbr": "EPS10Mil",
          "Appt_Sched_Location_Descr": "EPIC Southfield 10 Mile",
          "Appt_Resource_Abbr": "HZ-PA   ",
          "Appt_Resource_Descr": "Zawisa PA, Hannah",
          "Appt_Resource_Assoc_Prov_LFI": "Zawisa, Hannah",
          "Appt_Type_Abbr": "ACT OV  ",
          "Appt_Type_Descr": "ACT -  Office Visit",
          "Appt_Comments": "SV5/17- 6 Month",
          "Appt_Status": "S",
          "Appt_Booked_Date": "2024-05-17T08:59:11.863Z",
          "Appt_Booked_By_Operator_Abbr": "PACsvive",
          "NPI": "1730156050",
          "Patient_First_Name": "JOSUE",
          "Patient_Last_Name": "DURAN-CORONADO",
          "Patient_DOB": "08/11/2010",
          "Patient_Policy_ID": 224128,
          "Patient_Policy_Policy_ID": 222864,
          "Coverage": "P",
          "Verified_Date": "2022-09-27T00:00:00.000Z",
          "Policy_Account_ID": 173965,
          "Policy_Carrier_ID": 3243,
          "Carrier_Name": "Blue Cross Complete (Medicaid)",
          "Payor_Number": "000088",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Insurance_Carrier_ID": 3243,
          "Certificate_No": "XYU993189278",
          "Group_No": "00277723",
          "Policy_Comments": "LE VFY INS NOCOPAY",
          "Effective_Date": "2020-02-01T00:00:00.000Z",
          "Expiration_Date": null,
          "secPatient_Policy_ID": null,
          "secPatient_Policy_Policy_ID": null,
          "secCoverage": null,
          "secVerified_date": null,
          "secPolicy_Account_ID": null,
          "secCarrier_Name": null,
          "secPayor_Number": null,
          "secCopayment": null,
          "secIns_plan": null,
          "secInsurance_Carrier_ID": null,
          "secCertificate_No": null,
          "secGroup_No": null,
          "secPolicy_Comments": null,
          "secEffective_date": null,
          "secExpiration_Date": null
        }
      }
    ],
    "Edit Fields3": [
      {
        "json": {
          "requestid": 148562292,
          "apiresponsecode": "0",
          "apiresponsemessage": "Processed",
          "edierrormessage": null,
          "ispayerbackoffice": false,
          "processedwitherror": false,
          "errorcode": null,
          "errordescription": null,
          "pverifypayercode": "00150",
          "payername": "MOLINA_MI",
          "verificationtype": "Subscriber Verification",
          "dos": "12/03/2024 - 12/03/2024",
          "exceptionnotes": null,
          "ishmoplan": false,
          "addtionalinfo": null,
          "location": "MI",
          "referrenceid": "",
          "internalid": "",
          "customerid": "",
          "notes": null,
          "resultpracticetype": "Primary Care (30)",
          "areallstcsprocessed": true,
          "stcsstatusmessage": "",
          "isproviderinnetwork": null,
          "recursivetype": null,
          "recursiverequestid": 0,
          "recursiveapiresponsecode": null,
          "recursiveapiresponsemessage": null,
          "recursiveprocessedwitherror": false,
          "isskipped": false,
          "detailsurl": null,
          "ispriorauthrequired": null,
          "processrealtime": false,
          "subscriber_address1": "UPPR FLAT  12611 STOEPEL ST",
          "subscriber_address2": null,
          "subscriber_city": "DETROIT",
          "subscriber_communicationnumber": null,
          "subscriber_date_plan": "10/01/2017",
          "subscriber_dob_r": "12/07/1960",
          "subscriber_firstname": "STACEY",
          "subscriber_gender_r": "Female",
          "subscriber_lastname_r": "BEVERLY",
          "subscriber_middlename": "LYNNETTE",
          "subscriber_state": "MI",
          "subscriber_suffix": null,
          "subscriber_zip": "482383114",
          "subscriber_fullname": "STACEY BEVERLY",
          "plancoveragesummary_status": "Active",
          "plancoveragesummary_effectivedate": "10/01/2017",
          "plancoveragesummary_expirydate": "12/31/2078",
          "plancoveragesummary_planname": "MICHIGAN MEDICAID BENEFIT",
          "plancoveragesummary_policytype": "Medicaid",
          "plancoveragesummary_groupnumber": "TQMXEM01555",
          "plancoveragesummary_groupname": null,
          "plancoveragesummary_plannetworkid": null,
          "plancoveragesummary_plannetworkname": null,
          "plancoveragesummary_subscriberrelationship": null,
          "plancoveragesummary_plannumber": "TQMXBP6757",
          "plancoveragesummary_hraorhsalimitationsremaining": null,
          "plancoveragesummary_lastupdateddateofedi": null,
          "plancoveragesummary_patientgender": "Female",
          "plancoveragesummary_benefitplancode": null,
          "plancoveragesummary_issuedate": null,
          "pcpauthinfosummary_primarycareprovidername": "TED NAMAN",
          "pcpauthinfosummary_pcpstartdate": null,
          "pcpauthinfosummary_primarycareproviderphonenumber": null,
          "pcpauthinfosummary_innethbpcauthorizationinfo": "Unknown (May Depend on POS)",
          "pcpauthinfosummary_outnethbpcauthorizationinfo": "Unknown (May Depend on POS)",
          "pcpauthinfosummary_utilizationmanagementorganizationname": null,
          "pcpauthinfosummary_umotelephone": null,
          "pcpauthinfosummary_capitationfacilityname": null,
          "hbpc_deductible_oop_summary_individualdeductibleinnet": {
            "Value": "$0.00",
            "Notes": null
          },
          "hbpc_deductible_oop_summary_individualdeductibleoutnet": {
            "Value": "$0.00",
            "Notes": null
          },
          "hbpc_deductible_oop_summary_individualdeductibleremaininginnet": null,
          "hbpc_deductible_oop_summary_individualdeductibleremainingoutnet": null,
          "hbpc_deductible_oop_summary_familydeductibleinnet": null,
          "hbpc_deductible_oop_summary_familydeductibleoutnet": null,
          "hbpc_deductible_oop_summary_familydeductibleremaininginnet": null,
          "hbpc_deductible_oop_summary_familydeductibleremainingoutnet": null,
          "hbpc_deductible_oop_summary_individualoop_innet": null,
          "hbpc_deductible_oop_summary_individualoop_outnet": null,
          "hbpc_deductible_oop_summary_individualoopremaininginnet": null,
          "hbpc_deductible_oop_summary_individualoopremainingoutnet": null,
          "hbpc_deductible_oop_summary_familyoopinnet": null,
          "hbpc_deductible_oop_summary_familyoopoutnet": null,
          "hbpc_deductible_oop_summary_familyoopremaininginnet": null,
          "hbpc_deductible_oop_summary_familyoopremainingoutnet": null,
          "miscellaneousinfosummary_remainingspenddown": null,
          "miscellaneousinfosummary_isnpiinnetwork": null,
          "miscellaneousinfosummary_memberid": "1197892622",
          "servicedetails_servicename": "Chiropractic",
          "servicedetails_eligibilityorbenefit": "Active Coverage",
          "servicedetails_eligibilitydetails_authorizationorcertificationr": null,
          "servicedetails_eligibilitydetails_coveragelevel": null,
          "servicedetails_eligibilitydetails_date": [],
          "servicedetails_eligibilitydetails_identifications": [],
          "servicedetails_eligibilitydetails_insurancetype": null,
          "servicedetails_eligibilitydetails_monetaryamount": null,
          "servicedetails_eligibilitydetails_percent": null,
          "servicedetails_eligibilitydetails_plancoveragedescription": null,
          "servicedetails_eligibilitydetails_plannetworkindicator": null,
          "servicedetails_eligibilitydetails_quantityqualifier": null,
          "servicedetails_eligibilitydetails_quantity": null,
          "servicedetails_eligibilitydetails_timeperiodqualifier": null,
          "servicedetails_eligibilitydetails_procedure": null,
          "servicedetails_eligibilitydetails_placeofservice": null,
          "servicedetails_eligibilitydetails_benefitentities": [],
          "servicedetails_eligibilitydetails_healthcareservicedeliveries": [],
          "servicedetails_message": null,
          "disclaimermessage": "Summary Objects information is parsed information from the payer and is not guaranteed.Look at the ServiceDetails object for the details from the payer.",
          "eligibilityresult": "PAYER :                                 MOLINA_MI\nDOS :                                   12/03/2024 - 12/03/2024\nVERIFICATION TYPE :                     Subscriber Verification \n\n=================================================================\nSUBSCRIBER INFORMATION\n=================================================================\nName                                     : STACEY LYNNETTE BEVERLY\nAddress                                  : UPPR FLAT  12611 STOEPEL ST \nCity-State-Zip                           : DETROIT-MI-482383114\nGender                                   : Female\nDate Of Birth                            : 12/07/1960\nLastname_R                               : BEVERLY\nFirstname                                : STACEY\nMember ID                                : 1197892622\nGroup Number                             : TQMXEM01555\nPlan Number                              : TQMXBP6757\nPlan                                     : 10/01/2017\nTerm Date                                : 12/31/2078\n\n=================================================================\nELIGIBILITY & BENEFIT INFORMATION\n=================================================================\n-----------------------------------------------------------------\nService Type : Health Benefit Plan Coverage\n-----------------------------------------------------------------\n\n    Active Coverage (MICHIGAN MEDICAID BENEFIT)         \n      ***  MEDICAID REDETERMINATION DATE 07/31/18\n \r\n    Calendar Year Deductible                           : $0.00\n    Authorization/Certification Required               : Unknown\n    Primary Care Provider                               \n    [Primary Care Provider]                             \n    First Name                                         : TED\n    Middle Name                                        : R\n    Last Name                                          : NAMAN\n    Address                                            : 3051 MOMENTUM PL\n    City                                               : CHICAGO\n    State                                              : IL\n    Zip                                                : 60689\n    HCFA National Provider ID                          : 1730156050\n\n\n-----------------------------------------------------------------\nService Type : Chiropractic\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Dental Care\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Emergency Services\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Hospital\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Hospital - Inpatient\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Hospital - Outpatient\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Medical Care\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Mental Health\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Pharmacy\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Professional (Physician) Visit - Office\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Psychiatric - Inpatient\n-----------------------------------------------------------------\n\n    Non-Covered                                         \n\n\n-----------------------------------------------------------------\nService Type : Urgent Care\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n-----------------------------------------------------------------\nService Type : Vision (Optometry)\n-----------------------------------------------------------------\n\n    Active Coverage                                     \n    Co-Insurance                                       : 0%\n    Authorization/Certification Required               : Unknown\n    Co-Payment                                         : $0.00\n    Authorization/Certification Required               : Unknown\n\n\n",
          "nonediresultpath": null,
          "dentalinfo": null,
          "demographicinfo_dependent": null,
          "otherpayerinfo": null,
          "ipadetails": null,
          "medicareinfosummary": null,
          "primarycaresummary": {
            "ServiceCoveredInNet": "YES",
            "ServiceCoveredOutNet": "YES",
            "CoPayInNet": {
              "Value": "$0.00",
              "Notes": null
            },
            "CoInsInNet": {
              "Value": "0%",
              "Notes": null
            },
            "CoPayOutNet": {
              "Value": "$0.00",
              "Notes": null
            },
            "CoInsOutNet": {
              "Value": "0%",
              "Notes": null
            },
            "UMOName": null,
            "UMOTelephone": null,
            "InNetServiceAuthorizationInfo": "Unknown (May Depend on POS)",
            "OutNetServiceAuthorizationInfo": "Unknown (May Depend on POS)",
            "IndividualDeductibleInNet": null,
            "IndividualDeductibleOutNet": null,
            "IndividualDeductibleRemainingInNet": null,
            "IndividualDeductibleRemainingOutNet": null,
            "FamilyDeductibleInNet": null,
            "FamilyDeductibleOutNet": null,
            "FamilyDeductibleRemainingInNet": null,
            "FamilyDeductibleRemainingOutNet": null,
            "IndividualOOP_InNet": null,
            "IndividualOOP_OutNet": null,
            "IndividualOOPRemainingInNet": null,
            "IndividualOOPRemainingOutNet": null,
            "FamilyOOPInNet": null,
            "FamilyOOPOutNet": null,
            "FamilyOOPRemainingInNet": null,
            "FamilyOOPRemainingOutNet": null
          },
          "iscptinfoupdated": false,
          "preventiveservices": null,
          "headers_cache_control": null,
          "headers_pragma": null,
          "headers_content_type": null,
          "headers_expires": null,
          "headers_x_moesif_transaction_id": null,
          "headers_product_type": null,
          "headers_transactionid": null,
          "headers_x_ip": null,
          "headers_strict_transport_security": null,
          "headers_x_frame_options": null,
          "headers_content_security_policy": null,
          "headers_date": null,
          "headers_via": null,
          "headers_connection": null,
          "headers_transfer_encoding": null,
          "statuscode": null,
          "statusmessage": null,
          "check": "pass",
          "Patient_ID": 162755,
          "Patient_Number": "384570",
          "Appt_ID": 25380401,
          "Appt_DateTime": "2024-12-03T08:20:00.000Z",
          "Appt_Date": "2024-12-03T00:00:00.000Z",
          "Appt_Sched_Location_Abbr": "EPVideo ",
          "Appt_Sched_Location_Descr": "EPIC Video Visits",
          "Appt_Resource_Abbr": "RW-PA   ",
          "Appt_Resource_Descr": "Weisenberger PA, Ryne",
          "Appt_Resource_Assoc_Prov_LFI": "Weisenberger, Ryne",
          "Appt_Type_Abbr": "ACTVOV  ",
          "Appt_Type_Descr": "ACT - VOV",
          "Appt_Comments": "VOV,Zuziak, Frank, 1 MONTH",
          "Appt_Status": "S",
          "Appt_Booked_Date": "2024-12-03T08:52:41.530Z",
          "Appt_Booked_By_Operator_Abbr": "HEROERP ",
          "NPI": "1730156050",
          "Patient_First_Name": "STACEY",
          "Patient_Last_Name": "BEVERLY",
          "Patient_DOB": "12/07/1960",
          "Patient_Policy_ID": 202343,
          "Patient_Policy_Policy_ID": 201310,
          "Coverage": "P",
          "Verified_Date": "2024-02-08T00:00:00.000Z",
          "Policy_Account_ID": 160762,
          "Policy_Carrier_ID": 3280,
          "Carrier_Name": "Molina Medicaid",
          "Payor_Number": "001326",
          "CoPayment_Amount": null,
          "Insurance_Plan_ID": null,
          "Insurance_Carrier_ID": 3280,
          "Certificate_No": "1197892622",
          "Group_No": "TQMXEM01555",
          "Policy_Comments": "PCP:TN      PER MOLINA WEBSITE      02/08/24  CC",
          "Effective_Date": "2017-10-01T00:00:00.000Z",
          "Expiration_Date": null,
          "secPatient_Policy_ID": null,
          "secPatient_Policy_Policy_ID": null,
          "secCoverage": null,
          "secVerified_date": null,
          "secPolicy_Account_ID": null,
          "secCarrier_Name": null,
          "secPayor_Number": null,
          "secCopayment": null,
          "secIns_plan": null,
          "secInsurance_Carrier_ID": null,
          "secCertificate_No": null,
          "secGroup_No": null,
          "secPolicy_Comments": null,
          "secEffective_date": null,
          "secExpiration_Date": null,
          "lastDayOfMonth": "12/31/2024",
          "Atb Code": 55,
          "Atb SName": "Molina Medicaid",
          "Atb Name": "Molina Medicaid",
          "Ins Code": 3280,
          "Ins Name": "Molina Medicaid",
          "Ins SName": "Molina Medicaid",
          "pVerify Payer Name": "Molina Healthcare of Michigan",
          "pVerify Payer Code": "00150"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-05-15T17:02:47.369Z",
  "versionId": "7ffbfd14-83ef-4344-84c0-543a11b59b85"
}