{
  "active": true,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "NocoDB2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL": {
      "main": [
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        []
      ]
    },
    "NocoDB": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB2": {
      "main": [
        [
          {
            "node": "NocoDB1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Microsoft SQL2",
            "type": "main",
            "index": 0
          },
          {
            "node": "NocoDB2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB1": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Microsoft SQL1": {
      "main": [
        []
      ]
    },
    "Microsoft SQL2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "NocoDB",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NocoDB4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB4": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Code25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "NocoDB2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Microsoft SQL2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "NocoDB3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code20": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code22": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Main Version with LNFI": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code23": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code24": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB5": {
      "main": [
        [
          {
            "node": "Code29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "NocoDB5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code25": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code28": {
      "main": [
        []
      ]
    },
    "Code29": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB6": {
      "main": [
        [
          {
            "node": "Code34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code34": {
      "main": [
        [
          {
            "node": "Aggregate3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate3": {
      "main": [
        [
          {
            "node": "Code25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "NocoDB6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-07T16:34:14.694Z",
  "id": "qnpkHWg2eknOHi4o",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Patient Leaderboard",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DECLARE @STARTDATE smalldatetime = DATEADD(DAY,0,CAST(GETDATE() AS DATE)); \nDECLARE @ENDDATE smalldatetime = DATEADD(DAY, 1, @STARTDATE);\nDECLARE @LOC VARCHAR(250) = '%%';\nDECLARE @RES VARCHAR(250) = '%%';\n \n-- Schedule Metrics\nWITH schedule_specifics AS (\n    SELECT        \n        s.LOCATION_NAME,\n        s.CAREGIVER_NAME,\n        (s.PATIENT_LASTNAME + ', ' + LEFT(s.PATIENT_FIRSTNAME, 1)) AS LNFI,\n        s.DEM_EXTERNALID AS MRN,\n        L.TRACKINGSTATUS_TEXT AS CA_ASSIGNED,\n        lr.ROOM_TEXT AS ROOM_ASSIGNED,\n        CAST(s.SCHED_DATE AS DATE) AS APPT_DATE,\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMEIN, 100), 8) AS [ACK_TIME(PT HERE)],\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMESTART, 100), 8) AS [START_TIME(READY TO COME BACK)],\n        RIGHT(CONVERT(varchar(20), sl.TRACKINGSTATUS_TIMESTART, 100), 8) AS [CA_ROOM_ASSIGN_TIME_START],\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMEOUT, 100), 8) AS [CHECK_OUT(PATIET HAS LEFT THE BUILDING)],\n        DATEDIFF(MINUTE, s.SCHED_TIMEIN, s.SCHED_TIMESTART) AS ACK_TO_START_TIME,\n\t\tDATEDIFF(MINUTE, s.SCHED_TIMESTART, GETDATE()) AS ACK_CURRENT_TIME_IN_OFFICE,\n        DATEDIFF(MINUTE, s.SCHED_TIMEIN, s.SCHED_TIMEOUT) AS ACTUAL_ACK_TO_CHECKOUT_TIME,\n        DATEDIFF(MINUTE, s.SCHED_TIMESTART, s.SCHED_TIMEOUT) AS ACTUAL_CHARTUP_TO_CHECKOUT_TIME\n    FROM [EMR].[HPSITE].[SCHEDULE_VIEW] s\n    LEFT JOIN [EMR].[HPSITE].[SCHEDULE_TRACKINGSTATUS] sl ON sl.TRACKINGSTATUS_ID = s.TRACKINGSTATUS_ID AND sl.IMRESCHED_CODE = s.IMRESCHED_CODE\n    LEFT JOIN [HPSITE].[LOCATION_TRACKINGSTATUS] l ON l.TRACKINGSTATUS_ID = sl.TRACKINGSTATUS_ID AND l.LOCATION_ID = s.LOCATION_ID\n    LEFT JOIN [HPSITE].[LOCATION_ROOM] lr ON lr.LOCATION_ID = s.LOCATION_ID AND lr.ROOM_ID = s.ROOM_ID\n    WHERE \n        s.SCHED_DATE BETWEEN @STARTDATE AND @ENDDATE\n        AND CAST(s.SCHED_DATE AS time) BETWEEN '07:00:00' AND '19:00:00'\n        AND s.LOCATION_NAME LIKE @LOC\n        AND s.CAREGIVER_NAME LIKE @RES\n        AND s.SCHED_TIMEIN IS NOT NULL\n),\n \n-- Base Schedule for Reuse\nbase_schedule AS (\n    SELECT \n        a.IMREDEM_CODE,\n        a.DEM_EXTERNALID,\n        a.SCHED_DATE,\n        a.LOCATION_NAME,\n        a.CAREGIVER_NAME,\n        a.SCHED_TIMEIN,\n        c.IMRESCHED_CODE,\n        c.IMRECONTACT_CODE\n    FROM [HPSITE].[SCHEDULE_VIEW] a\n    INNER JOIN [HPSITE].[CONTACT] c ON a.IMRESCHED_CODE = c.IMRESCHED_CODE \n    WHERE \n        a.SCHED_DATE >= @STARTDATE AND a.SCHED_DATE < @ENDDATE\n        AND a.CAREGIVER_NAME LIKE @RES\n        AND a.SCHED_TIMEIN IS NOT NULL\n),\n \n-- Lab Orders\nlab_cpt_ordered AS (\n    SELECT  \n        s.IMREDEM_CODE,\n        s.DEM_EXTERNALID,\n        lc.LABCAT_CPTCODE,\n        CASE \n            WHEN lc.LABCAT_CPTCODE IN ('82962','81002','85018','81025','80300','83036','G0483','87804','87880','87426','82044','82570') THEN 'IH'\n            ELSE 'OH'\n        END AS INT_VS_EXT,\n        s.CAREGIVER_NAME\n    FROM base_schedule s\n    INNER JOIN [EMR].[HPSITE].[LABORDERS] p ON p.IMRECONTACT_CODE = s.IMRECONTACT_CODE\n    INNER JOIN [HPSITE].[LABCATALOG] lc ON lc.IMRELABCAT_CODE = p.IMRELABCAT_CODE\n),\n \n-- Procedures\nproc_cpt_ordered AS (\n    SELECT \n        s.IMREDEM_CODE,\n        s.DEM_EXTERNALID,\n        p.PROC_CODE,\n        CASE \n            WHEN p.PROC_CODE IN (\n                '10060','10140','11040','11055','11100','11101','11102','11104','11200','11201','11300','11301','11302','11400','11402','12021',\n                '15277','15851','15853','17110','17340','20550','20552','20553','20605','20610','29130','29260','29530','29580','29843','33285',\n                '46083','57410','57415','57452','57505','57522','58100','58300','64435','64450','69200','69209','69210','74740','90471','90472',\n                '90619','90621','90632','90633','90647','90651','90656','90662','90670','90671','90673','90677','90680','90681','90682','90696',\n                '90697','90698','90700','90707','90710','90713','90715','90716','90723','90732','90734','90736','90744','90746','90750','93000',\n                '93227','93922','94010','94060','94640','94690','95004','95012','95165','95250','95251','95800','95806','96120','96125','96138'\n            ) THEN 'USE_SUPPLY'\n            ELSE 'NO_SUPPLY'\n        END AS INT_VS_EXT,\n        s.CAREGIVER_NAME\n    FROM base_schedule s\n    INNER JOIN [EMR].[HPSITE].[PROCEDURES] p ON p.IMRECONTACT_CODE = s.IMRECONTACT_CODE\n),\n \n-- Unified and Aggregated\npivoted_orders AS (\n    SELECT \n        u.CAREGIVER_NAME,\n        u.DEM_EXTERNALID,\n        SUM(CASE WHEN u.INT_VS_EXT = 'IH' THEN 1 ELSE 0 END) AS [POC LABS],\n        SUM(CASE WHEN u.INT_VS_EXT = 'OH' THEN 1 ELSE 0 END) AS [NON POC LABS],\n        SUM(CASE WHEN u.INT_VS_EXT = 'USE_SUPPLY' THEN 1 ELSE 0 END) AS [POC PROC]\n    FROM (\n        SELECT * FROM lab_cpt_ordered\n        UNION ALL\n        SELECT * FROM proc_cpt_ordered WHERE INT_VS_EXT <> 'NO_SUPPLY'\n    ) u\n    GROUP BY u.CAREGIVER_NAME, u.DEM_EXTERNALID\n)\nSELECT \n    s.*,'' as PREDICTED_TIME_WITH_TOTAL_PROCEDURES,\n    ISNULL(p.[POC LABS], 0) AS [POC_LABS],\n    ISNULL(p.[NON POC LABS], 0) AS [NON_POC_LABS],\n    ISNULL(p.[POC PROC], 0) AS [POC_PROC],\n\tCASE \n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE > 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'RED'\n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE > 40 AND S.ACK_CURRENT_TIME_IN_OFFICE <= 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'YELLOW'\n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE <= 40 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'GREEN'\n        ELSE 'INVESTIGATE'\n    END AS CALC_VOC_VALUE,\n\tCASE \n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME > 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'RED'\n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME > 40 AND S.ACTUAL_ACK_TO_CHECKOUT_TIME <= 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'YELLOW'\n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME <= 40 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'GREEN'\n        ELSE 'INVESTIGATE'\n    END AS TRUE_VOC_VALUE\nFROM schedule_specifics s\nLEFT JOIN pivoted_orders p ON s.MRN = p.DEM_EXTERNALID;"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        -620,
        -1500
      ],
      "id": "cb2b8565-59d8-4bcd-a18c-e00246607c92",
      "name": "Microsoft SQL",
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1560,
        -1440
      ],
      "id": "aee1c016-a4a8-4da6-bcfa-c7f1762dd9ef",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards (initially)\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time from ACK_TO_START_TIME (used directly)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows (column order: Location, Patient, MRN, Provider, Room, Status, Check-In, Ready, Wait Time, Checked Out)\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Use the ACK_TO_START_TIME field directly for WAIT TIME\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\" data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML with updated header, cards, and filters (using multiselect dropdowns with a Clear Filters button)\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (Title card and 2 metric cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 p-4\">\n        <!-- Title Card with Patients Today info -->\n        <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n          <h2 class=\"text-5xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n          <p id=\"total-patients\" class=\"text-3xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n        </div>\n        <!-- Card: Avg Lobby Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n              <i class=\"ri-time-line text-yellow-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Started</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card: Avg Total Cycle Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n              <i class=\"ri-timer-line text-green-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Legend, Filters, and Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- Last Refresh info -->\n        <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n        <!-- Multiselect Filters for Location and Provider -->\n        <div class=\"ml-4 flex items-center space-x-2\">\n          <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n            <!-- Options populated dynamically -->\n          </select>\n          <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n            <!-- Options populated dynamically -->\n          </select>\n          <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n        </div>\n        <!-- Spacer -->\n        <div class=\"flex-grow\"></div>\n        <!-- Search -->\n        <div class=\"flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n                <th data-col-index=\"9\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Checked Out\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the multiselect filters with unique options\n    function populateFilters() {\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      \n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      \n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locationSelect.appendChild(option);\n      });\n      \n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        providerSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Function to filter data based on search term and dropdown selections\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    // Update metric cards based on filtered data\n    function updateCards() {\n      const filteredData = filterData();\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${totalPatientsFiltered}\\`;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Apply filters to table rows based on search and dropdown selections\n    function applyFilters() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      const rows = document.querySelectorAll('#patient-table-body tr');\n      rows.forEach(row => {\n        const locationCell = row.querySelector('td:nth-child(1)');\n        const providerCell = row.querySelector('td:nth-child(4)');\n        const rowLocation = locationCell ? locationCell.textContent.trim() : \"\";\n        const rowProvider = providerCell ? providerCell.textContent.trim() : \"\";\n        const rowText = row.textContent.toLowerCase();\n        \n        const searchMatches = rowText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(rowLocation) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(rowProvider) : true;\n        \n        row.style.display = (searchMatches && locationMatches && providerMatches) ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach event listeners\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    const numericCols = [2, 8]; // MRN and Wait Time columns\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        -160
      ],
      "id": "1dc278c2-e348-47c5-aa99-7282d70ab52e",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3960,
        -100
      ],
      "id": "63b27706-a352-4cdc-aa83-e2fa79b7fe5d",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "path": "0777f06b-3b22-4c94-b77e-fd9745033ab6",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -700,
        -160
      ],
      "id": "80db9ec9-237b-4eab-bba8-09eca3f5d9e7",
      "name": "Webhook",
      "webhookId": "0777f06b-3b22-4c94-b77e-fd9745033ab6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2180,
        280
      ],
      "id": "fb1db2fb-7456-4b36-8b6c-39f77bb40156",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        0,
        -200
      ],
      "id": "1cc10262-f6e3-4134-8058-0bbd0c2e2f73",
      "name": "NocoDB",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        280,
        -160
      ],
      "id": "64b80d65-6548-46d7-a23f-c3417665302c",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1800,
        -1060
      ],
      "id": "82208ec1-00dc-43b9-b4ed-1ab307a96db4",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "delete",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "id": "={{ $json.Id }}"
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -1080,
        -1160
      ],
      "id": "a537bcfc-6040-48d0-b75e-c5e050730722",
      "name": "NocoDB1",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -1260,
        -1220
      ],
      "id": "22f8f499-5d4d-4691-8c0f-fad4b4415a59",
      "name": "NocoDB2",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "dataToSend": "autoMapInputData"
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -100,
        -1260
      ],
      "id": "c9773339-3ddc-47f5-821c-19b47b0b4593",
      "name": "NocoDB3",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "/****************************************\n * n8n Code Node: Patient Leaderboard\n ****************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// ---------------------------------------------------\n// 1) Aggregate data to power the metric cards\n// ---------------------------------------------------\nconst totalPatients = data.length;\n\n// Collect arrays for each metric\nconst ackCheckoutTimes = data\n  .map(row => row[\"ACTUAL_ACK_TO_CHECKOUT_TIME\"])\n  .filter(num => typeof num === 'number');\nconst chartupCheckoutTimes = data\n  .map(row => row[\"ACTUAL_CHARTUP_TO_CHECKOUT_TIME\"])\n  .filter(num => typeof num === 'number');\nconst vocValues = data\n  .map(row => row[\"TRUE_VOC_VALUE\"])\n  .filter(val => val);\n\n// Compute average wait time (ACTUAL_ACK_TO_CHECKOUT_TIME)\nlet averageWaitTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageWaitTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute average total cycle (ACTUAL_CHARTUP_TO_CHECKOUT_TIME)\nlet averageTotalCycle = 0;\nif (chartupCheckoutTimes.length > 0) {\n  averageTotalCycle = chartupCheckoutTimes.reduce((sum, val) => sum + val, 0) / chartupCheckoutTimes.length;\n}\n\n// Compute provider efficiency as % of \"GREEN\"\nlet providerEfficiency = 0;\nif (vocValues.length > 0) {\n  const greenCount = data.filter(row => row[\"TRUE_VOC_VALUE\"] === \"GREEN\").length;\n  providerEfficiency = (greenCount / totalPatients) * 100;\n}\n\n// Decide which cards to show based on available data\nconst showPatientsCard = (totalPatients > 0);\nconst showAvgWaitTimeCard = (ackCheckoutTimes.length > 0);\nconst showAvgTotalCycleCard = (chartupCheckoutTimes.length > 0);\nconst showProviderEfficiencyCard = (vocValues.length > 0);\n\n// ---------------------------------------------------\n// 2) Helper to map TRUE_VOC_VALUE -> status label/CSS\n// ---------------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return {\n        label: \"Completed\",\n        rowClass: \"bg-green-50\",\n        badgeClass: \"bg-green-100 text-green-800\",\n      };\n    case \"YELLOW\":\n      return {\n        label: \"In Progress\",\n        rowClass: \"bg-yellow-50\",\n        badgeClass: \"bg-yellow-100 text-yellow-800\",\n      };\n    case \"RED\":\n      return {\n        label: \"Waiting\",\n        rowClass: \"bg-red-50\",\n        badgeClass: \"bg-red-100 text-red-800\",\n      };\n    case \"INVESTIGATE\":\n      return {\n        label: \"Ready\",\n        rowClass: \"bg-blue-50\",\n        badgeClass: \"bg-blue-100 text-blue-800\",\n      };\n    default:\n      return {\n        label: \"Unknown\",\n        rowClass: \"\",\n        badgeClass: \"\",\n      };\n  }\n}\n\n// ---------------------------------------------------\n// 3) Build the <tbody> rows from the data\n// ---------------------------------------------------\nconst rowsHtml = data.map((row) => {\n  const statusObj = getStatusMapping(row[\"TRUE_VOC_VALUE\"]);\n\n  const location = row[\"LOCATION_NAME\"] || \"\";\n  const patient = row[\"LNFI\"] || \"\";\n  const mrn = row[\"MRN\"] || \"\";\n  const provider = row[\"CAREGIVER_NAME\"] || \"\";\n  const room = row[\"ROOM_ASSIGNED\"] || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME_BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n\n  // We'll show \"ACK_TO_START_TIME\" as \"Wait Time\" in the table\n  const waitMinutes = row[\"ACK_TO_START_TIME\"] || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// ---------------------------------------------------\n// 4) Build the HTML page (no ECharts, no extra tiles)\n// ---------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n    }\n    .metric-card:hover {\n      transform: translateY(-5px);\n    }\n    input[type=\"number\"]::-webkit-inner-spin-button,\n    input[type=\"number\"]::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <div class=\"flex items-center justify-between px-6 py-3\">\n        <!-- Title -->\n        <div class=\"flex items-center space-x-4\">\n          <h1 class=\"text-2xl font-bold text-gray-800\">Patient Leaderboard</h1>\n        </div>\n        <!-- Date & Time -->\n        <div class=\"flex items-center space-x-6\">\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-10 h-10 flex items-center justify-center bg-gray-100 rounded-full\">\n              <i class=\"ri-calendar-line text-gray-600\"></i>\n            </div>\n            <span class=\"text-gray-700 font-medium\">April 5, 2025</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <div class=\"w-10 h-10 flex items-center justify-center bg-gray-100 rounded-full\">\n              <i class=\"ri-time-line text-gray-600\"></i>\n            </div>\n            <span class=\"text-gray-700 font-medium\" id=\"current-time\">10:45 AM</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- Right side: Search + Refresh -->\n        <div class=\"ml-auto flex items-center space-x-4\">\n          <!-- Search input -->\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n          </div>\n          <!-- Refresh Button -->\n          <button class=\"bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-button text-sm font-medium whitespace-nowrap\">\n            <i class=\"ri-refresh-line mr-1\"></i> Refresh Data\n          </button>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Location\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Patient\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  MRN\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Provider\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Room\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Check-In\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Ready\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- Metrics Dashboard (only show cards if data is available) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n        ${\n          showPatientsCard\n            ? `\n          <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Patients Today</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-blue-100 rounded-full\">\n                <i class=\"ri-user-3-line text-primary\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p class=\"text-3xl font-bold text-gray-800\">${totalPatients}</p>\n                <p class=\"text-sm text-gray-500\">Total</p>\n              </div>\n            </div>\n          </div>\n        `\n            : ''\n        }\n        ${\n          showAvgWaitTimeCard\n            ? `\n          <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Average Wait Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                <i class=\"ri-time-line text-yellow-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p class=\"text-3xl font-bold text-gray-800\">${Math.round(averageWaitTime)} min</p>\n                <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n              </div>\n            </div>\n          </div>\n        `\n            : ''\n        }\n        ${\n          showAvgTotalCycleCard\n            ? `\n          <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                <i class=\"ri-timer-line text-green-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycle)} min</p>\n                <p class=\"text-sm text-gray-500\">Chart-Up to Checkout</p>\n              </div>\n            </div>\n          </div>\n        `\n            : ''\n        }\n        ${\n          showProviderEfficiencyCard\n            ? `\n          <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Provider Efficiency</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-purple-100 rounded-full\">\n                <i class=\"ri-user-star-line text-purple-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p class=\"text-3xl font-bold text-gray-800\">${Math.round(providerEfficiency)}%</p>\n                <p class=\"text-sm text-gray-500\">Completed Ratio</p>\n              </div>\n            </div>\n          </div>\n        `\n            : ''\n        }\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Update clock every minute\n    function updateTime() {\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      document.getElementById('current-time').textContent = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n    }\n    updateTime();\n    setInterval(updateTime, 60000);\n\n    // Real-time search filter\n    const searchInput = document.getElementById('search-input');\n    searchInput.addEventListener('input', function() {\n      const searchTerm = this.value.toLowerCase();\n      const tableRows = document.querySelectorAll('#patient-table-body tr');\n      tableRows.forEach((row) => {\n        const rowText = row.textContent.toLowerCase();\n        row.style.display = rowText.includes(searchTerm) ? '' : 'none';\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2020,
        280
      ],
      "id": "b6ac4cf0-e96d-44c0-90c8-feddf4839a06",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// ---------------------------------------------------\n// 1) Sort the data so that non-completed come first,\n//    ordered by ACK_CURRENT_TIME_IN_OFFICE desc.\n//    Then completed at the bottom.\n// ---------------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\n// By default, keep \"completed\" in the order they appear\n// or sort them if you prefer. We'll leave them as-is.\n\nconst finalData = [...notCompleted, ...completed];\n\n// ---------------------------------------------------\n// 2) Aggregate data for metric cards\n// ---------------------------------------------------\nconst totalPatients = finalData.length;\n\n// ACTUAL_ACK_TO_CHECKOUT_TIME\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\n// ACTUAL_CHARTUP_TO_CHECKOUT_TIME\nconst chartupCheckoutTimes = finalData\n  .map(r => r.ACTUAL_CHARTUP_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\n// TRUE_VOC_VALUE (GREEN = completed ratio)\nconst vocValues = finalData.map(r => r.TRUE_VOC_VALUE);\n\n// Calculate average wait time\nlet averageWaitTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageWaitTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Calculate average total cycle\nlet averageTotalCycle = 0;\nif (chartupCheckoutTimes.length > 0) {\n  averageTotalCycle = chartupCheckoutTimes.reduce((sum, val) => sum + val, 0) / chartupCheckoutTimes.length;\n}\n\n// Calculate provider efficiency = % with TRUE_VOC_VALUE = \"GREEN\"\nlet providerEfficiency = 0;\nif (vocValues.length > 0) {\n  const greenCount = vocValues.filter(v => v === \"GREEN\").length;\n  providerEfficiency = (greenCount / totalPatients) * 100;\n}\n\n// ---------------------------------------------------\n// 3) Map each row to an HTML <tr>\n// ---------------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME_BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n  \n  // We'll show \"ACK_TO_START_TIME\" as the Wait Time (in minutes)\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // We'll add data-sort-value attributes to help with column sorting\n  // Column indices (0-based):\n  // 0: Location (text)\n  // 1: Patient (text)\n  // 2: MRN (numeric)\n  // 3: Provider (text)\n  // 4: Room (text)\n  // 5: Status (text)\n  // 6: Check-In (text)\n  // 7: Ready (text)\n  // 8: Wait Time (numeric)\n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\"\n          data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\"\n          data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\"\n          data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// ---------------------------------------------------\n// 4) Build final HTML\n//    - Sticky header with title, date, data-age, time\n//    - Cards at top\n//    - Legend + search\n//    - Sortable table\n// ---------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n    }\n    .metric-card:hover {\n      transform: translateY(-5px);\n    }\n    input[type=\"number\"]::-webkit-inner-spin-button,\n    input[type=\"number\"]::-webkit-outer-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Top bar: Title, date, data age, current time -->\n      <div class=\"flex items-center justify-between px-6 py-3\">\n        <h1 class=\"text-2xl font-bold text-gray-800\">Patient Leaderboard</h1>\n        <div class=\"flex items-center space-x-4\">\n          <span class=\"text-gray-700 font-medium\">April 5, 2025</span>\n          <span class=\"text-gray-700 font-medium\" id=\"page-data-age\">Page data is 0:00 old.</span>\n          <span class=\"text-gray-700 font-medium\" id=\"current-time\">1:49 PM</span>\n        </div>\n      </div>\n\n      <!-- Metrics Cards row -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 p-4\">\n        <!-- Patients Today -->\n        <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Patients Today</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-blue-100 rounded-full\">\n              <i class=\"ri-user-3-line text-primary\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p class=\"text-3xl font-bold text-gray-800\">${totalPatients}</p>\n              <p class=\"text-sm text-gray-500\">Total</p>\n            </div>\n          </div>\n        </div>\n        <!-- Average Wait Time -->\n        ${\n          ackCheckoutTimes.length > 0\n            ? `\n            <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Average Wait Time</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                  <i class=\"ri-time-line text-yellow-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p class=\"text-3xl font-bold text-gray-800\">${Math.round(averageWaitTime)} min</p>\n                  <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n        <!-- Avg Total Cycle -->\n        ${\n          chartupCheckoutTimes.length > 0\n            ? `\n            <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                  <i class=\"ri-timer-line text-green-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycle)} min</p>\n                  <p class=\"text-sm text-gray-500\">Chart-Up to Checkout</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n        <!-- Provider Efficiency -->\n        ${\n          vocValues.length > 0\n            ? `\n            <div class=\"bg-white rounded-lg shadow-sm p-6 metric-card\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Provider Efficiency</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-purple-100 rounded-full\">\n                  <i class=\"ri-user-star-line text-purple-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p class=\"text-3xl font-bold text-gray-800\">${Math.round(providerEfficiency)}%</p>\n                  <p class=\"text-sm text-gray-500\">Completed Ratio</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n      </div>\n\n      <!-- Legend + Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- Right side: Search only -->\n        <div class=\"ml-auto flex items-center space-x-4\">\n          <!-- Search input -->\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // 1) Update clock every minute\n    function updateTime() {\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      document.getElementById('current-time').textContent = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n    }\n    updateTime();\n    setInterval(updateTime, 60000);\n\n    // 2) Page data age counter (mm:ss)\n    let dataAgeSeconds = 0;\n    function updateDataAge() {\n      dataAgeSeconds++;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('page-data-age').textContent = \\`Page data is \\${mm}:\\${ss} old.\\`;\n    }\n    setInterval(updateDataAge, 1000);\n\n    // 3) Real-time search filter\n    const searchInput = document.getElementById('search-input');\n    searchInput.addEventListener('input', function() {\n      const searchTerm = this.value.toLowerCase();\n      const tableRows = document.querySelectorAll('#patient-table-body tr');\n      tableRows.forEach((row) => {\n        const rowText = row.textContent.toLowerCase();\n        row.style.display = rowText.includes(searchTerm) ? '' : 'none';\n      });\n    });\n\n    // 4) Sorting logic\n    // We'll attach a click listener to each <th.sortable>.\n    // We'll store ascending/descending states in an object.\n    const sortDirections = {};\n    const numericCols = [2, 8]; // MRN, Wait Time (indexes)\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        // String compare\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      // Toggle sort direction\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true; // default ascending\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      // Sort rows\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || cellA?.textContent.toLowerCase() || '';\n        const valB = cellB?.getAttribute('data-sort-value') || cellB?.textContent.toLowerCase() || '';\n\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n\n      // Re-append rows in sorted order\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Attach click listener to each sortable th\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2020,
        140
      ],
      "id": "c930de3d-8046-440c-b08f-24938b01fb51",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\n// If you prefer to sort completed as well, do so here. Otherwise, keep original order.\n\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// ACTUAL_ACK_TO_CHECKOUT_TIME\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\n// ACTUAL_CHARTUP_TO_CHECKOUT_TIME\nconst chartupCheckoutTimes = finalData\n  .map(r => r.ACTUAL_CHARTUP_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\n// Calculate average wait time\nlet averageWaitTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageWaitTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Calculate average total cycle\nlet averageTotalCycle = 0;\nif (chartupCheckoutTimes.length > 0) {\n  averageTotalCycle = chartupCheckoutTimes.reduce((sum, val) => sum + val, 0) / chartupCheckoutTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME_BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n\n  // We'll show \"ACK_TO_START_TIME\" as the Wait Time (in minutes)\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // data-sort-value helps with column sorting\n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\"\n          data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\"\n          data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\"\n          data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (4 cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 p-4\">\n        <!-- Card 1: Title -->\n        <div class=\"metric-card rounded-lg p-6 flex items-center justify-center\">\n          <h2 class=\"text-2xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        </div>\n        <!-- Card 2: Patients Today -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Patients Today</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-blue-100 rounded-full\">\n              <i class=\"ri-user-3-line text-primary\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p class=\"text-3xl font-bold text-gray-800\">${totalPatients}</p>\n              <p class=\"text-sm text-gray-500\">Total</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card 3: Average Wait Time -->\n        ${\n          ackCheckoutTimes.length > 0\n            ? `\n            <div class=\"metric-card rounded-lg p-6\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Average Wait Time</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                  <i class=\"ri-time-line text-yellow-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p class=\"text-3xl font-bold text-gray-800\">${Math.round(averageWaitTime)} min</p>\n                  <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n        <!-- Card 4: Avg Total Cycle -->\n        ${\n          chartupCheckoutTimes.length > 0\n            ? `\n            <div class=\"metric-card rounded-lg p-6\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                  <i class=\"ri-timer-line text-green-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycle)} min</p>\n                  <p class=\"text-sm text-gray-500\">Chart-Up to Checkout</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n      </div>\n\n      <!-- Date, Page data age, Current time row -->\n      <div class=\"flex items-center justify-end px-6 pb-2 space-x-4\">\n        <span class=\"text-gray-700 font-medium\">April 5, 2025</span>\n        <span class=\"text-gray-700 font-medium\" id=\"page-data-age\">Page data is 0:00 old.</span>\n        <span class=\"text-gray-700 font-medium\" id=\"current-time\">1:49 PM</span>\n      </div>\n\n      <!-- Legend + Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- Right side: Search with an \"x\" to clear -->\n        <div class=\"ml-auto flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // 1) Update clock every minute\n    function updateTime() {\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      document.getElementById('current-time').textContent = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n    }\n    updateTime();\n    setInterval(updateTime, 60000);\n\n    // 2) Page data age counter (mm:ss)\n    let dataAgeSeconds = 0;\n    function updateDataAge() {\n      dataAgeSeconds++;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('page-data-age').textContent = \\`Page data is \\${mm}:\\${ss} old.\\`;\n    }\n    setInterval(updateDataAge, 1000);\n\n    // 3) Real-time search filter\n    const searchInput = document.getElementById('search-input');\n    const clearSearchBtn = document.getElementById('clear-search');\n\n    searchInput.addEventListener('input', function() {\n      const searchTerm = this.value.toLowerCase();\n      const tableRows = document.querySelectorAll('#patient-table-body tr');\n      tableRows.forEach((row) => {\n        const rowText = row.textContent.toLowerCase();\n        row.style.display = rowText.includes(searchTerm) ? '' : 'none';\n      });\n    });\n\n    // Clear search on \"x\" click\n    clearSearchBtn.addEventListener('click', () => {\n      searchInput.value = '';\n      searchInput.dispatchEvent(new Event('input'));\n    });\n\n    // 4) Sorting logic\n    const sortDirections = {};\n    const numericCols = [2, 8]; // MRN, Wait Time\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        // String compare\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      // Toggle sort direction\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true; // default ascending\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      // Sort rows\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n\n      // Re-append rows in sorted order\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Attach click listener to each sortable th\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2020,
        0
      ],
      "id": "ccfd1ed9-51f3-4c29-bedf-76b2b8dd1b39",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\n// If you prefer to sort completed as well, do so here. Otherwise, keep original order.\n\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// ACTUAL_ACK_TO_CHECKOUT_TIME\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\n// ACTUAL_CHARTUP_TO_CHECKOUT_TIME\nconst chartupCheckoutTimes = finalData\n  .map(r => r.ACTUAL_CHARTUP_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\n// Calculate average wait time\nlet averageWaitTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageWaitTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Calculate average total cycle\nlet averageTotalCycle = 0;\nif (chartupCheckoutTimes.length > 0) {\n  averageTotalCycle = chartupCheckoutTimes.reduce((sum, val) => sum + val, 0) / chartupCheckoutTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME_BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n\n  // We'll show \"ACK_TO_START_TIME\" as the Wait Time (in minutes)\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // data-sort-value helps with column sorting\n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\"\n          data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\"\n          data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\"\n          data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (4 cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 p-4\">\n        <!-- Card 1: Title -->\n        <div class=\"metric-card rounded-lg p-6 flex items-center justify-center\">\n          <h2 class=\"text-2xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        </div>\n        <!-- Card 2: Patients Today -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Patients Today</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-blue-100 rounded-full\">\n              <i class=\"ri-user-3-line text-primary\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"total-patients\" class=\"text-3xl font-bold text-gray-800\">${totalPatients}</p>\n              <p class=\"text-sm text-gray-500\">Total</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card 3: Average Wait Time -->\n        ${\n          ackCheckoutTimes.length > 0\n            ? `\n            <div class=\"metric-card rounded-lg p-6\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Average Wait Time</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                  <i class=\"ri-time-line text-yellow-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p id=\"avg-wait-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageWaitTime)} min</p>\n                  <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n        <!-- Card 4: Avg Total Cycle -->\n        ${\n          chartupCheckoutTimes.length > 0\n            ? `\n            <div class=\"metric-card rounded-lg p-6\">\n              <div class=\"flex items-center justify-between mb-4\">\n                <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle</h3>\n                <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                  <i class=\"ri-timer-line text-green-600\"></i>\n                </div>\n              </div>\n              <div class=\"flex items-end justify-between\">\n                <div>\n                  <p id=\"avg-total-cycle\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycle)} min</p>\n                  <p class=\"text-sm text-gray-500\">Chart-Up to Checkout</p>\n                </div>\n              </div>\n            </div>\n          `\n            : ''\n        }\n      </div>\n\n      <!-- Legend + Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- New Last Refresh info -->\n        <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n        <!-- Right side: Search with an \"x\" to clear -->\n        <div class=\"ml-auto flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Search filter with cards update\n    const searchInput = document.getElementById('search-input');\n    const clearSearchBtn = document.getElementById('clear-search');\n\n    searchInput.addEventListener('input', function() {\n      const searchTerm = this.value.toLowerCase();\n      const tableRows = document.querySelectorAll('#patient-table-body tr');\n      tableRows.forEach((row) => {\n        const rowText = row.textContent.toLowerCase();\n        row.style.display = rowText.includes(searchTerm) ? '' : 'none';\n      });\n      updateCards();\n    });\n\n    // Clear search on \"x\" click\n    clearSearchBtn.addEventListener('click', () => {\n      searchInput.value = '';\n      searchInput.dispatchEvent(new Event('input'));\n    });\n\n    // Function to update the metric cards based on filtered data\n    function updateCards() {\n      const searchTerm = searchInput.value.toLowerCase();\n      const filteredData = originalData.filter(row => {\n        const text = \\`\\${row.LOCATION_NAME || ''} \\${row.LNFI || ''} \\${row.MRN || ''} \\${row.CAREGIVER_NAME || ''} \\${row.ROOM_ASSIGNED || ''} \\${(row[\"ACK_TIME(PT HERE)\"] || '')} \\${(row[\"START_TIME(READY TO COME_BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || '')}\\`.toLowerCase();\n        return text.includes(searchTerm);\n      });\n      const totalPatientsFiltered = filteredData.length;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const chartupTimes = filteredData.map(r => r.ACTUAL_CHARTUP_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgWait = ackTimes.length > 0 ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n      const avgCycle = chartupTimes.length > 0 ? Math.round(chartupTimes.reduce((sum, val) => sum + val, 0) / chartupTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = totalPatientsFiltered;\n      document.getElementById('avg-wait-time').textContent = \\`\\${avgWait} min\\`;\n      document.getElementById('avg-total-cycle').textContent = \\`\\${avgCycle} min\\`;\n    }\n\n    // Sorting logic\n    const sortDirections = {};\n    const numericCols = [2, 8]; // MRN, Wait Time\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true; // default ascending\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1900,
        -140
      ],
      "id": "02668210-aef5-4ff6-89f4-51028d154ec7",
      "name": "Code4"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DECLARE @STARTDATE smalldatetime = DATEADD(DAY,-2,CAST(GETDATE() AS DATE)); \nDECLARE @ENDDATE smalldatetime = DATEADD(DAY, 1, @STARTDATE);\nDECLARE @LOC VARCHAR(250) = '%%';\nDECLARE @RES VARCHAR(250) = '%%';\n \n-- Schedule Metrics\nWITH schedule_specifics AS (\n    SELECT        \n        s.LOCATION_NAME,\n        s.CAREGIVER_NAME,\n        (s.PATIENT_LASTNAME + ', ' + LEFT(s.PATIENT_FIRSTNAME, 1)) AS LNFI,\n        s.DEM_EXTERNALID AS MRN,\n        L.TRACKINGSTATUS_TEXT AS CA_ASSIGNED,\n        lr.ROOM_TEXT AS ROOM_ASSIGNED,\n        CAST(s.SCHED_DATE AS DATE) AS APPT_DATE,\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMEIN, 100), 8) AS [ACK_TIME(PT HERE)],\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMESTART, 100), 8) AS [START_TIME(READY TO COME BACK)],\n        RIGHT(CONVERT(varchar(20), sl.TRACKINGSTATUS_TIMESTART, 100), 8) AS [CA_ROOM_ASSIGN_TIME_START],\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMEOUT, 100), 8) AS [CHECK_OUT(PATIET HAS LEFT THE BUILDING)],\n        DATEDIFF(MINUTE, s.SCHED_TIMEIN, s.SCHED_TIMESTART) AS ACK_TO_START_TIME,\n\t\tDATEDIFF(MINUTE, s.SCHED_TIMESTART, GETDATE()) AS ACK_CURRENT_TIME_IN_OFFICE,\n        DATEDIFF(MINUTE, s.SCHED_TIMEIN, s.SCHED_TIMEOUT) AS ACTUAL_ACK_TO_CHECKOUT_TIME,\n        DATEDIFF(MINUTE, s.SCHED_TIMESTART, s.SCHED_TIMEOUT) AS ACTUAL_CHARTUP_TO_CHECKOUT_TIME\n    FROM [EMR].[HPSITE].[SCHEDULE_VIEW] s\n    LEFT JOIN [EMR].[HPSITE].[SCHEDULE_TRACKINGSTATUS] sl ON sl.TRACKINGSTATUS_ID = s.TRACKINGSTATUS_ID AND sl.IMRESCHED_CODE = s.IMRESCHED_CODE\n    LEFT JOIN [HPSITE].[LOCATION_TRACKINGSTATUS] l ON l.TRACKINGSTATUS_ID = sl.TRACKINGSTATUS_ID AND l.LOCATION_ID = s.LOCATION_ID\n    LEFT JOIN [HPSITE].[LOCATION_ROOM] lr ON lr.LOCATION_ID = s.LOCATION_ID AND lr.ROOM_ID = s.ROOM_ID\n    WHERE \n        s.SCHED_DATE BETWEEN @STARTDATE AND @ENDDATE\n        AND CAST(s.SCHED_DATE AS time) BETWEEN '07:00:00' AND '19:00:00'\n        AND s.LOCATION_NAME LIKE @LOC\n        AND s.CAREGIVER_NAME LIKE @RES\n        AND s.SCHED_TIMEIN IS NOT NULL\n),\n \n-- Base Schedule for Reuse\nbase_schedule AS (\n    SELECT \n        a.IMREDEM_CODE,\n        a.DEM_EXTERNALID,\n        a.SCHED_DATE,\n        a.LOCATION_NAME,\n        a.CAREGIVER_NAME,\n        a.SCHED_TIMEIN,\n        c.IMRESCHED_CODE,\n        c.IMRECONTACT_CODE\n    FROM [HPSITE].[SCHEDULE_VIEW] a\n    INNER JOIN [HPSITE].[CONTACT] c ON a.IMRESCHED_CODE = c.IMRESCHED_CODE \n    WHERE \n        a.SCHED_DATE >= @STARTDATE AND a.SCHED_DATE < @ENDDATE\n        AND a.CAREGIVER_NAME LIKE @RES\n        AND a.SCHED_TIMEIN IS NOT NULL\n),\n \n-- Lab Orders\nlab_cpt_ordered AS (\n    SELECT  \n        s.IMREDEM_CODE,\n        s.DEM_EXTERNALID,\n        lc.LABCAT_CPTCODE,\n        CASE \n            WHEN lc.LABCAT_CPTCODE IN ('82962','81002','85018','81025','80300','83036','G0483','87804','87880','87426','82044','82570') THEN 'IH'\n            ELSE 'OH'\n        END AS INT_VS_EXT,\n        s.CAREGIVER_NAME\n    FROM base_schedule s\n    INNER JOIN [EMR].[HPSITE].[LABORDERS] p ON p.IMRECONTACT_CODE = s.IMRECONTACT_CODE\n    INNER JOIN [HPSITE].[LABCATALOG] lc ON lc.IMRELABCAT_CODE = p.IMRELABCAT_CODE\n),\n \n-- Procedures\nproc_cpt_ordered AS (\n    SELECT \n        s.IMREDEM_CODE,\n        s.DEM_EXTERNALID,\n        p.PROC_CODE,\n        CASE \n            WHEN p.PROC_CODE IN (\n                '10060','10140','11040','11055','11100','11101','11102','11104','11200','11201','11300','11301','11302','11400','11402','12021',\n                '15277','15851','15853','17110','17340','20550','20552','20553','20605','20610','29130','29260','29530','29580','29843','33285',\n                '46083','57410','57415','57452','57505','57522','58100','58300','64435','64450','69200','69209','69210','74740','90471','90472',\n                '90619','90621','90632','90633','90647','90651','90656','90662','90670','90671','90673','90677','90680','90681','90682','90696',\n                '90697','90698','90700','90707','90710','90713','90715','90716','90723','90732','90734','90736','90744','90746','90750','93000',\n                '93227','93922','94010','94060','94640','94690','95004','95012','95165','95250','95251','95800','95806','96120','96125','96138'\n            ) THEN 'USE_SUPPLY'\n            ELSE 'NO_SUPPLY'\n        END AS INT_VS_EXT,\n        s.CAREGIVER_NAME\n    FROM base_schedule s\n    INNER JOIN [EMR].[HPSITE].[PROCEDURES] p ON p.IMRECONTACT_CODE = s.IMRECONTACT_CODE\n),\n \n-- Unified and Aggregated\npivoted_orders AS (\n    SELECT \n        u.CAREGIVER_NAME,\n        u.DEM_EXTERNALID,\n        SUM(CASE WHEN u.INT_VS_EXT = 'IH' THEN 1 ELSE 0 END) AS [POC LABS],\n        SUM(CASE WHEN u.INT_VS_EXT = 'OH' THEN 1 ELSE 0 END) AS [NON POC LABS],\n        SUM(CASE WHEN u.INT_VS_EXT = 'USE_SUPPLY' THEN 1 ELSE 0 END) AS [POC PROC]\n    FROM (\n        SELECT * FROM lab_cpt_ordered\n        UNION ALL\n        SELECT * FROM proc_cpt_ordered WHERE INT_VS_EXT <> 'NO_SUPPLY'\n    ) u\n    GROUP BY u.CAREGIVER_NAME, u.DEM_EXTERNALID\n)\nSELECT \n    s.*,'' as PREDICTED_TIME_WITH_TOTAL_PROCEDURES,\n    ISNULL(p.[POC LABS], 0) AS [POC_LABS],\n    ISNULL(p.[NON POC LABS], 0) AS [NON_POC_LABS],\n    ISNULL(p.[POC PROC], 0) AS [POC_PROC],\n\tCASE \n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE > 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'RED'\n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE > 40 AND S.ACK_CURRENT_TIME_IN_OFFICE <= 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'YELLOW'\n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE <= 40 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'GREEN'\n        ELSE 'INVESTIGATE'\n    END AS CALC_VOC_VALUE,\n\tCASE \n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME > 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'RED'\n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME > 40 AND S.ACTUAL_ACK_TO_CHECKOUT_TIME <= 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'YELLOW'\n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME <= 40 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'GREEN'\n        ELSE 'INVESTIGATE'\n    END AS TRUE_VOC_VALUE\nFROM schedule_specifics s\nLEFT JOIN pivoted_orders p ON s.MRN = p.DEM_EXTERNALID;"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        -460,
        -1520
      ],
      "id": "b9985f72-85d1-4613-a75e-e296b63fdbf1",
      "name": "Microsoft SQL1",
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -860,
        -1160
      ],
      "id": "02c6cd91-f4c6-414b-9b71-f3830013fe7e",
      "name": "Limit"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DECLARE @STARTDATE smalldatetime = DATEADD(DAY,0,CAST(GETDATE() AS DATE)); \nDECLARE @ENDDATE smalldatetime = DATEADD(DAY, 1, @STARTDATE);\nDECLARE @LOC VARCHAR(250) = '%%';\nDECLARE @RES VARCHAR(250) = '%%';\n \n-- Schedule Metrics\nWITH schedule_specifics AS (\n    SELECT        \n        s.LOCATION_NAME,\n        s.CAREGIVER_NAME,\n        (s.PATIENT_LASTNAME + ', ' + LEFT(s.PATIENT_FIRSTNAME, 1)) AS LNFI,\n        s.DEM_EXTERNALID AS MRN,\n        L.TRACKINGSTATUS_TEXT AS CA_ASSIGNED,\n        lr.ROOM_TEXT AS ROOM_ASSIGNED,\n        CAST(s.SCHED_DATE AS DATE) AS APPT_DATE,\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMEIN, 100), 8) AS [ACK_TIME(PT HERE)],\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMESTART, 100), 8) AS [START_TIME(READY TO COME BACK)],\n        RIGHT(CONVERT(varchar(20), sl.TRACKINGSTATUS_TIMESTART, 100), 8) AS [CA_ROOM_ASSIGN_TIME_START],\n        RIGHT(CONVERT(varchar(20), s.SCHED_TIMEOUT, 100), 8) AS [CHECK_OUT(PATIET HAS LEFT THE BUILDING)],\n        DATEDIFF(MINUTE, s.SCHED_TIMEIN, s.SCHED_TIMESTART) AS ACK_TO_START_TIME,\n\t\tDATEDIFF(MINUTE, s.SCHED_TIMESTART, GETDATE()) AS ACK_CURRENT_TIME_IN_OFFICE,\n        DATEDIFF(MINUTE, s.SCHED_TIMEIN, s.SCHED_TIMEOUT) AS ACTUAL_ACK_TO_CHECKOUT_TIME,\n        DATEDIFF(MINUTE, s.SCHED_TIMESTART, s.SCHED_TIMEOUT) AS ACTUAL_CHARTUP_TO_CHECKOUT_TIME\n    FROM [EMR].[HPSITE].[SCHEDULE_VIEW] s\n    LEFT JOIN [EMR].[HPSITE].[SCHEDULE_TRACKINGSTATUS] sl ON sl.TRACKINGSTATUS_ID = s.TRACKINGSTATUS_ID AND sl.IMRESCHED_CODE = s.IMRESCHED_CODE\n    LEFT JOIN [HPSITE].[LOCATION_TRACKINGSTATUS] l ON l.TRACKINGSTATUS_ID = sl.TRACKINGSTATUS_ID AND l.LOCATION_ID = s.LOCATION_ID\n    LEFT JOIN [HPSITE].[LOCATION_ROOM] lr ON lr.LOCATION_ID = s.LOCATION_ID AND lr.ROOM_ID = s.ROOM_ID\n    WHERE \n        s.SCHED_DATE BETWEEN @STARTDATE AND @ENDDATE\n        AND CAST(s.SCHED_DATE AS time) BETWEEN '07:00:00' AND '19:00:00'\n        AND s.LOCATION_NAME LIKE @LOC\n        AND s.CAREGIVER_NAME LIKE @RES\n        AND s.SCHED_TIMEIN IS NOT NULL\n),\n \n-- Base Schedule for Reuse\nbase_schedule AS (\n    SELECT \n        a.IMREDEM_CODE,\n        a.DEM_EXTERNALID,\n        a.SCHED_DATE,\n        a.LOCATION_NAME,\n        a.CAREGIVER_NAME,\n        a.SCHED_TIMEIN,\n        c.IMRESCHED_CODE,\n        c.IMRECONTACT_CODE\n    FROM [HPSITE].[SCHEDULE_VIEW] a\n    INNER JOIN [HPSITE].[CONTACT] c ON a.IMRESCHED_CODE = c.IMRESCHED_CODE \n    WHERE \n        a.SCHED_DATE >= @STARTDATE AND a.SCHED_DATE < @ENDDATE\n        AND a.CAREGIVER_NAME LIKE @RES\n        AND a.SCHED_TIMEIN IS NOT NULL\n),\n \n-- Lab Orders\nlab_cpt_ordered AS (\n    SELECT  \n        s.IMREDEM_CODE,\n        s.DEM_EXTERNALID,\n        lc.LABCAT_CPTCODE,\n        CASE \n            WHEN lc.LABCAT_CPTCODE IN ('82962','81002','85018','81025','80300','83036','G0483','87804','87880','87426','82044','82570') THEN 'IH'\n            ELSE 'OH'\n        END AS INT_VS_EXT,\n        s.CAREGIVER_NAME\n    FROM base_schedule s\n    INNER JOIN [EMR].[HPSITE].[LABORDERS] p ON p.IMRECONTACT_CODE = s.IMRECONTACT_CODE\n    INNER JOIN [HPSITE].[LABCATALOG] lc ON lc.IMRELABCAT_CODE = p.IMRELABCAT_CODE\n),\n \n-- Procedures\nproc_cpt_ordered AS (\n    SELECT \n        s.IMREDEM_CODE,\n        s.DEM_EXTERNALID,\n        p.PROC_CODE,\n        CASE \n            WHEN p.PROC_CODE IN (\n                '10060','10140','11040','11055','11100','11101','11102','11104','11200','11201','11300','11301','11302','11400','11402','12021',\n                '15277','15851','15853','17110','17340','20550','20552','20553','20605','20610','29130','29260','29530','29580','29843','33285',\n                '46083','57410','57415','57452','57505','57522','58100','58300','64435','64450','69200','69209','69210','74740','90471','90472',\n                '90619','90621','90632','90633','90647','90651','90656','90662','90670','90671','90673','90677','90680','90681','90682','90696',\n                '90697','90698','90700','90707','90710','90713','90715','90716','90723','90732','90734','90736','90744','90746','90750','93000',\n                '93227','93922','94010','94060','94640','94690','95004','95012','95165','95250','95251','95800','95806','96120','96125','96138'\n            ) THEN 'USE_SUPPLY'\n            ELSE 'NO_SUPPLY'\n        END AS INT_VS_EXT,\n        s.CAREGIVER_NAME\n    FROM base_schedule s\n    INNER JOIN [EMR].[HPSITE].[PROCEDURES] p ON p.IMRECONTACT_CODE = s.IMRECONTACT_CODE\n),\n \n-- Unified and Aggregated\npivoted_orders AS (\n    SELECT \n        u.CAREGIVER_NAME,\n        u.DEM_EXTERNALID,\n        SUM(CASE WHEN u.INT_VS_EXT = 'IH' THEN 1 ELSE 0 END) AS [POC LABS],\n        SUM(CASE WHEN u.INT_VS_EXT = 'OH' THEN 1 ELSE 0 END) AS [NON POC LABS],\n        SUM(CASE WHEN u.INT_VS_EXT = 'USE_SUPPLY' THEN 1 ELSE 0 END) AS [POC PROC]\n    FROM (\n        SELECT * FROM lab_cpt_ordered\n        UNION ALL\n        SELECT * FROM proc_cpt_ordered WHERE INT_VS_EXT <> 'NO_SUPPLY'\n    ) u\n    GROUP BY u.CAREGIVER_NAME, u.DEM_EXTERNALID\n)\nSELECT \n    s.*,'' as PREDICTED_TIME_WITH_TOTAL_PROCEDURES,\n    ISNULL(p.[POC LABS], 0) AS [POC_LABS],\n    ISNULL(p.[NON POC LABS], 0) AS [NON_POC_LABS],\n    ISNULL(p.[POC PROC], 0) AS [POC_PROC],\n\tCASE \n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE > 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'RED'\n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE > 40 AND S.ACK_CURRENT_TIME_IN_OFFICE <= 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'YELLOW'\n        WHEN S.ACK_CURRENT_TIME_IN_OFFICE <= 40 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'GREEN'\n        ELSE 'INVESTIGATE'\n    END AS CALC_VOC_VALUE,\n\tCASE \n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME > 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'RED'\n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME > 40 AND S.ACTUAL_ACK_TO_CHECKOUT_TIME <= 60 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'YELLOW'\n        WHEN S.ACTUAL_ACK_TO_CHECKOUT_TIME <= 40 \n             AND (ISNULL(p.[POC PROC], 0) < 3 OR ISNULL(p.[POC LABS], 0) = 0 OR ISNULL(p.[NON POC LABS], 0) = 0) THEN 'GREEN'\n        ELSE 'INVESTIGATE'\n    END AS TRUE_VOC_VALUE\nFROM schedule_specifics s\nLEFT JOIN pivoted_orders p ON s.MRN = p.DEM_EXTERNALID;"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        -860,
        -1380
      ],
      "id": "cce81cb6-f702-4eb1-9c97-e9bc042d80b6",
      "name": "Microsoft SQL2",
      "executeOnce": false,
      "alwaysOutputData": false,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\n\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time as average of ACK_TO_START_TIME (difference between check-in and started)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows with new \"CHECKED OUT\" column\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECKED_OUT\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME_BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\"\n          data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\"\n          data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\"\n          data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML with updated header and cards\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (Title card and 2 metric cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 p-4\">\n        <!-- Title Card with Patients Today info -->\n        <div class=\"metric-card rounded-lg p-6 flex flex-col items-center justify-center\">\n          <h2 class=\"text-2xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n          <p class=\"text-sm text-gray-600 mt-2\">Patients Today: ${totalPatients}</p>\n        </div>\n        <!-- Card: Avg Lobby Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n              <i class=\"ri-time-line text-yellow-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Started</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card: Avg Total Cycle Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n              <i class=\"ri-timer-line text-green-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Legend + Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- New Last Refresh info -->\n        <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n        <!-- Right side: Search with an \"x\" to clear -->\n        <div class=\"ml-auto flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Checked Out\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"9\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Search filter with cards update\n    const searchInput = document.getElementById('search-input');\n    const clearSearchBtn = document.getElementById('clear-search');\n\n    searchInput.addEventListener('input', function() {\n      const searchTerm = this.value.toLowerCase();\n      const tableRows = document.querySelectorAll('#patient-table-body tr');\n      tableRows.forEach((row) => {\n        const rowText = row.textContent.toLowerCase();\n        row.style.display = rowText.includes(searchTerm) ? '' : 'none';\n      });\n      updateCards();\n    });\n\n    // Clear search on \"x\" click\n    clearSearchBtn.addEventListener('click', () => {\n      searchInput.value = '';\n      searchInput.dispatchEvent(new Event('input'));\n    });\n\n    // Function to update the metric cards based on filtered data\n    function updateCards() {\n      const searchTerm = searchInput.value.toLowerCase();\n      const filteredData = originalData.filter(row => {\n        const text = \\`\\${row.LOCATION_NAME || ''} \\${row.LNFI || ''} \\${row.MRN || ''} \\${row.CAREGIVER_NAME || ''} \\${row.ROOM_ASSIGNED || ''} \\${(row[\"ACK_TIME(PT HERE)\"] || '')} \\${(row[\"CHECKED_OUT\"] || '')} \\${(row[\"START_TIME(READY TO COME_BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || '')}\\`.toLowerCase();\n        return text.includes(searchTerm);\n      });\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length > 0 ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length > 0 ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = totalPatientsFiltered;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Sorting logic\n    const sortDirections = {};\n    const numericCols = [2, 9]; // MRN and Wait Time columns\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1900,
        -280
      ],
      "id": "7fee3786-de3d-49af-807d-1d9a37be720a",
      "name": "Code5"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\n\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time as average of ACK_TO_START_TIME (difference between check-in and started)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows with new \"CHECKED OUT\" column\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\"\n          data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\"\n          data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\"\n          data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\"\n          data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML with updated header and cards\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (Title card and 2 metric cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 p-4\">\n        <!-- Title Card with Patients Today info -->\n        <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n          <h2 class=\"text-5xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n          <p class=\"text-3xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n        </div>\n        <!-- Card: Avg Lobby Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n              <i class=\"ri-time-line text-yellow-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Started</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card: Avg Total Cycle Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n              <i class=\"ri-timer-line text-green-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Legend + Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- New Last Refresh info -->\n        <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n        <!-- Right side: Search with an \"x\" to clear -->\n        <div class=\"ml-auto flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Checked Out\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"9\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Search filter with cards update\n    const searchInput = document.getElementById('search-input');\n    const clearSearchBtn = document.getElementById('clear-search');\n\n    searchInput.addEventListener('input', function() {\n      const searchTerm = this.value.toLowerCase();\n      const tableRows = document.querySelectorAll('#patient-table-body tr');\n      tableRows.forEach((row) => {\n        const rowText = row.textContent.toLowerCase();\n        row.style.display = rowText.includes(searchTerm) ? '' : 'none';\n      });\n      updateCards();\n    });\n\n    // Clear search on \"x\" click\n    clearSearchBtn.addEventListener('click', () => {\n      searchInput.value = '';\n      searchInput.dispatchEvent(new Event('input'));\n    });\n\n    // Function to update the metric cards based on filtered data\n    function updateCards() {\n      const searchTerm = searchInput.value.toLowerCase();\n      const filteredData = originalData.filter(row => {\n        const text = \\`\\${row.LOCATION_NAME || ''} \\${row.LNFI || ''} \\${row.MRN || ''} \\${row.CAREGIVER_NAME || ''} \\${row.ROOM_ASSIGNED || ''} \\${(row[\"ACK_TIME(PT HERE)\"] || '')} \\${(row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '')} \\${(row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || '')}\\`.toLowerCase();\n        return text.includes(searchTerm);\n      });\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length > 0 ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length > 0 ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = totalPatientsFiltered;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Sorting logic\n    const sortDirections = {};\n    const numericCols = [2, 9]; // MRN and Wait Time columns\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1900,
        -420
      ],
      "id": "e0cb642d-744e-4b94-bab6-4e5687fb3a6b",
      "name": "Code6"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards (initially)\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time from ACK_TO_START_TIME (difference between Check-In and Started)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows with new \"CHECKED OUT\" column\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\" data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML with updated header, cards, and filters\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (Title card and 2 metric cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 p-4\">\n        <!-- Title Card with Patients Today info -->\n        <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n          <h2 class=\"text-5xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n          <p id=\"total-patients\" class=\"text-3xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n        </div>\n        <!-- Card: Avg Lobby Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n              <i class=\"ri-time-line text-yellow-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Started</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card: Avg Total Cycle Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n              <i class=\"ri-timer-line text-green-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Legend, Filters, and Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- Last Refresh info -->\n        <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n        <!-- Dropdown Filters for Location and Provider -->\n        <div class=\"ml-4 flex items-center space-x-2\">\n          <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n            <!-- Options will be populated dynamically -->\n          </select>\n          <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n            <!-- Options will be populated dynamically -->\n          </select>\n        </div>\n        <!-- Spacer -->\n        <div class=\"flex-grow\"></div>\n        <!-- Search -->\n        <div class=\"flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Checked Out\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"9\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the dropdown filters with unique values\n    function populateFilters() {\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      \n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      \n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locationSelect.appendChild(option);\n      });\n      \n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        providerSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Function to filter data based on search term and dropdown filters\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        let locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        let providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    // Update metric cards based on filtered data\n    function updateCards() {\n      const filteredData = filterData();\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${totalPatientsFiltered}\\`;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Apply filters to table rows based on search and dropdown selections\n    function applyFilters() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      const rows = document.querySelectorAll('#patient-table-body tr');\n      rows.forEach(row => {\n        const locationCell = row.querySelector('td:nth-child(1)');\n        const providerCell = row.querySelector('td:nth-child(4)');\n        const rowLocation = locationCell ? locationCell.textContent.trim() : \"\";\n        const rowProvider = providerCell ? providerCell.textContent.trim() : \"\";\n        const rowText = row.textContent.toLowerCase();\n        \n        let searchMatches = rowText.includes(searchTerm);\n        let locationMatches = selectedLocations.length ? selectedLocations.includes(rowLocation) : true;\n        let providerMatches = selectedProviders.length ? selectedProviders.includes(rowProvider) : true;\n        \n        row.style.display = (searchMatches && locationMatches && providerMatches) ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach event listeners\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n\n    // Sorting logic (unchanged)\n    const sortDirections = {};\n    const numericCols = [2, 9]; // MRN and Wait Time columns\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1900,
        -560
      ],
      "id": "920906b1-9eb2-4b3f-9daf-e9fd47982ddf",
      "name": "Code7"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed come\n//    first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => row.TRUE_VOC_VALUE !== \"GREEN\");\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\n\nconst completed = data.filter(row => row.TRUE_VOC_VALUE === \"GREEN\");\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards (initially)\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time from ACK_TO_START_TIME (difference between Check-In and Started)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\n\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Helper for row status styling\n// -------------------------------------------\nfunction getStatusMapping(vocValue) {\n  switch (vocValue) {\n    case \"GREEN\":\n      return { label: \"Completed\", rowClass: \"bg-green-50\", badgeClass: \"bg-green-100 text-green-800\" };\n    case \"YELLOW\":\n      return { label: \"In Progress\", rowClass: \"bg-yellow-50\", badgeClass: \"bg-yellow-100 text-yellow-800\" };\n    case \"RED\":\n      return { label: \"Waiting\", rowClass: \"bg-red-50\", badgeClass: \"bg-red-100 text-red-800\" };\n    case \"INVESTIGATE\":\n      return { label: \"Ready\", rowClass: \"bg-blue-50\", badgeClass: \"bg-blue-100 text-blue-800\" };\n    default:\n      return { label: \"Unknown\", rowClass: \"\", badgeClass: \"\" };\n  }\n}\n\n// -------------------------------------------\n// 4) Build <tbody> rows with new \"CHECKED OUT\" column\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const statusObj = getStatusMapping(row.TRUE_VOC_VALUE);\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] ||\n                 row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n                 \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  return `\n    <tr class=\"hover:bg-gray-50 ${statusObj.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap sortable-cell\" data-sort-value=\"${statusObj.label.toLowerCase()}\">\n        <span class=\"px-2 py-1 text-xs font-medium rounded-full ${statusObj.badgeClass}\">\n          ${statusObj.label}\n        </span>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 5) Build final HTML with updated header, cards, and dropdown filters with checkboxes\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    /* Dropdown styles */\n    .dropdown summary {\n      list-style: none;\n    }\n    .dropdown[open] summary::after {\n      content: \"▲\";\n      float: right;\n    }\n    .dropdown summary::after {\n      content: \"▼\";\n      float: right;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (Title card and 2 metric cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 p-4\">\n        <!-- Title Card with Patients Today info -->\n        <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n          <h2 class=\"text-5xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n          <p id=\"total-patients\" class=\"text-3xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n        </div>\n        <!-- Card: Avg Lobby Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n              <i class=\"ri-time-line text-yellow-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Started</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card: Avg Total Cycle Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n              <i class=\"ri-timer-line text-green-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Check-In to Checkout</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Legend, Filters, and Search row -->\n      <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n        <!-- Color Legend -->\n        <div class=\"flex space-x-4\">\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-primary\"></span>\n            <span class=\"text-sm text-gray-600\">Ready</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-red-500\"></span>\n            <span class=\"text-sm text-gray-600\">Waiting</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-yellow-400\"></span>\n            <span class=\"text-sm text-gray-600\">In Progress</span>\n          </div>\n          <div class=\"flex items-center space-x-2\">\n            <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n            <span class=\"text-sm text-gray-600\">Completed</span>\n          </div>\n        </div>\n        <!-- Last Refresh info -->\n        <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n        <!-- Dropdown Filters for Location and Provider with Checkboxes -->\n        <div class=\"ml-4 flex items-center space-x-2\">\n          <div class=\"relative inline-block text-left\">\n            <details class=\"dropdown\" id=\"location-dropdown\">\n              <summary class=\"border border-gray-300 rounded px-2 py-1 text-sm cursor-pointer\">Location Filter</summary>\n              <div class=\"absolute mt-1 w-56 bg-white border border-gray-300 rounded shadow-lg z-10 p-2\" id=\"location-options\">\n                <!-- Checkboxes will be populated dynamically -->\n              </div>\n            </details>\n          </div>\n          <div class=\"relative inline-block text-left\">\n            <details class=\"dropdown\" id=\"provider-dropdown\">\n              <summary class=\"border border-gray-300 rounded px-2 py-1 text-sm cursor-pointer\">Provider Filter</summary>\n              <div class=\"absolute mt-1 w-56 bg-white border border-gray-300 rounded shadow-lg z-10 p-2\" id=\"provider-options\">\n                <!-- Checkboxes will be populated dynamically -->\n              </div>\n            </details>\n          </div>\n          <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n        </div>\n        <!-- Spacer -->\n        <div class=\"flex-grow\"></div>\n        <!-- Search -->\n        <div class=\"flex items-center space-x-4 relative\">\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Status\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Check-In\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Checked Out\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Ready\n                </th>\n                <th data-col-index=\"9\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the dropdown filters with checkboxes\n    function populateFilters() {\n      const locationContainer = document.getElementById('location-options');\n      const providerContainer = document.getElementById('provider-options');\n      \n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      \n      locations.forEach(loc => {\n        const label = document.createElement('label');\n        label.className = \"flex items-center space-x-2\";\n        const checkbox = document.createElement('input');\n        checkbox.type = \"checkbox\";\n        checkbox.value = loc;\n        checkbox.className = \"location-checkbox\";\n        label.appendChild(checkbox);\n        const span = document.createElement('span');\n        span.className = \"text-sm\";\n        span.textContent = loc;\n        label.appendChild(span);\n        locationContainer.appendChild(label);\n      });\n      \n      providers.forEach(prov => {\n        const label = document.createElement('label');\n        label.className = \"flex items-center space-x-2\";\n        const checkbox = document.createElement('input');\n        checkbox.type = \"checkbox\";\n        checkbox.value = prov;\n        checkbox.className = \"provider-checkbox\";\n        label.appendChild(checkbox);\n        const span = document.createElement('span');\n        span.className = \"text-sm\";\n        span.textContent = prov;\n        label.appendChild(span);\n        providerContainer.appendChild(label);\n      });\n      \n      // Attach change event listeners to newly added checkboxes\n      document.querySelectorAll('.location-checkbox, .provider-checkbox').forEach(checkbox => {\n        checkbox.addEventListener('change', applyFilters);\n      });\n    }\n    populateFilters();\n\n    // Function to filter data based on search term and checkbox selections\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const selectedLocations = Array.from(document.querySelectorAll('.location-checkbox:checked')).map(o => o.value);\n      const selectedProviders = Array.from(document.querySelectorAll('.provider-checkbox:checked')).map(o => o.value);\n      \n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    // Update metric cards based on filtered data\n    function updateCards() {\n      const filteredData = filterData();\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${totalPatientsFiltered}\\`;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Apply filters to table rows based on search and checkbox selections\n    function applyFilters() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const selectedLocations = Array.from(document.querySelectorAll('.location-checkbox:checked')).map(o => o.value);\n      const selectedProviders = Array.from(document.querySelectorAll('.provider-checkbox:checked')).map(o => o.value);\n      \n      const rows = document.querySelectorAll('#patient-table-body tr');\n      rows.forEach(row => {\n        const locationCell = row.querySelector('td:nth-child(1)');\n        const providerCell = row.querySelector('td:nth-child(4)');\n        const rowLocation = locationCell ? locationCell.textContent.trim() : \"\";\n        const rowProvider = providerCell ? providerCell.textContent.trim() : \"\";\n        const rowText = row.textContent.toLowerCase();\n        \n        const searchMatches = rowText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(rowLocation) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(rowProvider) : true;\n        \n        row.style.display = (searchMatches && locationMatches && providerMatches) ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach event listeners\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      // Clear search input\n      document.getElementById('search-input').value = '';\n      // Clear checkboxes in both filters\n      document.querySelectorAll('.location-checkbox, .provider-checkbox').forEach(checkbox => {\n        checkbox.checked = false;\n      });\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    const numericCols = [2, 9]; // MRN and Wait Time columns\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1740,
        -560
      ],
      "id": "1193067c-3641-419f-82a4-693208ffae26",
      "name": "Code8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "a83ee612-bb17-404f-b14d-9baa3f75ea74",
              "leftValue": "={{ $json.query.location }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -420,
        -160
      ],
      "id": "dbf9cdd0-1a35-41d8-a685-45a6c8337f5f",
      "name": "If"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "returnAll": true,
        "options": {
          "where": "=(LOCATION_NAME,eq,{{ $json.query.location }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -40,
        120
      ],
      "id": "a93b1d15-1389-4a63-a68c-b5028725c9d1",
      "name": "NocoDB4",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n *  — LNFI (patient name) column removed —\n ********************************************/\nlet data = items[0].json;\n\n/* ----------  data wrangling helpers  ---------- */\nif (!Array.isArray(data)) {\n  data = Array.isArray(data.data) ? data.data : [data];\n}\n\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    // Extract numeric part from strings like \"314 min\"\n    const m = val.match(/(\\d+(\\.\\d+)?)/);\n    return m ? parseFloat(m[0]) : 0;\n  }\n  return 0;\n}\n\n/* ----------  resort into blocks (Ack ➜ Started ➜ Checked‑out)  ---------- */\nfunction getStatus(r) {\n  const ack = (r['ACK_TIME(PT HERE)'] ?? '').trim();\n  const start = (\n    r['START_TIME(READY TO COME BACK)'] ??\n    r['START_TIME(READY_TO_COME_BACK)'] ??\n    ''\n  ).trim();\n  const out = (r['CHECK_OUT(PATIET HAS LEFT THE BUILDING)'] ?? '').trim();\n\n  // 0 => Acknowledged, 1 => Started, 2 => Checked Out, 3 => anything else\n  if (out) return 2;\n  if (start) return 1;\n  if (ack) return 0;\n  return 3;\n}\n\nconst finalData = [...data].sort((a, b) => {\n  const sA = getStatus(a);\n  const sB = getStatus(b);\n  if (sA !== sB) return sA - sB;\n\n  // Within the same group, sort descending by TIME_IN_OFFICE\n  return parseTimeInOffice(b.TIME_IN_OFFICE) - parseTimeInOffice(a.TIME_IN_OFFICE);\n});\n\n/* ----------  metric-card values  ---------- */\nconst totalPatients = finalData.length;\n\nconst cycleTimes = finalData\n  .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter((n) => typeof n === 'number');\n\nconst lobbyTimes = finalData\n  .map((r) => r.ACK_TO_START_TIME)\n  .filter((n) => typeof n === 'number');\n\nconst avgTotalCycle = cycleTimes.length\n  ? cycleTimes.reduce((s, n) => s + n, 0) / cycleTimes.length\n  : 0;\n\nconst avgLobby = lobbyTimes.length\n  ? lobbyTimes.reduce((s, n) => s + n, 0) / lobbyTimes.length\n  : 0;\n\n/* ----------  build <tbody> (patient name removed)  ---------- */\nconst rowsHtml = finalData\n  .map((row) => {\n    const location = row.LOCATION_NAME || '';\n    const mrn = row.MRN || '';\n    const provider = row.CAREGIVER_NAME || '';\n    const room = row.ROOM_ASSIGNED || '';\n    const ackStr = (row['ACK_TIME(PT HERE)'] ?? '').trim();\n    const startStr = (\n      row['START_TIME(READY TO COME BACK)'] ??\n      row['START_TIME(READY_TO_COME_BACK)'] ??\n      ''\n    ).trim();\n    const outStr = (row['CHECK_OUT(PATIET HAS LEFT THE BUILDING)'] ?? '').trim();\n    const waitMin = row.ACK_TO_START_TIME || 0;\n    const waitTime = `${waitMin} min`;\n    const tio =\n      typeof row.TIME_IN_OFFICE === 'number'\n        ? row.TIME_IN_OFFICE.toString()\n        : (row.TIME_IN_OFFICE ?? '').trim();\n\n    let rowClass = '';\n    if (outStr) {\n      rowClass = 'bg-orange-50'; // Checked Out\n    } else if (startStr) {\n      rowClass = 'bg-green-50'; // Started\n    } else if (ackStr) {\n      rowClass = 'bg-blue-50'; // Acknowledged\n    }\n\n    return `\n      <tr data-location=\"${location}\"\n          data-provider=\"${provider}\"\n          data-mrn=\"${mrn}\"\n          class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${mrn}\">\n          ${mrn}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${provider.toLowerCase()}\">\n          ${provider}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${room.toLowerCase()}\">\n          ${room}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${ackStr.toLowerCase()}\">\n          ${ackStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${startStr.toLowerCase()}\">\n          ${startStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${waitMin}\">\n          ${waitTime}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${tio.toLowerCase()}\">\n          ${tio}\n        </td>\n      </tr>`;\n  })\n  .join('');\n\n/* ----------  HTML document layout  ---------- */\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            button: '8px'\n          }\n        }\n      }\n    };\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- LEFT COLUMN -->\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n          ${Math.round(avgLobby)} min\n        </p>\n        <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n          ${Math.round(avgTotalCycle)} min\n        </p>\n        <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n      </div>\n      <!-- legend / filters / search toggle -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                id=\"search-input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- RIGHT COLUMN -->\n    <div id=\"right-column\">\n      <!-- fixed header -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n\n      <!-- scrollable body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- ----------  client-side logic  ---------- -->\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n\n    /* ----- auto refresh via ?refreshrate=N ----- */\n    const rr = new URLSearchParams(location.search).get('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n\n    /* ----- local-storage helpers ----- */\n    function saveFilters() {\n      localStorage.setItem('searchInput', document.getElementById('search-input').value);\n      localStorage.setItem(\n        'locationFilter',\n        JSON.stringify(\n          Array.from(document.getElementById('location-filter').selectedOptions).map((o) => o.value)\n        )\n      );\n      localStorage.setItem(\n        'providerFilter',\n        JSON.stringify(\n          Array.from(document.getElementById('provider-filter').selectedOptions).map((o) => o.value)\n        )\n      );\n    }\n\n    function loadFilters() {\n      document.getElementById('search-input').value =\n        localStorage.getItem('searchInput') || '';\n\n      const locSel = JSON.parse(localStorage.getItem('locationFilter') || '[]');\n      const proSel = JSON.parse(localStorage.getItem('providerFilter') || '[]');\n\n      [...document.getElementById('location-filter').options].forEach((o) => {\n        o.selected = locSel.includes(o.value);\n      });\n      [...document.getElementById('provider-filter').options].forEach((o) => {\n        o.selected = proSel.includes(o.value);\n      });\n    }\n\n    /* ----- “last refresh” clock ----- */\n    let age = 0;\n    function tick() {\n      age++;\n      const now = new Date();\n      const ts = now.toLocaleString('en-US', {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit',\n      });\n      const mm = Math.floor(age / 60);\n      const ss = String(age % 60).padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`\\${ts} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    tick();\n    setInterval(tick, 1000);\n\n    /* ----- populate filter dropdowns ----- */\n    (() => {\n      const locSel = document.getElementById('location-filter');\n      const proSel = document.getElementById('provider-filter');\n\n      [...new Set(originalData.map((r) => r.LOCATION_NAME).filter(Boolean))]\n        .sort()\n        .forEach((v) => {\n          const o = document.createElement('option');\n          o.value = o.textContent = v;\n          locSel.append(o);\n        });\n\n      [...new Set(originalData.map((r) => r.CAREGIVER_NAME).filter(Boolean))]\n        .sort()\n        .forEach((v) => {\n          const o = document.createElement('option');\n          o.value = o.textContent = v;\n          proSel.append(o);\n        });\n\n      loadFilters();\n      applyFilters();\n    })();\n\n    /* ----- filter helpers ----- */\n    function filterData() {\n      const q = document.getElementById('search-input').value.toLowerCase();\n      const locSel = [...document.getElementById('location-filter').selectedOptions].map((o) => o.value);\n      const proSel = [...document.getElementById('provider-filter').selectedOptions].map((o) => o.value);\n\n      return originalData.filter((r) => {\n        const hay = (\n          (r.LOCATION_NAME || '') +\n          ' ' +\n          (r.MRN || '') +\n          ' ' +\n          (r.CAREGIVER_NAME || '') +\n          ' ' +\n          (r.ROOM_ASSIGNED || '') +\n          ' ' +\n          (r['ACK_TIME(PT HERE)'] || '') +\n          ' ' +\n          (r.TIME_IN_OFFICE || '') +\n          ' ' +\n          (\n            r['START_TIME(READY TO COME BACK)'] ||\n            r['START_TIME(READY_TO_COME_BACK)'] ||\n            ''\n          )\n        ).toLowerCase();\n\n        const searchOK = hay.includes(q);\n        const locOK = !locSel.length || locSel.includes(r.LOCATION_NAME);\n        const proOK = !proSel.length || proSel.includes(r.CAREGIVER_NAME);\n\n        return searchOK && locOK && proOK;\n      });\n    }\n\n    function updateCards() {\n      const rows = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${rows.length}\\`;\n\n      const lobby = rows\n        .map((r) => r.ACK_TO_START_TIME)\n        .filter((n) => typeof n === 'number');\n      const cycle = rows\n        .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n        .filter((n) => typeof n === 'number');\n\n      const avgLobbyTime = lobby.length\n        ? Math.round(lobby.reduce((s, n) => s + n, 0) / lobby.length)\n        : 0;\n\n      const avgTotalCycleTime = cycle.length\n        ? Math.round(cycle.reduce((s, n) => s + n, 0) / cycle.length)\n        : 0;\n\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobbyTime} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycleTime} min\\`;\n    }\n\n    function applyFilters() {\n      const visible = filterData();\n      const tbody = document.getElementById('patient-table-body');\n\n      [...tbody.querySelectorAll('tr')].forEach((tr) => {\n        const mrn = tr.dataset.mrn;\n        const loc = tr.dataset.location;\n        const prov = tr.dataset.provider;\n\n        // find match\n        const hit = visible.find(\n          (r) =>\n            String(r.MRN) === mrn &&\n            r.LOCATION_NAME === loc &&\n            r.CAREGIVER_NAME === prov\n        );\n        tr.style.display = hit ? '' : 'none';\n      });\n\n      updateCards();\n    }\n\n    /* ----- event wiring (filters + search) ----- */\n    ['search-input', 'location-filter', 'provider-filter'].forEach((id) => {\n      document\n        .getElementById(id)\n        .addEventListener(id === 'search-input' ? 'input' : 'change', () => {\n          saveFilters();\n          applyFilters();\n        });\n    });\n\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      saveFilters();\n      applyFilters();\n    });\n\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      const loc = document.getElementById('location-filter');\n      const prov = document.getElementById('provider-filter');\n      [...loc.options].forEach((o) => (o.selected = false));\n      [...prov.options].forEach((o) => (o.selected = false));\n      localStorage.removeItem('searchInput');\n      localStorage.removeItem('locationFilter');\n      localStorage.removeItem('providerFilter');\n      applyFilters();\n    });\n\n    /* ----- sortable columns ----- */\n    const sortDir = {};\n    // MRN col = index 0 (numeric), Wait Time col = index 5 (numeric)\n    const numeric = [0, 5];\n\n    function cmp(a, b, num, asc) {\n      return num ? (asc ? a - b : b - a) : asc ? a.localeCompare(b) : b.localeCompare(a);\n    }\n\n    function sortBy(col) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = [...tbody.querySelectorAll('tr')];\n      sortDir[col] = !sortDir[col];\n      const asc = sortDir[col];\n\n      rows\n        .sort((rA, rB) => {\n          const vA = rA.querySelectorAll('.sortable-cell')[col].dataset.sortValue || '';\n          const vB = rB.querySelectorAll('.sortable-cell')[col].dataset.sortValue || '';\n          return cmp(\n            numeric.includes(col) ? parseFloat(vA) : vA,\n            numeric.includes(col) ? parseFloat(vB) : vB,\n            numeric.includes(col),\n            asc\n          );\n        })\n        .forEach((r) => tbody.appendChild(r));\n    }\n\n    document.querySelectorAll('.header-table thead th.sortable').forEach((th) => {\n      th.addEventListener('click', () => sortBy(+th.dataset.colIndex));\n    });\n\n    /* ----- legend toggle ----- */\n    document.getElementById('toggle-legend').addEventListener('click', (e) => {\n      const c = document.getElementById('legend-container');\n      const open = c.style.display === 'block';\n      c.style.display = open ? 'none' : 'block';\n      e.currentTarget.innerHTML = open\n        ? '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>'\n        : '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    });\n  </script>\n</body>\n</html>`;\n\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        0
      ],
      "id": "5548daa5-1431-45f4-be74-7e34c65e616d",
      "name": "Code9",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        720,
        200
      ],
      "id": "310628b4-8a93-4718-b51d-1745d86c9596",
      "name": "Aggregate1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed (no checkout)\n//    come first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed (with a CHECKED OUT time) at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => !((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim()));\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\nconst completed = data.filter(row => ((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim()));\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards (initially)\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time from ACK_TO_START_TIME (used directly)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Build <tbody> rows with new status (no status column)\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Use ACK_TO_START_TIME field for wait time\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  // Determine row status based on available times.\n  // If there is a CHECKED OUT time, it takes precedence.\n  let statusMapping = {};\n  if (checkedOut) {\n    statusMapping = { label: \"Checked Out\", rowClass: \"bg-orange-50\" };\n  } else if (ready) {\n    statusMapping = { label: \"Started\", rowClass: \"bg-green-50\" };\n  } else if (checkIn) {\n    statusMapping = { label: \"Acknowledged\", rowClass: \"bg-blue-50\" };\n  } else {\n    statusMapping = { label: \"\", rowClass: \"\" };\n  }\n  \n  return `\n    <tr class=\"hover:bg-gray-50 ${statusMapping.rowClass}\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${location.toLowerCase()}\">\n        ${location}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 4) Build final HTML with updated header, cards, and filters\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    th.sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body class=\"min-h-screen\">\n  <div class=\"min-w-[1024px]\">\n    <!-- Sticky Header -->\n    <header class=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n      <!-- Cards row (Title card and 2 metric cards) -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 p-4\">\n        <!-- Title Card with Patients Today info -->\n        <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n          <h2 class=\"text-5xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n          <p id=\"total-patients\" class=\"text-3xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n        </div>\n        <!-- Card: Avg Lobby Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n              <i class=\"ri-time-line text-yellow-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n            </div>\n          </div>\n        </div>\n        <!-- Card: Avg Total Cycle Time -->\n        <div class=\"metric-card rounded-lg p-6\">\n          <div class=\"flex items-center justify-between mb-4\">\n            <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n            <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n              <i class=\"ri-timer-line text-green-600\"></i>\n            </div>\n          </div>\n          <div class=\"flex items-end justify-between\">\n            <div>\n              <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n              <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Toggle control for Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border-t border-gray-200 cursor-pointer\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n\n      <!-- Collapsible Legend, Filters, and Search row (hidden by default) -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"flex items-center px-6 py-2 bg-gray-50 border-t border-gray-200\">\n          <!-- Color Legend -->\n          <div class=\"flex space-x-4\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <!-- Last Refresh info -->\n          <div class=\"ml-4 text-gray-700 font-medium\" id=\"last-refresh\">April 5, 2025 2:18 PM | Last Refresh 0:00</div>\n          <!-- Multiselect Filters for Location and Provider -->\n          <div class=\"ml-4 flex items-center space-x-2\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              <!-- Options populated dynamically -->\n            </select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              <!-- Options populated dynamically -->\n            </select>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n          </div>\n          <!-- Spacer -->\n          <div class=\"flex-grow\"></div>\n          <!-- Search -->\n          <div class=\"flex items-center space-x-4 relative\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                type=\"text\"\n                id=\"search-input\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"Search...\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main class=\"p-6\">\n      <!-- Patient Tracking Table -->\n      <div class=\"bg-white rounded-lg shadow-sm overflow-hidden mb-6\">\n        <div class=\"overflow-x-auto\">\n          <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n              <tr>\n                <th data-col-index=\"0\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Location <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"1\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Patient\n                </th>\n                <th data-col-index=\"2\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  MRN\n                </th>\n                <th data-col-index=\"3\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Provider <i class=\"ri-arrow-drop-down-line\"></i>\n                </th>\n                <th data-col-index=\"4\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Room\n                </th>\n                <th data-col-index=\"5\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Acknowledged\n                </th>\n                <th data-col-index=\"6\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Started\n                </th>\n                <th data-col-index=\"7\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Wait Time\n                </th>\n                <th data-col-index=\"8\" class=\"px-6 py-3 text-left text-xs font-bold text-gray-500 uppercase tracking-wider sortable\">\n                  Checked Out\n                </th>\n              </tr>\n            </thead>\n            <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n              ${rowsHtml}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the multiselect filters with unique options\n    function populateFilters() {\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      \n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      \n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locationSelect.appendChild(option);\n      });\n      \n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        providerSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Function to filter data based on search term and dropdown selections\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    // Update metric cards based on filtered data\n    function updateCards() {\n      const filteredData = filterData();\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${totalPatientsFiltered}\\`;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Apply filters to table rows based on search and dropdown selections\n    function applyFilters() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      const rows = document.querySelectorAll('#patient-table-body tr');\n      rows.forEach(row => {\n        const locationCell = row.querySelector('td:nth-child(1)');\n        const providerCell = row.querySelector('td:nth-child(4)');\n        const rowLocation = locationCell ? locationCell.textContent.trim() : \"\";\n        const rowProvider = providerCell ? providerCell.textContent.trim() : \"\";\n        const rowText = row.textContent.toLowerCase();\n        \n        const searchMatches = rowText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(rowLocation) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(rowProvider) : true;\n        \n        row.style.display = (searchMatches && locationMatches && providerMatches) ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach event listeners for search and dropdown filters\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    // Update numeric columns: MRN (col index 2) and Wait Time (now col index 7)\n    const numericCols = [2, 7];\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(tableId, colIndex) {\n      const table = document.getElementById(tableId);\n      const tbody = table.querySelector('tbody');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    document.querySelectorAll('th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn('patient-table', colIndex);\n      });\n    });\n\n    // Toggle logic for the Legend/Filters/Search area\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span><i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span><i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return the final HTML output in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2180,
        640
      ],
      "id": "fbd529df-788a-4cad-80a9-a2d96ff54aba",
      "name": "Code10"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed (no checkout)\n//    come first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed (with a CHECKED OUT time) at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => !((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim()));\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\nconst completed = data.filter(row => ((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim()));\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards (initially)\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time from ACK_TO_START_TIME (used directly)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Build <tbody> rows with new status (location column removed)\n//    Data attributes are added for filtering by location and provider.\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Use ACK_TO_START_TIME field for wait time\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  // Determine row status based on available times.\n  let statusMapping = {};\n  if (checkedOut) {\n    statusMapping = { label: \"Checked Out\", rowClass: \"bg-orange-50\" };\n  } else if (ready) {\n    statusMapping = { label: \"Started\", rowClass: \"bg-green-50\" };\n  } else if (checkIn) {\n    statusMapping = { label: \"Acknowledged\", rowClass: \"bg-blue-50\" };\n  } else {\n    statusMapping = { label: \"\", rowClass: \"\" };\n  }\n\n  return `\n    <tr \n      data-location=\"${location}\" \n      data-provider=\"${provider}\" \n      class=\"hover:bg-gray-50 ${statusMapping.rowClass}\"\n    >\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 4) Build final HTML with a 2-column layout in <main>:\n//    - Left (1/4): stacked metric cards + toggle + legend/filters\n//    - Right (3/4): pinned \"header row\" + scrollable table body\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    :where([class^=\"ri-\"])::before { content: \"\\\\f3c2\"; }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n      margin: 0;\n      padding: 0;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    .sortable:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #table-body-container {\n      max-height: 600px;\n      overflow-y: auto;\n      overflow-x: hidden;\n      border: 1px solid #e5e7eb;\n      border-top: none;\n    }\n    #table-header-row {\n      display: grid;\n      grid-template-columns: repeat(8, minmax(100px, 1fr));\n      background-color: #f3f4f6;\n      border: 1px solid #e5e7eb;\n    }\n    #table-header-row > div {\n      padding: 0.75rem 1.5rem; \n      font-size: 0.75rem; \n      font-weight: 700; \n      text-transform: uppercase;\n      color: #6b7280; \n      display: flex;\n      align-items: center;\n    }\n    #table-header-row > div.sortable:hover {\n      background-color: #e5e7eb;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"min-w-[1024px]\">\n    <!-- Main Content: Two columns -->\n    <main class=\"p-6\">\n      <div class=\"flex gap-8\">\n        <!-- Left Column (1/4) with stacked cards and filters -->\n        <div class=\"w-1/4 space-y-6\">\n          <!-- Card 1: Title + Patients Today -->\n          <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n            <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n            <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n          </div>\n          <!-- Card 2: Avg Lobby Time -->\n          <div class=\"metric-card rounded-lg p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                <i class=\"ri-time-line text-yellow-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n                <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n              </div>\n            </div>\n          </div>\n          <!-- Card 3: Avg Total Cycle Time -->\n          <div class=\"metric-card rounded-lg p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                <i class=\"ri-timer-line text-green-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n                <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Toggle control for Legend/Filters/Search -->\n          <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n            <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n            <i class=\"ri-arrow-down-s-line\"></i>\n          </div>\n\n          <!-- Collapsible Legend, Filters, and Search row (hidden by default) -->\n          <div id=\"legend-container\" style=\"display: none;\">\n            <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n              <!-- Color Legend -->\n              <div class=\"flex space-x-4 mb-3\">\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Acknowledged</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Started</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Checked Out</span>\n                </div>\n              </div>\n              <!-- Last Refresh info -->\n              <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n                April 5, 2025 2:18 PM | Last Refresh 0:00\n              </div>\n              <!-- Multiselect Filters for Location and Provider -->\n              <div class=\"flex items-center space-x-2 mb-3\">\n                <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n                  <!-- Options populated dynamically -->\n                </select>\n                <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n                  <!-- Options populated dynamically -->\n                </select>\n                <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n                  Clear Filters\n                </button>\n              </div>\n              <!-- Search -->\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <i class=\"ri-search-line text-gray-400\"></i>\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"search-input\"\n                  class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                  placeholder=\"Search...\"\n                />\n                <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Right Column (3/4) with table headers + table body -->\n        <div class=\"w-3/4\">\n          <!-- Column Headers outside of the table -->\n          <div id=\"table-header-row\">\n            <div data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></div>\n            <div data-col-index=\"1\" class=\"sortable\">MRN</div>\n            <div data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></div>\n            <div data-col-index=\"3\" class=\"sortable\">Room</div>\n            <div data-col-index=\"4\" class=\"sortable\">Acknowledged</div>\n            <div data-col-index=\"5\" class=\"sortable\">Started</div>\n            <div data-col-index=\"6\" class=\"sortable\">Wait Time</div>\n            <div data-col-index=\"7\" class=\"sortable\">Checked Out</div>\n          </div>\n\n          <!-- Scrollable container for the table body -->\n          <div id=\"table-body-container\">\n            <table id=\"patient-table\" class=\"min-w-full divide-y divide-gray-200\">\n              <tbody id=\"patient-table-body\" class=\"bg-white divide-y divide-gray-200\">\n                ${rowsHtml}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    // Store the original data for filtering updates\n    const originalData = ${JSON.stringify(finalData)};\n    \n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the multiselect filters with unique options\n    function populateFilters() {\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      \n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      \n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locationSelect.appendChild(option);\n      });\n      \n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        providerSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Function to filter data based on search term and dropdown selections\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    // Update metric cards based on filtered data\n    function updateCards() {\n      const filteredData = filterData();\n      const totalPatientsFiltered = filteredData.length;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length) : 0;\n      const ackTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotalCycle = ackTimes.length ? Math.round(ackTimes.reduce((sum, val) => sum + val, 0) / ackTimes.length) : 0;\n    \n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${totalPatientsFiltered}\\`;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycle} min\\`;\n    }\n\n    // Apply filters to table rows based on search and dropdown selections\n    function applyFilters() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locationSelect = document.getElementById('location-filter');\n      const providerSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locationSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(providerSelect.selectedOptions).map(o => o.value);\n      \n      const rows = document.querySelectorAll('#patient-table-body tr');\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowText = row.textContent.toLowerCase();\n        \n        const searchMatches = rowText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(rowLocation) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(rowProvider) : true;\n        \n        row.style.display = (searchMatches && locationMatches && providerMatches) ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach event listeners for search and dropdown filters\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    // Numeric columns: MRN (col index 1), Wait Time (col index 6)\n    const numericCols = [1, 6];\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        const numA = parseFloat(a) || 0;\n        const numB = parseFloat(b) || 0;\n        return ascending ? (numA - numB) : (numB - numA);\n      } else {\n        if (a < b) return ascending ? -1 : 1;\n        if (a > b) return ascending ? 1 : -1;\n        return 0;\n      }\n    }\n\n    function sortTableByColumn(colIndex) {\n      const tbody = document.querySelector('#patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      if (!sortDirections[colIndex]) {\n        sortDirections[colIndex] = true;\n      } else {\n        sortDirections[colIndex] = !sortDirections[colIndex];\n      }\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Attach click events to the custom \"header row\" divs\n    document.querySelectorAll('#table-header-row > div.sortable').forEach(div => {\n      div.addEventListener('click', () => {\n        const colIndex = parseInt(div.getAttribute('data-col-index'), 10);\n        sortTableByColumn(colIndex);\n      });\n    });\n\n    // Toggle logic for the Legend/Filters/Search area\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span><i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span><i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n\n    // Initialize the \"last refresh\" timer\n    updateLastRefresh();\n  </script>\n</body>\n</html>`;\n\n// Return final HTML\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1940,
        660
      ],
      "id": "37c4fee7-e95d-4bd6-9fb1-b729e47d1abf",
      "name": "Code11"
    },
    {
      "parameters": {
        "jsCode": "// Helper function to parse time string like \"8:47AM\" into {hour, minute}\nfunction parseTimeString(timeStr) {\n    const trimmed = timeStr.trim();\n    const regex = /(\\d{1,2}):(\\d{2})(AM|PM)/i;\n    const match = trimmed.match(regex);\n    if (!match) return null;\n\n    let hour = parseInt(match[1], 10);\n    const minute = parseInt(match[2], 10);\n    const period = match[3].toUpperCase();\n\n    if (period === 'PM' && hour < 12) {\n        hour += 12;\n    }\n    if (period === 'AM' && hour === 12) {\n        hour = 0;\n    }\n\n    return { hour, minute };\n}\n\n// Helper function to determine if a date (year, month, day) in America/Detroit is DST\n// Returns true if DST, false if standard time (no DST)\nfunction isDetroitDST(year, month, day) {\n    // According to US DST rules:\n    // DST starts: 2nd Sunday in March\n    // DST ends: 1st Sunday in November\n\n    // Month in JS Date: 0=January,...11=December\n    if (month < 2 || month > 10) return false; // Jan, Feb, Dec = no DST\n    if (month > 2 && month < 10) return true;  // Apr to Oct = DST\n\n    // For March and November, calculate if it's DST by finding the relevant Sundays.\n\n    // Find 2nd Sunday in March\n    if (month === 2) {\n        let d = new Date(year, 2, 1);\n        let firstSunday = 7 - d.getDay();\n        if (firstSunday === 7) firstSunday = 0; // If first day is Sunday\n        const secondSunday = firstSunday + 7;\n        return day >= secondSunday;\n    }\n\n    // Find 1st Sunday in November\n    if (month === 10) {\n        let d = new Date(year, 10, 1);\n        let firstSunday = 7 - d.getDay();\n        if (firstSunday === 7) firstSunday = 0; // If first day is Sunday\n        return day < firstSunday;\n    }\n\n    return false; // fallback no DST\n}\n\n// Convert the EST/EDT local time string to a JS Date (in UTC) for today in Detroit timezone\nfunction parseDetroitTimeToUTC(timeStr) {\n    const now = new Date();\n\n    // Parse time parts\n    const timeParts = parseTimeString(timeStr);\n    if (!timeParts) return null;\n\n    // Get today's date parts\n    const year = now.getFullYear();\n    const month = now.getMonth(); // 0-based\n    const day = now.getDate();\n\n    // Determine if today is DST or EST in Detroit\n    const dst = isDetroitDST(year, month, day);\n\n    // Build a Date object in UTC corresponding to the time in Detroit\n    // First, create date at UTC midnight today\n    const utcDate = new Date(Date.UTC(year, month, day, timeParts.hour, timeParts.minute, 0));\n\n    // Calculate offset in hours: -4 for DST, -5 for standard time\n    const offsetHours = dst ? 4 : 5;\n\n    // Adjust UTC time by adding offset hours to get the \"Detroit local\" time in UTC terms\n    // Because Detroit time = UTC - offset, so UTC = Detroit time + offset\n    utcDate.setUTCHours(utcDate.getUTCHours() + offsetHours);\n\n    return utcDate;\n}\n\n// Main loop\nfor (const item of items) {\n    const ackStr = item.json[\"ACK_TIME(PT HERE)\"];\n    if (!ackStr) {\n        item.json[\"TIME_IN_OFFICE\"] = null;\n        continue;\n    }\n\n    const ackTime = parseDetroitTimeToUTC(ackStr);\n    if (!ackTime) {\n        item.json[\"TIME_IN_OFFICE\"] = null;\n        continue;\n    }\n\n    // checkout time string\n    const checkOutStr = item.json[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"];\n    let checkoutTime = null;\n    if (checkOutStr && checkOutStr.trim() !== \"\") {\n        checkoutTime = parseDetroitTimeToUTC(checkOutStr);\n    }\n\n    // Get current time (in UTC)\n    const nowUTC = new Date();\n\n    let diffMinutes;\n    if (checkoutTime) {\n        diffMinutes = Math.round((checkoutTime - ackTime) / 60000);\n    } else {\n        diffMinutes = Math.round((nowUTC - ackTime) / 60000);\n    }\n\n    if (diffMinutes < 0) diffMinutes = 0;\n\n    item.json[\"TIME_IN_OFFICE\"] = diffMinutes + \" min\";\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        200
      ],
      "id": "85bf2950-600e-46f1-990d-5c10f079b1d3",
      "name": "Code12",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// 1) Sort the data so that non-completed (no checkout)\n//    come first (descending ACK_CURRENT_TIME_IN_OFFICE),\n//    then completed (with a CHECKED OUT time) at the bottom\n// -------------------------------------------\nconst notCompleted = data.filter(row => !((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim()));\nnotCompleted.sort((a, b) => (b.ACK_CURRENT_TIME_IN_OFFICE || 0) - (a.ACK_CURRENT_TIME_IN_OFFICE || 0));\nconst completed = data.filter(row => ((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim()));\nconst finalData = [...notCompleted, ...completed];\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards (initially)\n// -------------------------------------------\nconst totalPatients = finalData.length;\n\n// Compute Avg Total Cycle Time from ACTUAL_ACK_TO_CHECKOUT_TIME \nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\n// Compute Avg Lobby Time from ACK_TO_START_TIME (used directly)\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Build <tbody> rows (location is stored in data-location, not shown)\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkIn = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const ready = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkedOut = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  // Simple color highlight logic\n  let rowClass = \"\";\n  if (checkedOut) rowClass = \"bg-orange-50\";\n  else if (ready) rowClass = \"bg-green-50\";\n  else if (checkIn) rowClass = \"bg-blue-50\";\n\n  return `\n    <tr \n      data-location=\"${location}\" \n      data-provider=\"${provider}\"\n      class=\"hover:bg-gray-50 ${rowClass}\"\n    >\n      <td class=\"px-4 py-2 text-left text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkIn.toLowerCase()}\">\n        ${checkIn}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${ready.toLowerCase()}\">\n        ${ready}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkedOut.toLowerCase()}\">\n        ${checkedOut}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 4) Final HTML with 2-column layout and\n//    separate table for header vs. body, aligned via colgroup\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* Force no scrolling outside the table body */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden; /* No scroll outside table body */\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    /* We use two separate tables with the same colgroup to align columns */\n    .header-table, .body-table {\n      table-layout: fixed; \n      width: 100%; \n      text-align: left; \n      border-collapse: collapse;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem; \n      font-weight: 700; \n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem; \n    }\n    /* Hover on header cell for sorting */\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    /* The .body-table is where the actual rows reside */\n  </style>\n</head>\n<body class=\"h-full\">\n  <div class=\"h-full flex flex-col\">\n    <!-- Main content as a 2-column layout -->\n    <main class=\"flex-1 p-6\">\n      <div class=\"flex h-full gap-8\">\n        <!-- Left column (1/4) for metrics & filters -->\n        <div class=\"w-1/4 space-y-6\">\n          <!-- Title & Patients Today -->\n          <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n            <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n            <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n              Patients Today: ${totalPatients}\n            </p>\n          </div>\n          <!-- Avg Lobby Time -->\n          <div class=\"metric-card rounded-lg p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                <i class=\"ri-time-line text-yellow-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n                  ${Math.round(averageLobbyTime)} min\n                </p>\n                <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n              </div>\n            </div>\n          </div>\n          <!-- Avg Total Cycle Time -->\n          <div class=\"metric-card rounded-lg p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                <i class=\"ri-timer-line text-green-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n                  ${Math.round(averageTotalCycleTime)} min\n                </p>\n                <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Toggle: Show/Hide Legend/Filters/Search -->\n          <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n            <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n            <i class=\"ri-arrow-down-s-line\"></i>\n          </div>\n          <!-- Collapsible Legend/Filters -->\n          <div id=\"legend-container\" style=\"display: none;\">\n            <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n              <div class=\"flex space-x-4 mb-3\">\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Acknowledged</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Started</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Checked Out</span>\n                </div>\n              </div>\n              <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n                April 5, 2025 2:18 PM | Last Refresh 0:00\n              </div>\n              <div class=\"flex items-center space-x-2 mb-3\">\n                <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n                </select>\n                <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n                </select>\n                <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n                  Clear Filters\n                </button>\n              </div>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <i class=\"ri-search-line text-gray-400\"></i>\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"search-input\"\n                  class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                  placeholder=\"Search...\"\n                />\n                <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Right column (3/4) - table header pinned, body scrollable -->\n        <div class=\"w-3/4 flex flex-col h-full\">\n          <!-- Header Table (non-scrolling) -->\n          <table class=\"header-table\">\n            <colgroup>\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n            </colgroup>\n            <thead>\n              <tr>\n                <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>\n                <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n                <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n                <th data-col-index=\"3\" class=\"sortable\">Room</th>\n                <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n                <th data-col-index=\"5\" class=\"sortable\">Started</th>\n                <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n                <th data-col-index=\"7\" class=\"sortable\">Checked Out</th>\n              </tr>\n            </thead>\n          </table>\n          <!-- Scrollable Body -->\n          <div class=\"flex-1 overflow-y-auto\">\n            <table class=\"body-table\">\n              <colgroup>\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n              </colgroup>\n              <tbody id=\"patient-table-body\">\n                ${rowsHtml}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n    let dataAgeSeconds = 0;\n\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      \n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      \n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      \n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Filtering\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n      \n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    function updateCards() {\n      const filteredData = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n\n      // Recompute times from filtered data\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n\n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      \n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        \n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Event listeners\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting\n    const sortDirections = {};\n    const numericCols = [1, 6]; // MRN (col 1), Wait Time (col 6)\n    \n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n\n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Attach sorting to the header table's \"th\" elements\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const idx = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(idx);\n      });\n    });\n\n    // Toggle Legend/Filters\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span><i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span><i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return the final HTML in one item\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1860,
        660
      ],
      "id": "3b0d66e6-afc5-4818-8e2a-ca56dcec9a81",
      "name": "Code13"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node code using native JavaScript Date object\n\n// Helper function to parse a time string (\"h:mma\", e.g., \"8:00AM\")\n// Returns a Date object for today with the specified hours and minutes.\nfunction parseTime(timeStr) {\n\tconst trimmed = timeStr.trim();\n\t// Regular expression to capture the hour, minutes, and period (AM/PM)\n\tconst regex = /(\\d{1,2}):(\\d{2})(AM|PM)/i;\n\tconst match = trimmed.match(regex);\n\tif (!match) return null;\n\tlet hour = parseInt(match[1], 10);\n\tconst minute = parseInt(match[2], 10);\n\tconst period = match[3].toUpperCase();\n\n\t// Convert to 24-hour format.\n\tif (period === 'PM' && hour < 12) {\n\t\thour += 12;\n\t}\n\tif (period === 'AM' && hour === 12) {\n\t\thour = 0;\n\t}\n\t// Use today's date for the resulting Date object.\n\tconst now = new Date();\n\treturn new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, minute, 0);\n}\n\n// Loop through each incoming item\nfor (const item of items) {\n\t// Retrieve and validate the ACK_TIME string.\n\tconst ackStr = item.json[\"ACK_TIME(PT HERE)\"];\n\tif (!ackStr) {\n\t\titem.json[\"TIME_IN_OFFICE\"] = null;\n\t\tcontinue;\n\t}\n\tconst ackTime = parseTime(ackStr);\n\tif (!ackTime) {\n\t\titem.json[\"TIME_IN_OFFICE\"] = null;\n\t\tcontinue;\n\t}\n\n\t// Check if there's a checkout time available.\n\tlet checkoutTime;\n\tconst checkOutStr = item.json[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"];\n\tif (checkOutStr && checkOutStr.trim() !== \"\") {\n\t\tcheckoutTime = parseTime(checkOutStr);\n\t}\n\n\t// Calculate the difference in minutes:\n\t// If there is a checkout time, use it.\n\t// Otherwise, calculate the difference between the current time and the ack time.\n\tlet diffMs;\n\tif (checkoutTime) {\n\t\tdiffMs = checkoutTime - ackTime;\n\t} else {\n\t\tdiffMs = new Date() - ackTime;\n\t}\n\tconst diffMins = Math.round(diffMs / 60000);\n\t\n\t// Store the result in the TIME_IN_OFFICE column.\n\titem.json[\"TIME_IN_OFFICE\"] = diffMins;\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        320
      ],
      "id": "be0305ec-af0d-400c-9511-db0d07b7f993",
      "name": "Code14"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------\n// Re-sort the data into groups (Acknowledged, Started, Checked Out)\n// and order within each group by descending TIME_IN_OFFICE\n// -------------------------------------------\nconst finalData = data.slice();\n\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  // Group order: Acknowledged (0) → Started (1) → Checked Out (2)\n  if (checkoutStr) {\n    return 2;\n  } else if (readyStr) {\n    return 1;\n  } else if (checkInStr) {\n    return 0;\n  }\n  return 3;\n}\n\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  if (statusA !== statusB) {\n    return statusA - statusB;  // lower status value comes first\n  }\n  // Within the same status, sort descending by TIME_IN_OFFICE.\n  // Convert to a number (or 0 if not valid)\n  const timeA = Number(a[\"TIME_IN_OFFICE\"]) || 0;\n  const timeB = Number(b[\"TIME_IN_OFFICE\"]) || 0;\n  return timeB - timeA;\n});\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------\nconst totalPatients = finalData.length;\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Build table rows  \n//    Row background color is determined as follows:\n//      - Orange if CHECK_OUT(PATIET HAS LEFT THE BUILDING) is non-empty (Checked Out)\n//      - Green if START_TIME(READY TO COME BACK) is non-empty (Started)\n//      - Blue if ACK_TIME(PT HERE) is non-empty (Acknowledged)\n//    The last column displays TIME_IN_OFFICE.\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  // For display, convert TIME_IN_OFFICE to a string if it is numeric.\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n  \n  // Determine row color according to status (checkout > ready > check-in)\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\";\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";\n  }\n  \n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-left text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-left text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 4) Final HTML layout:  \n//     A two‑column layout where the right column (the table area)\n//     fills the viewport. Its header is fixed (in a separate table) and only the table body scrolls.\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"min-h-screen\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* Use full viewport height */\n    html, body {\n      margin: 0;\n      padding: 0;\n      min-height: 100vh;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    /* Two tables (header & body) with matching colgroups */\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    /* Right column: flex-col container which fills the viewport */\n    .right-column {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      overflow: hidden;\n    }\n    /* The table body container fills remaining space and scrolls */\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"min-h-screen\">\n    <main class=\"min-h-screen p-6\">\n      <div class=\"flex h-full gap-8\">\n        <!-- Left Column (1/4) for cards and filters -->\n        <div class=\"w-1/4 space-y-6\">\n          <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n            <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n            <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n              Patients Today: ${totalPatients}\n            </p>\n          </div>\n          <div class=\"metric-card rounded-lg p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n                <i class=\"ri-time-line text-yellow-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n                  ${Math.round(averageLobbyTime)} min\n                </p>\n                <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"metric-card rounded-lg p-6\">\n            <div class=\"flex items-center justify-between mb-4\">\n              <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n              <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n                <i class=\"ri-timer-line text-green-600\"></i>\n              </div>\n            </div>\n            <div class=\"flex items-end justify-between\">\n              <div>\n                <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n                  ${Math.round(averageTotalCycleTime)} min\n                </p>\n                <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n            <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n            <i class=\"ri-arrow-down-s-line\"></i>\n          </div>\n          <div id=\"legend-container\" style=\"display: none;\">\n            <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n              <div class=\"flex space-x-4 mb-3\">\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Acknowledged</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Started</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n                  <span class=\"text-sm text-gray-600\">Checked Out</span>\n                </div>\n              </div>\n              <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n                April 5, 2025 2:18 PM | Last Refresh 0:00\n              </div>\n              <div class=\"flex items-center space-x-2 mb-3\">\n                <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n                <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n                <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n              </div>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                  <i class=\"ri-search-line text-gray-400\"></i>\n                </div>\n                <input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\"/>\n                <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Right Column (3/4): Table area -->\n        <div class=\"w-3/4 right-column\">\n          <!-- Header Table (fixed) -->\n          <table class=\"header-table\">\n            <colgroup>\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n              <col style=\"width:12.5%;\">\n            </colgroup>\n            <thead>\n              <tr>\n                <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>\n                <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n                <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n                <th data-col-index=\"3\" class=\"sortable\">Room</th>\n                <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n                <th data-col-index=\"5\" class=\"sortable\">Started</th>\n                <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n                <th data-col-index=\"7\" class=\"sortable\">Time In Office</th>\n              </tr>\n            </thead>\n          </table>\n          <!-- Table Body Container (scrollable) -->\n          <div id=\"table-body-container\" class=\"flex-1 overflow-y-auto\">\n            <table class=\"body-table\">\n              <colgroup>\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n                <col style=\"width:12.5%;\">\n              </colgroup>\n              <tbody id=\"patient-table-body\">\n                ${rowsHtml}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n  \n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n    \n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n    \n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n    \n    function updateCards() {\n      const filteredData = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n    \n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n    \n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n    \n    const sortDirections = {};\n    const numericCols = [1, 6]; // MRN and Wait Time columns\n    \n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n    \n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n    \n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const idx = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(idx);\n      });\n    });\n    \n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span><i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span><i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return the final HTML output in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2200,
        720
      ],
      "id": "50629cbc-b864-4ad3-bdcb-f8d6d1bf65a0",
      "name": "Code15"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted descending by TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Acknowledged => 0, Started => 1, Checked Out => 2, otherwise => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  \n  // Sort by status ascending (ack=0, started=1, checked=2 => that order)\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n  // Same status => descending TIME_IN_OFFICE\n  const aTIO = Number(a[\"TIME_IN_OFFICE\"]) || 0;\n  const bTIO = Number(b[\"TIME_IN_OFFICE\"]) || 0;\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------\nconst totalPatients = finalData.length;\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------\n// 3) Build <tbody> rows with color logic\n//    and center alignment in every column.\n// -------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";  // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";   // Acknowledged\n  }\n\n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-center text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------\n// 4) Final HTML\n//    - The html/body are now overflow:hidden => no page scrolling\n//    - The right column is a flex container with pinned header\n//      table above a scrollable table body\n//    - All columns are center-aligned\n// -------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* Force no page scrolling */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    /* Two separate tables for header/body, center the text */\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n      text-align: center;  /* Center header text */\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    /* Layout container: no scrolling, just a horizontal flex */\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem; /* Tailwind's 'gap-6' => 1.5rem */\n      padding: 1.5rem; /* 'p-6' => 1.5rem */\n      box-sizing: border-box;\n    }\n    /* Left column: no scrolling, fixed width ratio */\n    #left-column {\n      width: 25%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem; /* space-y-6 equivalent */\n    }\n    /* Right column: pinned header, scrollable body below it */\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden; /* so the table body is the only scrolled region */\n    }\n    #table-body-container {\n      flex: 1;            /* fill available space */\n      overflow-y: auto;   /* only the table body scrolls */\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left Column -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <!-- Toggle for Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <!-- Color Legend -->\n          <div class=\"flex space-x-4 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <!-- Last Refresh info -->\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n            April 5, 2025 2:18 PM | Last Refresh 0:00\n          </div>\n          <!-- Location/Provider Filters -->\n          <div class=\"flex items-center space-x-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n          </div>\n          <!-- Search -->\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Right Column -->\n    <div id=\"right-column\">\n      <!-- Header Table -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"3\" class=\"sortable\">Room</th>\n            <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"5\" class=\"sortable\">Started</th>\n            <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"7\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <!-- Scrollable Body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`April 5, 2025 \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate location/provider filters\n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Return filtered subset of data\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    function updateCards() {\n      const filteredData = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n\n    // Hide or show rows based on filters\n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach filter event listeners\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    // We'll treat columns 1 (MRN) and 6 (Wait Time) as numeric\n    const numericCols = [1, 6];\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n\n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Hook sorting to the table header\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(colIndex);\n      });\n    });\n\n    // Toggle legend / filters\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return the final HTML output in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2140,
        780
      ],
      "id": "e50fbb54-21b1-4fe4-ab00-4ec9ef96f651",
      "name": "Code16"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each group sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  \n  // Sort by status first (0 -> 1 -> 2)\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n  // Then within the same group, sort descending by TIME_IN_OFFICE\n  const aTIO = Number(a[\"TIME_IN_OFFICE\"]) || 0;\n  const bTIO = Number(b[\"TIME_IN_OFFICE\"]) || 0;\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build table rows (center-aligned columns, color logic, etc.)\n// -------------------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";  // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";   // Acknowledged\n  }\n\n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-center text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML\n//    - No page scrolling (overflow hidden on html, body)\n//    - 'refreshrate' param auto-refresh logic\n//    - Current date/time logic for \"Last Refresh\"\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n\n    // On page load, check refreshrate param\n    window.addEventListener('DOMContentLoaded', () => {\n      const params = new URLSearchParams(window.location.search);\n      const refreshRateStr = params.get('refreshrate');\n      if (refreshRateStr) {\n        const refreshRateNum = parseFloat(refreshRateStr);\n        if (!isNaN(refreshRateNum) && refreshRateNum > 0) {\n          // Convert minutes -> ms, auto-refresh at that interval\n          setInterval(() => {\n            window.location.reload();\n          }, refreshRateNum * 60 * 1000);\n        }\n      }\n    });\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden; /* No entire page scrolling */\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    /* Two separate tables for header & body, center alignment */\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center; /* Center all table content */\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    /* Layout container: no scrolling, flex horizontally */\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left Column -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <!-- Toggle Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <!-- Color Legend -->\n          <div class=\"flex space-x-4 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <!-- Last Refresh info (dynamic date/time) -->\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n            <!-- Will be updated dynamically -->\n          </div>\n          <!-- Filters -->\n          <div class=\"flex items-center space-x-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n          </div>\n          <!-- Search -->\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Right Column: pinned header + scrollable body -->\n    <div id=\"right-column\">\n      <!-- Header Table (center-aligned) -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"3\" class=\"sortable\">Room</th>\n            <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"5\" class=\"sortable\">Started</th>\n            <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"7\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <!-- Table Body Container (scrollable) -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    // originalData is already sorted per the grouping logic\n    const originalData = ${JSON.stringify(finalData)};\n\n    // Keep track of how many seconds this data is \"old\"\n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      // format e.g. \"May 12, 2025\"\n      const dateString = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`\\${dateString} \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the location/provider <select> filters\n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Return subset of data matching search + location + provider\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n\n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    // Update the \"Patients Today\" count and the two metric cards\n    function updateCards() {\n      const filteredData = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n\n    // Show/hide rows based on filters\n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        // Check if row is in the filtered subset\n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Attach filter event listeners\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    // We'll treat columns 1 (MRN) and 6 (Wait Time) as numeric\n    const numericCols = [1, 6];\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n\n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Hook sorting logic to each <th class=\"sortable\">\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(colIndex);\n      });\n    });\n\n    // Toggle the legend/filters panel\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in `json.html`\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2120,
        840
      ],
      "id": "b93a14eb-fcb9-4514-9e71-837d0af229f8",
      "name": "Code17"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  \n  // Sort by status (0->1->2->3)\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n  // Then within the same group, descending by TIME_IN_OFFICE\n  const aTIO = Number(a[\"TIME_IN_OFFICE\"]) || 0;\n  const bTIO = Number(b[\"TIME_IN_OFFICE\"]) || 0;\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";  // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";   // Acknowledged\n  }\n\n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-center text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout:\n//    - No entire page scroll (overflow hidden on html/body)\n//    - Left column (1/4) scrollable\n//    - Right column pinned header, scrollable table body\n//    - All table cells centered\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* No entire page scrolling */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n\n    /* Outer container: horizontal flex, no page scroll */\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem; /* gap-6 => 1.5rem */\n      padding: 1.5rem; /* p-6 => 1.5rem */\n      box-sizing: border-box;\n    }\n    /* Left column: 1/4, scrollable if content is large */\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto; /* can scroll if content is tall */\n    }\n    /* Right column: pinned header + scrollable table body */\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden; /* only table body is scrollable */\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center; /* center all columns */\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left column: scrollable if needed -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Toggle control for Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search area -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex space-x-4 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <!-- Last Refresh info -->\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n            <!-- Updated dynamically -->\n          </div>\n          <!-- Filters -->\n          <div class=\"flex items-center space-x-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n          <!-- Search -->\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Right Column: pinned header + scrollable table body -->\n    <div id=\"right-column\">\n      <!-- Header Table -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"3\" class=\"sortable\">Room</th>\n            <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"5\" class=\"sortable\">Started</th>\n            <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"7\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <!-- Scrollable Body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n\n    // \"Last Refresh\" counter\n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      // e.g. \"May 7, 2025\"\n      const dateString = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`\\${dateString} \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the location & provider filters\n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Filter logic\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n\n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    function updateCards() {\n      const filteredData = filterData();\n      // Update Patients Today\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n      // Recompute avg times from filtered subset\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n\n    // Hide or show rows based on filters\n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Wire up filters\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    // We'll treat columns 1 (MRN) and 6 (Wait Time) as numeric\n    const numericCols = [1, 6];\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n\n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Hook sorting to header <th> elements\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(colIndex);\n      });\n    });\n\n    // Toggle the Legend/Filters container\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in `json.html`\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2040,
        840
      ],
      "id": "523208cd-cb60-41af-b7b8-f534c33dddf0",
      "name": "Code18"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// A small helper to parse the TIME_IN_OFFICE field as a number,\n// whether the field is stored as numeric or string like \"314 min\".\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    // Remove all non-numeric characters except period:\n    // e.g. \"314 min\" → \"314\", \"92\" → \"92\"\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  \n  // Sort by status first\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n\n  // Then, within each status group, sort descending by TIME_IN_OFFICE\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // We'll keep the original 'TIME_IN_OFFICE' field for display\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" \n    ? rawTimeInOffice.toString() \n    : (rawTimeInOffice || \"\").trim();\n\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";  // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";   // Acknowledged\n  }\n\n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-center text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout:\n//    - No entire page scroll (overflow hidden on html/body)\n//    - Left column (1/4) scrollable\n//    - Right column pinned header, scrollable table body\n//    - All table cells centered\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* No entire page scrolling */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n\n    /* Outer container: horizontal flex, no page scroll */\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem; /* gap-6 => 1.5rem */\n      padding: 1.5rem; /* p-6 => 1.5rem */\n      box-sizing: border-box;\n    }\n    /* Left column: 1/4, scrollable if content is large */\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto; /* can scroll if content is tall */\n    }\n    /* Right column: pinned header + scrollable table body */\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden; /* only table body is scrollable */\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center; /* center all columns */\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left column: scrollable if needed -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Toggle control for Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search area -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <!-- Legend items: now stacked vertically -->\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <!-- Last Refresh info -->\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\">\n            <!-- Updated dynamically -->\n          </div>\n          <!-- Filters -->\n          <div class=\"flex items-center space-x-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n          <!-- Search -->\n          <div class=\"relative\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n              <i class=\"ri-search-line text-gray-400\"></i>\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-input\"\n              class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              placeholder=\"Search...\"\n            />\n            <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Right Column: pinned header + scrollable table body -->\n    <div id=\"right-column\">\n      <!-- Header Table -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"3\" class=\"sortable\">Room</th>\n            <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"5\" class=\"sortable\">Started</th>\n            <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"7\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <!-- Scrollable Body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n\n    // \"Last Refresh\" counter\n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      // e.g. \"April 14, 2025\"\n      const dateString = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`\\${dateString} \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // Populate the location & provider filters\n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n\n    // Filter logic\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n\n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.LNFI + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" +\n                              row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n\n    function updateCards() {\n      const filteredData = filterData();\n      // Update Patients Today\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n      // Recompute avg times from filtered subset\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n\n    // Hide or show rows based on filters\n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // Wire up filters\n    document.getElementById('search-input').addEventListener('input', applyFilters);\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', applyFilters);\n    document.getElementById('provider-filter').addEventListener('change', applyFilters);\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      document.getElementById('location-filter').selectedIndex = -1;\n      document.getElementById('provider-filter').selectedIndex = -1;\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirections = {};\n    // We'll treat columns 1 (MRN) and 6 (Wait Time) as numeric\n    const numericCols = [1, 6];\n\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n\n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n\n    // Hook sorting to header <th> elements\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(colIndex);\n      });\n    });\n\n    // Toggle the Legend/Filters container\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in `json.html`\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1980,
        880
      ],
      "id": "1d1f9226-5612-4bba-b43f-51c09147ea7e",
      "name": "Code19"
    },
    {
      "parameters": {
        "path": "218321b9-5ea9-461e-816e-e874ed54f00b",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1840,
        -1240
      ],
      "id": "65eb64aa-f984-4f88-a08b-37584906e70d",
      "name": "Webhook1",
      "webhookId": "218321b9-5ea9-461e-816e-e874ed54f00b"
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -500,
        -1260
      ],
      "id": "019c88da-2f3d-4685-ad02-dd551b54c5b4",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "# Refresh info",
        "height": 300,
        "width": 1340
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1300,
        -900
      ],
      "typeVersion": 1,
      "id": "edb2bcb6-24c4-4e36-bc38-43053caf6d4e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// A small helper to parse the TIME_IN_OFFICE field as a number,\n// whether the field is stored as numeric or string like \"314 min\".\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    // Remove all non-numeric characters except period:\n    // e.g. \"314 min\" → \"314\", \"92\" → \"92\"\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  \n  // Sort by status first\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n\n  // Then, within each status group, sort descending by TIME_IN_OFFICE\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const patient = row.LNFI || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // We'll keep the original 'TIME_IN_OFFICE' field for display\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" \n    ? rawTimeInOffice.toString() \n    : (rawTimeInOffice || \"\").trim();\n\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";  // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";   // Acknowledged\n  }\n\n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-center text-sm font-medium text-gray-900 sortable-cell\" data-sort-value=\"${patient.toLowerCase()}\">\n        ${patient}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout:\n//    - No entire page scroll (overflow hidden on html/body)\n//    - Left column (1/4) scrollable\n//    - Right column pinned header, scrollable table body\n//    - All table cells centered\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* No entire page scrolling */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    /* Outer container: horizontal flex, no page scroll */\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    /* Left column: 1/4, scrollable if content is large */\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    /* Right column: pinned header + scrollable table body */\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left Column -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <!-- Toggle control for Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search area -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <!-- Legend Items: stacked vertically -->\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <!-- Last Refresh info -->\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <!-- Filters: Location and Provider stacked vertically -->\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <!-- Search Input and Clear Filters Button stacked vertically -->\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                type=\"text\"\n                id=\"search-input\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"Search...\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Right Column -->\n    <div id=\"right-column\">\n      <!-- Header Table -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n          <col style=\"width:12.5%;\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">Patient <i class=\"ri-arrow-drop-down-line\"></i></th>    \n            <th data-col-index=\"1\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"2\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"3\" class=\"sortable\">Room</th>\n            <th data-col-index=\"4\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"5\" class=\"sortable\">Started</th>\n            <th data-col-index=\"6\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"7\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <!-- Scrollable Body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n            <col style=\"width:12.5%;\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <!-- Bottom Script Section -->\n  <script>\n    // Make the final data available in the browser\n    const originalData = ${JSON.stringify(finalData)};\n\n    // ----- Auto Refresh Logic -----\n    function getQueryParam(param) {\n      const urlParams = new URLSearchParams(window.location.search);\n      return urlParams.get(param);\n    }\n    const refreshRateParam = getQueryParam('refreshrate');\n    if (refreshRateParam && !isNaN(refreshRateParam)) {\n      const refreshRateMinutes = parseFloat(refreshRateParam);\n      // Reload the page every (refreshRateMinutes * 60000) milliseconds\n      setTimeout(() => {\n        location.reload();\n      }, refreshRateMinutes * 60000);\n    }\n\n    // ----- Local Storage for Filters -----\n    function saveFiltersToLocalStorage() {\n      const searchInput = document.getElementById('search-input').value;\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n      localStorage.setItem('searchInput', searchInput);\n      localStorage.setItem('locationFilter', JSON.stringify(selectedLocations));\n      localStorage.setItem('providerFilter', JSON.stringify(selectedProviders));\n    }\n    function loadFiltersFromLocalStorage() {\n      const searchInput = localStorage.getItem('searchInput') || '';\n      const locationFilter = localStorage.getItem('locationFilter');\n      const providerFilter = localStorage.getItem('providerFilter');\n\n      document.getElementById('search-input').value = searchInput;\n      if (locationFilter) {\n        try {\n          const selectedLocations = JSON.parse(locationFilter);\n          const locSelect = document.getElementById('location-filter');\n          Array.from(locSelect.options).forEach(opt => {\n            opt.selected = selectedLocations.includes(opt.value);\n          });\n        } catch (e) {\n          // ignore error\n        }\n      }\n      if (providerFilter) {\n        try {\n          const selectedProviders = JSON.parse(providerFilter);\n          const provSelect = document.getElementById('provider-filter');\n          Array.from(provSelect.options).forEach(opt => {\n            opt.selected = selectedProviders.includes(opt.value);\n          });\n        } catch (e) {\n          // ignore error\n        }\n      }\n      applyFilters();\n    }\n\n    // ----- Refresh Last Refresh Counter -----\n    let dataAgeSeconds = 0;\n    function updateLastRefresh() {\n      dataAgeSeconds++;\n      const now = new Date();\n      const dateString = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\n      let hours = now.getHours();\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const ampm = hours >= 12 ? 'PM' : 'AM';\n      hours = hours % 12 || 12;\n      const currentTimeStr = \\`\\${hours}:\\${minutes} \\${ampm}\\`;\n      const mm = Math.floor(dataAgeSeconds / 60);\n      const ss = (dataAgeSeconds % 60).toString().padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`\\${dateString} \\${currentTimeStr} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    // ----- Populate Filters -----\n    function populateFilters() {\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();\n      const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();\n      locations.forEach(loc => {\n        const option = document.createElement('option');\n        option.value = loc;\n        option.textContent = loc;\n        locSelect.appendChild(option);\n      });\n      providers.forEach(prov => {\n        const option = document.createElement('option');\n        option.value = prov;\n        option.textContent = prov;\n        provSelect.appendChild(option);\n      });\n    }\n    populateFilters();\n    // Load filters from local storage (if any) so settings persist on reload\n    loadFiltersFromLocalStorage();\n\n    // ----- Filter Logic -----\n    function filterData() {\n      const searchTerm = document.getElementById('search-input').value.toLowerCase();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);\n      const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);\n\n      return originalData.filter(row => {\n        const combinedText = (row.LOCATION_NAME + \" \" + row.MRN + \" \" +\n                              row.CAREGIVER_NAME + \" \" + row.ROOM_ASSIGNED + \" \" +\n                              (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" +\n                              (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" +\n                              (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")\n                             ).toLowerCase();\n        const searchMatches = combinedText.includes(searchTerm);\n        const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;\n        const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;\n        return searchMatches && locationMatches && providerMatches;\n      });\n    }\n    function updateCards() {\n      const filteredData = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${filteredData.length}\\`;\n      const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n      const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a, b) => a + b, 0) / lobbyTimes.length) : 0;\n      const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n      const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a, b) => a + b, 0) / ackCheckoutTimes.length) : 0;\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobby} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotal} min\\`;\n    }\n    function applyFilters() {\n      const filteredData = filterData();\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      rows.forEach(row => {\n        const rowLocation = row.getAttribute('data-location') || \"\";\n        const rowProvider = row.getAttribute('data-provider') || \"\";\n        const rowPatient = row.querySelectorAll('.sortable-cell')[0]?.getAttribute('data-sort-value') || \"\";\n        const matched = filteredData.find(d =>\n          d.LOCATION_NAME === rowLocation &&\n          d.LNFI.toLowerCase() === rowPatient &&\n          d.CAREGIVER_NAME === rowProvider\n        );\n        row.style.display = matched ? '' : 'none';\n      });\n      updateCards();\n    }\n\n    // ----- Wire Up Filters with Saving to Local Storage -----\n    document.getElementById('search-input').addEventListener('input', () => {\n      saveFiltersToLocalStorage();\n      applyFilters();\n    });\n    document.getElementById('location-filter').addEventListener('change', () => {\n      saveFiltersToLocalStorage();\n      applyFilters();\n    });\n    document.getElementById('provider-filter').addEventListener('change', () => {\n      saveFiltersToLocalStorage();\n      applyFilters();\n    });\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      saveFiltersToLocalStorage();\n      applyFilters();\n    });\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      Array.from(locSelect.options).forEach(option => option.selected = false);\n      Array.from(provSelect.options).forEach(option => option.selected = false);\n      localStorage.removeItem('searchInput');\n      localStorage.removeItem('locationFilter');\n      localStorage.removeItem('providerFilter');\n      applyFilters();\n    });\n\n    // ----- Sorting Logic (unchanged) -----\n    const sortDirections = {};\n    const numericCols = [1, 6];\n    function compareValues(a, b, isNumeric, ascending) {\n      if (isNumeric) {\n        return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n      } else {\n        return ascending ? a.localeCompare(b) : b.localeCompare(a);\n      }\n    }\n    function sortTableByColumn(colIndex) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      sortDirections[colIndex] = !sortDirections[colIndex];\n      const ascending = sortDirections[colIndex];\n      rows.sort((rowA, rowB) => {\n        const cellA = rowA.querySelectorAll('.sortable-cell')[colIndex];\n        const cellB = rowB.querySelectorAll('.sortable-cell')[colIndex];\n        const valA = cellA?.getAttribute('data-sort-value') || '';\n        const valB = cellB?.getAttribute('data-sort-value') || '';\n        const isNumeric = numericCols.includes(colIndex);\n        return compareValues(valA, valB, isNumeric, ascending);\n      });\n      rows.forEach(row => tbody.appendChild(row));\n    }\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th => {\n      th.addEventListener('click', () => {\n        const colIndex = parseInt(th.getAttribute('data-col-index'), 10);\n        sortTableByColumn(colIndex);\n      });\n    });\n    // ----- Toggle Legend/Filters Section -----\n    document.getElementById('toggle-legend').addEventListener('click', () => {\n      const legendContainer = document.getElementById('legend-container');\n      if (legendContainer.style.display === \"none\") {\n        legendContainer.style.display = \"block\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        legendContainer.style.display = \"none\";\n        document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in `json.html`\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2320,
        100
      ],
      "id": "73a344bd-2c55-4036-bd9c-317bed541cf7",
      "name": "Main Version with LNFI",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n *  — LNFI (patient name) column removed —\n ********************************************/\nlet data = items[0].json;\n\n/* ----------  data wrangling helpers  ---------- */\nif (!Array.isArray(data)) {\n  data = Array.isArray(data.data) ? data.data : [data];\n}\n\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    // Extract numeric part from strings like \"314 min\"\n    const m = val.match(/(\\d+(\\.\\d+)?)/);\n    return m ? parseFloat(m[0]) : 0;\n  }\n  return 0;\n}\n\n/* ----------  resort into blocks (Ack ➜ Started ➜ Checked‑out)  ---------- */\nfunction getStatus(r) {\n  const ack = (r['ACK_TIME(PT HERE)'] ?? '').toString().trim();\n  const start = (\n    r['START_TIME(READY TO COME BACK)'] ??\n    r['START_TIME(READY_TO_COME_BACK)'] ??\n    ''\n  ).toString().trim();\n  const out = (r['CHECK_OUT(PATIET HAS LEFT THE BUILDING)'] ?? '').toString().trim();\n\n  // 0 => Acknowledged, 1 => Started, 2 => Checked Out, 3 => anything else\n  if (out) return 2;\n  if (start) return 1;\n  if (ack) return 0;\n  return 3;\n}\n\nconst finalData = [...data].sort((a, b) => {\n  const sA = getStatus(a);\n  const sB = getStatus(b);\n  if (sA !== sB) return sA - sB;\n\n  // Within the same group, sort descending by TIME_IN_OFFICE\n  return parseTimeInOffice(b.TIME_IN_OFFICE) - parseTimeInOffice(a.TIME_IN_OFFICE);\n});\n\n/* ----------  metric-card values  ---------- */\nconst totalPatients = finalData.length;\n\nconst cycleTimes = finalData\n  .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter((n) => typeof n === 'number');\n\nconst lobbyTimes = finalData\n  .map((r) => r.ACK_TO_START_TIME)\n  .filter((n) => typeof n === 'number');\n\nconst avgTotalCycle = cycleTimes.length\n  ? cycleTimes.reduce((s, n) => s + n, 0) / cycleTimes.length\n  : 0;\n\nconst avgLobby = lobbyTimes.length\n  ? lobbyTimes.reduce((s, n) => s + n, 0) / lobbyTimes.length\n  : 0;\n\n/* ----------  build <tbody> (patient name removed)  ---------- */\nconst rowsHtml = finalData\n  .map((row) => {\n    const location = row.LOCATION_NAME || '';\n    const mrn = row.MRN || '';\n    const provider = row.CAREGIVER_NAME || '';\n    const room = row.ROOM_ASSIGNED || '';\n    const ackStr = (row['ACK_TIME(PT HERE)'] ?? '').toString().trim();\n    const startStr = (\n      row['START_TIME(READY TO COME BACK)'] ??\n      row['START_TIME(READY_TO_COME_BACK)'] ??\n      ''\n    ).toString().trim();\n    const outStr = (row['CHECK_OUT(PATIET HAS LEFT THE BUILDING)'] ?? '').toString().trim();\n    const waitMin = typeof row.ACK_TO_START_TIME === 'number' ? row.ACK_TO_START_TIME : 0;\n    const waitTime = `${waitMin} min`;\n    const tio =\n      typeof row.TIME_IN_OFFICE === 'number'\n        ? row.TIME_IN_OFFICE.toString()\n        : (row.TIME_IN_OFFICE ?? '').toString().trim();\n\n    let rowClass = '';\n    if (outStr) {\n      rowClass = 'bg-orange-50'; // Checked Out\n    } else if (startStr) {\n      rowClass = 'bg-green-50'; // Started\n    } else if (ackStr) {\n      rowClass = 'bg-blue-50'; // Acknowledged\n    }\n\n    return `\n      <tr data-location=\"${location}\"\n          data-provider=\"${provider}\"\n          data-mrn=\"${mrn}\"\n          class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${mrn}\">\n          ${mrn}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${provider.toLowerCase()}\">\n          ${provider}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${room.toLowerCase()}\">\n          ${room}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${ackStr.toLowerCase()}\">\n          ${ackStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${startStr.toLowerCase()}\">\n          ${startStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${waitMin}\">\n          ${waitTime}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${tio.toLowerCase()}\">\n          ${tio}\n        </td>\n      </tr>`;\n  })\n  .join('');\n\n/* ----------  HTML document layout  ---------- */\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            button: '8px'\n          }\n        }\n      }\n    };\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- LEFT COLUMN -->\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n          ${Math.round(avgLobby)} min\n        </p>\n        <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n          ${Math.round(avgTotalCycle)} min\n        </p>\n        <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n      </div>\n      <!-- legend / filters / search toggle -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                id=\"search-input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- RIGHT COLUMN -->\n    <div id=\"right-column\">\n      <!-- fixed header -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n\n      <!-- scrollable body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- ----------  client-side logic  ---------- -->\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n\n    /* ----- auto refresh via ?refreshrate=N ----- */\n    const rr = new URLSearchParams(location.search).get('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n\n    /* ----- local-storage helpers ----- */\n    function saveFilters() {\n      localStorage.setItem('searchInput', document.getElementById('search-input').value);\n      localStorage.setItem(\n        'locationFilter',\n        JSON.stringify(\n          Array.from(document.getElementById('location-filter').selectedOptions).map((o) => o.value)\n        )\n      );\n      localStorage.setItem(\n        'providerFilter',\n        JSON.stringify(\n          Array.from(document.getElementById('provider-filter').selectedOptions).map((o) => o.value)\n        )\n      );\n    }\n\n    function loadFilters() {\n      document.getElementById('search-input').value =\n        localStorage.getItem('searchInput') || '';\n\n      const locSel = JSON.parse(localStorage.getItem('locationFilter') || '[]');\n      const proSel = JSON.parse(localStorage.getItem('providerFilter') || '[]');\n\n      [...document.getElementById('location-filter').options].forEach((o) => {\n        o.selected = locSel.includes(o.value);\n      });\n      [...document.getElementById('provider-filter').options].forEach((o) => {\n        o.selected = proSel.includes(o.value);\n      });\n    }\n\n    /* ----- “last refresh” clock ----- */\n    let age = 0;\n    function tick() {\n      age++;\n      const now = new Date();\n      const ts = now.toLocaleString('en-US', {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit',\n      });\n      const mm = Math.floor(age / 60);\n      const ss = String(age % 60).padStart(2, '0');\n      document.getElementById('last-refresh').textContent = \\`\\${ts} | Last Refresh \\${mm}:\\${ss}\\`;\n    }\n    tick();\n    setInterval(tick, 1000);\n\n    /* ----- populate filter dropdowns ----- */\n    (() => {\n      const locSel = document.getElementById('location-filter');\n      const proSel = document.getElementById('provider-filter');\n\n      [...new Set(originalData.map((r) => r.LOCATION_NAME).filter(Boolean))]\n        .sort()\n        .forEach((v) => {\n          const o = document.createElement('option');\n          o.value = o.textContent = v;\n          locSel.append(o);\n        });\n\n      [...new Set(originalData.map((r) => r.CAREGIVER_NAME).filter(Boolean))]\n        .sort()\n        .forEach((v) => {\n          const o = document.createElement('option');\n          o.value = o.textContent = v;\n          proSel.append(o);\n        });\n\n      loadFilters();\n      applyFilters();\n    })();\n\n    /* ----- filter helpers ----- */\n    function filterData() {\n      const q = document.getElementById('search-input').value.toLowerCase();\n      const locSel = [...document.getElementById('location-filter').selectedOptions].map((o) => o.value);\n      const proSel = [...document.getElementById('provider-filter').selectedOptions].map((o) => o.value);\n\n      return originalData.filter((r) => {\n        const hay = (\n          (r.LOCATION_NAME || '') +\n          ' ' +\n          (r.MRN || '') +\n          ' ' +\n          (r.CAREGIVER_NAME || '') +\n          ' ' +\n          (r.ROOM_ASSIGNED || '') +\n          ' ' +\n          (r['ACK_TIME(PT HERE)'] || '') +\n          ' ' +\n          (r.TIME_IN_OFFICE || '') +\n          ' ' +\n          (\n            r['START_TIME(READY TO COME BACK)'] ||\n            r['START_TIME(READY_TO_COME_BACK)'] ||\n            ''\n          )\n        ).toLowerCase();\n\n        const searchOK = hay.includes(q);\n        const locOK = !locSel.length || locSel.includes(r.LOCATION_NAME);\n        const proOK = !proSel.length || proSel.includes(r.CAREGIVER_NAME);\n\n        return searchOK && locOK && proOK;\n      });\n    }\n\n    function updateCards() {\n      const rows = filterData();\n      document.getElementById('total-patients').textContent = \\`Patients Today: \\${rows.length}\\`;\n\n      const lobby = rows\n        .map((r) => r.ACK_TO_START_TIME)\n        .filter((n) => typeof n === 'number');\n      const cycle = rows\n        .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n        .filter((n) => typeof n === 'number');\n\n      const avgLobbyTime = lobby.length\n        ? Math.round(lobby.reduce((s, n) => s + n, 0) / lobby.length)\n        : 0;\n\n      const avgTotalCycleTime = cycle.length\n        ? Math.round(cycle.reduce((s, n) => s + n, 0) / cycle.length)\n        : 0;\n\n      document.getElementById('avg-lobby-time').textContent = \\`\\${avgLobbyTime} min\\`;\n      document.getElementById('avg-total-cycle-time').textContent = \\`\\${avgTotalCycleTime} min\\`;\n    }\n\n    function applyFilters() {\n      const visible = filterData();\n      const tbody = document.getElementById('patient-table-body');\n\n      [...tbody.querySelectorAll('tr')].forEach((tr) => {\n        const mrn = tr.dataset.mrn;\n        const loc = tr.dataset.location;\n        const prov = tr.dataset.provider;\n\n        const hit = visible.find(\n          (r) =>\n            String(r.MRN) === mrn &&\n            r.LOCATION_NAME === loc &&\n            r.CAREGIVER_NAME === prov\n        );\n        tr.style.display = hit ? '' : 'none';\n      });\n\n      updateCards();\n    }\n\n    /* ----- event wiring (filters + search) ----- */\n    ['search-input', 'location-filter', 'provider-filter'].forEach((id) => {\n      document\n        .getElementById(id)\n        .addEventListener(id === 'search-input' ? 'input' : 'change', () => {\n          saveFilters();\n          applyFilters();\n        });\n    });\n\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      saveFilters();\n      applyFilters();\n    });\n\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      const loc = document.getElementById('location-filter');\n      const prov = document.getElementById('provider-filter');\n      [...loc.options].forEach((o) => (o.selected = false));\n      [...prov.options].forEach((o) => (o.selected = false));\n      localStorage.removeItem('searchInput');\n      localStorage.removeItem('locationFilter');\n      localStorage.removeItem('providerFilter');\n      applyFilters();\n    });\n\n    /* ----- sortable columns ----- */\n    const sortDir = {};\n    const numeric = [0, 5];\n\n    function cmp(a, b, num, asc) {\n      return num ? (asc ? a - b : b - a) : asc ? a.localeCompare(b) : b.localeCompare(a);\n    }\n\n    function sortBy(col) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = [...tbody.querySelectorAll('tr')];\n      sortDir[col] = !sortDir[col];\n      const asc = sortDir[col];\n\n      rows\n        .sort((rA, rB) => {\n          const vA = rA.querySelectorAll('.sortable-cell')[col].dataset.sortValue || '';\n          const vB = rB.querySelectorAll('.sortable-cell')[col].dataset.sortValue || '';\n          return cmp(\n            numeric.includes(col) ? parseFloat(vA) : vA,\n            numeric.includes(col) ? parseFloat(vB) : vB,\n            numeric.includes(col),\n            asc\n          );\n        })\n        .forEach((r) => tbody.appendChild(r));\n    }\n\n    document.querySelectorAll('.header-table thead th.sortable').forEach((th) => {\n      th.addEventListener('click', () => sortBy(+th.dataset.colIndex));\n    });\n\n    /* ----- legend toggle ----- */\n    document.getElementById('toggle-legend').addEventListener('click', (e) => {\n      const c = document.getElementById('legend-container');\n      const open = c.style.display === 'block';\n      c.style.display = open ? 'none' : 'block';\n      e.currentTarget.innerHTML = open\n        ? '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>'\n        : '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    });\n  </script>\n</body>\n</html>`;\n\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2300,
        -300
      ],
      "id": "cf94f76b-a1d6-45a7-b2fc-3e3cd1145a90",
      "name": "Code20",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n *  — LNFI (patient name) column removed —\n ********************************************/\nlet data = items[0].json;\n\n/* ----------  data wrangling helpers  ---------- */\nif (!Array.isArray(data)) {\n  data = Array.isArray(data.data) ? data.data : [data];\n}\n\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    // Extract numeric part from strings like \"314 min\"\n    const m = val.match(/(\\d+(\\.\\d+)?)/);\n    return m ? parseFloat(m[0]) : 0;\n  }\n  return 0;\n}\n\n/* ----------  resort into blocks (Ack ➜ Started ➜ Checked‑out)  ---------- */\nfunction getStatus(r) {\n  const ack = (r['ACK_TIME(PT HERE)'] ?? '').trim();\n  const start = (\n    r['START_TIME(READY TO COME BACK)'] ??\n    r['START_TIME(READY_TO_COME_BACK)'] ??\n    ''\n  ).trim();\n  const out = (r['CHECK_OUT(PATIET HAS LEFT THE BUILDING)'] ?? '').trim();\n\n  // 0 => Acknowledged, 1 => Started, 2 => Checked Out, 3 => anything else\n  if (out) return 2;\n  if (start) return 1;\n  if (ack) return 0;\n  return 3;\n}\n\nconst finalData = [...data].sort((a, b) => {\n  const sA = getStatus(a);\n  const sB = getStatus(b);\n  if (sA !== sB) return sA - sB;\n\n  // Within the same group, sort descending by TIME_IN_OFFICE\n  return parseTimeInOffice(b.TIME_IN_OFFICE) - parseTimeInOffice(a.TIME_IN_OFFICE);\n});\n\n/* ----------  metric-card values  ---------- */\nconst totalPatients = finalData.length;\n\nconst cycleTimes = finalData\n  .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter((n) => typeof n === 'number');\n\nconst lobbyTimes = finalData\n  .map((r) => r.ACK_TO_START_TIME)\n  .filter((n) => typeof n === 'number');\n\nconst avgTotalCycle = cycleTimes.length\n  ? cycleTimes.reduce((s, n) => s + n, 0) / cycleTimes.length\n  : 0;\n\nconst avgLobby = lobbyTimes.length\n  ? lobbyTimes.reduce((s, n) => s + n, 0) / lobbyTimes.length\n  : 0;\n\n/* ----------  build <tbody> (patient name removed)  ---------- */\nconst rowsHtml = finalData\n  .map((row) => {\n    const location = row.LOCATION_NAME || '';\n    const mrn = row.MRN || '';\n    const provider = row.CAREGIVER_NAME || '';\n    const room = row.ROOM_ASSIGNED || '';\n    const ackStr = (row['ACK_TIME(PT HERE)'] ?? '').trim();\n    const startStr = (\n      row['START_TIME(READY TO COME BACK)'] ??\n      row['START_TIME(READY_TO_COME_BACK)'] ??\n      ''\n    ).trim();\n    const outStr = (row['CHECK_OUT(PATIET HAS LEFT THE BUILDING)'] ?? '').trim();\n    const waitMin = row.ACK_TO_START_TIME || 0;\n    const waitTime = `${waitMin} min`;\n    const tio =\n      typeof row.TIME_IN_OFFICE === 'number'\n        ? row.TIME_IN_OFFICE.toString()\n        : (row.TIME_IN_OFFICE ?? '').trim();\n\n    let rowClass = '';\n    if (outStr) {\n      rowClass = 'bg-orange-50'; // Checked Out\n    } else if (startStr) {\n      rowClass = 'bg-green-50'; // Started\n    } else if (ackStr) {\n      rowClass = 'bg-blue-50'; // Acknowledged\n    }\n\n    return `\n      <tr data-location=\"${location}\"\n          data-provider=\"${provider}\"\n          data-mrn=\"${mrn}\"\n          class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${mrn}\">\n          ${mrn}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${provider.toLowerCase()}\">\n          ${provider}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${room.toLowerCase()}\">\n          ${room}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${ackStr.toLowerCase()}\">\n          ${ackStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${startStr.toLowerCase()}\">\n          ${startStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${waitMin}\">\n          ${waitTime}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\"\n            data-sort-value=\"${tio.toLowerCase()}\">\n          ${tio}\n        </td>\n      </tr>`;\n  })\n  .join('');\n\n/* ----------  HTML document layout  ---------- */\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            button: '8px'\n          }\n        }\n      }\n    };\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- LEFT COLUMN -->\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n          ${Math.round(avgLobby)} min\n        </p>\n        <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n          ${Math.round(avgTotalCycle)} min\n        </p>\n        <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n      </div>\n      <!-- legend / filters / search toggle -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                id=\"search-input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- RIGHT COLUMN -->\n    <div id=\"right-column\">\n      <!-- fixed header -->\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n          <col style=\"width:14.2857%\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n\n      <!-- scrollable body -->\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n            <col style=\"width:14.2857%\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- ----------  client-side logic  ---------- -->\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n\n    /* ----- auto refresh via ?refreshrate=N ----- */\n    const rr = new URLSearchParams(location.search).get('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n\n    /* ----- local-storage helpers ----- */\n    function saveFilters() {\n      localStorage.setItem('searchInput', document.getElementById('search-input').value);\n      localStorage.setItem(\n        'locationFilter',\n        JSON.stringify(\n          Array.from(document.getElementById('location-filter').selectedOptions).map((o) => o.value)\n        )\n      );\n      localStorage.setItem(\n        'providerFilter',\n        JSON.stringify(\n          Array.from(document.getElementById('provider-filter').selectedOptions).map((o) => o.value)\n        )\n      );\n    }\n\n    function loadFilters() {\n      document.getElementById('search-input').value =\n        localStorage.getItem('searchInput') || '';\n\n      const locSel = JSON.parse(localStorage.getItem('locationFilter') || '[]');\n      const proSel = JSON.parse(localStorage.getItem('providerFilter') || '[]');\n\n      [...document.getElementById('location-filter').options].forEach((o) => {\n        o.selected = locSel.includes(o.value);\n      });\n      [...document.getElementById('provider-filter').options].forEach((o) => {\n        o.selected = proSel.includes(o.value);\n      });\n    }\n\n    /* ----- “last refresh” clock ----- */\n    let age = 0;\n    function tick() {\n      age++;\n      const now = new Date();\n      const ts = now.toLocaleString('en-US', {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit',\n      });\n      const mm = Math.floor(age / 60);\n      const ss = String(age % 60).padStart(2, '0');\n      document.getElementById('last-refresh').textContent = `${ts} | Last Refresh ${mm}:${ss}`;\n    }\n    tick();\n    setInterval(tick, 1000);\n\n    /* ----- populate filter dropdowns ----- */\n    (() => {\n      const locSel = document.getElementById('location-filter');\n      const proSel = document.getElementById('provider-filter');\n\n      [...new Set(originalData.map((r) => r.LOCATION_NAME).filter(Boolean))]\n        .sort()\n        .forEach((v) => {\n          const o = document.createElement('option');\n          o.value = o.textContent = v;\n          locSel.append(o);\n        });\n\n      [...new Set(originalData.map((r) => r.CAREGIVER_NAME).filter(Boolean))]\n        .sort()\n        .forEach((v) => {\n          const o = document.createElement('option');\n          o.value = o.textContent = v;\n          proSel.append(o);\n        });\n\n      loadFilters();\n      applyFilters();\n    })();\n\n    /* ----- filter helpers ----- */\n    function filterData() {\n      const q = document.getElementById('search-input').value.toLowerCase();\n      const locSel = [...document.getElementById('location-filter').selectedOptions].map((o) => o.value);\n      const proSel = [...document.getElementById('provider-filter').selectedOptions].map((o) => o.value);\n\n      return originalData.filter((r) => {\n        const hay = (\n          (r.LOCATION_NAME || '') +\n          ' ' +\n          (r.MRN || '') +\n          ' ' +\n          (r.CAREGIVER_NAME || '') +\n          ' ' +\n          (r.ROOM_ASSIGNED || '') +\n          ' ' +\n          (r['ACK_TIME(PT HERE)'] || '') +\n          ' ' +\n          (r.TIME_IN_OFFICE || '') +\n          ' ' +\n          (\n            r['START_TIME(READY TO COME BACK)'] ||\n            r['START_TIME(READY_TO_COME_BACK)'] ||\n            ''\n          )\n        ).toLowerCase();\n\n        const searchOK = hay.includes(q);\n        const locOK = !locSel.length || locSel.includes(r.LOCATION_NAME);\n        const proOK = !proSel.length || proSel.includes(r.CAREGIVER_NAME);\n\n        return searchOK && locOK && proOK;\n      });\n    }\n\n    function updateCards() {\n      const rows = filterData();\n      document.getElementById('total-patients').textContent = `Patients Today: ${rows.length}`;\n\n      const lobby = rows\n        .map((r) => r.ACK_TO_START_TIME)\n        .filter((n) => typeof n === 'number');\n      const cycle = rows\n        .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n        .filter((n) => typeof n === 'number');\n\n      const avgLobbyTime = lobby.length\n        ? Math.round(lobby.reduce((s, n) => s + n, 0) / lobby.length)\n        : 0;\n\n      const avgTotalCycleTime = cycle.length\n        ? Math.round(cycle.reduce((s, n) => s + n, 0) / cycle.length)\n        : 0;\n\n      document.getElementById('avg-lobby-time').textContent = `${avgLobbyTime} min`;\n      document.getElementById('avg-total-cycle-time').textContent = `${avgTotalCycleTime} min`;\n    }\n\n    function applyFilters() {\n      const visible = filterData();\n      const tbody = document.getElementById('patient-table-body');\n\n      [...tbody.querySelectorAll('tr')].forEach((tr) => {\n        const mrn = tr.dataset.mrn;\n        const loc = tr.dataset.location;\n        const prov = tr.dataset.provider;\n\n        // find match\n        const hit = visible.find(\n          (r) =>\n            String(r.MRN) === mrn &&\n            r.LOCATION_NAME === loc &&\n            r.CAREGIVER_NAME === prov\n        );\n        tr.style.display = hit ? '' : 'none';\n      });\n\n      updateCards();\n    }\n\n    /* ----- event wiring (filters + search) ----- */\n    ['search-input', 'location-filter', 'provider-filter'].forEach((id) => {\n      document\n        .getElementById(id)\n        .addEventListener(id === 'search-input' ? 'input' : 'change', () => {\n          saveFilters();\n          applyFilters();\n        });\n    });\n\n    document.getElementById('clear-search').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      saveFilters();\n      applyFilters();\n    });\n\n    document.getElementById('clear-filters').addEventListener('click', () => {\n      document.getElementById('search-input').value = '';\n      const loc = document.getElementById('location-filter');\n      const prov = document.getElementById('provider-filter');\n      [...loc.options].forEach((o) => (o.selected = false));\n      [...prov.options].forEach((o) => (o.selected = false));\n      localStorage.removeItem('searchInput');\n      localStorage.removeItem('locationFilter');\n      localStorage.removeItem('providerFilter');\n      applyFilters();\n    });\n\n    /* ----- sortable columns ----- */\n    const sortDir = {};\n    // MRN col = index 0 (numeric), Wait Time col = index 5 (numeric)\n    const numeric = [0, 5];\n\n    function cmp(a, b, num, asc) {\n      return num ? (asc ? a - b : b - a) : asc ? a.localeCompare(b) : b.localeCompare(a);\n    }\n\n    function sortBy(col) {\n      const tbody = document.getElementById('patient-table-body');\n      const rows = [...tbody.querySelectorAll('tr')];\n      sortDir[col] = !sortDir[col];\n      const asc = sortDir[col];\n\n      rows\n        .sort((rA, rB) => {\n          const vA = rA.querySelectorAll('.sortable-cell')[col].dataset.sortValue || '';\n          const vB = rB.querySelectorAll('.sortable-cell')[col].dataset.sortValue || '';\n          return cmp(\n            numeric.includes(col) ? parseFloat(vA) : vA,\n            numeric.includes(col) ? parseFloat(vB) : vB,\n            numeric.includes(col),\n            asc\n          );\n        })\n        .forEach((r) => tbody.appendChild(r));\n    }\n\n    document.querySelectorAll('.header-table thead th.sortable').forEach((th) => {\n      th.addEventListener('click', () => sortBy(+th.dataset.colIndex));\n    });\n\n    /* ----- legend toggle ----- */\n    document.getElementById('toggle-legend').addEventListener('click', (e) => {\n      const c = document.getElementById('legend-container');\n      const open = c.style.display === 'block';\n      c.style.display = open ? 'none' : 'block';\n      e.currentTarget.innerHTML = open\n        ? '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>'\n        : '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    });\n  </script>\n</body>\n</html>`;\n\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1820,
        1060
      ],
      "id": "ac30a678-6d2f-46e4-afce-0f10edf001b4",
      "name": "Code21",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// A small helper to parse the TIME_IN_OFFICE field as a number,\n// whether the field is stored as numeric or string like \"314 min\".\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    // Remove all non-numeric characters except period:\n    // e.g. \"314 min\" → \"314\", \"92\" → \"92\"\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  \n  // Sort by status first\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n\n  // Then, within each status group, sort descending by TIME_IN_OFFICE\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  \n  // We'll keep the original 'TIME_IN_OFFICE' field for display\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" \n    ? rawTimeInOffice.toString() \n    : (rawTimeInOffice || \"\").trim();\n\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = `${waitMinutes} min`;\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\";  // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\";   // Acknowledged\n  }\n\n  return `\n    <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n        ${mrn}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n        ${provider}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n        ${room}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n        ${checkInStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n        ${readyStr}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n        ${waitTime}\n      </td>\n      <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n        ${timeInOffice}\n      </td>\n    </tr>\n  `;\n}).join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout:\n//    - No entire page scroll (overflow hidden on html/body)\n//    - Left column (1/4) scrollable\n//    - Right column pinned header, scrollable table body\n//    - All table cells centered\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            'none': '0px',\n            'sm': '4px',\n            DEFAULT: '8px',\n            'md': '12px',\n            'lg': '16px',\n            'xl': '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            'full': '9999px',\n            'button': '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                type=\"text\"\n                id=\"search-input\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"Search...\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id=\"right-column\">\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.2857%;\">\n          <col style=\"width:14.2857%;\">\n          <col style=\"width:14.2857%;\">\n          <col style=\"width:14.2857%;\">\n          <col style=\"width:14.2857%;\">\n          <col style=\"width:14.2857%;\">\n          <col style=\"width:14.2857%;\">\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.2857%;\">\n            <col style=\"width:14.2857%;\">\n            <col style=\"width:14.2857%;\">\n            <col style=\"width:14.2857%;\">\n            <col style=\"width:14.2857%;\">\n            <col style=\"width:14.2857%;\">\n            <col style=\"width:14.2857%;\">\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n\n    function getQueryParam(param) {\n      const urlParams = new URLSearchParams(window.location.search);\n      return urlParams.get(param);\n    }\n    const refreshRateParam = getQueryParam('refreshrate');\n    if (refreshRateParam && !isNaN(refreshRateParam)) {\n      const refreshRateMinutes = parseFloat(refreshRateParam);\n      setTimeout(() => location.reload(), refreshRateMinutes * 60000);\n    }\n\n    function saveFiltersToLocalStorage() {\n      const search = document.getElementById('search-input').value;\n      const locs = Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value);\n      const provs = Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value);\n      localStorage.setItem('searchInput', search);\n      localStorage.setItem('locationFilter', JSON.stringify(locs));\n      localStorage.setItem('providerFilter', JSON.stringify(provs));\n    }\n\n    function loadFiltersFromLocalStorage() {\n      const search = localStorage.getItem('searchInput') || '';\n      const locFilter = localStorage.getItem('locationFilter');\n      const provFilter = localStorage.getItem('providerFilter');\n      document.getElementById('search-input').value = search;\n      if (locFilter) {\n        JSON.parse(locFilter).forEach(val => {\n          [...document.getElementById('location-filter').options]\n            .find(o => o.value === val).selected = true;\n        });\n      }\n      if (provFilter) {\n        JSON.parse(provFilter).forEach(val => {\n          [...document.getElementById('provider-filter').options]\n            .find(o => o.value === val).selected = true;\n        });\n      }\n      applyFilters();\n    }\n\n    let secondsSinceRefresh = 0;\n    function updateLastRefresh() {\n      secondsSinceRefresh++;\n      const now = new Date();\n      const date = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });\n      let hrs = now.getHours(), mins = now.getMinutes().toString().padStart(2,'0');\n      const ampm = hrs>=12?'PM':'AM';\n      hrs = hrs%12||12;\n      const timeStr = `${hrs}:${mins} ${ampm}`;\n      const mm = Math.floor(secondsSinceRefresh/60), ss = (secondsSinceRefresh%60).toString().padStart(2,'0');\n      document.getElementById('last-refresh').textContent = `${date} ${timeStr} | Last Refresh ${mm}:${ss}`;\n    }\n    updateLastRefresh();\n    setInterval(updateLastRefresh, 1000);\n\n    function populateFilters() {\n      const locs = Array.from(new Set(originalData.map(r=>r.LOCATION_NAME).filter(Boolean))).sort();\n      const provs = Array.from(new Set(originalData.map(r=>r.CAREGIVER_NAME).filter(Boolean))).sort();\n      const locSelect = document.getElementById('location-filter');\n      const provSelect = document.getElementById('provider-filter');\n      locs.forEach(l=>{ const o=new Option(l,l); locSelect.add(o); });\n      provs.forEach(p=>{ const o=new Option(p,p); provSelect.add(o); });\n    }\n    populateFilters();\n    loadFiltersFromLocalStorage();\n\n    function filterData() {\n      const term = document.getElementById('search-input').value.toLowerCase();\n      const locs = [...document.getElementById('location-filter').selectedOptions].map(o=>o.value);\n      const provs = [...document.getElementById('provider-filter').selectedOptions].map(o=>o.value);\n      return originalData.filter(r=>{\n        const txt = `${r.LOCATION_NAME} ${r.MRN} ${r.CAREGIVER_NAME} ${r.ROOM_ASSIGNED} ${r[\"ACK_TIME(PT HERE)\"]||\"\"} ${r[\"TIME_IN_OFFICE\"]||\"\"} ${(r[\"START_TIME(READY TO COME BACK)\"]||r[\"START_TIME(READY_TO_COME_BACK)\"]||\"\")}`.toLowerCase();\n        return txt.includes(term) && (locs.length?locs.includes(r.LOCATION_NAME):true) && (provs.length?provs.includes(r.CAREGIVER_NAME):true);\n      });\n    }\n\n    function updateCards() {\n      const fd = filterData();\n      document.getElementById('total-patients').textContent = `Patients Today: ${fd.length}`;\n      const lts = fd.map(r=>r.ACK_TO_START_TIME).filter(v=>typeof v==='number');\n      const avgL = lts.length?Math.round(lts.reduce((a,b)=>a+b,0)/lts.length):0;\n      const acts = fd.map(r=>r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v=>typeof v==='number');\n      const avgT = acts.length?Math.round(acts.reduce((a,b)=>a+b,0)/acts.length):0;\n      document.getElementById('avg-lobby-time').textContent = `${avgL} min`;\n      document.getElementById('avg-total-cycle-time').textContent = `${avgT} min`;\n    }\n\n    function applyFilters() {\n      const fd = filterData();\n      const rows = [...document.querySelectorAll('#patient-table-body tr')];\n      rows.forEach(row=>{\n        const loc=row.getAttribute('data-location'), prov=row.getAttribute('data-provider');\n        row.style.display = fd.some(d=>d.LOCATION_NAME===loc && d.CAREGIVER_NAME===prov)?'':'none';\n      });\n      updateCards();\n    }\n\n    ['search-input','location-filter','provider-filter'].forEach(id=>{\n      document.getElementById(id).addEventListener('input',()=>{\n        saveFiltersToLocalStorage();\n        applyFilters();\n      });\n      document.getElementById(id).addEventListener('change',()=>{\n        saveFiltersToLocalStorage();\n        applyFilters();\n      });\n    });\n\n    document.getElementById('clear-search').addEventListener('click',()=>{\n      document.getElementById('search-input').value='';\n      saveFiltersToLocalStorage();\n      applyFilters();\n    });\n    document.getElementById('clear-filters').addEventListener('click',()=>{\n      document.getElementById('search-input').value='';\n      [...document.getElementById('location-filter').options].forEach(o=>o.selected=false);\n      [...document.getElementById('provider-filter').options].forEach(o=>o.selected=false);\n      localStorage.removeItem('searchInput');\n      localStorage.removeItem('locationFilter');\n      localStorage.removeItem('providerFilter');\n      applyFilters();\n    });\n\n    const sortDirs = {};\n    const numCols = [0,5]; // MRN and Wait Time\n    function compare(a,b,isNum,asc){\n      if(isNum) return asc?(parseFloat(a)-parseFloat(b)):(parseFloat(b)-parseFloat(a));\n      return asc?a.localeCompare(b):b.localeCompare(a);\n    }\n    function sortBy(col){\n      const tb=document.getElementById('patient-table-body');\n      const rs=[...tb.querySelectorAll('tr')];\n      sortDirs[col]=!sortDirs[col];\n      rs.sort((rA,rB)=>{\n        const cA=rA.querySelectorAll('.sortable-cell')[col].getAttribute('data-sort-value');\n        const cB=rB.querySelectorAll('.sortable-cell')[col].getAttribute('data-sort-value');\n        return compare(cA,cB,numCols.includes(col),sortDirs[col]);\n      });\n      rs.forEach(r=>tb.appendChild(r));\n    }\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n      th.addEventListener('click',()=>{\n        sortBy(+th.getAttribute('data-col-index'));\n      });\n    });\n\n    document.getElementById('toggle-legend').addEventListener('click',()=>{\n      const lc=document.getElementById('legend-container');\n      if(lc.style.display==='none'){\n        lc.style.display='block';\n        document.getElementById('toggle-legend').innerHTML='<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        lc.style.display='none';\n        document.getElementById('toggle-legend').innerHTML='<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in `json.html`\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2340,
        380
      ],
      "id": "f2416b6f-44a1-4a57-85f9-c2a3ea4f05f4",
      "name": "Code22",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// A small helper to parse the TIME_IN_OFFICE field as a number,\n// whether the field is stored as numeric or string like \"314 min\".\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    // Remove all non-numeric characters except period:\n    // e.g. \"314 min\" → \"314\", \"92\" → \"92\"\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr =\n    (row[\"START_TIME(READY TO COME BACK)\"] ||\n     row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n     \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n\n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n\n  // Sort by status first\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n\n  // Then, within each status group, sort descending by TIME_IN_OFFICE\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime =\n    ackCheckoutTimes.reduce((sum, val) => sum + val, 0) /\n    ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime =\n    lobbyTimes.reduce((sum, val) => sum + val, 0) /\n    lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData\n  .map(row => {\n    const location = row.LOCATION_NAME || \"\";\n    const mrn = row.MRN || 0;\n    const provider = row.CAREGIVER_NAME || \"\";\n    const room = row.ROOM_ASSIGNED || \"\";\n    const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n    const readyStr =\n      (row[\"START_TIME(READY TO COME BACK)\"] ||\n       row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n       \"\").trim();\n    const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n\n    // We'll keep the original 'TIME_IN_OFFICE' field for display\n    const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n    const timeInOffice =\n      typeof rawTimeInOffice === \"number\"\n        ? rawTimeInOffice.toString()\n        : (rawTimeInOffice || \"\").trim();\n\n    const waitMinutes = row.ACK_TO_START_TIME || 0;\n    const waitTime = `${waitMinutes} min`;\n\n    // Determine row color\n    let rowClass = \"\";\n    if (checkoutStr) {\n      rowClass = \"bg-orange-50\"; // Checked Out\n    } else if (readyStr) {\n      rowClass = \"bg-green-50\";  // Started\n    } else if (checkInStr) {\n      rowClass = \"bg-blue-50\";   // Acknowledged\n    }\n\n    return `\n      <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n          ${mrn}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n          ${provider}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n          ${room}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n          ${checkInStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n          ${readyStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n          ${waitTime}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n          ${timeInOffice}\n        </td>\n      </tr>`;\n  })\n  .join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            none: '0px',\n            sm: '4px',\n            DEFAULT: '8px',\n            md: '12px',\n            lg: '16px',\n            xl: '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            full: '9999px',\n            button: '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* No entire page scrolling */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left Column -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <!-- Toggle Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search area -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                type=\"text\"\n                id=\"search-input\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"Search...\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Right Column -->\n    <div id=\"right-column\">\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider</th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <script>\n    const originalData = ${JSON.stringify(finalData)};\n    function getQueryParam(param) {\n      const urlParams = new URLSearchParams(window.location.search);\n      return urlParams.get(param);\n    }\n    const refreshRateParam = getQueryParam('refreshrate');\n    if (refreshRateParam && !isNaN(refreshRateParam)) {\n      setTimeout(() => location.reload(), parseFloat(refreshRateParam) * 60000);\n    }\n    function saveFiltersToLocalStorage() {\n      localStorage.setItem('searchInput', document.getElementById('search-input').value);\n      localStorage.setItem('locationFilter', JSON.stringify(Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value)));\n      localStorage.setItem('providerFilter', JSON.stringify(Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value)));\n    }\n    function loadFiltersFromLocalStorage() {\n      document.getElementById('search-input').value = localStorage.getItem('searchInput') || '';\n      try {\n        JSON.parse(localStorage.getItem('locationFilter') || '[]').forEach(v => {\n          [...document.getElementById('location-filter').options].find(o => o.value===v).selected=true;\n        });\n      } catch {}\n      try {\n        JSON.parse(localStorage.getItem('providerFilter') || '[]').forEach(v => {\n          [...document.getElementById('provider-filter').options].find(o => o.value===v).selected=true;\n        });\n      } catch {}\n      applyFilters();\n    }\n    let dataAgeSeconds=0;\n    function updateLastRefresh(){\n      dataAgeSeconds++;\n      const now=new Date();\n      const dateString=now.toLocaleDateString('en-US',{month:'long',day:'numeric',year:'numeric'});\n      let h=now.getHours(),m=now.getMinutes().toString().padStart(2,'0');\n      const ampm=h>=12?'PM':'AM';\n      h=h%12||12;\n      document.getElementById('last-refresh').textContent=`${dateString} ${h}:${m} ${ampm} | Last Refresh ${Math.floor(dataAgeSeconds/60)}:${(dataAgeSeconds%60).toString().padStart(2,'0')}`;\n    }\n    setInterval(updateLastRefresh,1000);\n    function populateFilters(){\n      const locations=[...new Set(originalData.map(r=>r.LOCATION_NAME).filter(Boolean))].sort();\n      locations.forEach(loc=>{\n        const o=document.createElement('option');\n        o.value=o.textContent=loc;\n        document.getElementById('location-filter').append(o);\n      });\n      const providers=[...new Set(originalData.map(r=>r.CAREGIVER_NAME).filter(Boolean))].sort();\n      providers.forEach(prov=>{\n        const o=document.createElement('option');\n        o.value=o.textContent=prov;\n        document.getElementById('provider-filter').append(o);\n      });\n    }\n    populateFilters();\n    loadFiltersFromLocalStorage();\n    function filterData(){\n      const s=document.getElementById('search-input').value.toLowerCase();\n      const locs=Array.from(document.getElementById('location-filter').selectedOptions).map(o=>o.value);\n      const provs=Array.from(document.getElementById('provider-filter').selectedOptions).map(o=>o.value);\n      return originalData.filter(r=>{\n        const text=(r.LOCATION_NAME+\" \"+r.MRN+\" \"+r.CAREGIVER_NAME+\" \"+r.ROOM_ASSIGNED+\" \"+(r[\"ACK_TIME(PT HERE)\"]||\"\")+\" \"+(r[\"TIME_IN_OFFICE\"]||\"\")+\" \"+(r[\"START_TIME(READY TO COME BACK)\"]||r[\"START_TIME(READY_TO_COME_BACK)\"]||\"\")).toLowerCase();\n        return text.includes(s)&&(locs.length?locs.includes(r.LOCATION_NAME):true)&&(provs.length?provs.includes(r.CAREGIVER_NAME):true);\n      });\n    }\n    function updateCards(){\n      const d=filterData();\n      document.getElementById('total-patients').textContent=`Patients Today: ${d.length}`;\n      const lt=d.map(r=>r.ACK_TO_START_TIME).filter(v=>typeof v==='number');\n      const avgLobby=lt.length?Math.round(lt.reduce((a,b)=>a+b,0)/lt.length):0;\n      const ct=d.map(r=>r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v=>typeof v==='number');\n      const avgTotal=ct.length?Math.round(ct.reduce((a,b)=>a+b,0)/ct.length):0;\n      document.getElementById('avg-lobby-time').textContent=`${avgLobby} min`;\n      document.getElementById('avg-total-cycle-time').textContent=`${avgTotal} min`;\n    }\n    function applyFilters(){\n      const d=filterData();\n      document.querySelectorAll('#patient-table-body tr').forEach(tr=>{\n        const loc=tr.getAttribute('data-location');\n        const prov=tr.getAttribute('data-provider');\n        tr.style.display=d.some(r=>r.LOCATION_NAME===loc&&r.CAREGIVER_NAME===prov)?'':'none';\n      });\n      updateCards();\n    }\n    ['input','change'].forEach(evt=>{\n      document.getElementById('search-input').addEventListener('input',()=>{saveFiltersToLocalStorage();applyFilters();});\n      document.getElementById('location-filter').addEventListener('change',()=>{saveFiltersToLocalStorage();applyFilters();});\n      document.getElementById('provider-filter').addEventListener('change',()=>{saveFiltersToLocalStorage();applyFilters();});\n    });\n    document.getElementById('clear-search').addEventListener('click',()=>{\n      document.getElementById('search-input').value='';saveFiltersToLocalStorage();applyFilters();\n    });\n    document.getElementById('clear-filters').addEventListener('click',()=>{\n      document.getElementById('search-input').value='';\n      [...document.getElementById('location-filter').options].forEach(o=>o.selected=false);\n      [...document.getElementById('provider-filter').options].forEach(o=>o.selected=false);\n      localStorage.removeItem('searchInput');\n      localStorage.removeItem('locationFilter');\n      localStorage.removeItem('providerFilter');\n      applyFilters();\n    });\n    const sortDirs={};const numCols=[0,5];\n    function compareValues(a,b,isNum,asc){\n      return isNum?asc?(parseFloat(a)-parseFloat(b)):(parseFloat(b)-parseFloat(a)):asc?a.localeCompare(b):b.localeCompare(a);\n    }\n    function sortTableByColumn(idx){\n      const tbody=document.getElementById('patient-table-body');\n      const rows=Array.from(tbody.querySelectorAll('tr'));\n      sortDirs[idx]=!sortDirs[idx];\n      const asc=sortDirs[idx];\n      rows.sort((a,b)=>{\n        const aVal=a.querySelectorAll('.sortable-cell')[idx]?.getAttribute('data-sort-value')||'';\n        const bVal=b.querySelectorAll('.sortable-cell')[idx]?.getAttribute('data-sort-value')||'';\n        return compareValues(aVal,bVal,numCols.includes(idx),asc);\n      });\n      rows.forEach(r=>tbody.appendChild(r));\n    }\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n      th.addEventListener('click',()=>sortTableByColumn(parseInt(th.getAttribute('data-col-index'),10)));\n    });\n    document.getElementById('toggle-legend').addEventListener('click',()=>{\n      const c=document.getElementById('legend-container');\n      if(c.style.display==='none'){c.style.display='block';document.getElementById('toggle-legend').innerHTML='<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';}\n      else{c.style.display='none';document.getElementById('toggle-legend').innerHTML='<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';}\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2300,
        -480
      ],
      "id": "185542c4-1aa1-4f94-ac86-e872c2f8edce",
      "name": "Code23",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/******************************************** _n8n Code Node: Patient Leaderboard_ *******************************************/\nlet data = items[0].json;\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n// Helper to parse TIME_IN_OFFICE as a number\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n// Get status order: 0=Acknowledged, 1=Started, 2=Checked Out, 3=Others\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\nlet finalData = data.slice();\nfinalData.sort(function(a, b) {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  if (statusA !== statusB) return statusA - statusB;\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n// Aggregate Metrics\nconst totalPatients = finalData.length;\nconst ackCheckoutTimes = finalData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\nconst lobbyTimes = finalData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n// Provider cards data for top 5 providers having acknowledged/started patients\nfunction countPatientsByProvider(dataArray) {\n  var counts = {};\n  dataArray.forEach(function(row) {\n    var provider = row.CAREGIVER_NAME || \"\";\n    if (!provider) return;\n    var status = getStatus(row);\n    if (status === 0 || status === 1) {\n      if (!(provider in counts)) {\n        counts[provider] = 0;\n      }\n      counts[provider]++;\n    }\n  });\n  return counts;\n}\nvar providerCountsAll = countPatientsByProvider(finalData);\nvar providerCardsData = Object.keys(providerCountsAll).map(p => ({provider: p, count: providerCountsAll[p]})).sort((a,b)=>b.count - a.count).slice(0,5);\nfunction buildProviderCardsHtml(cardsData) {\n  var html = '<div id=\"provider-cards\" class=\"flex flex-wrap gap-4 mb-4\">';\n  cardsData.forEach(function(item) {\n    html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n  });\n  html += '</div>';\n  return html;\n}\nvar providerCardsHtml = buildProviderCardsHtml(providerCardsData);\n// Build table rows HTML with string concatenation to avoid n8n template literal issues\nvar rowsHtml = finalData.map(function(row) {\n  var location = row.LOCATION_NAME || \"\";\n  var mrn = row.MRN || 0;\n  var provider = row.CAREGIVER_NAME || \"\";\n  var room = row.ROOM_ASSIGNED || \"\";\n  var checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  var readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  var checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  var rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  var timeInOffice = (typeof rawTimeInOffice === \"number\") ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  var waitMinutes = row.ACK_TO_START_TIME || 0;\n  var waitTime = waitMinutes + ' min';\n  var rowClass = \"\";\n  if (checkoutStr) rowClass = \"bg-orange-50\";\n  else if (readyStr) rowClass = \"bg-green-50\";\n  else if (checkInStr) rowClass = \"bg-blue-50\";\n  return '<tr data-location=\"'+location+'\" data-provider=\"'+provider+'\" class=\"hover:bg-gray-50 '+rowClass+'\">'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+mrn+'\">'+mrn+'</td>'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+provider.toLowerCase()+'\">'+provider+'</td>'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+room.toLowerCase()+'\">'+room+'</td>'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+checkInStr.toLowerCase()+'\">'+checkInStr+'</td>'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+readyStr.toLowerCase()+'\">'+readyStr+'</td>'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+waitMinutes+'\">'+waitTime+'</td>'\n    +'<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"'+timeInOffice.toLowerCase()+'\">'+timeInOffice+'</td>'\n    +'</tr>';\n}).join('');\n// Final HTML layout string with string concatenation (no nested templates)\nvar htmlOutput = '<!DOCTYPE html>'\n  + '<html lang=\"en\" class=\"h-full overflow-hidden\">'\n  + '<head>'\n  + '<meta charset=\"UTF-8\" />'\n  + '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>'\n  + '<title>Patient Leaderboard</title>'\n  + '<script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>'\n  + '<script>'\n  + 'tailwind.config = {theme: {extend: {colors: {primary: \"#3b82f6\", secondary: \"#10b981\"}, borderRadius: {none: \"0px\", sm: \"4px\", DEFAULT: \"8px\", md: \"12px\", lg: \"16px\", xl: \"20px\", \"2xl\": \"24px\", \"3xl\": \"32px\", full: \"9999px\", button: \"8px\"}}}};'\n  + '</script>'\n  + '<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>'\n  + '<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>'\n  + '<link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>'\n  + '<link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>'\n  + '<style>'\n  + 'html, body {margin:0; padding:0; height:100%; overflow:hidden;}'\n  + 'body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}'\n  + '#layout-container {display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing:border-box;}'\n  + '#left-column {width:25%; height:100%; display:flex; flex-direction:column; gap:1.5rem; overflow-y:auto;}'\n  + '#right-column {width:75%; display:flex; flex-direction:column; overflow:hidden;}'\n  + '.header-table, .body-table {table-layout:fixed; width:100%; border-collapse:collapse; text-align:center;}'\n  + '.header-table thead th {background-color:#f3f4f6; font-size:1rem; font-weight:800; text-transform:none; color:#374151; padding:0.75rem 1rem; user-select:none; cursor:pointer;}'\n  + '.header-table thead th.sortable:hover {background-color:#e5e7eb;}'\n  + '#table-body-container {flex:1; overflow-y:auto;}'\n  + '.metric-card {transition: all 0.3s ease; border: 1px solid #e5e7eb; box-shadow: 0 2px 4px rgba(0,0,0,0.05); background: linear-gradient(to bottom right, #ffffff, #f9fafb);}'\n  + '.metric-card:hover {transform: translateY(-3px); box-shadow: 0 6px 10px rgba(0,0,0,0.1);}'\n  + '.sortable-cell:hover {cursor: pointer; background-color: #f3f4f6;}'\n  + '.clear-search-btn {cursor: pointer; position: absolute; right: 0.75rem; top: 50%; transform: translateY(-50%); color: #9ca3af; font-size: 0.9rem;}'\n  + '.clear-search-btn:hover {color: #6b7280;}'\n  + '</style>'\n  + '</head>'\n  + '<body>'\n  + '<div id=\"layout-container\">'\n  + '<div id=\"left-column\">'\n  + '<div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">'\n  + '<h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>'\n  + '<p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ' + totalPatients + '</p>'\n  + '</div>'\n  + '<div class=\"metric-card rounded-lg p-6\">'\n  + '<div class=\"flex items-center justify-between mb-4\">'\n  + '<h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>'\n  + '<div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">'\n  + '<i class=\"ri-time-line text-yellow-600\"></i>'\n  + '</div></div>'\n  + '<div class=\"flex items-end justify-between\">'\n  + '<div><p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">' + Math.round(averageLobbyTime) + ' min</p>'\n  + '<p class=\"text-sm text-gray-500\">Acknowledged to Started</p></div></div></div>'\n  + '<div class=\"metric-card rounded-lg p-6\">'\n  + '<div class=\"flex items-center justify-between mb-4\">'\n  + '<h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>'\n  + '<div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">'\n  + '<i class=\"ri-timer-line text-green-600\"></i>'\n  + '</div></div>'\n  + '<div class=\"flex items-end justify-between\">'\n  + '<div><p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">' + Math.round(averageTotalCycleTime) + ' min</p>'\n  + '<p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p></div></div></div>'\n  + '<div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">'\n  + '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span><i class=\"ri-arrow-down-s-line\"></i></div>'\n  + '<div id=\"legend-container\" style=\"display:none;\">'\n  + '<div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">'\n  + '<div class=\"flex flex-col space-y-2 mb-3\">'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>'\n  + '</div>'\n  + '<div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>'\n  + '<div class=\"flex flex-col space-y-2 mb-3\">'\n  + '<select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>'\n  + '<select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>'\n  + '</div>'\n  + '<div class=\"flex flex-col space-y-2\">'\n  + '<div class=\"relative\">'\n  + '<div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\"><i class=\"ri-search-line text-gray-400\"></i></div>'\n  + '<input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\"/>'\n  + '<span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>'\n  + '</div>'\n  + '<button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>'\n  + '</div>'\n  + '</div></div></div>'\n  + '<div id=\"right-column\">'\n  + providerCardsHtml\n  + '<table class=\"header-table\">'\n  + '<colgroup>'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '</colgroup>'\n  + '<thead>'\n  + '<tr>'\n  + '<th data-col-index=\"0\" class=\"sortable\">MRN</th>'\n  + '<th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>'\n  + '<th data-col-index=\"2\" class=\"sortable\">Room</th>'\n  + '<th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>'\n  + '<th data-col-index=\"4\" class=\"sortable\">Started</th>'\n  + '<th data-col-index=\"5\" class=\"sortable\">Wait Time</th>'\n  + '<th data-col-index=\"6\" class=\"sortable\">Time In Office</th>'\n  + '</tr>'\n  + '</thead>'\n  + '</table>'\n  + '<div id=\"table-body-container\">'\n  + '<table class=\"body-table\">'\n  + '<colgroup>'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '</colgroup>'\n  + '<tbody id=\"patient-table-body\">'\n  + rowsHtml\n  + '</tbody>'\n  + '</table>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '<script>'\n  + 'const originalData=' + JSON.stringify(finalData) + ';'\n  + 'function getQueryParam(param){const params=new URLSearchParams(window.location.search);return params.get(param);}'\n  + '(function(){const rr=getQueryParam(\"refreshrate\");if(rr&&!isNaN(rr)){setTimeout(()=>location.reload(),parseFloat(rr)*60000);}})();'\n  + 'function saveFilters(){localStorage.setItem(\"search\",document.getElementById(\"search-input\").value);localStorage.setItem(\"locs\",JSON.stringify(Array.from(document.getElementById(\"location-filter\").selectedOptions).map(o=>o.value)));localStorage.setItem(\"provs\",JSON.stringify(Array.from(document.getElementById(\"provider-filter\").selectedOptions).map(o=>o.value)));}'\n  + 'function loadFilters(){var s=localStorage.getItem(\"search\")||\"\";document.getElementById(\"search-input\").value=s;try{var locs=JSON.parse(localStorage.getItem(\"locs\")||\"[]\");var locSelect=document.getElementById(\"location-filter\");Array.from(locSelect.options).forEach(o=>o.selected=locs.includes(o.value));}catch{}try{var provs=JSON.parse(localStorage.getItem(\"provs\")||\"[]\");var provSelect=document.getElementById(\"provider-filter\");Array.from(provSelect.options).forEach(o=>o.selected=provs.includes(o.value));}catch{}applyFilters();}'\n  + 'var age=0;function tick(){age++;const now=new Date();const ds=now.toLocaleDateString(\"en-US\",{month:\"long\",day:\"numeric\",year:\"numeric\"});let h=now.getHours(),m=now.getMinutes().toString().padStart(2,\"0\");const ap=h>=12?\"PM\":\"AM\";h=h%12||12;const mm=Math.floor(age/60),ss=(age%60).toString().padStart(2,\"0\");document.getElementById(\"last-refresh\").textContent=ds+\" \"+h+\":\"+m+\" \"+ap+\" | Last Refresh \"+mm+\":\"+ss;}setInterval(tick,1000);'\n  + 'function initFilters(){const locs=[...new Set(originalData.map(r=>r.LOCATION_NAME).filter(Boolean))].sort();const provs=[...new Set(originalData.map(r=>r.CAREGIVER_NAME).filter(Boolean))].sort();const locSel=document.getElementById(\"location-filter\");const provSel=document.getElementById(\"provider-filter\");locs.forEach(v=>{const o=document.createElement(\"option\");o.value=o.textContent=v;locSel.appendChild(o);});provs.forEach(v=>{const o=document.createElement(\"option\");o.value=o.textContent=v;provSel.appendChild(o);});}'\n  + 'initFilters();loadFilters();'\n  + 'function filterData(){const s=document.getElementById(\"search-input\").value.toLowerCase().trim();const locs=Array.from(document.getElementById(\"location-filter\").selectedOptions).map(o=>o.value);const provs=Array.from(document.getElementById(\"provider-filter\").selectedOptions).map(o=>o.value);return originalData.filter(r=>{const txt=(r.LOCATION_NAME+\" \"+r.MRN+\" \"+r.CAREGIVER_NAME+\" \"+r.ROOM_ASSIGNED+\" \"+(r[\"ACK_TIME(PT HERE)\"]||\"\")+\" \"+(r[\"TIME_IN_OFFICE\"]||\"\")+\" \"+(r[\"START_TIME(READY TO COME BACK)\"]||r[\"START_TIME(READY_TO_COME_BACK)\"]||\"\")).toLowerCase();return txt.includes(s)&&(locs.length?locs.includes(r.LOCATION_NAME):true)&&(provs.length?provs.includes(r.CAREGIVER_NAME):true);});}'\n  + 'function updateProviderCards(){var fd=filterData();var cts={};fd.forEach(function(r){var p=r.CAREGIVER_NAME||\"\";if(!p)return;var co=(r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"]||\"\").trim();var ci=(r[\"ACK_TIME(PT HERE)\"]||\"\").trim();var rs=(r[\"START_TIME(READY TO COME BACK)\"]||r[\"START_TIME(READY_TO_COME_BACK)\"]||\"\").trim();if(co)return;if(ci||rs){if(!cts[p])cts[p]=0;cts[p]++;}});var ctr=document.getElementById(\"provider-cards\");if(!ctr)return;var sorted=Object.keys(cts).map(function(p){return {provider:p,count:cts[p]};}).sort(function(a,b){return b.count-a.count;}).slice(0,5);var html=\"\";sorted.forEach(function(itm){html+=\"<div class=\\\\\\\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\\\\\\\"><h4 class=\\\\\\\"text-lg font-semibold text-gray-700\\\\\\\">\"+itm.provider+\"</h4><p class=\\\\\\\"text-2xl font-bold text-gray-800 mt-1\\\\\\\">\"+itm.count+\"</p><p class=\\\\\\\"text-sm text-gray-500\\\\\\\">Patients Acknowledged/Started</p></div>\";});ctr.innerHTML=html;}'\n  + 'function updateCards(){var fd=filterData();document.getElementById(\"total-patients\").textContent=\"Patients Today: \"+fd.length;var lt=fd.map(r=>r.ACK_TO_START_TIME).filter(v=>typeof v===\"number\");var avgl=lt.length?Math.round(lt.reduce((a,b)=>a+b,0)/lt.length):0;var ct=fd.map(r=>r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v=>typeof v===\"number\");var avgc=ct.length?Math.round(ct.reduce((a,b)=>a+b,0)/ct.length):0;document.getElementById(\"avg-lobby-time\").textContent=avgl+\" min\";document.getElementById(\"avg-total-cycle-time\").textContent=avgc+\" min\";updateProviderCards();}'\n  + 'function applyFilters(){var fd=filterData();document.querySelectorAll(\"#patient-table-body tr\").forEach(row=>{var l=row.getAttribute(\"data-location\")||\"\";var p=row.getAttribute(\"data-provider\")||\"\";row.style.display=fd.some(d=>d.LOCATION_NAME===l&&d.CAREGIVER_NAME===p)?\"\":\"none\";});updateCards();}'\n  + 'document.getElementById(\"search-input\").addEventListener(\"input\",()=>{saveFilters();applyFilters();});'\n  + 'document.getElementById(\"location-filter\").addEventListener(\"change\",()=>{saveFilters();applyFilters();});'\n  + 'document.getElementById(\"provider-filter\").addEventListener(\"change\",()=>{saveFilters();applyFilters();});'\n  + 'document.getElementById(\"clear-search\").addEventListener(\"click\",()=>{document.getElementById(\"search-input\").value=\"\";saveFilters();applyFilters();});'\n  + 'document.getElementById(\"clear-filters\").addEventListener(\"click\",()=>{document.getElementById(\"search-input\").value=\"\";Array.from(document.getElementById(\"location-filter\").options).forEach(o=>o.selected=false);Array.from(document.getElementById(\"provider-filter\").options).forEach(o=>o.selected=false);localStorage.removeItem(\"search\");localStorage.removeItem(\"locs\");localStorage.removeItem(\"provs\");applyFilters();});'\n  + 'const sortDirections = {}; const numericCols = [0,5];'\n  + 'function compareValues(a,b,isNum,asc){if(isNum)return asc?(parseFloat(a)-parseFloat(b)):(parseFloat(b)-parseFloat(a));else return asc?a.localeCompare(b):b.localeCompare(a);}'\n  + 'function sortTableByColumn(colIndex){const tbody=document.getElementById(\"patient-table-body\");const rows=Array.from(tbody.querySelectorAll(\"tr\"));sortDirections[colIndex] = !sortDirections[colIndex];const ascending=sortDirections[colIndex];rows.sort((a,b)=>{const cellA=a.querySelectorAll(\".sortable-cell\")[colIndex];const cellB=b.querySelectorAll(\".sortable-cell\")[colIndex];const valA=cellA?.getAttribute(\"data-sort-value\")||\"\";const valB=cellB?.getAttribute(\"data-sort-value\")||\"\";return compareValues(valA,valB,numericCols.includes(colIndex),ascending);});rows.forEach(r=>tbody.appendChild(r));}'\n  + 'document.querySelectorAll(\".header-table thead th.sortable\").forEach(th=>th.addEventListener(\"click\",()=>sortTableByColumn(parseInt(th.getAttribute(\"data-col-index\"),10))));'\n  + 'document.getElementById(\"toggle-legend\").addEventListener(\"click\",()=>{'\n  + 'const lc=document.getElementById(\"legend-container\");if(lc.style.display===\"none\"||!lc.style.display){lc.style.display=\"block\";'\n  + 'document.getElementById(\"toggle-legend\").innerHTML=\\'<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>\\';}'\n  + 'else{lc.style.display=\"none\";document.getElementById(\"toggle-legend\").innerHTML=\\'<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>\\';}'\n  + '});'\n  + '</script>'\n  + '</body></html>';\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        -900
      ],
      "id": "c9cf3a9b-b474-4072-96c2-bcd8ba45c33d",
      "name": "Code24"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2680,
        -1080
      ],
      "id": "54eb48e5-4081-4bf3-b0f4-f2c447dfff03",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        1280,
        -1260
      ],
      "id": "4f273bfd-cd81-4ed1-8ccd-493acf280fec",
      "name": "NocoDB5",
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1700,
        -1260
      ],
      "id": "ae9d414c-bc92-49a8-b8f0-637faf80440a",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "path": "0777f06b-3b22-4c94-b77e-fd9745033ab62",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1040,
        -1260
      ],
      "id": "f2cf410f-11bc-4d7f-bc71-43fefd3ec320",
      "name": "Webhook2",
      "webhookId": "0777f06b-3b22-4c94-b77e-fd9745033ab6"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n* n8n Code Node: Patient Leaderboard\n********************************************/\nlet data = items[0].json;\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n// Detect if data is empty or contains no meaningful records\nconst isDataEmpty =\n  !Array.isArray(data) ||\n  data.length === 0 ||\n  (data.length === 1 && Object.keys(data[0]).length === 0) ||\n  data.every(\n    (rec) =>\n      (Object.keys(rec).length === 1 && rec.TIME_IN_OFFICE === null) ||\n      Object.keys(rec).length === 0\n  );\n// Helper to parse TIME_IN_OFFICE as a number\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n// Status order: 0=Acknowledged, 1=Started, 2=Checked Out, 3=Others\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr =\n    (row[\"START_TIME(READY TO COME BACK)\"] ||\n      row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n      \"\"\n    ).trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\nlet totalPatientsToday;\nlet patientsInOffice;\nlet averageTotalCycleTime;\nlet averageLobbyTime;\nlet finalData;\nlet providerCardsData;\nlet providerCardsHtml;\nlet rowsHtml;\nif (isDataEmpty) {\n  // No data scenario\n  totalPatientsToday = 'N/A';\n  patientsInOffice = 'N/A';\n  averageTotalCycleTime = 'N/A';\n  averageLobbyTime = 'N/A';\n  finalData = [];\n  providerCardsData = [];\n  providerCardsHtml = ''; // Empty provider cards HTML\n  // Table rows: one row with colspan=7 showing \"N/A\"\n  rowsHtml = `<tr><td colspan=\"7\" class=\"text-center text-gray-500 py-4 text-lg font-semibold\">N/A</td></tr>`;\n} else {\n  // Normal data processing\n  finalData = data.slice();\n  finalData.sort((a, b) => {\n    const statusA = getStatus(a);\n    const statusB = getStatus(b);\n    if (statusA !== statusB) return statusA - statusB;\n    const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n    const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n    return bTIO - aTIO;\n  });\n  totalPatientsToday = finalData.length;\n  patientsInOffice = finalData.filter(\n    (row) => !((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim())\n  ).length;\n  const ackCheckoutTimes = finalData\n    .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n    .filter((v) => typeof v === 'number');\n  averageTotalCycleTime = 0;\n  if (ackCheckoutTimes.length > 0) {\n    averageTotalCycleTime =\n      ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n  }\n  const lobbyTimes = finalData\n    .map((r) => r.ACK_TO_START_TIME)\n    .filter((v) => typeof v === 'number');\n  averageLobbyTime = 0;\n  if (lobbyTimes.length > 0) {\n    averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n  }\n  function countPatientsByProvider(dataArray) {\n    const counts = {};\n    dataArray.forEach((row) => {\n      const provider = row.CAREGIVER_NAME || \"\";\n      if (!provider) return;\n      const status = getStatus(row);\n      if (status === 0 || status === 1) {\n        counts[provider] = (counts[provider] || 0) + 1;\n      }\n    });\n    return counts;\n  }\n  const providerCountsAll = countPatientsByProvider(finalData);\n  providerCardsData = Object.keys(providerCountsAll)\n    .map((p) => ({ provider: p, count: providerCountsAll[p] }))\n    .sort((a, b) => b.count - a.count)\n    .slice(0, 5);\n  function buildProviderCardsHtml(cardsData) {\n    if (cardsData.length === 0) return '';\n    let html = '<div class=\"flex flex-wrap gap-4 mb-4\">';\n    cardsData.forEach((item) => {\n      html += ''\n        + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n        + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n        + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n        + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n        + '</div>';\n    });\n    html += '</div>';\n    return html;\n  }\n  providerCardsHtml = buildProviderCardsHtml(providerCardsData);\n  rowsHtml = finalData\n    .map((row) => {\n      const location = row.LOCATION_NAME || \"\";\n      const mrn = row.MRN || 0;\n      const provider = row.CAREGIVER_NAME || \"\";\n      const room = row.ROOM_ASSIGNED || \"\";\n      const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n      const readyStr =\n        (row[\"START_TIME(READY TO COME BACK)\"] ||\n          row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n          \"\"\n        ).trim();\n      const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n      const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n      const timeInOffice =\n        typeof rawTimeInOffice === \"number\"\n          ? rawTimeInOffice.toString()\n          : (rawTimeInOffice || \"\").trim();\n      const waitMinutes = row.ACK_TO_START_TIME || 0;\n      const waitTime = waitMinutes + \" min\";\n\n      let rowClass = \"\";\n      if (checkoutStr) rowClass = \"bg-orange-50\";\n      else if (readyStr) rowClass = \"bg-green-50\";\n      else if (checkInStr) rowClass = \"bg-blue-50\";\n\n      // Determine if row should flash red if status is Acknowledged or Started AND > 80 min\n      const status = getStatus(row);\n      if ((status === 0 || status === 1) && parseTimeInOffice(row[\"TIME_IN_OFFICE\"]) > 80) {\n        // Add flashing red background class\n        rowClass += (rowClass ? \" \" : \"\") + \"flash-red\";\n      }\n\n      return `<tr data-location=\"${location}\" data-provider=\"${provider}\" data-checked-out=\"${\n        checkoutStr ? \"true\" : \"false\"\n      }\" class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">${mrn}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">${provider}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">${room}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">${checkInStr}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">${readyStr}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">${waitTime}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">${timeInOffice}</td>\n      </tr>`;\n    })\n    .join(\"\");\n}\n// ---------- HTML Template --------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n   tailwind.config = {\n    theme: {\n      extend: {\n        colors: { primary: '#3b82f6', secondary: '#10b981' },\n        borderRadius: {\n          none: '0px', sm: '4px', DEFAULT: '8px', md: '12px', lg: '16px',\n          xl: '20px', '2xl': '24px', '3xl': '32px', full: '9999px', button: '8px'\n        }\n      }\n    }\n   }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {margin:0; padding:0; height:100%; overflow:hidden;}\n    body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}\n    #layout-container {\n      display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing: border-box;\n    }\n    #left-column {\n      width:25%; height:100%; display:flex; flex-direction: column; gap:1.5rem; overflow-y:auto;\n    }\n    #right-column {\n      width:75%; display:flex; flex-direction: column; overflow:hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed; width:100%; border-collapse: collapse; text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6; font-size: 1rem; font-weight: 800; text-transform: none; color: #374151;\n      padding: 0.75rem 1rem; user-select:none; cursor:pointer;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n    }\n    #table-body-container {\n      flex: 1; overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #fff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor:pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor:pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #toggle-checked-out {\n      width: 100%; margin-top: 1rem; padding: 0.5rem;\n      border: 1px solid #d1d5db; border-radius: 8px;\n      background-color: #f3f4f6; cursor: pointer;\n      font-weight: 600; color: #374151;\n      transition: background-color 0.3s ease;\n    }\n    #toggle-checked-out:hover {\n      background-color: #e5e7eb;\n    }\n    /* Flashing red background for overdue patients */\n    @keyframes flashRed {\n      0%, 100% { background-color: #fee2e2; } /* light red */\n      50% { background-color: #f87171; } /* red-400 */\n    }\n    .flash-red {\n      animation: flashRed 1.5s infinite;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-xl text-gray-600 mt-4\">Total Patients Today: ${totalPatientsToday}</p>\n        <p id=\"patients-in-office\" class=\"text-2xl font-bold text-gray-800\">Patients in Office: ${patientsInOffice}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${\n              averageLobbyTime === 'N/A'\n                ? 'N/A'\n                : Math.round(averageLobbyTime) + ' min'\n            }</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${\n              averageTotalCycleTime === 'N/A'\n                ? 'N/A'\n                : Math.round(averageTotalCycleTime) + ' min'\n            }</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\" />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n            <button id=\"toggle-checked-out\">Show Checked Out Patients</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id=\"right-column\">\n      <!-- Always render provider-cards container so JS can safely update contents -->\n      <div id=\"provider-cards\" class=\"flex flex-wrap gap-4 mb-4\">\n        ${providerCardsHtml}\n      </div>\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n<script>\n  // Data for frontend filtering and display\n  const originalData = ${JSON.stringify(finalData)};\n  let showCheckedOut = false;\n  function updateCheckedOutToggleText() {\n    const btn = document.getElementById('toggle-checked-out');\n    btn.textContent = showCheckedOut ? 'Hide Checked Out Patients' : 'Show Checked Out Patients';\n  }\n  function getQueryParam(param) {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(param);\n  }\n  (function() {\n    const rr = getQueryParam('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n  })();\n  function initFilters() {\n    if(originalData.length === 0){\n      // No data, clear filters\n      document.getElementById('location-filter').innerHTML = '';\n      document.getElementById('provider-filter').innerHTML = '';\n      return;\n    }\n    const locSet = [...new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))].sort();\n    const provSet = [...new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))].sort();\n    const locSel = document.getElementById('location-filter');\n    const provSel = document.getElementById('provider-filter');\n    locSel.innerHTML = '';\n    provSel.innerHTML = '';\n    locSet.forEach(loc => {\n      const option = document.createElement('option');\n      option.value = option.textContent = loc;\n      locSel.appendChild(option);\n    });\n    provSet.forEach(prov => {\n      const option = document.createElement('option');\n      option.value = option.textContent = prov;\n      provSel.appendChild(option);\n    });\n  }\n  function saveFilters() {\n    localStorage.setItem('search', document.getElementById('search-input').value);\n    localStorage.setItem('locs', JSON.stringify(\n      Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('provs', JSON.stringify(\n      Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('showCheckedOut', JSON.stringify(showCheckedOut));\n  }\n  function loadFilters() {\n    const s = localStorage.getItem('search') || '';\n    document.getElementById('search-input').value = s;\n    try {\n      const locs = JSON.parse(localStorage.getItem('locs') || '[]');\n      for (const o of document.getElementById('location-filter').options) {\n        o.selected = locs.includes(o.value);\n      }\n    } catch {}\n    try {\n      const provs = JSON.parse(localStorage.getItem('provs') || '[]');\n      for (const o of document.getElementById('provider-filter').options) {\n        o.selected = provs.includes(o.value);\n      }\n    } catch {}\n    try {\n      const storedShow = JSON.parse(localStorage.getItem('showCheckedOut'));\n      if (typeof storedShow === 'boolean') {\n        showCheckedOut = storedShow;\n      }\n    } catch {}\n    updateCheckedOutToggleText();\n    applyFilters();\n  }\n  function filterData() {\n    if(originalData.length === 0) return [];\n    const s = document.getElementById('search-input').value.toLowerCase();\n    const locs = Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value);\n    const provs = Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value);\n    return originalData.filter(r => {\n      const txt = (\n        r.LOCATION_NAME + ' ' + r.MRN + ' ' + r.CAREGIVER_NAME + ' ' +\n        r.ROOM_ASSIGNED + ' ' + (r[\"ACK_TIME(PT HERE)\"] || '') + ' ' +\n        (r[\"TIME_IN_OFFICE\"] || '') + ' ' +\n        (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '')\n      ).toLowerCase();\n      const isCheckedOut = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim() !== '';\n      if (!showCheckedOut && isCheckedOut) return false;\n      if (!txt.includes(s)) return false;\n      if (locs.length && !locs.includes(r.LOCATION_NAME)) return false;\n      if (provs.length && !provs.includes(r.CAREGIVER_NAME)) return false;\n      return true;\n    });\n  }\n  function updateProviderCards() {\n    const fd = filterData();\n    if(fd.length === 0){\n      const container = document.getElementById('provider-cards');\n      if(container) container.innerHTML = '';\n      return;\n    }\n    const counts = {};\n    fd.forEach(r => {\n      const provider = r.CAREGIVER_NAME || '';\n      if (!provider) return;\n      const co = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim();\n      const ack = (r[\"ACK_TIME(PT HERE)\"] || '').trim();\n      const started = (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '').trim();\n      if (co) return;\n      if (ack || started) {\n        counts[provider] = (counts[provider] || 0) + 1;\n      }\n    });\n    const sorted = Object.keys(counts)\n      .map(p => ({provider: p, count: counts[p]}))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 5);\n    const container = document.getElementById('provider-cards');\n    if (!container) return;\n    let html = '';\n    sorted.forEach(item => {\n      html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n    });\n    container.innerHTML = html;\n  }\n  function updateCards() {\n    const totalPatientsElem = document.getElementById('total-patients');\n    const patientsInOfficeElem = document.getElementById('patients-in-office');\n    const avgLobbyElem = document.getElementById('avg-lobby-time');\n    const avgCycleElem = document.getElementById('avg-total-cycle-time');\n    if(originalData.length === 0){\n      patientsInOfficeElem.textContent = 'Patients in Office: N/A';\n      avgLobbyElem.textContent = 'N/A';\n      avgCycleElem.textContent = 'N/A';\n      updateProviderCards();\n      return;\n    }\n    const filteredPatients = filterData();\n    const inOfficeCount = filteredPatients.filter(r =>\n      !(r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim()\n    ).length;\n    patientsInOfficeElem.textContent = 'Patients in Office: ' + inOfficeCount;\n    const allPatients = originalData;\n    const lt = allPatients.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n    const avgL = lt.length ? Math.round(lt.reduce((a, b) => a + b, 0) / lt.length) : 0;\n    const ct = allPatients.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n    const avgC = ct.length ? Math.round(ct.reduce((a, b) => a + b, 0) / ct.length) : 0;\n    avgLobbyElem.textContent = avgL + ' min';\n    avgCycleElem.textContent = avgC + ' min';\n    updateProviderCards();\n  }\n  function applyFilters() {\n    if(originalData.length === 0){\n      // Nothing to filter\n      return;\n    }\n    const fd = filterData();\n    document.querySelectorAll('#patient-table-body tr').forEach(tr => {\n      const l = tr.getAttribute('data-location');\n      const p = tr.getAttribute('data-provider');\n      const checkedOut = tr.getAttribute('data-checked-out') === 'true';\n      const visible = fd.some(r => r.LOCATION_NAME === l && r.CAREGIVER_NAME === p) && (showCheckedOut || !checkedOut);\n      tr.style.display = visible ? '' : 'none';\n    });\n    updateCards();\n  }\n  document.getElementById('search-input').addEventListener('input', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('location-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('provider-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-search').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-filters').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    Array.from(document.getElementById('location-filter').options).forEach(o => o.selected = false);\n    Array.from(document.getElementById('provider-filter').options).forEach(o => o.selected = false);\n    localStorage.removeItem('search');\n    localStorage.removeItem('locs');\n    localStorage.removeItem('provs');\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('toggle-checked-out').addEventListener('click', () => {\n    showCheckedOut = !showCheckedOut;\n    updateCheckedOutToggleText();\n    saveFilters();\n    applyFilters();\n  });\n  const sortDirs = {};\n  const numCols = [0,5]; // MRN and Wait Time columns numeric\n  function compare(a,b,isNum,asc){\n    if (isNum) return asc ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n    return asc ? a.localeCompare(b) : b.localeCompare(a);\n  }\n  function sortBy(col){\n    if(originalData.length === 0) return; // Nothing to sort\n    const tbody = document.getElementById('patient-table-body');\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    sortDirs[col] = !sortDirs[col];\n    const asc = sortDirs[col];\n    rows.sort((r1,r2)=>{\n      const v1 = r1.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      const v2 = r2.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      return compare(v1, v2, numCols.includes(col), asc);\n    });\n    rows.forEach(r=>tbody.appendChild(r));\n  }\n  document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n    th.addEventListener('click', ()=> sortBy(parseInt(th.getAttribute('data-col-index'), 10)));\n  });\n  document.getElementById('toggle-legend').addEventListener('click', () => {\n    const lc = document.getElementById('legend-container');\n    if (!lc.style.display || lc.style.display === 'none') {\n      lc.style.display = 'block';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    } else {\n      lc.style.display = 'none';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n    }\n  });\n  initFilters();\n  loadFilters();\n</script>\n</body>\n</html>`;\n// Return the HTML in the item\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2360,
        -1280
      ],
      "id": "07680962-bdfc-4cc6-b691-fc1ea34867ae",
      "name": "Code25",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/******************************************** _n8n Code Node: Patient Leaderboard_ *******************************************/\nlet data = items[0].json; \n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// A small helper to parse the TIME_IN_OFFICE field as a number,\n// whether the field is stored as numeric or string like \"314 min\".\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    // Remove all non-numeric characters except period:\n    // e.g. \"314 min\" → \"314\", \"92\" → \"92\"\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n// Acknowledged (top) -> Started -> Checked Out (bottom),\n// each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\n\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  // Sort by status first\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n  // Then, within each status group, sort descending by TIME_IN_OFFICE\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData.map((row) => {\n  const location = row.LOCATION_NAME || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  // We'll keep the original 'TIME_IN_OFFICE' field for display\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = waitMinutes + ' min';\n\n  // Determine row color\n  let rowClass = \"\";\n  if (checkoutStr) {\n    rowClass = \"bg-orange-50\"; // Checked Out\n  } else if (readyStr) {\n    rowClass = \"bg-green-50\"; // Started\n  } else if (checkInStr) {\n    rowClass = \"bg-blue-50\"; // Acknowledged\n  }\n\n  return ''\n    + '<tr data-location=\"' + location + '\" data-provider=\"' + provider + '\" class=\"hover:bg-gray-50 ' + rowClass + '\">'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + mrn + '\">' + mrn + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + provider.toLowerCase() + '\">' + provider + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + room.toLowerCase() + '\">' + room + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + checkInStr.toLowerCase() + '\">' + checkInStr + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + readyStr.toLowerCase() + '\">' + readyStr + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + waitMinutes + '\">' + waitTime + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + timeInOffice.toLowerCase() + '\">' + timeInOffice + '</td>'\n    + '</tr>';\n}).join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout:\n// - No entire page scroll (overflow hidden on html/body)\n// - Left column (1/4) scrollable\n// - Right column pinned header, scrollable table body\n// - All table cells centered\n// -------------------------------------------------------\nconst htmlOutput = '<!DOCTYPE html>'\n  + '<html lang=\"en\" class=\"h-full overflow-hidden\">'\n  + '<head>'\n  + '<meta charset=\"UTF-8\" />'\n  + '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>'\n  + '<title>Patient Leaderboard</title>'\n  + '<script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>'\n  + '<script>'\n  + 'tailwind.config = {theme: {extend: {colors: {primary: \"#3b82f6\", secondary: \"#10b981\"}, borderRadius: {none: \"0px\", sm: \"4px\", DEFAULT: \"8px\", md: \"12px\", lg: \"16px\", xl: \"20px\", \"2xl\": \"24px\", \"3xl\": \"32px\", full: \"9999px\", button: \"8px\"}}}};'\n  + '</script>'\n  + '<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>'\n  + '<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>'\n  + '<link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>'\n  + '<link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>'\n  + '<style>'\n  // Styles omitted for brevity — insert your css here or keep as before\n  + 'html, body {margin:0; padding:0; height:100%; overflow:hidden;}'\n  + 'body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}'\n  + '#layout-container {display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing:border-box;}'\n  + '#left-column {width:25%; height:100%; display:flex; flex-direction:column; gap:1.5rem; overflow-y:auto;}'\n  + '#right-column {width:75%; display:flex; flex-direction:column; overflow:hidden;}'\n  + '.header-table, .body-table {table-layout:fixed; width:100%; border-collapse:collapse; text-align:center;}'\n  + '.header-table thead th {background-color:#f3f4f6; font-size:0.75rem; font-weight:700; text-transform:uppercase; color:#6b7280; padding:0.5rem 1rem;}'\n  + '.header-table thead th.sortable:hover {background-color:#e5e7eb; cursor:pointer;}'\n  + '#table-body-container {flex:1; overflow-y:auto;}'\n  + '.metric-card {transition: all 0.3s ease; border: 1px solid #e5e7eb; box-shadow: 0 2px 4px rgba(0,0,0,0.05); background: linear-gradient(to bottom right, #ffffff, #f9fafb);}'\n  + '.metric-card:hover {transform: translateY(-3px); box-shadow: 0 6px 10px rgba(0,0,0,0.1);}'\n  + '.sortable-cell:hover {cursor: pointer; background-color: #f3f4f6;}'\n  + '.clear-search-btn {cursor: pointer; position: absolute; right: 0.75rem; top: 50%; transform: translateY(-50%); color: #9ca3af; font-size: 0.9rem;}'\n  + '.clear-search-btn:hover {color: #6b7280;}'\n  + '</style>'\n  + '</head>'\n  + '<body>'\n  + '<div id=\"layout-container\">'\n  + '<div id=\"left-column\">'\n  + '<div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">'\n  + '<h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>'\n  + '<p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ' + totalPatients + '</p>'\n  + '</div>'\n  + '<div class=\"metric-card rounded-lg p-6\">'\n  + '<div class=\"flex items-center justify-between mb-4\">'\n  + '<h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>'\n  + '<div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">'\n  + '<i class=\"ri-time-line text-yellow-600\"></i>'\n  + '</div>'\n  + '</div>'\n  + '<div class=\"flex items-end justify-between\">'\n  + '<div>'\n  + '<p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">' + Math.round(averageLobbyTime) + ' min</p>'\n  + '<p class=\"text-sm text-gray-500\">Acknowledged to Started</p>'\n  + '</div>'\n  + '</div></div>'\n  + '<div class=\"metric-card rounded-lg p-6\">'\n  + '<div class=\"flex items-center justify-between mb-4\">'\n  + '<h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>'\n  + '<div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">'\n  + '<i class=\"ri-timer-line text-green-600\"></i>'\n  + '</div>'\n  + '</div>'\n  + '<div class=\"flex items-end justify-between\">'\n  + '<div>'\n  + '<p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">' + Math.round(averageTotalCycleTime) + ' min</p>'\n  + '<p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '<div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">'\n  + '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span><i class=\"ri-arrow-down-s-line\"></i>'\n  + '</div>'\n  + '<div id=\"legend-container\" style=\"display: none;\">'\n  + '<div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">'\n  + '<div class=\"flex flex-col space-y-2 mb-3\">'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>'\n  + '</div>'\n  + '<div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>'\n  + '<div class=\"flex flex-col space-y-2 mb-3\">'\n  + '<select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>'\n  + '<select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>'\n  + '</div>'\n  + '<div class=\"flex flex-col space-y-2\">'\n  + '<div class=\"relative\">'\n  + '<div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\"><i class=\"ri-search-line text-gray-400\"></i></div>'\n  + '<input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\"/>'\n  + '<span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>'\n  + '</div>'\n  + '<button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '<div id=\"right-column\">'\n  + '<table class=\"header-table\">'\n  + '<colgroup>'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '</colgroup>'\n  + '<thead>'\n  + '<tr>'\n  + '<th data-col-index=\"0\" class=\"sortable\">MRN</th>'\n  + '<th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>'\n  + '<th data-col-index=\"2\" class=\"sortable\">Room</th>'\n  + '<th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>'\n  + '<th data-col-index=\"4\" class=\"sortable\">Started</th>'\n  + '<th data-col-index=\"5\" class=\"sortable\">Wait Time</th>'\n  + '<th data-col-index=\"6\" class=\"sortable\">Time In Office</th>'\n  + '</tr>'\n  + '</thead>'\n  + '</table>'\n  + '<div id=\"table-body-container\">'\n  + '<table class=\"body-table\">'\n  + '<colgroup>'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '</colgroup>'\n  + '<tbody id=\"patient-table-body\">'\n  + rowsHtml\n  + '</tbody>'\n  + '</table>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '<script>'\n  + 'const originalData = ' + JSON.stringify(finalData) + ';'\n  + 'function getQueryParam(param) {'\n  + 'const urlParams = new URLSearchParams(window.location.search);'\n  + 'return urlParams.get(param);'\n  + '}'\n  + 'const refreshRateParam = getQueryParam(\"refreshrate\");'\n  + 'if (refreshRateParam && !isNaN(refreshRateParam)) {'\n  + 'const refreshRateMinutes = parseFloat(refreshRateParam);'\n  + 'setTimeout(() => { location.reload(); }, refreshRateMinutes * 60000);'\n  + '}'\n  + 'function saveFiltersToLocalStorage() {'\n  + 'const searchInput = document.getElementById(\"search-input\").value;'\n  + 'const locSelect = document.getElementById(\"location-filter\");'\n  + 'const provSelect = document.getElementById(\"provider-filter\");'\n  + 'const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);'\n  + 'const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);'\n  + 'localStorage.setItem(\"searchInput\", searchInput);'\n  + 'localStorage.setItem(\"locationFilter\", JSON.stringify(selectedLocations));'\n  + 'localStorage.setItem(\"providerFilter\", JSON.stringify(selectedProviders));'\n  + '}'\n  + 'function loadFiltersFromLocalStorage() {'\n  + 'const searchInput = localStorage.getItem(\"searchInput\") || \"\";'\n  + 'const locationFilter = localStorage.getItem(\"locationFilter\");'\n  + 'const providerFilter = localStorage.getItem(\"providerFilter\");'\n  + 'document.getElementById(\"search-input\").value = searchInput;'\n  + 'if (locationFilter) {try {const selectedLocations = JSON.parse(locationFilter);'\n  + 'const locSelect = document.getElementById(\"location-filter\");'\n  + 'Array.from(locSelect.options).forEach(opt => {opt.selected = selectedLocations.includes(opt.value);});} catch(e) {}}'\n  + 'if (providerFilter) {try {const selectedProviders = JSON.parse(providerFilter);'\n  + 'const provSelect = document.getElementById(\"provider-filter\");'\n  + 'Array.from(provSelect.options).forEach(opt => {opt.selected = selectedProviders.includes(opt.value);});} catch(e) {}}'\n  + 'applyFilters();'\n  + '}'\n  + 'let dataAgeSeconds = 0;'\n  + 'function updateLastRefresh() {'\n  + 'dataAgeSeconds++;'\n  + 'const now = new Date();'\n  + 'const dateString = now.toLocaleDateString(\"en-US\", { month: \"long\", day: \"numeric\", year: \"numeric\" });'\n  + 'let hours = now.getHours();'\n  + 'const minutes = now.getMinutes().toString().padStart(2,\"0\");'\n  + 'const ampm = hours>=12?\"PM\":\"AM\";'\n  + 'hours = hours % 12 || 12;'\n  + 'const currentTimeStr = hours + \":\" + minutes + \" \" + ampm;'\n  + 'const mm = Math.floor(dataAgeSeconds/60);'\n  + 'const ss = (dataAgeSeconds % 60).toString().padStart(2,\"0\");'\n  + 'document.getElementById(\"last-refresh\").textContent = dateString + \" \" + currentTimeStr + \" | Last Refresh \" + mm + \":\" + ss;'\n  + '}'\n  + 'updateLastRefresh();'\n  + 'setInterval(updateLastRefresh, 1000);'\n  + 'function populateFilters() {'\n  + 'const locSelect = document.getElementById(\"location-filter\");'\n  + 'const provSelect = document.getElementById(\"provider-filter\");'\n  + 'const locations = Array.from(new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))).sort();'\n  + 'const providers = Array.from(new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))).sort();'\n  + 'locations.forEach(loc => {'\n  + 'const option = document.createElement(\"option\");'\n  + 'option.value = loc;'\n  + 'option.textContent = loc;'\n  + 'locSelect.appendChild(option);'\n  + '});'\n  + 'providers.forEach(prov => {'\n  + 'const option = document.createElement(\"option\");'\n  + 'option.value = prov;'\n  + 'option.textContent = prov;'\n  + 'provSelect.appendChild(option);'\n  + '});'\n  + '}'\n  + 'populateFilters();'\n  + 'loadFiltersFromLocalStorage();'\n  + 'function filterData() {'\n  + 'const searchTerm = document.getElementById(\"search-input\").value.toLowerCase();'\n  + 'const locSelect = document.getElementById(\"location-filter\");'\n  + 'const provSelect = document.getElementById(\"provider-filter\");'\n  + 'const selectedLocations = Array.from(locSelect.selectedOptions).map(o=>o.value);'\n  + 'const selectedProviders = Array.from(provSelect.selectedOptions).map(o=>o.value);'\n  + 'return originalData.filter(row => {'\n  + 'const combinedText = (row.LOCATION_NAME + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" + row.ROOM_ASSIGNED + \" \" + (row[\"ACK_TIME(PT HERE)\"]||\"\") + \" \" + (row[\"TIME_IN_OFFICE\"]||\"\") + \" \" + (row[\"START_TIME(READY TO COME BACK)\"]||row[\"START_TIME(READY_TO_COME_BACK)\"]||\"\")).toLowerCase();'\n  + 'const searchMatches = combinedText.includes(searchTerm);'\n  + 'const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;'\n  + 'const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;'\n  + 'return searchMatches && locationMatches && providerMatches;'\n  + '});'\n  + '}'\n  + 'function updateCards() {'\n  + 'const filteredData = filterData();'\n  + 'document.getElementById(\"total-patients\").textContent = \"Patients Today: \" + filteredData.length;'\n  + 'const lobbyTimes = filteredData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === \"number\");'\n  + 'const avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce((a,b)=>a+b,0)/lobbyTimes.length) : 0;'\n  + 'const ackCheckoutTimes = filteredData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === \"number\");'\n  + 'const avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce((a,b)=>a+b,0)/ackCheckoutTimes.length) : 0;'\n  + 'document.getElementById(\"avg-lobby-time\").textContent = avgLobby + \" min\";'\n  + 'document.getElementById(\"avg-total-cycle-time\").textContent = avgTotal + \" min\";'\n  + '}'\n  + 'function applyFilters() {'\n  + 'const filteredData = filterData();'\n  + 'const tbody = document.getElementById(\"patient-table-body\");'\n  + 'const rows = Array.from(tbody.querySelectorAll(\"tr\"));'\n  + 'rows.forEach(row => {'\n  + 'const rowLocation = row.getAttribute(\"data-location\") || \"\";'\n  + 'const rowProvider = row.getAttribute(\"data-provider\") || \"\";'\n  + 'const matched = filteredData.find(d => d.LOCATION_NAME === rowLocation && d.CAREGIVER_NAME === rowProvider);'\n  + 'row.style.display = matched?\"\":\"none\";'\n  + '});'\n  + 'updateCards();'\n  + '}'\n  + 'document.getElementById(\"search-input\").addEventListener(\"input\", () => { saveFiltersToLocalStorage(); applyFilters(); });'\n  + 'document.getElementById(\"location-filter\").addEventListener(\"change\", () => { saveFiltersToLocalStorage(); applyFilters(); });'\n  + 'document.getElementById(\"provider-filter\").addEventListener(\"change\", () => { saveFiltersToLocalStorage(); applyFilters(); });'\n  + 'document.getElementById(\"clear-search\").addEventListener(\"click\", () => {'\n  + 'document.getElementById(\"search-input\").value = \"\";'\n  + 'saveFiltersToLocalStorage();'\n  + 'applyFilters();'\n  + '});'\n  + 'document.getElementById(\"clear-filters\").addEventListener(\"click\", () => {'\n  + 'document.getElementById(\"search-input\").value = \"\";'\n  + 'const locSelect = document.getElementById(\"location-filter\");'\n  + 'const provSelect = document.getElementById(\"provider-filter\");'\n  + 'Array.from(locSelect.options).forEach(option => option.selected = false);'\n  + 'Array.from(provSelect.options).forEach(option => option.selected = false);'\n  + 'localStorage.removeItem(\"searchInput\");'\n  + 'localStorage.removeItem(\"locationFilter\");'\n  + 'localStorage.removeItem(\"providerFilter\");'\n  + 'applyFilters();'\n  + '});'\n  + 'const sortDirections = {};'\n  + 'const numericCols = [0, 5];'\n  + 'function compareValues(a, b, isNumeric, ascending) {'\n  + 'if(isNumeric) { return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a)); }'\n  + 'else { return ascending ? a.localeCompare(b) : b.localeCompare(a); }'\n  + '}'\n  + 'function sortTableByColumn(colIndex) {'\n  + 'const tbody = document.getElementById(\"patient-table-body\");'\n  + 'const rows = Array.from(tbody.querySelectorAll(\"tr\"));'\n  + 'sortDirections[colIndex] = !sortDirections[colIndex];'\n  + 'const ascending = sortDirections[colIndex];'\n  + 'rows.sort((rowA,rowB) => {'\n  + 'const cellA = rowA.querySelectorAll(\".sortable-cell\")[colIndex];'\n  + 'const cellB = rowB.querySelectorAll(\".sortable-cell\")[colIndex];'\n  + 'const valA = cellA?.getAttribute(\"data-sort-value\") || \"\";'\n  + 'const valB = cellB?.getAttribute(\"data-sort-value\") || \"\";'\n  + 'const isNumeric = numericCols.includes(colIndex);'\n  + 'return compareValues(valA,valB,isNumeric,ascending);'\n  + '});'\n  + 'rows.forEach(row => tbody.appendChild(row));'\n  + '}'\n  + 'document.querySelectorAll(\".header-table thead th.sortable\").forEach(th => {'\n  + 'th.addEventListener(\"click\", () => {'\n  + 'const colIndex = parseInt(th.getAttribute(\"data-col-index\"),10);'\n  + 'sortTableByColumn(colIndex);'\n  + '});'\n  + '});'\n  + 'document.getElementById(\"toggle-legend\").addEventListener(\"click\", () => {'\n  + 'const legendContainer = document.getElementById(\"legend-container\");'\n  + 'if(legendContainer.style.display===\"none\"){'\n  + 'legendContainer.style.display=\"block\";'\n  + 'document.getElementById(\"toggle-legend\").innerHTML=\\'<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>\\';'\n  + '} else {'\n  + 'legendContainer.style.display=\"none\";'\n  + 'document.getElementById(\"toggle-legend\").innerHTML=\\'<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>\\';'\n  + '}'\n  + '});'\n  + '</script>'\n  + '</body>'\n  + '</html>';\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2720,
        -1380
      ],
      "id": "4f7cd547-d1a0-46c7-871e-2ecf1c807aee",
      "name": "Code26"
    },
    {
      "parameters": {
        "jsCode": "/******************************************** _n8n Code Node: Patient Leaderboard_ *******************************************/\nlet data = items[0].json;\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n// Helper to parse TIME_IN_OFFICE as a number\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n// Get status order: 0=Acknowledged,1=Started,2=Checked Out,3=Others\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\nlet finalData = data.slice();\nfinalData.sort(function(a, b) {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  if (statusA !== statusB) return statusA - statusB;\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n// Aggregate Metrics\nconst totalPatients = finalData.length;\nconst ackCheckoutTimes = finalData.map(function(r) { return r.ACTUAL_ACK_TO_CHECKOUT_TIME; }).filter(function(v) { return typeof v === 'number'; });\nvar averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce(function(sum, val) { return sum + val; }, 0) / ackCheckoutTimes.length;\n}\nconst lobbyTimes = finalData.map(function(r) { return r.ACK_TO_START_TIME; }).filter(function(v) { return typeof v === 'number'; });\nvar averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce(function(sum, val) { return sum + val; }, 0) / lobbyTimes.length;\n}\n// Provider cards data for top 5 providers having acknowledged/started patients\nfunction countPatientsByProvider(dataArray) {\n  var counts = {};\n  dataArray.forEach(function(row) {\n    var provider = row.CAREGIVER_NAME || \"\";\n    if (!provider) return;\n    var status = getStatus(row);\n    if (status === 0 || status === 1) {\n      if (!(provider in counts)) {\n        counts[provider] = 0;\n      }\n      counts[provider]++;\n    }\n  });\n  return counts;\n}\nvar providerCountsAll = countPatientsByProvider(finalData);\nvar providerCardsData = Object.keys(providerCountsAll).map(function(p) { return { provider: p, count: providerCountsAll[p] }; }).sort(function(a,b){return b.count-a.count;}).slice(0,5);\nfunction buildProviderCardsHtml(cardsData) {\n  var html = '<div id=\"provider-cards\" class=\"flex flex-wrap gap-4 mb-4\">';\n  cardsData.forEach(function(item) {\n    html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n  });\n  html += '</div>';\n  return html;\n}\nvar providerCardsHtml = buildProviderCardsHtml(providerCardsData);\n// Build table rows HTML\nvar rowsHtml = finalData.map(function(row) {\n  var location = row.LOCATION_NAME || \"\";\n  var mrn = row.MRN || 0;\n  var provider = row.CAREGIVER_NAME || \"\";\n  var room = row.ROOM_ASSIGNED || \"\";\n  var checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  var readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  var checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  var rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  var timeInOffice = (typeof rawTimeInOffice === \"number\") ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  var waitMinutes = row.ACK_TO_START_TIME || 0;\n  var waitTime = waitMinutes + ' min';\n  var rowClass = \"\";\n  if (checkoutStr) rowClass = \"bg-orange-50\";\n  else if (readyStr) rowClass = \"bg-green-50\";\n  else if (checkInStr) rowClass = \"bg-blue-50\";\n  return ''\n    + '<tr data-location=\"' + location + '\" data-provider=\"' + provider + '\" class=\"hover:bg-gray-50 ' + rowClass + '\">'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + mrn + '\">' + mrn + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + provider.toLowerCase() + '\">' + provider + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + room.toLowerCase() + '\">' + room + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + checkInStr.toLowerCase() + '\">' + checkInStr + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + readyStr.toLowerCase() + '\">' + readyStr + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + waitMinutes + '\">' + waitTime + '</td>'\n    + '<td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"' + timeInOffice.toLowerCase() + '\">' + timeInOffice + '</td>'\n    + '</tr>';\n}).join(\"\");\n// Final HTML layout\nvar htmlOutput = '<!DOCTYPE html>'\n  + '<html lang=\"en\" class=\"h-full overflow-hidden\">'\n  + '<head>'\n  + '<meta charset=\"UTF-8\" />'\n  + '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>'\n  + '<title>Patient Leaderboard</title>'\n  + '<script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>'\n  + '<script>'\n  + 'tailwind.config = {theme: {extend: {colors: {primary: \"#3b82f6\", secondary: \"#10b981\"}, borderRadius: {none: \"0px\", sm: \"4px\", DEFAULT: \"8px\", md: \"12px\", lg: \"16px\", xl: \"20px\", \"2xl\": \"24px\", \"3xl\": \"32px\", full: \"9999px\", button: \"8px\"}}}};'\n  + '</script>'\n  + '<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>'\n  + '<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>'\n  + '<link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>'\n  + '<link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>'\n  + '<style>'\n  + 'html, body {margin:0; padding:0; height:100%; overflow:hidden;}'\n  + 'body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}'\n  + '#layout-container {display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing:border-box;}'\n  + '#left-column {width:25%; height:100%; display:flex; flex-direction:column; gap:1.5rem; overflow-y:auto;}'\n  + '#right-column {width:75%; display:flex; flex-direction:column; overflow:hidden;}'\n  + '.header-table, .body-table {table-layout:fixed; width:100%; border-collapse:collapse; text-align:center;}'\n  + '.header-table thead th {background-color:#f3f4f6; font-size:1rem; font-weight:800; text-transform:none; color:#374151; padding:0.75rem 1rem; user-select:none; cursor:pointer;}'\n  + '.header-table thead th.sortable:hover {background-color:#e5e7eb;}'\n  + '#table-body-container {flex:1; overflow-y:auto;}'\n  + '.metric-card {transition: all 0.3s ease; border: 1px solid #e5e7eb; box-shadow: 0 2px 4px rgba(0,0,0,0.05); background: linear-gradient(to bottom right, #ffffff, #f9fafb);}'\n  + '.metric-card:hover {transform: translateY(-3px); box-shadow: 0 6px 10px rgba(0,0,0,0.1);}'\n  + '.sortable-cell:hover {cursor: pointer; background-color: #f3f4f6;}'\n  + '.clear-search-btn {cursor: pointer; position: absolute; right: 0.75rem; top: 50%; transform: translateY(-50%); color: #9ca3af; font-size: 0.9rem;}'\n  + '.clear-search-btn:hover {color: #6b7280;}'\n  + '.hidden {display: none;}'\n  + '</style>'\n  + '</head>'\n  + '<body>'\n  + '<div id=\"layout-container\">'\n  + '<div id=\"left-column\">'\n  + '<div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">'\n  + '<h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>'\n  + '<p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ' + totalPatients + '</p>'\n  + '</div>'\n  + '<div class=\"metric-card rounded-lg p-6\">'\n  + '<div class=\"flex items-center justify-between mb-4\">'\n  + '<h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>'\n  + '<div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">'\n  + '<i class=\"ri-time-line text-yellow-600\"></i>'\n  + '</div>'\n  + '</div>'\n  + '<div class=\"flex items-end justify-between\">'\n  + '<div>'\n  + '<p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">' + Math.round(averageLobbyTime) + ' min</p>'\n  + '<p class=\"text-sm text-gray-500\">Acknowledged to Started</p>'\n  + '</div>'\n  + '</div></div>'\n  + '<div class=\"metric-card rounded-lg p-6\">'\n  + '<div class=\"flex items-center justify-between mb-4\">'\n  + '<h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>'\n  + '<div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">'\n  + '<i class=\"ri-timer-line text-green-600\"></i>'\n  + '</div>'\n  + '</div>'\n  + '<div class=\"flex items-end justify-between\">'\n  + '<div>'\n  + '<p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">' + Math.round(averageTotalCycleTime) + ' min</p>'\n  + '<p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  // Filters and search with toggle above the left filters area (like original expand/collapse)\n  + '<div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg flex items-center justify-between\" id=\"toggle-legend\">'\n  + '<span class=\"text-sm font-medium text-gray-700 select-none\">Show Legend/Filters/Search</span>'\n  + '<i class=\"ri-arrow-down-s-line\"></i>'\n  + '</div>'\n  + '<div id=\"legend-container\" class=\"hidden\">'\n  + '<div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">'\n  + '<div class=\"flex flex-col space-y-2 mb-3\">'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>'\n  + '<div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>'\n  + '</div>'\n  + '<div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>'\n  + '<div class=\"flex flex-col space-y-2 mb-3\">'\n  + '<select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm w-full\" size=\"5\" aria-label=\"Filter by location\"></select>'\n  + '<select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm w-full\" size=\"5\" aria-label=\"Filter by provider\"></select>'\n  + '</div>'\n  + '<div class=\"flex flex-col space-y-2\">'\n  + '<div class=\"relative\">'\n  + '<div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\"><i class=\"ri-search-line text-gray-400\"></i></div>'\n  + '<input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent w-full\" placeholder=\"Search...\"/>'\n  + '<span class=\"clear-search-btn ri-close-line\" id=\"clear-search\" role=\"button\" tabindex=\"0\" aria-label=\"Clear search\"></span>'\n  + '</div>'\n  + '<button id=\"clear-filters\" class=\"mt-3 w-full border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '<div id=\"right-column\">'\n  + providerCardsHtml\n  + '<table class=\"header-table\">'\n  + '<colgroup>'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '</colgroup>'\n  + '<thead>'\n  + '<tr>'\n  + '<th data-col-index=\"0\" class=\"sortable\" scope=\"col\">MRN</th>'\n  + '<th data-col-index=\"1\" class=\"sortable\" scope=\"col\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>'\n  + '<th data-col-index=\"2\" class=\"sortable\" scope=\"col\">Room</th>'\n  + '<th data-col-index=\"3\" class=\"sortable\" scope=\"col\">Acknowledged</th>'\n  + '<th data-col-index=\"4\" class=\"sortable\" scope=\"col\">Started</th>'\n  + '<th data-col-index=\"5\" class=\"sortable\" scope=\"col\">Wait Time</th>'\n  + '<th data-col-index=\"6\" class=\"sortable\" scope=\"col\">Time In Office</th>'\n  + '</tr>'\n  + '</thead>'\n  + '</table>'\n  + '<div id=\"table-body-container\">'\n  + '<table class=\"body-table\" role=\"grid\" aria-rowcount=\"' + finalData.length + '\">'\n  + '<colgroup>'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '<col style=\"width:14.28%;\">'\n  + '</colgroup>'\n  + '<tbody id=\"patient-table-body\">'\n  + rowsHtml\n  + '</tbody>'\n  + '</table>'\n  + '</div>'\n  + '</div>'\n  + '</div>'\n  + '<script>'\n  + 'const originalData = ' + JSON.stringify(finalData) + ';'\n  + '// Toggle show/hide for filters and legend'\n  + 'const toggleLegendBtn = document.getElementById(\"toggle-legend\");'\n  + 'const legendContainer = document.getElementById(\"legend-container\");'\n  + 'toggleLegendBtn.addEventListener(\"click\", function() {'\n  + '  if (legendContainer.classList.contains(\"hidden\")) {'\n  + '    legendContainer.classList.remove(\"hidden\");'\n  + '    toggleLegendBtn.querySelector(\"span\").textContent = \"Hide Legend/Filters/Search\";'\n  + '    toggleLegendBtn.querySelector(\"i\").className = \"ri-arrow-up-s-line\";'\n  + '  } else {'\n  + '    legendContainer.classList.add(\"hidden\");'\n  + '    toggleLegendBtn.querySelector(\"span\").textContent = \"Show Legend/Filters/Search\";'\n  + '    toggleLegendBtn.querySelector(\"i\").className = \"ri-arrow-down-s-line\";'\n  + '  }'\n  + '});'\n  + 'function saveFiltersToLocalStorage() {'\n  + '  const searchInput = document.getElementById(\"search-input\").value;'\n  + '  const locSelect = document.getElementById(\"location-filter\");'\n  + '  const provSelect = document.getElementById(\"provider-filter\");'\n  + '  const selectedLocations = Array.from(locSelect.selectedOptions).map(o => o.value);'\n  + '  const selectedProviders = Array.from(provSelect.selectedOptions).map(o => o.value);'\n  + '  localStorage.setItem(\"searchInput\", searchInput);'\n  + '  localStorage.setItem(\"locationFilter\", JSON.stringify(selectedLocations));'\n  + '  localStorage.setItem(\"providerFilter\", JSON.stringify(selectedProviders));'\n  + '}'\n  + 'function loadFiltersFromLocalStorage() {'\n  + '  const searchInput = localStorage.getItem(\"searchInput\") || \"\";'\n  + '  const locationFilter = localStorage.getItem(\"locationFilter\");'\n  + '  const providerFilter = localStorage.getItem(\"providerFilter\");'\n  + '  document.getElementById(\"search-input\").value = searchInput;'\n  + '  if (locationFilter) {'\n  + '    try {'\n  + '      const selectedLocations = JSON.parse(locationFilter);'\n  + '      const locSelect = document.getElementById(\"location-filter\");'\n  + '      Array.from(locSelect.options).forEach(opt => { opt.selected = selectedLocations.includes(opt.value); });'\n  + '    } catch(e) {}'\n  + '  }'\n  + '  if (providerFilter) {'\n  + '    try {'\n  + '      const selectedProviders = JSON.parse(providerFilter);'\n  + '      const provSelect = document.getElementById(\"provider-filter\");'\n  + '      Array.from(provSelect.options).forEach(opt => { opt.selected = selectedProviders.includes(opt.value); });'\n  + '    } catch(e) {}'\n  + '  }'\n  + '  applyFilters();'\n  + '}'\n  + 'function filterData() {'\n  + '  const searchTerm = document.getElementById(\"search-input\").value.toLowerCase().trim();'\n  + '  const locSelect = document.getElementById(\"location-filter\");'\n  + '  const provSelect = document.getElementById(\"provider-filter\");'\n  + '  const selectedLocations = Array.from(locSelect.selectedOptions).map(o=>o.value);'\n  + '  const selectedProviders = Array.from(provSelect.selectedOptions).map(o=>o.value);'\n  + '  return originalData.filter(row => {'\n  + '    const combinedText = (row.LOCATION_NAME + \" \" + row.MRN + \" \" + row.CAREGIVER_NAME + \" \" + row.ROOM_ASSIGNED + \" \"'\n  + '      + (row[\"ACK_TIME(PT HERE)\"] || \"\") + \" \" + (row[\"TIME_IN_OFFICE\"] || \"\") + \" \" + (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\")).toLowerCase();'\n  + '    const searchMatches = !searchTerm || combinedText.includes(searchTerm);'\n  + '    const locationMatches = selectedLocations.length ? selectedLocations.includes(row.LOCATION_NAME) : true;'\n  + '    const providerMatches = selectedProviders.length ? selectedProviders.includes(row.CAREGIVER_NAME) : true;'\n  + '    return searchMatches && locationMatches && providerMatches;'\n  + '  });'\n  + '}'\n  + 'function updateProviderCards() {'\n  + '  var filteredData = filterData();'\n  + '  var counts = {};'\n  + '  filteredData.forEach(function(row) {'\n  + '    var provider = row.CAREGIVER_NAME || \"\";'\n  + '    if (!provider) return;'\n  + '    var checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();'\n  + '    var checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();'\n  + '    var readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();'\n  + '    if (checkoutStr) return;'\n  + '    if (checkInStr || readyStr) {'\n  + '      if (!(provider in counts)) { counts[provider] = 0; }'\n  + '      counts[provider]++;'\n  + '    }'\n  + '  });'\n  + '  var cardContainer = document.getElementById(\"provider-cards\");'\n  + '  if(!cardContainer) return;'\n  + '  var sortedProviders = Object.keys(counts)'\n  + '    .map(function(p) { return { provider: p, count: counts[p] }; })'\n  + '    .sort(function(a, b) { return b.count - a.count; })'\n  + '    .slice(0, 5);'\n  + '  var html = \"\";'\n  + '  sortedProviders.forEach(function(item) {'\n  + '    html += \"\"'\n  + '      + \"<div class=\\\\\\\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\\\\\\\">\"' \n  + '      + \"<h4 class=\\\\\\\"text-lg font-semibold text-gray-700\\\\\\\">\" + item.provider + \"</h4>\"'\n  + '      + \"<p class=\\\\\\\"text-2xl font-bold text-gray-800 mt-1\\\\\\\">\" + item.count + \"</p>\"'\n  + '      + \"<p class=\\\\\\\"text-sm text-gray-500\\\\\\\">Patients Acknowledged/Started</p>\"'\n  + '      + \"</div>\";'\n  + '  });'\n  + '  cardContainer.innerHTML = html;'\n  + '}'\n  + 'function updateCards() {'\n  + '  var filteredData = filterData();'\n  + '  document.getElementById(\"total-patients\").textContent = \"Patients Today: \" + filteredData.length;'\n  + '  var lobbyTimes = filteredData.map(function(r) { return r.ACK_TO_START_TIME; }).filter(function(v) { return typeof v === \"number\"; });'\n  + '  var avgLobby = lobbyTimes.length ? Math.round(lobbyTimes.reduce(function(a,b){return a+b;},0)/lobbyTimes.length) : 0;'\n  + '  var ackCheckoutTimes = filteredData.map(function(r) { return r.ACTUAL_ACK_TO_CHECKOUT_TIME; }).filter(function(v) { return typeof v === \"number\"; });'\n  + '  var avgTotal = ackCheckoutTimes.length ? Math.round(ackCheckoutTimes.reduce(function(a,b){return a+b;},0)/ackCheckoutTimes.length) : 0;'\n  + '  document.getElementById(\"avg-lobby-time\").textContent = avgLobby + \" min\";'\n  + '  document.getElementById(\"avg-total-cycle-time\").textContent = avgTotal + \" min\";'\n  + '  updateProviderCards();'\n  + '}'\n  + 'function applyFilters() {'\n  + '  var filteredData = filterData();'\n  + '  var tbody = document.getElementById(\"patient-table-body\");'\n  + '  var rows = Array.from(tbody.querySelectorAll(\"tr\"));'\n  + '  rows.forEach(function(row) {'\n  + '    var rowLocation = row.getAttribute(\"data-location\") || \"\";'\n  + '    var rowProvider = row.getAttribute(\"data-provider\") || \"\";'\n  + '    var matched = filteredData.find(function(d) { return d.LOCATION_NAME === rowLocation && d.CAREGIVER_NAME === rowProvider; });'\n  + '    row.style.display = matched ? \"\" : \"none\";'\n  + '  });'\n  + '  updateCards();'\n  + '}'\n  + 'document.getElementById(\"search-input\").addEventListener(\"input\", function() {'\n  + '  saveFiltersToLocalStorage(); applyFilters();'\n  + '});'\n  + 'document.getElementById(\"location-filter\").addEventListener(\"change\", function() {'\n  + '  saveFiltersToLocalStorage(); applyFilters();'\n  + '});'\n  + 'document.getElementById(\"provider-filter\").addEventListener(\"change\", function() {'\n  + '  saveFiltersToLocalStorage(); applyFilters();'\n  + '});'\n  + 'document.getElementById(\"clear-search\").addEventListener(\"click\", function() {'\n  + '  document.getElementById(\"search-input\").value = \"\";'\n  + '  saveFiltersToLocalStorage(); applyFilters();'\n  + '});'\n  + 'document.getElementById(\"clear-filters\").addEventListener(\"click\", function() {'\n  + '  document.getElementById(\"search-input\").value = \"\";'\n  + '  const locSelect = document.getElementById(\"location-filter\");'\n  + '  const provSelect = document.getElementById(\"provider-filter\");'\n  + '  Array.from(locSelect.options).forEach(option => option.selected = false);'\n  + '  Array.from(provSelect.options).forEach(option => option.selected = false);'\n  + '  localStorage.removeItem(\"searchInput\");'\n  + '  localStorage.removeItem(\"locationFilter\");'\n  + '  localStorage.removeItem(\"providerFilter\");'\n  + '  applyFilters();'\n  + '});'\n  + 'const sortDirections = {};'\n  + 'const numericCols = [0, 5];'\n  + 'function compareValues(a, b, isNumeric, ascending) {'\n  + '  if (isNumeric) { return ascending ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a)); }'\n  + '  else { return ascending ? a.localeCompare(b) : b.localeCompare(a); }'\n  + '}'\n  + 'function sortTableByColumn(colIndex) {'\n  + '  const tbody = document.getElementById(\"patient-table-body\");'\n  + '  const rows = Array.from(tbody.querySelectorAll(\"tr\"));'\n  + '  sortDirections[colIndex] = !sortDirections[colIndex];'\n  + '  const ascending = sortDirections[colIndex];'\n  + '  rows.sort(function(rowA,rowB) {'\n  + '    const cellA = rowA.querySelectorAll(\".sortable-cell\")[colIndex];'\n  + '    const cellB = rowB.querySelectorAll(\".sortable-cell\")[colIndex];'\n  + '    const valA = cellA ? cellA.getAttribute(\"data-sort-value\") || \"\" : \"\";'\n  + '    const valB = cellB ? cellB.getAttribute(\"data-sort-value\") || \"\" : \"\";'\n  + '    const isNumeric = numericCols.includes(colIndex);'\n  + '    return compareValues(valA,valB,isNumeric,ascending);'\n  + '  });'\n  + '  rows.forEach(row => tbody.appendChild(row));'\n  + '}'\n  + 'document.querySelectorAll(\".header-table thead th.sortable\").forEach(function(th) {'\n  + '  th.addEventListener(\"click\", function() {'\n  + '    var colIndex = parseInt(th.getAttribute(\"data-col-index\"),10);'\n  + '    sortTableByColumn(colIndex);'\n  + '  });'\n  + '});'\n  + '</script>'\n  + '</body>'\n  + '</html>';\n// Return HTML\nreturn [{ json: { html: htmlOutput } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2720,
        -1560
      ],
      "id": "31501f12-014f-4e01-a4bd-c625abd0363a",
      "name": "Code27"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n * n8n Code Node: Patient Leaderboard\n ********************************************/\nlet data = items[0].json;\n\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// A small helper to parse the TIME_IN_OFFICE field as a number,\n// whether the field is stored as numeric or string like \"314 min\".\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'string') {\n    // Remove all non-numeric characters except period:\n    // e.g. \"314 min\" → \"314\", \"92\" → \"92\"\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// -------------------------------------------------------\n// 1) Re-sort data into three groups in this order:\n//    Acknowledged (top) -> Started -> Checked Out (bottom),\n//    each sorted by descending TIME_IN_OFFICE\n// -------------------------------------------------------\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr =\n    (row[\"START_TIME(READY TO COME BACK)\"] ||\n     row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n     \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n\n  // Acknowledged => 0, Started => 1, Checked Out => 2, else => 3\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n\n  // Sort by status first\n  if (statusA !== statusB) {\n    return statusA - statusB;\n  }\n\n  // Then, within each status group, sort descending by TIME_IN_OFFICE\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// -------------------------------------------------------\n// 2) Aggregate data for metric cards\n// -------------------------------------------------------\nconst totalPatients = finalData.length;\n\nconst ackCheckoutTimes = finalData\n  .map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n  .filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime =\n    ackCheckoutTimes.reduce((sum, val) => sum + val, 0) /\n    ackCheckoutTimes.length;\n}\n\nconst lobbyTimes = finalData\n  .map(r => r.ACK_TO_START_TIME)\n  .filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime =\n    lobbyTimes.reduce((sum, val) => sum + val, 0) /\n    lobbyTimes.length;\n}\n\n// -------------------------------------------------------\n// 3) Build <tbody> rows with center alignment & row color logic\n// -------------------------------------------------------\nconst rowsHtml = finalData\n  .map(row => {\n    const location = row.LOCATION_NAME || \"\";\n    const mrn = row.MRN || 0;\n    const provider = row.CAREGIVER_NAME || \"\";\n    const room = row.ROOM_ASSIGNED || \"\";\n    const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n    const readyStr =\n      (row[\"START_TIME(READY TO COME BACK)\"] ||\n       row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n       \"\").trim();\n    const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n\n    // We'll keep the original 'TIME_IN_OFFICE' field for display\n    const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n    const timeInOffice =\n      typeof rawTimeInOffice === \"number\"\n        ? rawTimeInOffice.toString()\n        : (rawTimeInOffice || \"\").trim();\n\n    const waitMinutes = row.ACK_TO_START_TIME || 0;\n    const waitTime = waitMinutes + \" min\";\n\n    // Determine row color\n    let rowClass = \"\";\n    if (checkoutStr) {\n      rowClass = \"bg-orange-50\"; // Checked Out\n    } else if (readyStr) {\n      rowClass = \"bg-green-50\";  // Started\n    } else if (checkInStr) {\n      rowClass = \"bg-blue-50\";   // Acknowledged\n    }\n\n    return `\n      <tr data-location=\"${location}\" data-provider=\"${provider}\" class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">\n          ${mrn}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">\n          ${provider}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">\n          ${room}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">\n          ${checkInStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">\n          ${readyStr}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">\n          ${waitTime}\n        </td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">\n          ${timeInOffice}\n        </td>\n      </tr>`;\n  })\n  .join(\"\");\n\n// -------------------------------------------------------\n// 4) Final HTML layout\n// -------------------------------------------------------\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n    tailwind.config = {\n      theme: {\n        extend: {\n          colors: {\n            primary: '#3b82f6',\n            secondary: '#10b981'\n          },\n          borderRadius: {\n            none: '0px',\n            sm: '4px',\n            DEFAULT: '8px',\n            md: '12px',\n            lg: '16px',\n            xl: '20px',\n            '2xl': '24px',\n            '3xl': '32px',\n            full: '9999px',\n            button: '8px'\n          }\n        }\n      }\n    }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    /* No entire page scrolling */\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      overflow: hidden;\n    }\n    body {\n      font-family: 'Inter', sans-serif;\n      background-color: #f9fafb;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #ffffff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor: pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor: pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #layout-container {\n      display: flex;\n      height: 100%;\n      width: 100%;\n      gap: 1.5rem;\n      padding: 1.5rem;\n      box-sizing: border-box;\n    }\n    #left-column {\n      width: 25%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n      overflow-y: auto;\n    }\n    #right-column {\n      width: 75%;\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed;\n      width: 100%;\n      border-collapse: collapse;\n      text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6;\n      font-size: 0.75rem;\n      font-weight: 700;\n      text-transform: uppercase;\n      color: #6b7280;\n      padding: 0.5rem 1rem;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n      cursor: pointer;\n    }\n    #table-body-container {\n      flex: 1;\n      overflow-y: auto;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <!-- Left Column -->\n    <div id=\"left-column\">\n      <!-- Title + Patients Today -->\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">\n          Patients Today: ${totalPatients}\n        </p>\n      </div>\n      <!-- Card: Avg Lobby Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageLobbyTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <!-- Card: Avg Total Cycle Time -->\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">\n              ${Math.round(averageTotalCycleTime)} min\n            </p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <!-- Toggle Legend/Filters/Search -->\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <!-- Collapsible Legend/Filters/Search area -->\n      <div id=\"legend-container\" style=\"display: none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n              <span class=\"text-sm text-gray-600\">Acknowledged</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-green-500\"></span>\n              <span class=\"text-sm text-gray-600\">Started</span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n              <span class=\"text-sm text-gray-600\">Checked Out</span>\n            </div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input\n                type=\"text\"\n                id=\"search-input\"\n                class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n                placeholder=\"Search...\"\n              />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">\n              Clear Filters\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Right Column -->\n    <div id=\"right-column\">\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n          <col style=\"width:14.2857%;\" />\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider</th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n            <col style=\"width:14.2857%;\" />\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <!-- Bottom Script Section -->\n  <script>\n    // Expose the sorted data\n    const originalData = ${JSON.stringify(finalData)};\n\n    // Auto‑refresh if ?refreshrate= is provided\n    function getQueryParam(param) {\n      const params = new URLSearchParams(window.location.search);\n      return params.get(param);\n    }\n    const rr = getQueryParam('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n\n    // Local storage for filters\n    function saveFilters() {\n      localStorage.setItem('search', document.getElementById('search-input').value);\n      localStorage.setItem('locs', JSON.stringify(\n        Array.from(document.getElementById('location-filter').selectedOptions).map(o=>o.value)\n      ));\n      localStorage.setItem('provs', JSON.stringify(\n        Array.from(document.getElementById('provider-filter').selectedOptions).map(o=>o.value)\n      ));\n    }\n    function loadFilters() {\n      const s = localStorage.getItem('search') || '';\n      document.getElementById('search-input').value = s;\n      try {\n        const locs = JSON.parse(localStorage.getItem('locs')||'[]');\n        for (const o of document.getElementById('location-filter').options) {\n          o.selected = locs.includes(o.value);\n        }\n      } catch {}\n      try {\n        const provs = JSON.parse(localStorage.getItem('provs')||'[]');\n        for (const o of document.getElementById('provider-filter').options) {\n          o.selected = provs.includes(o.value);\n        }\n      } catch {}\n      applyFilters();\n    }\n\n    // Last refresh timer\n    let age=0;\n    function tick() {\n      age++;\n      const now=new Date();\n      const ds= now.toLocaleDateString('en-US',{month:'long',day:'numeric',year:'numeric'});\n      let h=now.getHours(), m= now.getMinutes().toString().padStart(2,'0');\n      const ap = h>=12?'PM':'AM';\n      h = h%12||12;\n      const mm = Math.floor(age/60), ss = (age%60).toString().padStart(2,'0');\n      document.getElementById('last-refresh').textContent = ds+' '+h+':'+m+' '+ap+' | Last Refresh '+mm+':'+ss;\n    }\n    setInterval(tick,1000);\n\n    // Populate filters\n    function initFilters() {\n      const locSet = [...new Set(originalData.map(r=>r.LOCATION_NAME).filter(Boolean))].sort();\n      const provSet = [...new Set(originalData.map(r=>r.CAREGIVER_NAME).filter(Boolean))].sort();\n      const locSel = document.getElementById('location-filter');\n      const provSel = document.getElementById('provider-filter');\n      for (const v of locSet) {\n        const o=document.createElement('option');\n        o.value=o.textContent=v;\n        locSel.appendChild(o);\n      }\n      for (const v of provSet) {\n        const o=document.createElement('option');\n        o.value=o.textContent=v;\n        provSel.appendChild(o);\n      }\n    }\n    initFilters();\n    loadFilters();\n\n    // Filtering logic\n    function filterData() {\n      const s=document.getElementById('search-input').value.toLowerCase();\n      const locs=Array.from(document.getElementById('location-filter').selectedOptions).map(o=>o.value);\n      const provs=Array.from(document.getElementById('provider-filter').selectedOptions).map(o=>o.value);\n      return originalData.filter(r=>{\n        const txt = (\n          r.LOCATION_NAME+' '+r.MRN+' '+r.CAREGIVER_NAME+' '+\n          r.ROOM_ASSIGNED+' '+(r[\"ACK_TIME(PT HERE)\"]||'')+' '+\n          (r[\"TIME_IN_OFFICE\"]||'')+' '+\n          (r[\"START_TIME(READY TO COME BACK)\"]||r[\"START_TIME(READY_TO_COME_BACK)\"]||'')\n        ).toLowerCase();\n        return txt.includes(s)\n          && (locs.length?locs.includes(r.LOCATION_NAME):true)\n          && (provs.length?provs.includes(r.CAREGIVER_NAME):true);\n      });\n    }\n    function updateCards() {\n      const fd = filterData();\n      document.getElementById('total-patients').textContent = 'Patients Today: '+fd.length;\n      const lt = fd.map(r=>r.ACK_TO_START_TIME).filter(v=>typeof v==='number');\n      const avgL = lt.length?Math.round(lt.reduce((a,b)=>a+b,0)/lt.length):0;\n      const ct = fd.map(r=>r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v=>typeof v==='number');\n      const avgC = ct.length?Math.round(ct.reduce((a,b)=>a+b,0)/ct.length):0;\n      document.getElementById('avg-lobby-time').textContent = avgL+' min';\n      document.getElementById('avg-total-cycle-time').textContent = avgC+' min';\n    }\n    function applyFilters() {\n      const fd=filterData();\n      document.querySelectorAll('#patient-table-body tr').forEach(tr=>{\n        const l=tr.getAttribute('data-location'), p=tr.getAttribute('data-provider');\n        tr.style.display = fd.some(r=>r.LOCATION_NAME===l&&r.CAREGIVER_NAME===p)?'':'none';\n      });\n      updateCards();\n    }\n\n    // Event wiring\n    document.getElementById('search-input').addEventListener('input',()=>{saveFilters();applyFilters();});\n    document.getElementById('location-filter').addEventListener('change',()=>{saveFilters();applyFilters();});\n    document.getElementById('provider-filter').addEventListener('change',()=>{saveFilters();applyFilters();});\n    document.getElementById('clear-search').addEventListener('click',()=>{\n      document.getElementById('search-input').value='';\n      saveFilters();applyFilters();\n    });\n    document.getElementById('clear-filters').addEventListener('click',()=>{\n      document.getElementById('search-input').value='';\n      Array.from(document.getElementById('location-filter').options).forEach(o=>o.selected=false);\n      Array.from(document.getElementById('provider-filter').options).forEach(o=>o.selected=false);\n      localStorage.removeItem('search');\n      localStorage.removeItem('locs');\n      localStorage.removeItem('provs');\n      applyFilters();\n    });\n\n    // Sorting logic\n    const sortDirs = {};\n    const numCols = [0,5];\n    function compare(a,b,isNum,asc){\n      if(isNum) return asc?(parseFloat(a)-parseFloat(b)):(parseFloat(b)-parseFloat(a));\n      return asc?a.localeCompare(b):b.localeCompare(a);\n    }\n    function sortBy(col){\n      const tb=document.getElementById('patient-table-body');\n      const rows=[...tb.querySelectorAll('tr')];\n      sortDirs[col] = !sortDirs[col];\n      const asc = sortDirs[col];\n      rows.sort((r1,r2)=>{\n        const v1 = r1.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value')||'';\n        const v2 = r2.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value')||'';\n        return compare(v1,v2,numCols.includes(col),asc);\n      });\n      rows.forEach(r=>tb.appendChild(r));\n    }\n    document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n      th.addEventListener('click',()=>sortBy(parseInt(th.getAttribute('data-col-index'),10)));\n    });\n\n    // Toggle legend/filters\n    document.getElementById('toggle-legend').addEventListener('click',()=>{\n      const lc = document.getElementById('legend-container');\n      if(lc.style.display==='none'){\n        lc.style.display='block';\n        document.getElementById('toggle-legend').innerHTML =\n          '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n      } else {\n        lc.style.display='none';\n        document.getElementById('toggle-legend').innerHTML =\n          '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n// Return as one item with the HTML in json.html\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2720,
        -1700
      ],
      "id": "cceffe1d-f32a-4acb-896f-9287b5edd711",
      "name": "Code28"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node code using native JavaScript Date object\n\n// Helper function to parse a time string (\"h:mma\", e.g., \"8:00AM\")\n// Returns a Date object for today with the specified hours and minutes.\nfunction parseTime(timeStr) {\n\tconst trimmed = timeStr.trim();\n\t// Regular expression to capture the hour, minutes, and period (AM/PM)\n\tconst regex = /(\\d{1,2}):(\\d{2})(AM|PM)/i;\n\tconst match = trimmed.match(regex);\n\tif (!match) return null;\n\tlet hour = parseInt(match[1], 10);\n\tconst minute = parseInt(match[2], 10);\n\tconst period = match[3].toUpperCase();\n\n\t// Convert to 24-hour format.\n\tif (period === 'PM' && hour < 12) {\n\t\thour += 12;\n\t}\n\tif (period === 'AM' && hour === 12) {\n\t\thour = 0;\n\t}\n\t// Use today's date for the resulting Date object.\n\tconst now = new Date();\n\treturn new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, minute, 0);\n}\n\n// Loop through each incoming item\nfor (const item of items) {\n\t// Retrieve and validate the ACK_TIME string.\n\tconst ackStr = item.json[\"ACK_TIME(PT HERE)\"];\n\tif (!ackStr) {\n\t\titem.json[\"TIME_IN_OFFICE\"] = null;\n\t\tcontinue;\n\t}\n\tconst ackTime = parseTime(ackStr);\n\tif (!ackTime) {\n\t\titem.json[\"TIME_IN_OFFICE\"] = null;\n\t\tcontinue;\n\t}\n\n\t// Check if there's a checkout time available.\n\tlet checkoutTime;\n\tconst checkOutStr = item.json[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"];\n\tif (checkOutStr && checkOutStr.trim() !== \"\") {\n\t\tcheckoutTime = parseTime(checkOutStr);\n\t}\n\n\t// Calculate the difference in minutes:\n\t// If there is a checkout time, use it.\n\t// Otherwise, calculate the difference between the current time and the ack time.\n\tlet diffMs;\n\tif (checkoutTime) {\n\t\tdiffMs = checkoutTime - ackTime;\n\t} else {\n\t\tdiffMs = new Date() - ackTime;\n\t}\n\tconst diffMins = Math.round(diffMs / 60000);\n\t\n\t// Add \" min\" to the calculated minutes.\n\titem.json[\"TIME_IN_OFFICE\"] = diffMins + \" min\";\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        -1260
      ],
      "id": "0515495d-847b-41dc-ba1f-72f048adeff1",
      "name": "Code29",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n* n8n Code Node: Patient Leaderboard\n********************************************/\nlet data = items[0].json;\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// Helper to parse TIME_IN_OFFICE as a number\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n\n// Status order: 0=Acknowledged, 1=Started, 2=Checked Out, 3=Others\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\n// Sort data by status then TIME_IN_OFFICE desc\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  if (statusA !== statusB) return statusA - statusB;\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n\n// Aggregate metrics include all patients\nconst totalPatients = finalData.length;\nconst ackCheckoutTimes = finalData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\nconst lobbyTimes = finalData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n\n// Provider cards data for top 5 providers having acknowledged/started patients\nfunction countPatientsByProvider(dataArray) {\n  const counts = {};\n  dataArray.forEach(row => {\n    const provider = row.CAREGIVER_NAME || \"\";\n    if (!provider) return;\n    const status = getStatus(row);\n    if (status === 0 || status === 1) {\n      counts[provider] = (counts[provider] || 0) + 1;\n    }\n  });\n  return counts;\n}\nconst providerCountsAll = countPatientsByProvider(finalData);\nconst providerCardsData = Object.keys(providerCountsAll)\n  .map(p => ({provider: p, count: providerCountsAll[p]}))\n  .sort((a, b) => b.count - a.count)\n  .slice(0, 5);\n\nfunction buildProviderCardsHtml(cardsData) {\n  let html = '<div id=\"provider-cards\" class=\"flex flex-wrap gap-4 mb-4\">';\n  cardsData.forEach(item => {\n    html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n  });\n  html += '</div>';\n  return html;\n}\nconst providerCardsHtml = buildProviderCardsHtml(providerCardsData);\n\n// Build rows with data attribute for checked out patients\nconst rowsHtml = finalData.map(row => {\n  const location = row.LOCATION_NAME || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = waitMinutes + ' min';\n  let rowClass = \"\";\n  if (checkoutStr) rowClass = \"bg-orange-50\";\n  else if (readyStr) rowClass = \"bg-green-50\";\n  else if (checkInStr) rowClass = \"bg-blue-50\";\n  return `<tr data-location=\"${location}\" data-provider=\"${provider}\" data-checked-out=\"${checkoutStr ? 'true' : 'false'}\" class=\"hover:bg-gray-50 ${rowClass}\">\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">${mrn}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">${provider}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">${room}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">${checkInStr}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">${readyStr}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">${waitTime}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">${timeInOffice}</td>\n  </tr>`;\n}).join('');\n\n// Final HTML layout with integrated provider cards and full logic\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n   tailwind.config = {\n    theme: {\n      extend: {\n        colors: { primary: '#3b82f6', secondary: '#10b981' },\n        borderRadius: {\n          none: '0px', sm: '4px', DEFAULT: '8px', md: '12px', lg: '16px',\n          xl: '20px', '2xl': '24px', '3xl': '32px', full: '9999px', button: '8px'\n        }\n      }\n    }\n   }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {margin:0; padding:0; height:100%; overflow:hidden;}\n    body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}\n    #layout-container {\n      display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing: border-box;\n    }\n    #left-column {\n      width:25%; height:100%; display:flex; flex-direction: column; gap:1.5rem; overflow-y:auto;\n    }\n    #right-column {\n      width:75%; display:flex; flex-direction: column; overflow:hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed; width:100%; border-collapse: collapse; text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6; font-size: 1rem; font-weight: 800; text-transform: none; color: #374151;\n      padding: 0.75rem 1rem; user-select:none; cursor:pointer;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n    }\n    #table-body-container {\n      flex: 1; overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #fff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor:pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor:pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #toggle-checked-out {\n      width: 100%; margin-top: 1rem; padding: 0.5rem;\n      border: 1px solid #d1d5db; border-radius: 8px;\n      background-color: #f3f4f6; cursor: pointer;\n      font-weight: 600; color: #374151;\n      transition: background-color 0.3s ease;\n    }\n    #toggle-checked-out:hover {\n      background-color: #e5e7eb;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-2xl text-gray-600 mt-4\">Patients Today: ${totalPatients}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\" />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n            <button id=\"toggle-checked-out\">Show Checked Out Patients</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id=\"right-column\">\n      ${providerCardsHtml}\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n<script>\n  const originalData = ${JSON.stringify(finalData)};\n\n  let showCheckedOut = false;\n\n  function updateCheckedOutToggleText() {\n    const btn = document.getElementById('toggle-checked-out');\n    btn.textContent = showCheckedOut ? 'Hide Checked Out Patients' : 'Show Checked Out Patients';\n  }\n\n  function getQueryParam(param) {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(param);\n  }\n\n  (function() {\n    const rr = getQueryParam('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n  })();\n\n  function initFilters() {\n    const locSet = [...new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))].sort();\n    const provSet = [...new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))].sort();\n\n    const locSel = document.getElementById('location-filter');\n    const provSel = document.getElementById('provider-filter');\n\n    locSel.innerHTML = '';\n    provSel.innerHTML = '';\n\n    locSet.forEach(loc => {\n      const option = document.createElement('option');\n      option.value = option.textContent = loc;\n      locSel.appendChild(option);\n    });\n\n    provSet.forEach(prov => {\n      const option = document.createElement('option');\n      option.value = option.textContent = prov;\n      provSel.appendChild(option);\n    });\n  }\n\n  function saveFilters() {\n    localStorage.setItem('search', document.getElementById('search-input').value);\n    localStorage.setItem('locs', JSON.stringify(\n      Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('provs', JSON.stringify(\n      Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('showCheckedOut', JSON.stringify(showCheckedOut));\n  }\n\n  function loadFilters() {\n    const s = localStorage.getItem('search') || '';\n    document.getElementById('search-input').value = s;\n\n    try {\n      const locs = JSON.parse(localStorage.getItem('locs') || '[]');\n      for (const o of document.getElementById('location-filter').options) {\n        o.selected = locs.includes(o.value);\n      }\n    } catch {}\n\n    try {\n      const provs = JSON.parse(localStorage.getItem('provs') || '[]');\n      for (const o of document.getElementById('provider-filter').options) {\n        o.selected = provs.includes(o.value);\n      }\n    } catch {}\n\n    try {\n      const storedShow = JSON.parse(localStorage.getItem('showCheckedOut'));\n      if (typeof storedShow === 'boolean') {\n        showCheckedOut = storedShow;\n      }\n    } catch {}\n\n    updateCheckedOutToggleText();\n    applyFilters();\n  }\n\n  function filterData() {\n    const s = document.getElementById('search-input').value.toLowerCase();\n    const locs = Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value);\n    const provs = Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value);\n\n    return originalData.filter(r => {\n      const txt = (\n        r.LOCATION_NAME + ' ' + r.MRN + ' ' + r.CAREGIVER_NAME + ' ' +\n        r.ROOM_ASSIGNED + ' ' + (r[\"ACK_TIME(PT HERE)\"] || '') + ' ' +\n        (r[\"TIME_IN_OFFICE\"] || '') + ' ' +\n        (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '')\n      ).toLowerCase();\n\n      const isCheckedOut = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim() !== '';\n      if (!showCheckedOut && isCheckedOut) return false;\n      if (!txt.includes(s)) return false;\n      if (locs.length && !locs.includes(r.LOCATION_NAME)) return false;\n      if (provs.length && !provs.includes(r.CAREGIVER_NAME)) return false;\n      return true;\n    });\n  }\n\n  function updateProviderCards() {\n    const fd = filterData();\n    const counts = {};\n    fd.forEach(r => {\n      const provider = r.CAREGIVER_NAME || '';\n      if (!provider) return;\n      const co = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim();\n      const ack = (r[\"ACK_TIME(PT HERE)\"] || '').trim();\n      const started = (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '').trim();\n      if (co) return;\n      if (ack || started) {\n        counts[provider] = (counts[provider] || 0) + 1;\n      }\n    });\n    const sorted = Object.keys(counts)\n      .map(p => ({provider: p, count: counts[p]}))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 5);\n\n    const container = document.getElementById('provider-cards');\n    if (!container) return;\n    let html = '';\n    sorted.forEach(item => {\n      html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n    });\n    container.innerHTML = html;\n  }\n\n  function updateCards() {\n    const totalPatientsElem = document.getElementById('total-patients');\n    const avgLobbyElem = document.getElementById('avg-lobby-time');\n    const avgCycleElem = document.getElementById('avg-total-cycle-time');\n\n    // ALWAYS use all patients in calculations\n    const allPatients = originalData;\n\n    totalPatientsElem.textContent = 'Patients Today: ' + filterData().length;\n\n    const lt = allPatients.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n    const avgL = lt.length ? Math.round(lt.reduce((a, b) => a + b, 0) / lt.length) : 0;\n\n    const ct = allPatients.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n    const avgC = ct.length ? Math.round(ct.reduce((a, b) => a + b, 0) / ct.length) : 0;\n\n    avgLobbyElem.textContent = avgL + ' min';\n    avgCycleElem.textContent = avgC + ' min';\n\n    updateProviderCards();\n  }\n\n  function applyFilters() {\n    const fd = filterData();\n    document.querySelectorAll('#patient-table-body tr').forEach(tr => {\n      const l = tr.getAttribute('data-location');\n      const p = tr.getAttribute('data-provider');\n      const checkedOut = tr.getAttribute('data-checked-out') === 'true';\n      const visible = fd.some(r => r.LOCATION_NAME === l && r.CAREGIVER_NAME === p) && (showCheckedOut || !checkedOut);\n      tr.style.display = visible ? '' : 'none';\n    });\n    updateCards();\n  }\n\n  document.getElementById('search-input').addEventListener('input', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('location-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('provider-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-search').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-filters').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    Array.from(document.getElementById('location-filter').options).forEach(o => o.selected = false);\n    Array.from(document.getElementById('provider-filter').options).forEach(o => o.selected = false);\n    localStorage.removeItem('search');\n    localStorage.removeItem('locs');\n    localStorage.removeItem('provs');\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('toggle-checked-out').addEventListener('click', () => {\n    showCheckedOut = !showCheckedOut;\n    updateCheckedOutToggleText();\n    saveFilters();\n    applyFilters();\n  });\n\n  const sortDirs = {};\n  const numCols = [0,5]; // MRN and Wait Time columns numeric\n  function compare(a,b,isNum,asc){\n    if (isNum) return asc ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n    return asc ? a.localeCompare(b) : b.localeCompare(a);\n  }\n  function sortBy(col){\n    const tbody = document.getElementById('patient-table-body');\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    sortDirs[col] = !sortDirs[col];\n    const asc = sortDirs[col];\n    rows.sort((r1,r2)=>{\n      const v1 = r1.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      const v2 = r2.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      return compare(v1, v2, numCols.includes(col), asc);\n    });\n    rows.forEach(r=>tbody.appendChild(r));\n  }\n  document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n    th.addEventListener('click', ()=> sortBy(parseInt(th.getAttribute('data-col-index'), 10)));\n  });\n\n  document.getElementById('toggle-legend').addEventListener('click', () => {\n    const lc = document.getElementById('legend-container');\n    if (!lc.style.display || lc.style.display === 'none') {\n      lc.style.display = 'block';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    } else {\n      lc.style.display = 'none';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n    }\n  });\n\n  initFilters();\n  loadFilters();\n\n</script>\n</body>\n</html>`;\n\n// Return the HTML in the item\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2360,
        -1420
      ],
      "id": "5de1c1c6-5786-402a-99b2-33d9567fc870",
      "name": "Code30"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n* n8n Code Node: Patient Leaderboard\n********************************************/\nlet data = items[0].json;\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n// Helper to parse TIME_IN_OFFICE as a number\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n// Status order: 0=Acknowledged, 1=Started, 2=Checked Out, 3=Others\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n// Sort data by status then TIME_IN_OFFICE desc\nlet finalData = data.slice();\nfinalData.sort((a, b) => {\n  const statusA = getStatus(a);\n  const statusB = getStatus(b);\n  if (statusA !== statusB) return statusA - statusB;\n  const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n  const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n  return bTIO - aTIO;\n});\n// Aggregate metrics include all patients\nconst totalPatientsToday = finalData.length;\nconst patientsInOffice = finalData.filter(row =>\n  !((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim())\n).length;\nconst ackCheckoutTimes = finalData.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\nlet averageTotalCycleTime = 0;\nif (ackCheckoutTimes.length > 0) {\n  averageTotalCycleTime = ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n}\nconst lobbyTimes = finalData.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\nlet averageLobbyTime = 0;\nif (lobbyTimes.length > 0) {\n  averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n}\n// Provider cards data for top 5 providers having acknowledged/started patients\nfunction countPatientsByProvider(dataArray) {\n  const counts = {};\n  dataArray.forEach(row => {\n    const provider = row.CAREGIVER_NAME || \"\";\n    if (!provider) return;\n    const status = getStatus(row);\n    if (status === 0 || status === 1) {\n      counts[provider] = (counts[provider] || 0) + 1;\n    }\n  });\n  return counts;\n}\nconst providerCountsAll = countPatientsByProvider(finalData);\nconst providerCardsData = Object.keys(providerCountsAll)\n  .map(p => ({provider: p, count: providerCountsAll[p]}))\n  .sort((a, b) => b.count - a.count)\n  .slice(0, 5);\nfunction buildProviderCardsHtml(cardsData) {\n  let html = '<div id=\"provider-cards\" class=\"flex flex-wrap gap-4 mb-4\">';\n  cardsData.forEach(item => {\n    html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n  });\n  html += '</div>';\n  return html;\n}\nconst providerCardsHtml = buildProviderCardsHtml(providerCardsData);\n// Build rows with data attribute for checked out patients\nconst rowsHtml = finalData.map(row => {\n  const location = row.LOCATION_NAME || \"\";\n  const mrn = row.MRN || 0;\n  const provider = row.CAREGIVER_NAME || \"\";\n  const room = row.ROOM_ASSIGNED || \"\";\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr = (row[\"START_TIME(READY TO COME BACK)\"] || row[\"START_TIME(READY_TO_COME_BACK)\"] || \"\").trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n  const timeInOffice = typeof rawTimeInOffice === \"number\" ? rawTimeInOffice.toString() : (rawTimeInOffice || \"\").trim();\n  const waitMinutes = row.ACK_TO_START_TIME || 0;\n  const waitTime = waitMinutes + ' min';\n  let rowClass = \"\";\n  if (checkoutStr) rowClass = \"bg-orange-50\";\n  else if (readyStr) rowClass = \"bg-green-50\";\n  else if (checkInStr) rowClass = \"bg-blue-50\";\n  return `<tr data-location=\"${location}\" data-provider=\"${provider}\" data-checked-out=\"${checkoutStr ? 'true' : 'false'}\" class=\"hover:bg-gray-50 ${rowClass}\">\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">${mrn}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">${provider}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">${room}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">${checkInStr}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">${readyStr}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">${waitTime}</td>\n    <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">${timeInOffice}</td>\n  </tr>`;\n}).join('');\n// Final HTML layout with integrated provider cards and full logic\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n   tailwind.config = {\n    theme: {\n      extend: {\n        colors: { primary: '#3b82f6', secondary: '#10b981' },\n        borderRadius: {\n          none: '0px', sm: '4px', DEFAULT: '8px', md: '12px', lg: '16px',\n          xl: '20px', '2xl': '24px', '3xl': '32px', full: '9999px', button: '8px'\n        }\n      }\n    }\n   }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {margin:0; padding:0; height:100%; overflow:hidden;}\n    body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}\n    #layout-container {\n      display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing: border-box;\n    }\n    #left-column {\n      width:25%; height:100%; display:flex; flex-direction: column; gap:1.5rem; overflow-y:auto;\n    }\n    #right-column {\n      width:75%; display:flex; flex-direction: column; overflow:hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed; width:100%; border-collapse: collapse; text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6; font-size: 1rem; font-weight: 800; text-transform: none; color: #374151;\n      padding: 0.75rem 1rem; user-select:none; cursor:pointer;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n    }\n    #table-body-container {\n      flex: 1; overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #fff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor:pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor:pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #toggle-checked-out {\n      width: 100%; margin-top: 1rem; padding: 0.5rem;\n      border: 1px solid #d1d5db; border-radius: 8px;\n      background-color: #f3f4f6; cursor: pointer;\n      font-weight: 600; color: #374151;\n      transition: background-color 0.3s ease;\n    }\n    #toggle-checked-out:hover {\n      background-color: #e5e7eb;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-xl text-gray-600 mt-4\">Total Patients Today: ${totalPatientsToday}</p>\n        <p id=\"patients-in-office\" class=\"text-2xl font-bold text-gray-800\">Patients in Office: ${patientsInOffice}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageLobbyTime)} min</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${Math.round(averageTotalCycleTime)} min</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\" />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n            <button id=\"toggle-checked-out\">Show Checked Out Patients</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id=\"right-column\">\n      ${providerCardsHtml}\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n<script>\n  const originalData = ${JSON.stringify(finalData)};\n  let showCheckedOut = false;\n  function updateCheckedOutToggleText() {\n    const btn = document.getElementById('toggle-checked-out');\n    btn.textContent = showCheckedOut ? 'Hide Checked Out Patients' : 'Show Checked Out Patients';\n  }\n  function getQueryParam(param) {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(param);\n  }\n  (function() {\n    const rr = getQueryParam('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n  })();\n  function initFilters() {\n    const locSet = [...new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))].sort();\n    const provSet = [...new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))].sort();\n    const locSel = document.getElementById('location-filter');\n    const provSel = document.getElementById('provider-filter');\n    locSel.innerHTML = '';\n    provSel.innerHTML = '';\n    locSet.forEach(loc => {\n      const option = document.createElement('option');\n      option.value = option.textContent = loc;\n      locSel.appendChild(option);\n    });\n    provSet.forEach(prov => {\n      const option = document.createElement('option');\n      option.value = option.textContent = prov;\n      provSel.appendChild(option);\n    });\n  }\n  function saveFilters() {\n    localStorage.setItem('search', document.getElementById('search-input').value);\n    localStorage.setItem('locs', JSON.stringify(\n      Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('provs', JSON.stringify(\n      Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('showCheckedOut', JSON.stringify(showCheckedOut));\n  }\n  function loadFilters() {\n    const s = localStorage.getItem('search') || '';\n    document.getElementById('search-input').value = s;\n    try {\n      const locs = JSON.parse(localStorage.getItem('locs') || '[]');\n      for (const o of document.getElementById('location-filter').options) {\n        o.selected = locs.includes(o.value);\n      }\n    } catch {}\n    try {\n      const provs = JSON.parse(localStorage.getItem('provs') || '[]');\n      for (const o of document.getElementById('provider-filter').options) {\n        o.selected = provs.includes(o.value);\n      }\n    } catch {}\n    try {\n      const storedShow = JSON.parse(localStorage.getItem('showCheckedOut'));\n      if (typeof storedShow === 'boolean') {\n        showCheckedOut = storedShow;\n      }\n    } catch {}\n    updateCheckedOutToggleText();\n    applyFilters();\n  }\n  function filterData() {\n    const s = document.getElementById('search-input').value.toLowerCase();\n    const locs = Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value);\n    const provs = Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value);\n    return originalData.filter(r => {\n      const txt = (\n        r.LOCATION_NAME + ' ' + r.MRN + ' ' + r.CAREGIVER_NAME + ' ' +\n        r.ROOM_ASSIGNED + ' ' + (r[\"ACK_TIME(PT HERE)\"] || '') + ' ' +\n        (r[\"TIME_IN_OFFICE\"] || '') + ' ' +\n        (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '')\n      ).toLowerCase();\n      const isCheckedOut = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim() !== '';\n      if (!showCheckedOut && isCheckedOut) return false;\n      if (!txt.includes(s)) return false;\n      if (locs.length && !locs.includes(r.LOCATION_NAME)) return false;\n      if (provs.length && !provs.includes(r.CAREGIVER_NAME)) return false;\n      return true;\n    });\n  }\n  function updateProviderCards() {\n    const fd = filterData();\n    const counts = {};\n    fd.forEach(r => {\n      const provider = r.CAREGIVER_NAME || '';\n      if (!provider) return;\n      const co = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim();\n      const ack = (r[\"ACK_TIME(PT HERE)\"] || '').trim();\n      const started = (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '').trim();\n      if (co) return;\n      if (ack || started) {\n        counts[provider] = (counts[provider] || 0) + 1;\n      }\n    });\n    const sorted = Object.keys(counts)\n      .map(p => ({provider: p, count: counts[p]}))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 5);\n    const container = document.getElementById('provider-cards');\n    if (!container) return;\n    let html = '';\n    sorted.forEach(item => {\n      html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n    });\n    container.innerHTML = html;\n  }\n  function updateCards() {\n    const totalPatientsElem = document.getElementById('total-patients');\n    const patientsInOfficeElem = document.getElementById('patients-in-office');\n    const avgLobbyElem = document.getElementById('avg-lobby-time');\n    const avgCycleElem = document.getElementById('avg-total-cycle-time');\n\n    // Filtered rows\n    const filteredPatients = filterData();\n\n    // Patients in office (not checked out): filtered\n    const inOfficeCount = filteredPatients.filter(r =>\n      !(r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim()\n    ).length;\n\n    // Only patients in office is updated with filter, total patients stays ALWAYS total, unfiltered!\n    // DON'T change totalPatientsElem, let backend-rendered value show\n\n    patientsInOfficeElem.textContent = 'Patients in Office: ' + inOfficeCount;\n\n    // ALWAYS use all patients in calculations\n    const allPatients = originalData;\n    const lt = allPatients.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n    const avgL = lt.length ? Math.round(lt.reduce((a, b) => a + b, 0) / lt.length) : 0;\n    const ct = allPatients.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n    const avgC = ct.length ? Math.round(ct.reduce((a, b) => a + b, 0) / ct.length) : 0;\n    avgLobbyElem.textContent = avgL + ' min';\n    avgCycleElem.textContent = avgC + ' min';\n    updateProviderCards();\n  }\n  function applyFilters() {\n    const fd = filterData();\n    document.querySelectorAll('#patient-table-body tr').forEach(tr => {\n      const l = tr.getAttribute('data-location');\n      const p = tr.getAttribute('data-provider');\n      const checkedOut = tr.getAttribute('data-checked-out') === 'true';\n      const visible = fd.some(r => r.LOCATION_NAME === l && r.CAREGIVER_NAME === p) && (showCheckedOut || !checkedOut);\n      tr.style.display = visible ? '' : 'none';\n    });\n    updateCards();\n  }\n  document.getElementById('search-input').addEventListener('input', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('location-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('provider-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-search').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-filters').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    Array.from(document.getElementById('location-filter').options).forEach(o => o.selected = false);\n    Array.from(document.getElementById('provider-filter').options).forEach(o => o.selected = false);\n    localStorage.removeItem('search');\n    localStorage.removeItem('locs');\n    localStorage.removeItem('provs');\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('toggle-checked-out').addEventListener('click', () => {\n    showCheckedOut = !showCheckedOut;\n    updateCheckedOutToggleText();\n    saveFilters();\n    applyFilters();\n  });\n  const sortDirs = {};\n  const numCols = [0,5]; // MRN and Wait Time columns numeric\n  function compare(a,b,isNum,asc){\n    if (isNum) return asc ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n    return asc ? a.localeCompare(b) : b.localeCompare(a);\n  }\n  function sortBy(col){\n    const tbody = document.getElementById('patient-table-body');\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    sortDirs[col] = !sortDirs[col];\n    const asc = sortDirs[col];\n    rows.sort((r1,r2)=>{\n      const v1 = r1.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      const v2 = r2.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      return compare(v1, v2, numCols.includes(col), asc);\n    });\n    rows.forEach(r=>tbody.appendChild(r));\n  }\n  document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n    th.addEventListener('click', ()=> sortBy(parseInt(th.getAttribute('data-col-index'), 10)));\n  });\n  document.getElementById('toggle-legend').addEventListener('click', () => {\n    const lc = document.getElementById('legend-container');\n    if (!lc.style.display || lc.style.display === 'none') {\n      lc.style.display = 'block';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    } else {\n      lc.style.display = 'none';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n    }\n  });\n  initFilters();\n  loadFilters();\n</script>\n</body>\n</html>`;\n// Return the HTML in the item\nreturn [\n  {\n    json: {\n      html: htmlOutput\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        -1540
      ],
      "id": "5deaccfc-e058-4c38-8038-bde0e79c6dd6",
      "name": "Code31",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "/********************************************\n* n8n Code Node: Patient Leaderboard\n********************************************/\nlet data = items[0].json;\n// If data is not already an array, wrap or extract it\nif (!Array.isArray(data)) {\n  if (Array.isArray(data.data)) {\n    data = data.data;\n  } else {\n    data = [data];\n  }\n}\n\n// Detect if data is empty or contains no meaningful records\nconst isDataEmpty =\n  !Array.isArray(data) ||\n  data.length === 0 ||\n  (data.length === 1 && Object.keys(data[0]).length === 0) ||\n  data.every(\n    (rec) =>\n      (Object.keys(rec).length === 1 && rec.TIME_IN_OFFICE === null) ||\n      Object.keys(rec).length === 0\n  );\n\n// Helper to parse TIME_IN_OFFICE as a number\nfunction parseTimeInOffice(val) {\n  if (typeof val === 'number') return val;\n  if (typeof val === 'string') {\n    const match = val.match(/(\\d+(\\.\\d+)?)/);\n    return match ? parseFloat(match[0]) : 0;\n  }\n  return 0;\n}\n// Status order: 0=Acknowledged, 1=Started, 2=Checked Out, 3=Others\nfunction getStatus(row) {\n  const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n  const readyStr =\n    (row[\"START_TIME(READY TO COME BACK)\"] ||\n      row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n      \"\"\n    ).trim();\n  const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n  if (checkoutStr) return 2;\n  if (readyStr) return 1;\n  if (checkInStr) return 0;\n  return 3;\n}\n\nlet totalPatientsToday;\nlet patientsInOffice;\nlet averageTotalCycleTime;\nlet averageLobbyTime;\nlet finalData;\nlet providerCardsData;\nlet providerCardsHtml;\nlet rowsHtml;\n\nif (isDataEmpty) {\n  // No data scenario\n  totalPatientsToday = 'N/A';\n  patientsInOffice = 'N/A';\n  averageTotalCycleTime = 'N/A';\n  averageLobbyTime = 'N/A';\n\n  finalData = [];\n\n  providerCardsData = [];\n  providerCardsHtml = ''; // Empty provider cards HTML\n\n  // Table rows: one row with colspan=7 showing \"N/A\"\n  rowsHtml = `<tr><td colspan=\"7\" class=\"text-center text-gray-500 py-4 text-lg font-semibold\">N/A</td></tr>`;\n} else {\n  // Normal data processing\n  finalData = data.slice();\n\n  finalData.sort((a, b) => {\n    const statusA = getStatus(a);\n    const statusB = getStatus(b);\n    if (statusA !== statusB) return statusA - statusB;\n    const aTIO = parseTimeInOffice(a[\"TIME_IN_OFFICE\"]);\n    const bTIO = parseTimeInOffice(b[\"TIME_IN_OFFICE\"]);\n    return bTIO - aTIO;\n  });\n\n  totalPatientsToday = finalData.length;\n  patientsInOffice = finalData.filter(\n    (row) => !((row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim())\n  ).length;\n\n  const ackCheckoutTimes = finalData\n    .map((r) => r.ACTUAL_ACK_TO_CHECKOUT_TIME)\n    .filter((v) => typeof v === 'number');\n  averageTotalCycleTime = 0;\n  if (ackCheckoutTimes.length > 0) {\n    averageTotalCycleTime =\n      ackCheckoutTimes.reduce((sum, val) => sum + val, 0) / ackCheckoutTimes.length;\n  }\n\n  const lobbyTimes = finalData\n    .map((r) => r.ACK_TO_START_TIME)\n    .filter((v) => typeof v === 'number');\n  averageLobbyTime = 0;\n  if (lobbyTimes.length > 0) {\n    averageLobbyTime = lobbyTimes.reduce((sum, val) => sum + val, 0) / lobbyTimes.length;\n  }\n\n  function countPatientsByProvider(dataArray) {\n    const counts = {};\n    dataArray.forEach((row) => {\n      const provider = row.CAREGIVER_NAME || \"\";\n      if (!provider) return;\n      const status = getStatus(row);\n      if (status === 0 || status === 1) {\n        counts[provider] = (counts[provider] || 0) + 1;\n      }\n    });\n    return counts;\n  }\n  const providerCountsAll = countPatientsByProvider(finalData);\n  providerCardsData = Object.keys(providerCountsAll)\n    .map((p) => ({ provider: p, count: providerCountsAll[p] }))\n    .sort((a, b) => b.count - a.count)\n    .slice(0, 5);\n\n  function buildProviderCardsHtml(cardsData) {\n    if (cardsData.length === 0) return '';\n    let html = '<div class=\"flex flex-wrap gap-4 mb-4\">';\n    cardsData.forEach((item) => {\n      html += ''\n        + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n        + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n        + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n        + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n        + '</div>';\n    });\n    html += '</div>';\n    return html;\n  }\n  providerCardsHtml = buildProviderCardsHtml(providerCardsData);\n\n  rowsHtml = finalData\n    .map((row) => {\n      const location = row.LOCATION_NAME || \"\";\n      const mrn = row.MRN || 0;\n      const provider = row.CAREGIVER_NAME || \"\";\n      const room = row.ROOM_ASSIGNED || \"\";\n      const checkInStr = (row[\"ACK_TIME(PT HERE)\"] || \"\").trim();\n      const readyStr =\n        (row[\"START_TIME(READY TO COME BACK)\"] ||\n          row[\"START_TIME(READY_TO_COME_BACK)\"] ||\n          \"\"\n        ).trim();\n      const checkoutStr = (row[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || \"\").trim();\n      const rawTimeInOffice = row[\"TIME_IN_OFFICE\"];\n      const timeInOffice =\n        typeof rawTimeInOffice === \"number\"\n          ? rawTimeInOffice.toString()\n          : (rawTimeInOffice || \"\").trim();\n      const waitMinutes = row.ACK_TO_START_TIME || 0;\n      const waitTime = waitMinutes + \" min\";\n      let rowClass = \"\";\n      if (checkoutStr) rowClass = \"bg-orange-50\";\n      else if (readyStr) rowClass = \"bg-green-50\";\n      else if (checkInStr) rowClass = \"bg-blue-50\";\n      return `<tr data-location=\"${location}\" data-provider=\"${provider}\" data-checked-out=\"${\n        checkoutStr ? \"true\" : \"false\"\n      }\" class=\"hover:bg-gray-50 ${rowClass}\">\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${mrn}\">${mrn}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${provider.toLowerCase()}\">${provider}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${room.toLowerCase()}\">${room}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${checkInStr.toLowerCase()}\">${checkInStr}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${readyStr.toLowerCase()}\">${readyStr}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${waitMinutes}\">${waitTime}</td>\n        <td class=\"px-4 py-2 text-center text-sm text-gray-500 sortable-cell\" data-sort-value=\"${timeInOffice.toLowerCase()}\">${timeInOffice}</td>\n      </tr>`;\n    })\n    .join(\"\");\n}\n\n// ---------- HTML Template --------------\n\nconst htmlOutput = `<!DOCTYPE html>\n<html lang=\"en\" class=\"h-full overflow-hidden\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n  <title>Patient Leaderboard</title>\n  <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n  <script>\n   tailwind.config = {\n    theme: {\n      extend: {\n        colors: { primary: '#3b82f6', secondary: '#10b981' },\n        borderRadius: {\n          none: '0px', sm: '4px', DEFAULT: '8px', md: '12px', lg: '16px',\n          xl: '20px', '2xl': '24px', '3xl': '32px', full: '9999px', button: '8px'\n        }\n      }\n    }\n   }\n  </script>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\n  <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"/>\n  <link href=\"https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css\" rel=\"stylesheet\"/>\n  <style>\n    html, body {margin:0; padding:0; height:100%; overflow:hidden;}\n    body {font-family: \"Inter\", sans-serif; background-color:#f9fafb;}\n    #layout-container {\n      display:flex; height:100%; width:100%; gap:1.5rem; padding:1.5rem; box-sizing: border-box;\n    }\n    #left-column {\n      width:25%; height:100%; display:flex; flex-direction: column; gap:1.5rem; overflow-y:auto;\n    }\n    #right-column {\n      width:75%; display:flex; flex-direction: column; overflow:hidden;\n    }\n    .header-table, .body-table {\n      table-layout: fixed; width:100%; border-collapse: collapse; text-align: center;\n    }\n    .header-table thead th {\n      background-color: #f3f4f6; font-size: 1rem; font-weight: 800; text-transform: none; color: #374151;\n      padding: 0.75rem 1rem; user-select:none; cursor:pointer;\n    }\n    .header-table thead th.sortable:hover {\n      background-color: #e5e7eb;\n    }\n    #table-body-container {\n      flex: 1; overflow-y: auto;\n    }\n    .metric-card {\n      transition: all 0.3s ease;\n      border: 1px solid #e5e7eb;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n      background: linear-gradient(to bottom right, #fff, #f9fafb);\n    }\n    .metric-card:hover {\n      transform: translateY(-3px);\n      box-shadow: 0 6px 10px rgba(0,0,0,0.1);\n    }\n    .sortable-cell:hover {\n      cursor:pointer;\n      background-color: #f3f4f6;\n    }\n    .clear-search-btn {\n      cursor:pointer;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: #9ca3af;\n      font-size: 0.9rem;\n    }\n    .clear-search-btn:hover {\n      color: #6b7280;\n    }\n    #toggle-checked-out {\n      width: 100%; margin-top: 1rem; padding: 0.5rem;\n      border: 1px solid #d1d5db; border-radius: 8px;\n      background-color: #f3f4f6; cursor: pointer;\n      font-weight: 600; color: #374151;\n      transition: background-color 0.3s ease;\n    }\n    #toggle-checked-out:hover {\n      background-color: #e5e7eb;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"layout-container\">\n    <div id=\"left-column\">\n      <div class=\"metric-card rounded-lg p-8 flex flex-col items-center justify-center\">\n        <h2 class=\"text-4xl font-bold text-gray-800 text-center\">Patient Leaderboard</h2>\n        <p id=\"total-patients\" class=\"text-xl text-gray-600 mt-4\">Total Patients Today: ${totalPatientsToday}</p>\n        <p id=\"patients-in-office\" class=\"text-2xl font-bold text-gray-800\">Patients in Office: ${patientsInOffice}</p>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Lobby Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-yellow-100 rounded-full\">\n            <i class=\"ri-time-line text-yellow-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-lobby-time\" class=\"text-3xl font-bold text-gray-800\">${\n              averageLobbyTime === 'N/A'\n                ? 'N/A'\n                : Math.round(averageLobbyTime) + ' min'\n            }</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Started</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"metric-card rounded-lg p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-bold text-gray-700\">Avg Total Cycle Time</h3>\n          <div class=\"w-10 h-10 flex items-center justify-center bg-green-100 rounded-full\">\n            <i class=\"ri-timer-line text-green-600\"></i>\n          </div>\n        </div>\n        <div class=\"flex items-end justify-between\">\n          <div>\n            <p id=\"avg-total-cycle-time\" class=\"text-3xl font-bold text-gray-800\">${\n              averageTotalCycleTime === 'N/A'\n                ? 'N/A'\n                : Math.round(averageTotalCycleTime) + ' min'\n            }</p>\n            <p class=\"text-sm text-gray-500\">Acknowledged to Checked Out</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"px-6 py-2 bg-gray-50 border border-gray-200 cursor-pointer rounded-lg\" id=\"toggle-legend\">\n        <span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span>\n        <i class=\"ri-arrow-down-s-line\"></i>\n      </div>\n      <div id=\"legend-container\" style=\"display:none;\">\n        <div class=\"bg-gray-50 border border-t-0 border-gray-200 p-4 rounded-b-lg\">\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-blue-500\"></span><span class=\"text-sm text-gray-600\">Acknowledged</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-green-500\"></span><span class=\"text-sm text-gray-600\">Started</span></div>\n            <div class=\"flex items-center space-x-2\"><span class=\"w-3 h-3 rounded-full bg-orange-500\"></span><span class=\"text-sm text-gray-600\">Checked Out</span></div>\n          </div>\n          <div class=\"text-gray-700 font-medium mb-3\" id=\"last-refresh\"></div>\n          <div class=\"flex flex-col space-y-2 mb-3\">\n            <select id=\"location-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n            <select id=\"provider-filter\" multiple class=\"border border-gray-300 rounded px-2 py-1 text-sm\"></select>\n          </div>\n          <div class=\"flex flex-col space-y-2\">\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <i class=\"ri-search-line text-gray-400\"></i>\n              </div>\n              <input type=\"text\" id=\"search-input\" class=\"bg-white border border-gray-300 text-gray-700 text-sm rounded-button pl-10 pr-8 py-2 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\" placeholder=\"Search...\" />\n              <span class=\"clear-search-btn ri-close-line\" id=\"clear-search\"></span>\n            </div>\n            <button id=\"clear-filters\" class=\"border border-gray-300 rounded px-2 py-1 text-sm\">Clear Filters</button>\n            <button id=\"toggle-checked-out\">Show Checked Out Patients</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div id=\"right-column\">\n      <!-- Always render provider-cards container so JS can safely update contents -->\n      <div id=\"provider-cards\" class=\"flex flex-wrap gap-4 mb-4\">\n        ${providerCardsHtml}\n      </div>\n      <table class=\"header-table\">\n        <colgroup>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n          <col style=\"width:14.28%;\"/>\n        </colgroup>\n        <thead>\n          <tr>\n            <th data-col-index=\"0\" class=\"sortable\">MRN</th>\n            <th data-col-index=\"1\" class=\"sortable\">Provider <i class=\"ri-arrow-drop-down-line\"></i></th>\n            <th data-col-index=\"2\" class=\"sortable\">Room</th>\n            <th data-col-index=\"3\" class=\"sortable\">Acknowledged</th>\n            <th data-col-index=\"4\" class=\"sortable\">Started</th>\n            <th data-col-index=\"5\" class=\"sortable\">Wait Time</th>\n            <th data-col-index=\"6\" class=\"sortable\">Time In Office</th>\n          </tr>\n        </thead>\n      </table>\n      <div id=\"table-body-container\">\n        <table class=\"body-table\">\n          <colgroup>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n            <col style=\"width:14.28%;\"/>\n          </colgroup>\n          <tbody id=\"patient-table-body\">\n            ${rowsHtml}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n<script>\n  // Data for frontend filtering and display\n  const originalData = ${JSON.stringify(finalData)};\n  let showCheckedOut = false;\n\n  function updateCheckedOutToggleText() {\n    const btn = document.getElementById('toggle-checked-out');\n    btn.textContent = showCheckedOut ? 'Hide Checked Out Patients' : 'Show Checked Out Patients';\n  }\n\n  function getQueryParam(param) {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(param);\n  }\n\n  (function() {\n    const rr = getQueryParam('refreshrate');\n    if (rr && !isNaN(rr)) {\n      setTimeout(() => location.reload(), parseFloat(rr) * 60000);\n    }\n  })();\n\n  function initFilters() {\n    if(originalData.length === 0){\n      // No data, clear filters\n      document.getElementById('location-filter').innerHTML = '';\n      document.getElementById('provider-filter').innerHTML = '';\n      return;\n    }\n    const locSet = [...new Set(originalData.map(r => r.LOCATION_NAME).filter(Boolean))].sort();\n    const provSet = [...new Set(originalData.map(r => r.CAREGIVER_NAME).filter(Boolean))].sort();\n    const locSel = document.getElementById('location-filter');\n    const provSel = document.getElementById('provider-filter');\n    locSel.innerHTML = '';\n    provSel.innerHTML = '';\n    locSet.forEach(loc => {\n      const option = document.createElement('option');\n      option.value = option.textContent = loc;\n      locSel.appendChild(option);\n    });\n    provSet.forEach(prov => {\n      const option = document.createElement('option');\n      option.value = option.textContent = prov;\n      provSel.appendChild(option);\n    });\n  }\n\n  function saveFilters() {\n    localStorage.setItem('search', document.getElementById('search-input').value);\n    localStorage.setItem('locs', JSON.stringify(\n      Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('provs', JSON.stringify(\n      Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value)\n    ));\n    localStorage.setItem('showCheckedOut', JSON.stringify(showCheckedOut));\n  }\n\n  function loadFilters() {\n    const s = localStorage.getItem('search') || '';\n    document.getElementById('search-input').value = s;\n    try {\n      const locs = JSON.parse(localStorage.getItem('locs') || '[]');\n      for (const o of document.getElementById('location-filter').options) {\n        o.selected = locs.includes(o.value);\n      }\n    } catch {}\n    try {\n      const provs = JSON.parse(localStorage.getItem('provs') || '[]');\n      for (const o of document.getElementById('provider-filter').options) {\n        o.selected = provs.includes(o.value);\n      }\n    } catch {}\n    try {\n      const storedShow = JSON.parse(localStorage.getItem('showCheckedOut'));\n      if (typeof storedShow === 'boolean') {\n        showCheckedOut = storedShow;\n      }\n    } catch {}\n    updateCheckedOutToggleText();\n    applyFilters();\n  }\n\n  function filterData() {\n    if(originalData.length === 0) return [];\n    const s = document.getElementById('search-input').value.toLowerCase();\n    const locs = Array.from(document.getElementById('location-filter').selectedOptions).map(o => o.value);\n    const provs = Array.from(document.getElementById('provider-filter').selectedOptions).map(o => o.value);\n    return originalData.filter(r => {\n      const txt = (\n        r.LOCATION_NAME + ' ' + r.MRN + ' ' + r.CAREGIVER_NAME + ' ' +\n        r.ROOM_ASSIGNED + ' ' + (r[\"ACK_TIME(PT HERE)\"] || '') + ' ' +\n        (r[\"TIME_IN_OFFICE\"] || '') + ' ' +\n        (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '')\n      ).toLowerCase();\n      const isCheckedOut = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim() !== '';\n      if (!showCheckedOut && isCheckedOut) return false;\n      if (!txt.includes(s)) return false;\n      if (locs.length && !locs.includes(r.LOCATION_NAME)) return false;\n      if (provs.length && !provs.includes(r.CAREGIVER_NAME)) return false;\n      return true;\n    });\n  }\n\n  function updateProviderCards() {\n    const fd = filterData();\n    if(fd.length === 0){\n      const container = document.getElementById('provider-cards');\n      if(container) container.innerHTML = '';\n      return;\n    }\n    const counts = {};\n    fd.forEach(r => {\n      const provider = r.CAREGIVER_NAME || '';\n      if (!provider) return;\n      const co = (r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim();\n      const ack = (r[\"ACK_TIME(PT HERE)\"] || '').trim();\n      const started = (r[\"START_TIME(READY TO COME BACK)\"] || r[\"START_TIME(READY_TO_COME_BACK)\"] || '').trim();\n      if (co) return;\n      if (ack || started) {\n        counts[provider] = (counts[provider] || 0) + 1;\n      }\n    });\n    const sorted = Object.keys(counts)\n      .map(p => ({provider: p, count: counts[p]}))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 5);\n    const container = document.getElementById('provider-cards');\n    if (!container) return;\n    let html = '';\n    sorted.forEach(item => {\n      html += ''\n      + '<div class=\"metric-card rounded-lg p-4 flex flex-col items-center justify-center min-w-[10rem]\">'\n      + '<h4 class=\"text-lg font-semibold text-gray-700\">' + item.provider + '</h4>'\n      + '<p class=\"text-2xl font-bold text-gray-800 mt-1\">' + item.count + '</p>'\n      + '<p class=\"text-sm text-gray-500\">Patients Acknowledged/Started</p>'\n      + '</div>';\n    });\n    container.innerHTML = html;\n  }\n\n  function updateCards() {\n    const totalPatientsElem = document.getElementById('total-patients');\n    const patientsInOfficeElem = document.getElementById('patients-in-office');\n    const avgLobbyElem = document.getElementById('avg-lobby-time');\n    const avgCycleElem = document.getElementById('avg-total-cycle-time');\n\n    if(originalData.length === 0){\n      patientsInOfficeElem.textContent = 'Patients in Office: N/A';\n      avgLobbyElem.textContent = 'N/A';\n      avgCycleElem.textContent = 'N/A';\n      updateProviderCards();\n      return;\n    }\n\n    const filteredPatients = filterData();\n\n    const inOfficeCount = filteredPatients.filter(r =>\n      !(r[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"] || '').trim()\n    ).length;\n\n    patientsInOfficeElem.textContent = 'Patients in Office: ' + inOfficeCount;\n\n    const allPatients = originalData;\n    const lt = allPatients.map(r => r.ACK_TO_START_TIME).filter(v => typeof v === 'number');\n    const avgL = lt.length ? Math.round(lt.reduce((a, b) => a + b, 0) / lt.length) : 0;\n    const ct = allPatients.map(r => r.ACTUAL_ACK_TO_CHECKOUT_TIME).filter(v => typeof v === 'number');\n    const avgC = ct.length ? Math.round(ct.reduce((a, b) => a + b, 0) / ct.length) : 0;\n    avgLobbyElem.textContent = avgL + ' min';\n    avgCycleElem.textContent = avgC + ' min';\n    updateProviderCards();\n  }\n\n  function applyFilters() {\n    if(originalData.length === 0){\n      // Nothing to filter\n      return;\n    }\n    const fd = filterData();\n    document.querySelectorAll('#patient-table-body tr').forEach(tr => {\n      const l = tr.getAttribute('data-location');\n      const p = tr.getAttribute('data-provider');\n      const checkedOut = tr.getAttribute('data-checked-out') === 'true';\n      const visible = fd.some(r => r.LOCATION_NAME === l && r.CAREGIVER_NAME === p) && (showCheckedOut || !checkedOut);\n      tr.style.display = visible ? '' : 'none';\n    });\n    updateCards();\n  }\n  \n  document.getElementById('search-input').addEventListener('input', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('location-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('provider-filter').addEventListener('change', () => {\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-search').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('clear-filters').addEventListener('click', () => {\n    document.getElementById('search-input').value = '';\n    Array.from(document.getElementById('location-filter').options).forEach(o => o.selected = false);\n    Array.from(document.getElementById('provider-filter').options).forEach(o => o.selected = false);\n    localStorage.removeItem('search');\n    localStorage.removeItem('locs');\n    localStorage.removeItem('provs');\n    saveFilters();\n    applyFilters();\n  });\n  document.getElementById('toggle-checked-out').addEventListener('click', () => {\n    showCheckedOut = !showCheckedOut;\n    updateCheckedOutToggleText();\n    saveFilters();\n    applyFilters();\n  });\n  const sortDirs = {};\n  const numCols = [0,5]; // MRN and Wait Time columns numeric\n  function compare(a,b,isNum,asc){\n    if (isNum) return asc ? (parseFloat(a) - parseFloat(b)) : (parseFloat(b) - parseFloat(a));\n    return asc ? a.localeCompare(b) : b.localeCompare(a);\n  }\n  function sortBy(col){\n    if(originalData.length === 0) return; // Nothing to sort\n\n    const tbody = document.getElementById('patient-table-body');\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    sortDirs[col] = !sortDirs[col];\n    const asc = sortDirs[col];\n    rows.sort((r1,r2)=>{\n      const v1 = r1.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      const v2 = r2.querySelectorAll('.sortable-cell')[col]?.getAttribute('data-sort-value') || '';\n      return compare(v1, v2, numCols.includes(col), asc);\n    });\n    rows.forEach(r=>tbody.appendChild(r));\n  }\n  document.querySelectorAll('.header-table thead th.sortable').forEach(th=>{\n    th.addEventListener('click', ()=> sortBy(parseInt(th.getAttribute('data-col-index'), 10)));\n  });\n  document.getElementById('toggle-legend').addEventListener('click', () => {\n    const lc = document.getElementById('legend-container');\n    if (!lc.style.display || lc.style.display === 'none') {\n      lc.style.display = 'block';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Hide Legend/Filters/Search</span> <i class=\"ri-arrow-up-s-line\"></i>';\n    } else {\n      lc.style.display = 'none';\n      document.getElementById('toggle-legend').innerHTML = '<span class=\"text-sm font-medium text-gray-700\">Show Legend/Filters/Search</span> <i class=\"ri-arrow-down-s-line\"></i>';\n    }\n  });\n  initFilters();\n  loadFilters();\n</script>\n</body>\n</html>`;\n\n// Return the HTML in the item\nreturn [\n  {\n    json: {\n      html: htmlOutput,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2380,
        -1680
      ],
      "id": "12ea2261-ac04-40a3-a61b-1ce1ad47c4e3",
      "name": "Code32",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node code using native JavaScript Date object\n\n// Helper function to parse a time string (\"h:mma\", e.g., \"8:00AM\")\n// Returns a Date object for today with the specified hours and minutes.\nfunction parseTime(timeStr) {\n\tconst trimmed = timeStr.trim();\n\t// Regular expression to capture the hour, minutes, and period (AM/PM)\n\tconst regex = /(\\d{1,2}):(\\d{2})(AM|PM)/i;\n\tconst match = trimmed.match(regex);\n\tif (!match) return null;\n\tlet hour = parseInt(match[1], 10);\n\tconst minute = parseInt(match[2], 10);\n\tconst period = match[3].toUpperCase();\n\n\t// Convert to 24-hour format.\n\tif (period === 'PM' && hour < 12) {\n\t\thour += 12;\n\t}\n\tif (period === 'AM' && hour === 12) {\n\t\thour = 0;\n\t}\n\t// Use today's date for the resulting Date object.\n\tconst now = new Date();\n\treturn new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, minute, 0);\n}\n\n// Loop through each incoming item\nfor (const item of items) {\n\t// Retrieve and validate the ACK_TIME string.\n\tconst ackStr = item.json[\"ACK_TIME(PT HERE)\"];\n\tif (!ackStr) {\n\t\titem.json[\"TIME_IN_OFFICE\"] = null;\n\t\tcontinue;\n\t}\n\tconst ackTime = parseTime(ackStr);\n\tif (!ackTime) {\n\t\titem.json[\"TIME_IN_OFFICE\"] = null;\n\t\tcontinue;\n\t}\n\n\t// Check if there's a checkout time available.\n\tlet checkoutTime;\n\tconst checkOutStr = item.json[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"];\n\tif (checkOutStr && checkOutStr.trim() !== \"\") {\n\t\tcheckoutTime = parseTime(checkOutStr);\n\t}\n\n\t// Calculate the difference in minutes:\n\t// If there is a checkout time, use it.\n\t// Otherwise, calculate the difference between the current time and the ack time.\n\tlet diffMs;\n\tif (checkoutTime) {\n\t\tdiffMs = checkoutTime - ackTime;\n\t} else {\n\t\tdiffMs = new Date() - ackTime;\n\t}\n\tconst diffMins = Math.round(diffMs / 60000);\n\t\n\t// Add \" min\" to the calculated minutes.\n\titem.json[\"TIME_IN_OFFICE\"] = diffMins + \" min\";\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        360
      ],
      "id": "45998049-fd67-4299-b60d-89c67f9fa321",
      "name": "Code33",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pgay74qw8ss61mk",
        "table": "m2u7fhzs9889ysc",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -200,
        740
      ],
      "id": "2a7f13e5-7f4e-44ed-9332-a1a5b0281c41",
      "name": "NocoDB6",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "NQp5MuqQIS7vyAPq",
          "name": "NocoDB account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        480,
        820
      ],
      "id": "bae0cfbb-cc6d-47dc-a47b-d3e4927540ea",
      "name": "Aggregate3",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Helper function to parse time string like \"8:47AM\" into {hour, minute}\nfunction parseTimeString(timeStr) {\n    const trimmed = timeStr.trim();\n    const regex = /(\\d{1,2}):(\\d{2})(AM|PM)/i;\n    const match = trimmed.match(regex);\n    if (!match) return null;\n\n    let hour = parseInt(match[1], 10);\n    const minute = parseInt(match[2], 10);\n    const period = match[3].toUpperCase();\n\n    if (period === 'PM' && hour < 12) {\n        hour += 12;\n    }\n    if (period === 'AM' && hour === 12) {\n        hour = 0;\n    }\n\n    return { hour, minute };\n}\n\n// Helper function to determine if a date (year, month, day) in America/Detroit is DST\n// Returns true if DST, false if standard time (no DST)\nfunction isDetroitDST(year, month, day) {\n    // According to US DST rules:\n    // DST starts: 2nd Sunday in March\n    // DST ends: 1st Sunday in November\n\n    // Month in JS Date: 0=January,...11=December\n    if (month < 2 || month > 10) return false; // Jan, Feb, Dec = no DST\n    if (month > 2 && month < 10) return true;  // Apr to Oct = DST\n\n    // For March and November, calculate if it's DST by finding the relevant Sundays.\n\n    // Find 2nd Sunday in March\n    if (month === 2) {\n        let d = new Date(year, 2, 1);\n        let firstSunday = 7 - d.getDay();\n        if (firstSunday === 7) firstSunday = 0; // If first day is Sunday\n        const secondSunday = firstSunday + 7;\n        return day >= secondSunday;\n    }\n\n    // Find 1st Sunday in November\n    if (month === 10) {\n        let d = new Date(year, 10, 1);\n        let firstSunday = 7 - d.getDay();\n        if (firstSunday === 7) firstSunday = 0; // If first day is Sunday\n        return day < firstSunday;\n    }\n\n    return false; // fallback no DST\n}\n\n// Convert the EST/EDT local time string to a JS Date (in UTC) for today in Detroit timezone\nfunction parseDetroitTimeToUTC(timeStr) {\n    const now = new Date();\n\n    // Parse time parts\n    const timeParts = parseTimeString(timeStr);\n    if (!timeParts) return null;\n\n    // Get today's date parts\n    const year = now.getFullYear();\n    const month = now.getMonth(); // 0-based\n    const day = now.getDate();\n\n    // Determine if today is DST or EST in Detroit\n    const dst = isDetroitDST(year, month, day);\n\n    // Build a Date object in UTC corresponding to the time in Detroit\n    // First, create date at UTC midnight today\n    const utcDate = new Date(Date.UTC(year, month, day, timeParts.hour, timeParts.minute, 0));\n\n    // Calculate offset in hours: -4 for DST, -5 for standard time\n    const offsetHours = dst ? 4 : 5;\n\n    // Adjust UTC time by adding offset hours to get the \"Detroit local\" time in UTC terms\n    // Because Detroit time = UTC - offset, so UTC = Detroit time + offset\n    utcDate.setUTCHours(utcDate.getUTCHours() + offsetHours);\n\n    return utcDate;\n}\n\n// Main loop\nfor (const item of items) {\n    const ackStr = item.json[\"ACK_TIME(PT HERE)\"];\n    if (!ackStr) {\n        item.json[\"TIME_IN_OFFICE\"] = null;\n        continue;\n    }\n\n    const ackTime = parseDetroitTimeToUTC(ackStr);\n    if (!ackTime) {\n        item.json[\"TIME_IN_OFFICE\"] = null;\n        continue;\n    }\n\n    // checkout time string\n    const checkOutStr = item.json[\"CHECK_OUT(PATIET HAS LEFT THE BUILDING)\"];\n    let checkoutTime = null;\n    if (checkOutStr && checkOutStr.trim() !== \"\") {\n        checkoutTime = parseDetroitTimeToUTC(checkOutStr);\n    }\n\n    // Get current time (in UTC)\n    const nowUTC = new Date();\n\n    let diffMinutes;\n    if (checkoutTime) {\n        diffMinutes = Math.round((checkoutTime - ackTime) / 60000);\n    } else {\n        diffMinutes = Math.round((nowUTC - ackTime) / 60000);\n    }\n\n    if (diffMinutes < 0) diffMinutes = 0;\n\n    item.json[\"TIME_IN_OFFICE\"] = diffMinutes + \" min\";\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        800
      ],
      "id": "5af908a2-dfc6-4e3b-9f2d-9f6115b61e51",
      "name": "Code34",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -700,
        680
      ],
      "typeVersion": 1,
      "id": "9cf8cae1-7ced-4ae3-9813-580ba3393ee7",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "path": "2500bcfd-6c64-44e0-a26e-13fc658482bb",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -480,
        680
      ],
      "id": "dde367d8-5e99-40f3-b9d5-f06cefda672f",
      "name": "Webhook3",
      "webhookId": "2500bcfd-6c64-44e0-a26e-13fc658482bb"
    }
  ],
  "pinData": {
    "NocoDB": [
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "WYRICK-JOHNSON, P",
          "MRN": 7261,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2950,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 1,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "MATTHEWS, P",
          "MRN": 590510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:50AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2893,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 2,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "MOBLEY, C",
          "MRN": 3937,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:54AM ",
          "START_TIME(READY TO COME BACK)": " 7:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2949,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 3,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WHITE, C",
          "MRN": 654260,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:04AM ",
          "START_TIME(READY TO COME BACK)": " 8:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2939,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 4,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HORYD, O",
          "MRN": 339810,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:20AM ",
          "START_TIME(READY TO COME BACK)": " 8:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2922,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 5,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WATKINS, D",
          "MRN": 294820,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:47AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2836,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 6,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "SHACKLEFORD, S",
          "MRN": 1353510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:42AM ",
          "START_TIME(READY TO COME BACK)": " 9:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:05AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 2839,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 7,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BROWNE, T",
          "MRN": 7581,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:55AM ",
          "START_TIME(READY TO COME BACK)": " 9:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:56AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2828,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 121,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 121,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 8,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ANAYA-BENCOMO, Z",
          "MRN": 657960,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2813,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 9,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "ALEXANDER, T",
          "MRN": 903450,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:21AM ",
          "START_TIME(READY TO COME BACK)": "10:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:53AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2802,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 10,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "JOHNSON, D",
          "MRN": 973140,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:02AM ",
          "START_TIME(READY TO COME BACK)": "11:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2761,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 125,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 11,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "KEILS, J",
          "MRN": 877490,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:37AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:27AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2786,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 12,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ROWAN, E",
          "MRN": 470040,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2759,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 49,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 13,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BALL, N",
          "MRN": 232380,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:29AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2734,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 102,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 14,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WEITHERSPOON, R",
          "MRN": 52489,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": "11:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2723,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 15,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BROWN, S",
          "MRN": 1120420,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2709,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 16,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HEMLINGER, J",
          "MRN": 12292,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:08PM ",
          "START_TIME(READY TO COME BACK)": "12:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:40PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2695,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 17,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "NICHOLSON, J",
          "MRN": 234850,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:35PM ",
          "START_TIME(READY TO COME BACK)": "12:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:55PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2668,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 16,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 18,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WILLIAMS, L",
          "MRN": 1345500,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:49PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2651,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 19,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "RILEY, S",
          "MRN": 485750,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:10AM ",
          "START_TIME(READY TO COME BACK)": " 8:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2933,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 18,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 20,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BATES, V",
          "MRN": 414340,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:15AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2928,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 21,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SCHRODER, R",
          "MRN": 577490,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:32AM ",
          "START_TIME(READY TO COME BACK)": " 8:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:49AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2911,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 22,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BALLYSINGH, E",
          "MRN": 348770,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2910,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 48,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 23,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MARTIN, V",
          "MRN": 212700,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:26AM ",
          "START_TIME(READY TO COME BACK)": " 9:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:13AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2857,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 24,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "JOSEPH, A",
          "MRN": 952200,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:37AM ",
          "START_TIME(READY TO COME BACK)": " 9:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:01AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2846,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 25,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "PARSON, D",
          "MRN": 633290,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:09AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2795,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 26,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCGEE, S",
          "MRN": 516570,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2738,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 27,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "ROWAN, J",
          "MRN": 706800,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:06AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 2757,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 28,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "WATERS-THOMAS, S",
          "MRN": 9947,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:19AM ",
          "START_TIME(READY TO COME BACK)": " 9:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:58AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2864,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 29,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SMITH, S",
          "MRN": 570210,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:40AM ",
          "START_TIME(READY TO COME BACK)": " 9:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2843,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 30,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCLAY, L",
          "MRN": 8314,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:32AM ",
          "START_TIME(READY TO COME BACK)": "11:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2731,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 31,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MOSBY, D",
          "MRN": 569920,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:46AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2717,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 32,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DAWSON SR, D",
          "MRN": 299170,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:52PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2616,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 33,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      }
    ],
    "Microsoft SQL1": [
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "WYRICK-JOHNSON, P",
          "MRN": "007261",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2950,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "MATTHEWS, P",
          "MRN": "590510",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:50AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2893,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "MOBLEY, C",
          "MRN": "003937",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:54AM ",
          "START_TIME(READY TO COME BACK)": " 7:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2949,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WHITE, C",
          "MRN": "654260",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:04AM ",
          "START_TIME(READY TO COME BACK)": " 8:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2939,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HORYD, O",
          "MRN": "339810",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:20AM ",
          "START_TIME(READY TO COME BACK)": " 8:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2922,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WATKINS, D",
          "MRN": "294820",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:47AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2836,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "SHACKLEFORD, S",
          "MRN": "1353510",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:42AM ",
          "START_TIME(READY TO COME BACK)": " 9:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:05AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 2839,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BROWNE, T",
          "MRN": "007581",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:55AM ",
          "START_TIME(READY TO COME BACK)": " 9:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:56AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2828,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 121,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 121,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ANAYA-BENCOMO, Z",
          "MRN": "657960",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2813,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "ALEXANDER, T",
          "MRN": "903450",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:21AM ",
          "START_TIME(READY TO COME BACK)": "10:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:53AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2802,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "JOHNSON, D",
          "MRN": "973140",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:02AM ",
          "START_TIME(READY TO COME BACK)": "11:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2761,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 125,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "KEILS, J",
          "MRN": "877490",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:37AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:27AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2786,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ROWAN, E",
          "MRN": "470040",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2759,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 49,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BALL, N",
          "MRN": "232380",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:29AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2734,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 102,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WEITHERSPOON, R",
          "MRN": "052489",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": "11:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2723,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BROWN, S",
          "MRN": "1120420",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2709,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HEMLINGER, J",
          "MRN": "012292",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:08PM ",
          "START_TIME(READY TO COME BACK)": "12:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:40PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2695,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "NICHOLSON, J",
          "MRN": "234850",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:35PM ",
          "START_TIME(READY TO COME BACK)": "12:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:55PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2668,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 16,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WILLIAMS, L",
          "MRN": "1345500",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:49PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2651,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "RILEY, S",
          "MRN": "485750",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:10AM ",
          "START_TIME(READY TO COME BACK)": " 8:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2933,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 18,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BATES, V",
          "MRN": "414340",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:15AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2928,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SCHRODER, R",
          "MRN": "577490",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:32AM ",
          "START_TIME(READY TO COME BACK)": " 8:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:49AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2911,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BALLYSINGH, E",
          "MRN": "348770",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2910,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 48,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MARTIN, V",
          "MRN": "212700",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:26AM ",
          "START_TIME(READY TO COME BACK)": " 9:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:13AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2857,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "JOSEPH, A",
          "MRN": "952200",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:37AM ",
          "START_TIME(READY TO COME BACK)": " 9:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:01AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2846,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "PARSON, D",
          "MRN": "633290",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:09AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2795,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCGEE, S",
          "MRN": "516570",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2738,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "ROWAN, J",
          "MRN": "706800",
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:06AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 2757,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "WATERS-THOMAS, S",
          "MRN": "009947",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:19AM ",
          "START_TIME(READY TO COME BACK)": " 9:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:58AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2864,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SMITH, S",
          "MRN": "570210",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:40AM ",
          "START_TIME(READY TO COME BACK)": " 9:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2843,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCLAY, L",
          "MRN": "008314",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:32AM ",
          "START_TIME(READY TO COME BACK)": "11:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2731,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MOSBY, D",
          "MRN": "569920",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:46AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2717,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DAWSON SR, D",
          "MRN": "299170",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:52PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2616,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      }
    ],
    "Microsoft SQL": [
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "BRONSON, K",
          "MRN": "1042820",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:01AM ",
          "START_TIME(READY TO COME BACK)": "10:01AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:45AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 131,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "LUNG, B",
          "MRN": "1014640",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:11AM ",
          "START_TIME(READY TO COME BACK)": "11:22AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:41PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": 50,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 150,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 139,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "SMITH, T",
          "MRN": "1335210",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:28AM ",
          "START_TIME(READY TO COME BACK)": "11:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:02PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 44,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 34,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "MYERS, S",
          "MRN": "1383210",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:15PM ",
          "START_TIME(READY TO COME BACK)": "12:15PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -3,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "MYERS, S",
          "MRN": "1383210",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:47PM ",
          "START_TIME(READY TO COME BACK)": " 1:05PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 18,
          "ACK_CURRENT_TIME_IN_OFFICE": -53,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 55,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BARBOUR, T",
          "MRN": "025462",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:49PM ",
          "START_TIME(READY TO COME BACK)": " 1:06PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": -54,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 36,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "MCCRAY, P",
          "MRN": "272531",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:05PM ",
          "START_TIME(READY TO COME BACK)": " 1:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:59PM ",
          "ACK_TO_START_TIME": 25,
          "ACK_CURRENT_TIME_IN_OFFICE": -78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 54,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 29,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "SELDEN, M",
          "MRN": "975920",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:00PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:56PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 53,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "ROMITA, SHAVON",
          "LNFI": "TURNER, M",
          "MRN": "1350510",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:56PM ",
          "START_TIME(READY TO COME BACK)": " 3:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:57PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": -172,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 53,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Yazdani, Hajira PA",
          "LNFI": "SHAW, S",
          "MRN": "007632",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:53PM ",
          "START_TIME(READY TO COME BACK)": " 4:07PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 14,
          "ACK_CURRENT_TIME_IN_OFFICE": -235,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "MAYNARD, B",
          "MRN": "1359590",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:41AM ",
          "START_TIME(READY TO COME BACK)": " 9:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:47AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 149,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 6,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 4,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "GRAY, K",
          "MRN": "058927",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:03PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 6,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "SWAIN, D",
          "MRN": "016539",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:57AM ",
          "START_TIME(READY TO COME BACK)": " 9:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:01AM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 188,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 124,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 117,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "RIDGELL, L",
          "MRN": "382450",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:25AM ",
          "START_TIME(READY TO COME BACK)": "10:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:27PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 99,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 122,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 114,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "SWAIN, J",
          "MRN": "214710",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:56AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:49PM ",
          "ACK_TO_START_TIME": 153,
          "ACK_CURRENT_TIME_IN_OFFICE": 43,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 233,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "HORTON, M",
          "MRN": "1355320",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:28PM ",
          "START_TIME(READY TO COME BACK)": "12:38PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:25PM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -26,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "WILLIAMS, J",
          "MRN": "851750",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:31PM ",
          "START_TIME(READY TO COME BACK)": "12:38PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:51PM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": -26,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 20,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 13,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "TAYLOR, C",
          "MRN": "954510",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:13PM ",
          "START_TIME(READY TO COME BACK)": " 2:14PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -122,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 2,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 1,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "THOMAS, J",
          "MRN": "497470",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:56PM ",
          "START_TIME(READY TO COME BACK)": " 3:20PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:22PM ",
          "ACK_TO_START_TIME": 24,
          "ACK_CURRENT_TIME_IN_OFFICE": -188,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 26,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 2,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Ferndale",
          "CAREGIVER_NAME": "Therapy, Physical",
          "LNFI": "GIPSON, M",
          "MRN": "867990",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:51PM ",
          "START_TIME(READY TO COME BACK)": " 3:57PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -225,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "ESTELL, M",
          "MRN": "715480",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:05PM ",
          "START_TIME(READY TO COME BACK)": "12:05PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 7,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 130,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 130,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "HUMPHREY, H",
          "MRN": "1121510",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:07PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "HUMPHREY, D",
          "MRN": "1121500",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:08PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "REID, R",
          "MRN": "664480",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:56AM ",
          "START_TIME(READY TO COME BACK)": " 7:56AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:32AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 256,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 36,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 36,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "ENGLAND, L",
          "MRN": "002058",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:54AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 219,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 21,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 21,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "HEAD, C",
          "MRN": "480200",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:47AM ",
          "START_TIME(READY TO COME BACK)": " 8:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 205,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 68,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "MCLEOD-WILLIAMS, D",
          "MRN": "006847",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:49AM ",
          "START_TIME(READY TO COME BACK)": " 8:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:54AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 203,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 65,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 65,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "JOHNSON, D",
          "MRN": "712460",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:03AM ",
          "START_TIME(READY TO COME BACK)": " 9:05AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 187,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 52,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "MOTLEY, B",
          "MRN": "857080",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:48AM ",
          "START_TIME(READY TO COME BACK)": " 8:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 203,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 67,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 66,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "HANNAH, K",
          "MRN": "426060",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 175,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "HARVEY, C",
          "MRN": "942190",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:54AM ",
          "START_TIME(READY TO COME BACK)": " 8:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 198,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "LAREAU, A",
          "MRN": "015731",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:18AM ",
          "START_TIME(READY TO COME BACK)": " 9:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 37,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "STEEPLE, O",
          "MRN": "013436",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:18AM ",
          "START_TIME(READY TO COME BACK)": " 9:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 37,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "HOSEY, M",
          "MRN": "704590",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:31AM ",
          "START_TIME(READY TO COME BACK)": " 9:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 160,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 24,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 23,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "IRVINE, L",
          "MRN": "697780",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 175,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 69,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 69,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "MASON, L",
          "MRN": "1205010",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:47AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 145,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "WALKER, Q",
          "MRN": "1188120",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:59AM ",
          "START_TIME(READY TO COME BACK)": " 9:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 192,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 87,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "BEAL, R",
          "MRN": "1132990",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:28AM ",
          "START_TIME(READY TO COME BACK)": " 9:36AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 156,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 58,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "IRVING, R",
          "MRN": "868050",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:36AM ",
          "START_TIME(READY TO COME BACK)": " 9:36AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 156,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "WRIGHT, K",
          "MRN": "506390",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:54AM ",
          "START_TIME(READY TO COME BACK)": " 9:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 138,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "YU, C",
          "MRN": "398820",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:19AM ",
          "START_TIME(READY TO COME BACK)": "10:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 113,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 7,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 7,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "PENALOZA, M",
          "MRN": "893520",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:53AM ",
          "START_TIME(READY TO COME BACK)": " 9:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:27AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 139,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 34,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "LOVE, C",
          "MRN": "460740",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:10AM ",
          "START_TIME(READY TO COME BACK)": " 9:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 182,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 124,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 124,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 7,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "LITTLE, D",
          "MRN": "246740",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:23AM ",
          "START_TIME(READY TO COME BACK)": "10:23AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 109,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 51,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 51,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "WASHINGTON HALL, T",
          "MRN": "488000",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:57AM ",
          "START_TIME(READY TO COME BACK)": " 9:57AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 135,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 77,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "BELL, A",
          "MRN": "036758",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:46AM ",
          "START_TIME(READY TO COME BACK)": "10:48AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:14AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 84,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 28,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 26,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "ARMSTRONG, K",
          "MRN": "582040",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:59AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 15,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 15,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "PENALOZA, M",
          "MRN": "893520",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:53AM ",
          "START_TIME(READY TO COME BACK)": " 9:56AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 136,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 111,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 108,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "SAMS, C",
          "MRN": "1239590",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:19AM ",
          "START_TIME(READY TO COME BACK)": "11:20AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 52,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 24,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "LINDSEY, P",
          "MRN": "666580",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:34AM ",
          "START_TIME(READY TO COME BACK)": "11:34AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 38,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 10,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 10,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 10,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "WEBSTER, A",
          "MRN": "635651",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:14AM ",
          "START_TIME(READY TO COME BACK)": "11:14AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:31PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 58,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 77,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "JOHNSON, A",
          "MRN": "706230",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:09AM ",
          "START_TIME(READY TO COME BACK)": "11:09AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:31PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 63,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 82,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "THOMAS, S",
          "MRN": "512630",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:33PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 47,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 68,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "CLARK-HAWKINS, S",
          "MRN": "584360",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:10PM ",
          "START_TIME(READY TO COME BACK)": "12:10PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:02PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 52,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 52,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "FLANAGAN, A",
          "MRN": "1220340",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:31PM ",
          "START_TIME(READY TO COME BACK)": "12:31PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:02PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -19,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 31,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "LINDSEY, G",
          "MRN": "666570",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:01PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:02PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 1,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "WILKS, R",
          "MRN": "935190",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:48PM ",
          "START_TIME(READY TO COME BACK)": "12:48PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -36,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "HOLT, B",
          "MRN": "319950",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:47PM ",
          "START_TIME(READY TO COME BACK)": "12:48PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -36,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "YU, C",
          "MRN": "398820",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:17AM ",
          "START_TIME(READY TO COME BACK)": "10:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 114,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 234,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 233,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "MORROW, G",
          "MRN": "000981",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:19PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 44,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 52,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 8,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "HEARD, K",
          "MRN": "1362570",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:21PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:35PM ",
          "ACK_TO_START_TIME": 42,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "WHITE, E",
          "MRN": "867940",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:32PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:35PM ",
          "ACK_TO_START_TIME": 31,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 63,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "PUGH, I",
          "MRN": "518550",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:35PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 28,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 36,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 8,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "BELL, A",
          "MRN": "036758",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:46AM ",
          "START_TIME(READY TO COME BACK)": "11:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:35PM ",
          "ACK_TO_START_TIME": 40,
          "ACK_CURRENT_TIME_IN_OFFICE": 46,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 229,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 189,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "WILLIAMS, D",
          "MRN": "522410",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:32PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:55PM ",
          "ACK_TO_START_TIME": 31,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 52,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "FRILL, J",
          "MRN": "694840",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:04PM ",
          "START_TIME(READY TO COME BACK)": " 2:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:18PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -112,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "COBB, W",
          "MRN": "389040",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:58PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:31PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 93,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "PTA Wood, Elizabeth",
          "LNFI": "KEYS, D",
          "MRN": "1107350",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:34PM ",
          "START_TIME(READY TO COME BACK)": " 2:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:31PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -143,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "WILSON III, M",
          "MRN": "028781",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:34PM ",
          "START_TIME(READY TO COME BACK)": " 2:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:44PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -143,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 69,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "MAYNARD, B",
          "MRN": "1359590",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:55PM ",
          "START_TIME(READY TO COME BACK)": " 2:55PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:58PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -163,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 63,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 63,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "HESLIP, P",
          "MRN": "1383260",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:01PM ",
          "START_TIME(READY TO COME BACK)": " 3:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:44PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -169,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Stress Testing, GXT & ABI",
          "LNFI": "LINDSEY, G",
          "MRN": "666570",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:00PM ",
          "START_TIME(READY TO COME BACK)": "12:42PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:00PM ",
          "ACK_TO_START_TIME": 42,
          "ACK_CURRENT_TIME_IN_OFFICE": -30,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 60,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "REED, L",
          "MRN": "720910",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:17PM ",
          "START_TIME(READY TO COME BACK)": " 3:17PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "Mammogram",
          "LNFI": "KNOPPE, L",
          "MRN": "742500",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:42PM ",
          "START_TIME(READY TO COME BACK)": " 3:42PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -210,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "MCLAY, L",
          "MRN": "008314",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:05PM ",
          "START_TIME(READY TO COME BACK)": " 3:06PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "HESLIP, P",
          "MRN": "1383260",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:01PM ",
          "START_TIME(READY TO COME BACK)": " 3:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -169,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Garmo, Tamara",
          "LNFI": "BROWN, E",
          "MRN": "373890",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:00PM ",
          "START_TIME(READY TO COME BACK)": " 4:02PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -230,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Ellis, Ronica",
          "LNFI": "PRINGLE, D",
          "MRN": "394160",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:57PM ",
          "START_TIME(READY TO COME BACK)": " 3:58PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -226,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "GREEN, C",
          "MRN": "534010",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "1B4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:20AM ",
          "START_TIME(READY TO COME BACK)": "10:05AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:43AM ",
          "ACK_TO_START_TIME": 45,
          "ACK_CURRENT_TIME_IN_OFFICE": 127,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "EDWARDS, S",
          "MRN": "502960",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:04AM ",
          "START_TIME(READY TO COME BACK)": "10:05AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:34AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 127,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 30,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 29,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "BROADNAX, J",
          "MRN": "1342820",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:35AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "ZOBEL, A",
          "MRN": "740240",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:07AM ",
          "START_TIME(READY TO COME BACK)": "11:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:57PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 62,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 110,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 107,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 12,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "MINOR, M",
          "MRN": "576400",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:11AM ",
          "START_TIME(READY TO COME BACK)": "11:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 61,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 163,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 163,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "THIAM, A",
          "MRN": "1383780",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:35AM ",
          "START_TIME(READY TO COME BACK)": "11:39AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:24PM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 33,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 49,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 45,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "PAYNE, C",
          "MRN": "517450",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:35PM ",
          "START_TIME(READY TO COME BACK)": "12:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -23,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 79,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 79,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "PICKENS, D",
          "MRN": "957350",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:30PM ",
          "START_TIME(READY TO COME BACK)": " 1:00PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 30,
          "ACK_CURRENT_TIME_IN_OFFICE": -48,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 16,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 8,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "JENKINS, K",
          "MRN": "514320",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:01PM ",
          "START_TIME(READY TO COME BACK)": " 1:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -49,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 53,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "MEEKS, J",
          "MRN": "535150",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:09PM ",
          "START_TIME(READY TO COME BACK)": " 1:18PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:01PM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -66,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 112,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 103,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "EDWARDS, J",
          "MRN": "515010",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:40PM ",
          "START_TIME(READY TO COME BACK)": " 1:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:01PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -100,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 69,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "EDWARDS, J",
          "MRN": "515020",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:52PM ",
          "START_TIME(READY TO COME BACK)": " 1:53PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:57PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -101,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 65,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 64,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "WATSON, B",
          "MRN": "469630",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:04PM ",
          "START_TIME(READY TO COME BACK)": " 2:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:12PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": -120,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 60,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "TAYLOR, K",
          "MRN": "519980",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:52PM ",
          "START_TIME(READY TO COME BACK)": " 1:53PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:36PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -101,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "NICHOLS, T",
          "MRN": "523620",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:52PM ",
          "START_TIME(READY TO COME BACK)": " 1:53PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -101,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "HURDE, K",
          "MRN": "490790",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:50PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 11,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "POPOVSKI, G",
          "MRN": "1360320",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:59PM ",
          "START_TIME(READY TO COME BACK)": " 4:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -229,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "GRAY, Q",
          "MRN": "535970",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:05PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "MARCANO DOEKTER, F",
          "MRN": "1386150",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:58PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "GRAY, Q",
          "MRN": "535130",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:58PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "BRUNSON, T",
          "MRN": "1387740",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:10PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Allergy, Testing",
          "LNFI": "WILSON-TAYLOR, J",
          "MRN": "692310",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:22AM ",
          "START_TIME(READY TO COME BACK)": " 8:23AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:15AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 229,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 113,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 112,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "THAPA, B",
          "MRN": "1215160",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:22AM ",
          "START_TIME(READY TO COME BACK)": " 8:23AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:29AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 229,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 127,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 126,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dawood, Bashar MD",
          "LNFI": "WALKER, Q",
          "MRN": "1188120",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:59AM ",
          "START_TIME(READY TO COME BACK)": " 9:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:31AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 192,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 92,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 91,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HEWLETT, J",
          "MRN": "1221270",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:51AM ",
          "START_TIME(READY TO COME BACK)": " 8:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:29AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 201,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 98,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 98,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Allergy, Testing",
          "LNFI": "MORRISSETTE, L",
          "MRN": "691930",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:30AM ",
          "START_TIME(READY TO COME BACK)": " 9:31AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:15AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 161,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 105,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "YOUSIF, A",
          "MRN": "047376",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:49AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:49AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BELL, A",
          "MRN": "036758",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:46AM ",
          "START_TIME(READY TO COME BACK)": "11:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": 29,
          "ACK_CURRENT_TIME_IN_OFFICE": 57,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 116,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 87,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Allergy, Testing",
          "LNFI": "JOHNSON, A",
          "MRN": "706230",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:01AM ",
          "START_TIME(READY TO COME BACK)": "11:01AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 71,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 101,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 101,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "MAYS, D",
          "MRN": "1153850",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:11PM ",
          "START_TIME(READY TO COME BACK)": " 2:14PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:32PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -122,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 21,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "MILLER, S",
          "MRN": "1356360",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:16PM ",
          "START_TIME(READY TO COME BACK)": "12:16PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:33PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -4,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 17,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 17,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dawood, Bashar MD",
          "LNFI": "BROWN, D",
          "MRN": "1387540",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:50AM ",
          "START_TIME(READY TO COME BACK)": "11:52AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 20,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 243,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 241,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 10,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Nugent, Karen",
          "LNFI": "NORRIS, H",
          "MRN": "006955",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:53PM ",
          "START_TIME(READY TO COME BACK)": "12:53PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:47PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -41,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 54,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 54,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "WADE, J",
          "MRN": "933340",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:21PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 42,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 152,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 110,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "FAHMI, F",
          "MRN": "1387870",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 2:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -116,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "WELLS, D",
          "MRN": "244920",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:04PM ",
          "START_TIME(READY TO COME BACK)": " 4:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -232,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "JAMES, L",
          "MRN": "759060",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:58PM ",
          "START_TIME(READY TO COME BACK)": " 3:59PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -227,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "DUNCAN, S",
          "MRN": "759070",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:54PM ",
          "START_TIME(READY TO COME BACK)": " 3:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -222,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Nugent, Karen",
          "LNFI": "TURNER, L",
          "MRN": "347460",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:57PM ",
          "START_TIME(READY TO COME BACK)": " 3:57PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -225,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "ELYAS, M",
          "MRN": "1168630",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:03PM ",
          "START_TIME(READY TO COME BACK)": " 4:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -231,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "JENKINS III, J",
          "MRN": "1169110",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:10PM ",
          "START_TIME(READY TO COME BACK)": " 4:10PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -238,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "LANGLEY, M",
          "MRN": "451190",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:08PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "THAPA, B",
          "MRN": "1215160",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:41AM ",
          "START_TIME(READY TO COME BACK)": "10:41AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:26AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 91,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 45,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 45,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "HENCE, D",
          "MRN": "538180",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:56AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:03PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 127,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 124,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "HENCE, B",
          "MRN": "538250",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:56AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:04PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 128,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 125,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "SMILEY, S",
          "MRN": "1155380",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:40PM ",
          "START_TIME(READY TO COME BACK)": "12:41PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:57PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -29,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 17,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 16,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "AUSTIN, S",
          "MRN": "589920",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:56AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:06PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 130,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 127,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "HENCE, Z",
          "MRN": "1137980",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:56AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:06PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 130,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 127,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WIGGINS, T",
          "MRN": "859620",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:05PM ",
          "START_TIME(READY TO COME BACK)": " 1:05PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:43PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -53,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 98,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 98,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "DAVIS, B",
          "MRN": "726810",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:05PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:22PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 8,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "PHARMS, E",
          "MRN": "896720",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:06PM ",
          "START_TIME(READY TO COME BACK)": " 3:06PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 28,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 28,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "RUSSELL, D",
          "MRN": "1227830",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:49PM ",
          "START_TIME(READY TO COME BACK)": " 4:00PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": -228,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "CASH, A",
          "MRN": "1180330",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:15AM ",
          "START_TIME(READY TO COME BACK)": " 9:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:31AM ",
          "ACK_TO_START_TIME": 35,
          "ACK_CURRENT_TIME_IN_OFFICE": 142,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "DINELLO, S",
          "MRN": "358770",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:13PM ",
          "START_TIME(READY TO COME BACK)": " 1:13PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:13PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -61,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 0,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "SANDERS, M",
          "MRN": "820660",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:10PM ",
          "START_TIME(READY TO COME BACK)": " 3:17PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": -185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "MCKINNEY, S",
          "MRN": "1360550",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:16PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:06PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "RAMEY, E",
          "MRN": "185930",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:02PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BROWN, D",
          "MRN": "1354460",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:13AM ",
          "START_TIME(READY TO COME BACK)": " 9:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:35AM ",
          "ACK_TO_START_TIME": -48,
          "ACK_CURRENT_TIME_IN_OFFICE": 107,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 22,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 70,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "JACKSON, O",
          "MRN": "239140",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:32PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:32PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DILLASHAW, T",
          "MRN": "968940",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:39AM ",
          "START_TIME(READY TO COME BACK)": " 8:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": 143,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 54,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "US Tech, OB/GYN",
          "LNFI": "GOMEZ DE CRUZ, I",
          "MRN": "1385540",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:42AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:29AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "JANOS, C",
          "MRN": "1104450",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:31AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:53AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 22,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "ABRAHAM, T",
          "MRN": "1317580",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:12AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:12AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "ABRAHAM, T",
          "MRN": "1317580",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:12AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:12AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 11,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "JENKINS, T",
          "MRN": "1200990",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:40AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "COUCH, J",
          "MRN": "292220",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:58AM ",
          "START_TIME(READY TO COME BACK)": "11:58AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:58AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -46,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 0,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "US Tech, OB/GYN",
          "LNFI": "FULLER, T",
          "MRN": "384710",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:27AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:23PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "CLARK, T",
          "MRN": "544190",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:08PM ",
          "ACK_TO_START_TIME": -41,
          "ACK_CURRENT_TIME_IN_OFFICE": 0,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 75,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 116,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "YONKO, L",
          "MRN": "1387940",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:20PM ",
          "START_TIME(READY TO COME BACK)": "12:22PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:16PM ",
          "ACK_TO_START_TIME": -58,
          "ACK_CURRENT_TIME_IN_OFFICE": -70,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 114,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "FERRO, F",
          "MRN": "959590",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:46PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:46PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "TURNER, C",
          "MRN": "1166990",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:38PM ",
          "START_TIME(READY TO COME BACK)": " 1:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:49PM ",
          "ACK_TO_START_TIME": -34,
          "ACK_CURRENT_TIME_IN_OFFICE": -112,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 71,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 105,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "WRIGHT, T",
          "MRN": "1334040",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:54PM ",
          "START_TIME(READY TO COME BACK)": " 2:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:04PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -222,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 10,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 10,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "BRYANT, R",
          "MRN": "1319010",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:30PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:30PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ALONZO, N",
          "MRN": "1156930",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:11PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:39PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 28,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ALONZO, N",
          "MRN": "1156930",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:11PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:39PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 28,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "PETTUS, Y",
          "MRN": "1383470",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:55PM ",
          "START_TIME(READY TO COME BACK)": " 3:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": -43,
          "ACK_CURRENT_TIME_IN_OFFICE": -240,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "MCDANIEL, J",
          "MRN": "1197970",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:26PM ",
          "START_TIME(READY TO COME BACK)": " 2:41PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": -45,
          "ACK_CURRENT_TIME_IN_OFFICE": -209,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "RYBAK, Z",
          "MRN": "841260",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:07AM ",
          "START_TIME(READY TO COME BACK)": " 9:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": 115,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 26,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 16,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "SMITH, B",
          "MRN": "793250",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:59AM ",
          "START_TIME(READY TO COME BACK)": "10:08AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:32AM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": 64,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 24,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "COWEN, J",
          "MRN": "1356220",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:46AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:30AM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 20,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "WATSON, L",
          "MRN": "726040",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:52AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:03PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 71,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 12,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "STREASICK, K",
          "MRN": "805220",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:49AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:03PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 14,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "STREASICK, K",
          "MRN": "805220",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:50AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:03PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 13,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "HUTCHINS, V",
          "MRN": "801840",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:54AM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:03PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 9,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "HALL, M",
          "MRN": "1359340",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:41PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:24PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "HENRY, D",
          "MRN": "772190",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:26PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:05PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP SCS Harper",
          "CAREGIVER_NAME": "Ultrasound, Schedule",
          "LNFI": "MONROE, T",
          "MRN": "949690",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:05PM ",
          "START_TIME(READY TO COME BACK)": null,
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:05PM ",
          "ACK_TO_START_TIME": null,
          "ACK_CURRENT_TIME_IN_OFFICE": null,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 0,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 10,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "MOYER, A",
          "MRN": "1312350",
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:11PM ",
          "START_TIME(READY TO COME BACK)": " 3:11PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -179,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "WATKINS, D",
          "MRN": "541900",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:47AM ",
          "START_TIME(READY TO COME BACK)": " 8:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:04AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:18AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 201,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 31,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MURRY, E",
          "MRN": "576290",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:10AM ",
          "START_TIME(READY TO COME BACK)": " 9:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:26AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:49AM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "CURRY, D",
          "MRN": "1130600",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:33AM ",
          "START_TIME(READY TO COME BACK)": " 9:39AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:47AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:02AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 153,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 29,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 23,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "HAMLER, C",
          "MRN": "510210",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:38AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:35AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:46AM ",
          "ACK_TO_START_TIME": 21,
          "ACK_CURRENT_TIME_IN_OFFICE": 154,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 89,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 68,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SMITH, D",
          "MRN": "494820",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:50AM ",
          "START_TIME(READY TO COME BACK)": "10:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:29AM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": 130,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 99,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 87,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "JONES, B",
          "MRN": "614400",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:50AM ",
          "START_TIME(READY TO COME BACK)": "10:52AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:20AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:53AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 80,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 63,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "CLIFTON, I",
          "MRN": "1354050",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:06AM ",
          "START_TIME(READY TO COME BACK)": "11:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:29AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:57AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 62,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 51,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "DAVIS, R",
          "MRN": "1175820",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": " 1:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:06PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:28PM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -49,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 36,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "TOLIVER, K",
          "MRN": "751800",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:10PM ",
          "START_TIME(READY TO COME BACK)": " 1:28PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:38PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:08PM ",
          "ACK_TO_START_TIME": 18,
          "ACK_CURRENT_TIME_IN_OFFICE": -76,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 58,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 40,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MEEKS, R",
          "MRN": "491280",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:07PM ",
          "START_TIME(READY TO COME BACK)": " 1:17PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:48PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:24PM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -65,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 67,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 9,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "EDWARDS, P",
          "MRN": "525000",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:47PM ",
          "START_TIME(READY TO COME BACK)": " 1:47PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:58PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -95,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 71,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 71,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BYRD, A",
          "MRN": "924810",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:22PM ",
          "START_TIME(READY TO COME BACK)": " 2:24PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:51PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:22PM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -132,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 60,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 58,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SWAIN, G",
          "MRN": "555730",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:49PM ",
          "START_TIME(READY TO COME BACK)": " 4:06PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:00PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": -234,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "CLEMENTS, S",
          "MRN": "509140",
          "CA_ASSIGNED": "Domonique",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:52PM ",
          "START_TIME(READY TO COME BACK)": " 4:02PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:11PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -230,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 3,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "NORWOOD, Q",
          "MRN": "546910",
          "CA_ASSIGNED": "LAKEYELLA",
          "ROOM_ASSIGNED": "RM B-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:29AM ",
          "START_TIME(READY TO COME BACK)": " 9:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:20AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:40AM ",
          "ACK_TO_START_TIME": 21,
          "ACK_CURRENT_TIME_IN_OFFICE": 142,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 131,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 110,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "BARLET, D",
          "MRN": "1351430",
          "CA_ASSIGNED": "LAKEYELLA",
          "ROOM_ASSIGNED": "RM B-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:24AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:03PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 43,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 99,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 94,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "ESTMOND, R",
          "MRN": "700620",
          "CA_ASSIGNED": "LAKEYELLA",
          "ROOM_ASSIGNED": "RM B-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:20PM ",
          "START_TIME(READY TO COME BACK)": " 2:20PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:54PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -128,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 9,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Nugent, Karen",
          "LNFI": "BALDWIN, L",
          "MRN": "360440",
          "CA_ASSIGNED": "BH Karen",
          "ROOM_ASSIGNED": "Behavioral Health",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:51PM ",
          "START_TIME(READY TO COME BACK)": " 9:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:51PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:51AM ",
          "ACK_TO_START_TIME": -221,
          "ACK_CURRENT_TIME_IN_OFFICE": 182,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": -180,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Nugent, Karen",
          "LNFI": "HOLMES, K",
          "MRN": "1386460",
          "CA_ASSIGNED": "BH Karen",
          "ROOM_ASSIGNED": "Behavioral Health",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:52PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -40,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": -117,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": -117,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Nugent, Karen",
          "LNFI": "GIBSON, C",
          "MRN": "056519",
          "CA_ASSIGNED": "BH Karen",
          "ROOM_ASSIGNED": "Behavioral Health",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:44AM ",
          "START_TIME(READY TO COME BACK)": "10:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:52PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:00PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 88,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 76,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "ELLIS, D",
          "MRN": "1216930",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:01AM ",
          "START_TIME(READY TO COME BACK)": " 8:20AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:20AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:47AM ",
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": 232,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "STEINMAN, D",
          "MRN": "064286",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:19AM ",
          "START_TIME(READY TO COME BACK)": " 8:20AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:56AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 232,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 37,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 36,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "PLESTER, P",
          "MRN": "744230",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:07AM ",
          "START_TIME(READY TO COME BACK)": " 9:07AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:23AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 16,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 16,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "SWAIN, J",
          "MRN": "214710",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:56AM ",
          "START_TIME(READY TO COME BACK)": " 9:03AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:07AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:29AM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 189,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 26,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "FLEISCHAKER, I",
          "MRN": "922750",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:56AM ",
          "START_TIME(READY TO COME BACK)": "10:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:09AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:34AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 132,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "HEINZ, C",
          "MRN": "951520",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:43AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:48AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:59AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 145,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 16,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 12,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "GRIFFIN, D",
          "MRN": "247660",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:24AM ",
          "START_TIME(READY TO COME BACK)": "10:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:34AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:06AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 104,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 42,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "BAJOREK, P",
          "MRN": "256570",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:50AM ",
          "START_TIME(READY TO COME BACK)": "11:06AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:10AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:23AM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 66,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 17,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "GEMMELL, W",
          "MRN": "928600",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:10AM ",
          "START_TIME(READY TO COME BACK)": "11:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:30AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:41AM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 54,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 31,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 23,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 6,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "ABDUL LATIF, A",
          "MRN": "208720",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:38AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:56AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:27PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 26,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 49,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 5,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "POWELL, E",
          "MRN": "500040",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:32PM ",
          "START_TIME(READY TO COME BACK)": " 1:37PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:48PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -85,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "AARONS, D",
          "MRN": "872540",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:41PM ",
          "START_TIME(READY TO COME BACK)": " 2:00PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:02PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:51PM ",
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": -108,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 51,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "HASEGAWA, I",
          "MRN": "648470",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:18PM ",
          "START_TIME(READY TO COME BACK)": " 2:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:36PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:03PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -138,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 45,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 33,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 11,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "CHOWDHURY, N",
          "MRN": "1388330",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:37PM ",
          "START_TIME(READY TO COME BACK)": " 2:43PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:55PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:45PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -151,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "MANNING, S",
          "MRN": "033381",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:55PM ",
          "START_TIME(READY TO COME BACK)": " 3:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:45PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -169,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 9,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Mozurkewich, Eric NP-C,RN",
          "LNFI": "JACKSON, D",
          "MRN": "358280",
          "CA_ASSIGNED": "Shanetha",
          "ROOM_ASSIGNED": "RM B8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:25PM ",
          "START_TIME(READY TO COME BACK)": " 3:41PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:39PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": -209,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Yazdani, Hajira PA",
          "LNFI": "HILL KING, C",
          "MRN": "1172760",
          "CA_ASSIGNED": "Cierra",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:34AM ",
          "START_TIME(READY TO COME BACK)": " 9:34AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:44AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 158,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 10,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 10,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Yazdani, Hajira PA",
          "LNFI": "CURRY, N",
          "MRN": "568830",
          "CA_ASSIGNED": "Cierra",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:34AM ",
          "START_TIME(READY TO COME BACK)": " 9:34AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 158,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Yazdani, Hajira PA",
          "LNFI": "FLAKE, M",
          "MRN": "1006470",
          "CA_ASSIGNED": "Cierra",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:56AM ",
          "START_TIME(READY TO COME BACK)": "10:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:01PM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": 116,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 105,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 8,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Yazdani, Hajira PA",
          "LNFI": "WIERCIOCH, A",
          "MRN": "1184550",
          "CA_ASSIGNED": "Cierra",
          "ROOM_ASSIGNED": "RM B4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:45AM ",
          "START_TIME(READY TO COME BACK)": "11:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:03AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:01PM ",
          "ACK_TO_START_TIME": 26,
          "ACK_CURRENT_TIME_IN_OFFICE": 61,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Yazdani, Hajira PA",
          "LNFI": "FORTUNE, G",
          "MRN": "737470",
          "CA_ASSIGNED": "Cierra",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:28PM ",
          "START_TIME(READY TO COME BACK)": " 1:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:41PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:22PM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 54,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 52,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "MORRISH, S",
          "MRN": "062340",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:58AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:39AM ",
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": 237,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 24,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "ANDERSON, J",
          "MRN": "718720",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:38AM ",
          "START_TIME(READY TO COME BACK)": " 8:42AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:47AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:19AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 210,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "RUTH, L",
          "MRN": "920170",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:18AM ",
          "START_TIME(READY TO COME BACK)": " 9:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:19AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:51AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 33,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "ENGELBRINK, D",
          "MRN": "349650",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:13AM ",
          "START_TIME(READY TO COME BACK)": " 9:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:33AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:46AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 175,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 93,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 89,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "PHILLIPS, P",
          "MRN": "052827",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:44AM ",
          "START_TIME(READY TO COME BACK)": " 9:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:50AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:46AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 148,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 62,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "ZOLLER, L",
          "MRN": "065068",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:38AM ",
          "START_TIME(READY TO COME BACK)": " 9:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:48AM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 138,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 54,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "BRIOLAT, M",
          "MRN": "1343610",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:43AM ",
          "START_TIME(READY TO COME BACK)": "10:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:52AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:08AM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 82,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "DANH, S",
          "MRN": "450580",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:29AM ",
          "START_TIME(READY TO COME BACK)": "10:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:38AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:12PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 103,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 103,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 103,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "SMITH, A",
          "MRN": "860490",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:05AM ",
          "START_TIME(READY TO COME BACK)": "11:24AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:24AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:20PM ",
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": 48,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 75,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "ROGIND, P",
          "MRN": "163770",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:29PM ",
          "START_TIME(READY TO COME BACK)": "12:40PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:39PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:50PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": -28,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 70,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "ALI, M",
          "MRN": "337960",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:13PM ",
          "START_TIME(READY TO COME BACK)": " 1:53PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:57PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:35PM ",
          "ACK_TO_START_TIME": 40,
          "ACK_CURRENT_TIME_IN_OFFICE": -101,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 82,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 42,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "GONZALEZ, R",
          "MRN": "234200",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:36PM ",
          "START_TIME(READY TO COME BACK)": " 1:53PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:07PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:58PM ",
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": -101,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 82,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 65,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "KEARNEY, C",
          "MRN": "637960",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:26PM ",
          "START_TIME(READY TO COME BACK)": " 2:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:58PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -135,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "WISE, K",
          "MRN": "1219900",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:33PM ",
          "START_TIME(READY TO COME BACK)": " 2:55PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:57PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:01PM ",
          "ACK_TO_START_TIME": 22,
          "ACK_CURRENT_TIME_IN_OFFICE": -163,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 88,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 66,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "JENKINS, M",
          "MRN": "547550",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:46PM ",
          "START_TIME(READY TO COME BACK)": " 2:58PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:08PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:10PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -166,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 72,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cavanaugh, Kara PA-C",
          "LNFI": "SABO, S",
          "MRN": "859200",
          "CA_ASSIGNED": "Shamone",
          "ROOM_ASSIGNED": "Rm B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:59PM ",
          "START_TIME(READY TO COME BACK)": " 3:09PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:10PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -177,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "KLAMEN, A",
          "MRN": "1211110",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:57AM ",
          "START_TIME(READY TO COME BACK)": " 8:03AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:03AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:09AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 249,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 12,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 6,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "FLOWERS, M",
          "MRN": "358880",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:07AM ",
          "START_TIME(READY TO COME BACK)": " 8:20AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:21AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:39AM ",
          "ACK_TO_START_TIME": 13,
          "ACK_CURRENT_TIME_IN_OFFICE": 232,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 19,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "STEINMAN, L",
          "MRN": "011496",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:19AM ",
          "START_TIME(READY TO COME BACK)": " 8:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:29AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:58AM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 225,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "STANEK, F",
          "MRN": "1351890",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:04AM ",
          "START_TIME(READY TO COME BACK)": " 9:13AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:15AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:32AM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": 179,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 28,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 19,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "COTTON, D",
          "MRN": "505220",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:39AM ",
          "START_TIME(READY TO COME BACK)": " 9:45AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:12AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 147,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "MARTINEZ, C",
          "MRN": "873030",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:44AM ",
          "START_TIME(READY TO COME BACK)": " 9:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:52AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:26AM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 143,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 42,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "DE SHETLER, S",
          "MRN": "502030",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:26AM ",
          "START_TIME(READY TO COME BACK)": "10:30AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:50AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 102,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 24,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 20,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "BORDEN, J",
          "MRN": "491420",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:49AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:39AM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 40,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "KOVACS, D",
          "MRN": "200000",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:27AM ",
          "START_TIME(READY TO COME BACK)": "11:39AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:40AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:10PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": 33,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "GOMEZ, S",
          "MRN": "003412",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:43PM ",
          "START_TIME(READY TO COME BACK)": " 1:15PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:19PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:40PM ",
          "ACK_TO_START_TIME": 32,
          "ACK_CURRENT_TIME_IN_OFFICE": -63,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "WILSON, E",
          "MRN": "830130",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:13PM ",
          "START_TIME(READY TO COME BACK)": " 1:25PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:29PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:12PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 59,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "JACKSON, M",
          "MRN": "1180780",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:36PM ",
          "START_TIME(READY TO COME BACK)": " 1:48PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:50PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:34PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -96,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 58,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "SHEPHERD, M",
          "MRN": "765020",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:57PM ",
          "START_TIME(READY TO COME BACK)": " 2:06PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:11PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:52PM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -114,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 55,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "JOHNSTON, B",
          "MRN": "926090",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:27PM ",
          "START_TIME(READY TO COME BACK)": " 2:57PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:01PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:01PM ",
          "ACK_TO_START_TIME": 30,
          "ACK_CURRENT_TIME_IN_OFFICE": -165,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 94,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 64,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 5,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "JACKSON, R",
          "MRN": "921310",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:23PM ",
          "START_TIME(READY TO COME BACK)": " 3:32PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:54PM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -200,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 31,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 22,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Sadler, Jessica PA-C",
          "LNFI": "TREBBLE, B",
          "MRN": "237140",
          "CA_ASSIGNED": "Jayla",
          "ROOM_ASSIGNED": "RM C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:58PM ",
          "START_TIME(READY TO COME BACK)": " 3:58PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -226,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "DYKHUIZEN, B",
          "MRN": "1321130",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:34AM ",
          "START_TIME(READY TO COME BACK)": " 9:34AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:09AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 158,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "JONES, D",
          "MRN": "055131",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:58AM ",
          "START_TIME(READY TO COME BACK)": " 9:07AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": 185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 35,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 26,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "BRASSFIELD, T",
          "MRN": "000350",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:11AM ",
          "START_TIME(READY TO COME BACK)": "10:35AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:11AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:59PM ",
          "ACK_TO_START_TIME": 24,
          "ACK_CURRENT_TIME_IN_OFFICE": 97,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 168,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 144,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "WAXENBERG, A",
          "MRN": "342480",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:43AM ",
          "START_TIME(READY TO COME BACK)": "10:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:34AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:41PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 89,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 178,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 178,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "MAY, B",
          "MRN": "487790",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:06AM ",
          "START_TIME(READY TO COME BACK)": "11:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:07AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 60,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 156,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 150,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "TAYLOR, A",
          "MRN": "052980",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:26AM ",
          "START_TIME(READY TO COME BACK)": "11:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:29AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": 29,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 136,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 119,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "FLEMING, L",
          "MRN": "1340490",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:45AM ",
          "START_TIME(READY TO COME BACK)": "11:45AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:46AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 27,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 117,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 117,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 9,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "THOMAS, K",
          "MRN": "1340420",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:00PM ",
          "START_TIME(READY TO COME BACK)": " 1:20PM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:02PM ",
          "ACK_TO_START_TIME": -40,
          "ACK_CURRENT_TIME_IN_OFFICE": -68,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 2,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 42,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "HEIDEMAN, Z",
          "MRN": "855570",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:47PM ",
          "START_TIME(READY TO COME BACK)": " 1:56PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:44PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:03PM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -104,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 16,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 7,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "BRASSFIELD, W",
          "MRN": "020557",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:45PM ",
          "START_TIME(READY TO COME BACK)": " 1:57PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:48PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:14PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -105,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 89,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 77,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 9,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "HARRIS, M",
          "MRN": "1230190",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:07PM ",
          "START_TIME(READY TO COME BACK)": " 2:23PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:15PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:14PM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": -131,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 67,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 51,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "MIRANDA TORMEN, J",
          "MRN": "1359620",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:31PM ",
          "START_TIME(READY TO COME BACK)": " 2:57PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:47PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:31PM ",
          "ACK_TO_START_TIME": 26,
          "ACK_CURRENT_TIME_IN_OFFICE": -165,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 60,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "KATZ, E",
          "MRN": "664580",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:13PM ",
          "START_TIME(READY TO COME BACK)": " 3:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:22PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": -198,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Chabaan, Deena PA-C",
          "LNFI": "KIRKPATRICK, W",
          "MRN": "1126550",
          "CA_ASSIGNED": "Brooklyn",
          "ROOM_ASSIGNED": "RM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 4:01PM ",
          "START_TIME(READY TO COME BACK)": " 4:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -231,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "MOORE, S",
          "MRN": "1360140",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM A-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:38AM ",
          "START_TIME(READY TO COME BACK)": " 8:38AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 214,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 96,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 96,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 8,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "JACKSON, M",
          "MRN": "1388180",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM C-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:02AM ",
          "START_TIME(READY TO COME BACK)": " 9:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:42AM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": 180,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 100,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 90,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "WARE, S",
          "MRN": "571840",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM A-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:17AM ",
          "START_TIME(READY TO COME BACK)": "10:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:30AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:41AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 115,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "HUBBARD, A",
          "MRN": "753660",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM A-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": "12:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:56AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 50,
          "ACK_CURRENT_TIME_IN_OFFICE": -18,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 155,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 105,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "ANDERSON, D",
          "MRN": "1225260",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM C-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:00PM ",
          "START_TIME(READY TO COME BACK)": "12:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:55AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 36,
          "ACK_CURRENT_TIME_IN_OFFICE": -24,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 135,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 99,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "MCMICKEL, V",
          "MRN": "465350",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM A-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:31PM ",
          "START_TIME(READY TO COME BACK)": "12:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:49PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -24,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 99,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "MCMICKEL, V",
          "MRN": "465350",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM A-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:31PM ",
          "START_TIME(READY TO COME BACK)": "12:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:49PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -24,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 99,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "TAYLOR, A",
          "MRN": "417640",
          "CA_ASSIGNED": "CIARA",
          "ROOM_ASSIGNED": "RM A-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:38PM ",
          "START_TIME(READY TO COME BACK)": " 3:38PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:11PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -206,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "DAVIS, C",
          "MRN": "870520",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:01AM ",
          "START_TIME(READY TO COME BACK)": " 8:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:16AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 250,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 133,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 132,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "PLONSKI, A",
          "MRN": "705810",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:00AM ",
          "START_TIME(READY TO COME BACK)": " 9:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:13AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 25,
          "ACK_CURRENT_TIME_IN_OFFICE": 167,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 49,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "LOCKETT, R",
          "MRN": "754190",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:13AM ",
          "START_TIME(READY TO COME BACK)": "10:13AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:21AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:32AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 79,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 79,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "MASON, B",
          "MRN": "406400",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM A-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:57AM ",
          "START_TIME(READY TO COME BACK)": "10:13AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:03AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:32AM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 95,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 79,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "CHILDERS, R",
          "MRN": "561750",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "DIETITIAN",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:11AM ",
          "START_TIME(READY TO COME BACK)": "11:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:23AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:32AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 61,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 21,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 21,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "ARMOUR, F",
          "MRN": "1360670",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:31AM ",
          "START_TIME(READY TO COME BACK)": "11:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 40,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 164,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 163,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "JOHNSON, K",
          "MRN": "1116210",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:15PM ",
          "START_TIME(READY TO COME BACK)": " 1:16PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:37PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -64,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 139,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 138,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 6,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "HASSAN, B",
          "MRN": "268840",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:12PM ",
          "START_TIME(READY TO COME BACK)": " 1:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:28PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -60,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 142,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 142,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "SMITH, X",
          "MRN": "457810",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:02PM ",
          "START_TIME(READY TO COME BACK)": " 3:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:35PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -172,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "SMITH, X",
          "MRN": "457800",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:02PM ",
          "START_TIME(READY TO COME BACK)": " 3:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:36PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -172,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Haggerty, Kimberly PA",
          "LNFI": "SMITH JR, X",
          "MRN": "457820",
          "CA_ASSIGNED": "DONTRELL",
          "ROOM_ASSIGNED": "RM D-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:02PM ",
          "START_TIME(READY TO COME BACK)": " 3:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -172,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "REYNOLDS, V",
          "MRN": "269220",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:13AM ",
          "START_TIME(READY TO COME BACK)": " 9:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:32AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:47AM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 171,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 94,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 9,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "GRAHAM, J",
          "MRN": "1156840",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:23AM ",
          "START_TIME(READY TO COME BACK)": " 9:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:12AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 167,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 109,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 107,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 8,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "BROWN, C",
          "MRN": "750590",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:18AM ",
          "START_TIME(READY TO COME BACK)": "10:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:46AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:41PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 114,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 143,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 143,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "ADAMS, D",
          "MRN": "761680",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:19AM ",
          "START_TIME(READY TO COME BACK)": "10:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:43AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:54AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 113,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 95,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 95,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "GRIFFIN, A",
          "MRN": "1146490",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:57AM ",
          "START_TIME(READY TO COME BACK)": "11:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:13AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:41PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 72,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 101,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "FORD, T",
          "MRN": "532300",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:37PM ",
          "START_TIME(READY TO COME BACK)": "12:37PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:24PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -25,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 107,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 107,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 6,
          "NON_POC_LABS": 22,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "LANIER, E",
          "MRN": "1247610",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:25PM ",
          "START_TIME(READY TO COME BACK)": " 2:45PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:44PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:33PM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": -153,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "BAYNHAM, T",
          "MRN": "709560",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:09PM ",
          "START_TIME(READY TO COME BACK)": " 2:19PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:28PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:33PM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -127,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "HENDERSON, P",
          "MRN": "640250",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:32PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:24PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:57PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -80,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 90,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 85,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 1,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "LINDSEY, J",
          "MRN": "868910",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:48PM ",
          "START_TIME(READY TO COME BACK)": " 2:56PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:07PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:43PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": -164,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 55,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "ELLIS, L",
          "MRN": "1229101",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:33PM ",
          "START_TIME(READY TO COME BACK)": " 3:43PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:03PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -211,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 4,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "LNFI": "WILSON, R",
          "MRN": "695180",
          "CA_ASSIGNED": "NITA",
          "ROOM_ASSIGNED": "ROOM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:39PM ",
          "START_TIME(READY TO COME BACK)": " 3:43PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": -211,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "RUSSELL, K",
          "MRN": "545810",
          "CA_ASSIGNED": "CARE BEAR",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:11AM ",
          "START_TIME(READY TO COME BACK)": " 8:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:30AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:42AM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": 231,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 91,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "LEGGETT, M",
          "MRN": "551880",
          "CA_ASSIGNED": "CARE BEAR",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:25PM ",
          "START_TIME(READY TO COME BACK)": " 1:44PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:01PM ",
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": -92,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 96,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 77,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 13,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "LONG, A",
          "MRN": "873770",
          "CA_ASSIGNED": "Christina",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:12AM ",
          "START_TIME(READY TO COME BACK)": "10:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:45AM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 113,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 26,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "USHER, J",
          "MRN": "228630",
          "CA_ASSIGNED": "Christina",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:49AM ",
          "START_TIME(READY TO COME BACK)": "12:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:54AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:02PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": 11,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 13,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 1,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "JONES, A",
          "MRN": "643360",
          "CA_ASSIGNED": "Christina",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:39PM ",
          "START_TIME(READY TO COME BACK)": "12:44PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:41PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:00PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -32,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 21,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 16,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "NASH, J",
          "MRN": "407320",
          "CA_ASSIGNED": "Christina",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:05PM ",
          "START_TIME(READY TO COME BACK)": " 2:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:26PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:27PM ",
          "ACK_TO_START_TIME": 22,
          "ACK_CURRENT_TIME_IN_OFFICE": -135,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 22,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 0,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "DEAN, S",
          "MRN": "414140",
          "CA_ASSIGNED": "Christina",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:32PM ",
          "START_TIME(READY TO COME BACK)": " 2:43PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:55PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:10PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": -151,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "JOINER, L",
          "MRN": "301710",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:13AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 259,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 66,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 66,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "BROWN, L",
          "MRN": "705860",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:01AM ",
          "START_TIME(READY TO COME BACK)": " 8:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:19AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:45AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 250,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "HANNAH, K",
          "MRN": "426060",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:43AM ",
          "START_TIME(READY TO COME BACK)": " 8:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:23AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 209,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 40,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 40,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "JADAN, B",
          "MRN": "744830",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:03AM ",
          "START_TIME(READY TO COME BACK)": " 9:03AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:12AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:12AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 189,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 69,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 69,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "SAVINO, M",
          "MRN": "559530",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:18AM ",
          "START_TIME(READY TO COME BACK)": " 9:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:52AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:32AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 173,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 73,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "LOVE, C",
          "MRN": "460740",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:09AM ",
          "START_TIME(READY TO COME BACK)": " 9:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:25AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:29AM ",
          "ACK_TO_START_TIME": 23,
          "ACK_CURRENT_TIME_IN_OFFICE": 160,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 7,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "HOLMES, K",
          "MRN": "1386460",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:59AM ",
          "START_TIME(READY TO COME BACK)": "10:01AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:27AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 131,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 88,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "WILLIAMS, K",
          "MRN": "673630",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:30AM ",
          "START_TIME(READY TO COME BACK)": "10:30AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:46AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:09AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 102,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "LARSON, J",
          "MRN": "427770",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:45AM ",
          "START_TIME(READY TO COME BACK)": "10:45AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:00PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 87,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 75,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 75,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "JONES, A",
          "MRN": "1382830",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:10AM ",
          "START_TIME(READY TO COME BACK)": "11:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:10PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 62,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 60,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 60,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "ROBINSON-WILSON, L",
          "MRN": "632000",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:29AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:47AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:39PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 43,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 70,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "PENALOZA, M",
          "MRN": "893520",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:39AM ",
          "START_TIME(READY TO COME BACK)": "11:39AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:53AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 33,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "APPLEBERRY, L",
          "MRN": "665700",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:52AM ",
          "START_TIME(READY TO COME BACK)": " 9:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:39AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:41AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 139,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 109,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 108,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "LYNN JR, F",
          "MRN": "529760",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:12PM ",
          "START_TIME(READY TO COME BACK)": "12:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:31PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:20PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 0,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 68,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 3,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "HARVEY, S",
          "MRN": "009774",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:40PM ",
          "START_TIME(READY TO COME BACK)": "12:40PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:46PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:18PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -28,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 98,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 98,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 6,
          "POC_PROC": 8,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "COONEY, A",
          "MRN": "875530",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:54PM ",
          "START_TIME(READY TO COME BACK)": "12:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:18PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -42,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "LLOYD, F",
          "MRN": "507240",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:07PM ",
          "START_TIME(READY TO COME BACK)": " 2:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:20PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:46PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -116,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "STEPHENS, W",
          "MRN": "620410",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:06PM ",
          "START_TIME(READY TO COME BACK)": " 2:06PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:24PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:06PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -114,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 60,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 60,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 6,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "CARTER, A",
          "MRN": "278790",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:28PM ",
          "START_TIME(READY TO COME BACK)": " 2:28PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:49PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -136,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 3,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Webster, Shannon PA-C",
          "LNFI": "BRYANT, W",
          "MRN": "212620",
          "CA_ASSIGNED": "NATALYA",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:51PM ",
          "START_TIME(READY TO COME BACK)": " 3:51PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:03PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -219,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "ZEBROWSKI, D",
          "MRN": "451490",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:01AM ",
          "START_TIME(READY TO COME BACK)": " 8:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:08AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:23AM ",
          "ACK_TO_START_TIME": 15,
          "ACK_CURRENT_TIME_IN_OFFICE": 236,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 82,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 67,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "BREGER, S",
          "MRN": "385620",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:57AM ",
          "START_TIME(READY TO COME BACK)": " 9:08AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:00AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:21AM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": 184,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 24,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 13,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "ANTINOSSI, M",
          "MRN": "945740",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:32AM ",
          "START_TIME(READY TO COME BACK)": " 9:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:49AM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": 149,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 17,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 6,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "BOKAS, S",
          "MRN": "999190",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:50AM ",
          "START_TIME(READY TO COME BACK)": " 9:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:55AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 138,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 30,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 26,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "BENFORD, M",
          "MRN": "1124890",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:55AM ",
          "START_TIME(READY TO COME BACK)": "11:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:01AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:28AM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 61,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 17,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 8,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "LOVE, T",
          "MRN": "540030",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:11AM ",
          "START_TIME(READY TO COME BACK)": "11:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:12AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:55AM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 45,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 28,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "MCGAREY, A",
          "MRN": "246300",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:08AM ",
          "START_TIME(READY TO COME BACK)": "11:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:35PM ",
          "ACK_TO_START_TIME": 35,
          "ACK_CURRENT_TIME_IN_OFFICE": 29,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 87,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 52,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 6,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "STLOUIS, Z",
          "MRN": "867460",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:08AM ",
          "START_TIME(READY TO COME BACK)": "11:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:48AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:35PM ",
          "ACK_TO_START_TIME": 35,
          "ACK_CURRENT_TIME_IN_OFFICE": 29,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 87,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 52,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "EDWARDS, G",
          "MRN": "903090",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:02PM ",
          "START_TIME(READY TO COME BACK)": " 1:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:13PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:55PM ",
          "ACK_TO_START_TIME": 28,
          "ACK_CURRENT_TIME_IN_OFFICE": -78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "REIMER, J",
          "MRN": "004486",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:08PM ",
          "START_TIME(READY TO COME BACK)": " 1:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:13PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:07PM ",
          "ACK_TO_START_TIME": 22,
          "ACK_CURRENT_TIME_IN_OFFICE": -78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 59,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "SEIJAS, M",
          "MRN": "028904",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:13PM ",
          "START_TIME(READY TO COME BACK)": " 2:13PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:24PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:56PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -121,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "FENDERSON, V",
          "MRN": "338820",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:26PM ",
          "START_TIME(READY TO COME BACK)": " 2:32PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:15PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -140,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 49,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "JENNINGS, V",
          "MRN": "1119690",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:58PM ",
          "START_TIME(READY TO COME BACK)": " 3:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:06PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:48PM ",
          "ACK_TO_START_TIME": 32,
          "ACK_CURRENT_TIME_IN_OFFICE": -198,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "WILLIAMS, C",
          "MRN": "948780",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:14PM ",
          "START_TIME(READY TO COME BACK)": " 3:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:25PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:54PM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": -198,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 40,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 24,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 11,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Doherty, Kelly FNP-C",
          "LNFI": "PETTIFORD, J",
          "MRN": "1341930",
          "CA_ASSIGNED": "Jasmine",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:40PM ",
          "START_TIME(READY TO COME BACK)": " 3:48PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:46PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": -216,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Melek, Youstina PA",
          "LNFI": "TURNER, J",
          "MRN": "1148480",
          "CA_ASSIGNED": "Dee",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:49AM ",
          "START_TIME(READY TO COME BACK)": "10:01AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:09AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:23AM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": 131,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 94,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 9,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Melek, Youstina PA",
          "LNFI": "KODSY, E",
          "MRN": "596730",
          "CA_ASSIGNED": "Dee",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:11AM ",
          "START_TIME(READY TO COME BACK)": "11:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:27PM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 45,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 60,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Melek, Youstina PA",
          "LNFI": "SELDEN, M",
          "MRN": "975920",
          "CA_ASSIGNED": "Dee",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:51PM ",
          "START_TIME(READY TO COME BACK)": " 2:51PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:59PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:18PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -159,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Whitmore, Nicole PA-C",
          "LNFI": "WASHINGTON, K",
          "MRN": "508120",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:18AM ",
          "START_TIME(READY TO COME BACK)": " 8:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:43AM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": 223,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 85,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 11,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "PIERCE, C",
          "MRN": "1388190",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:12AM ",
          "START_TIME(READY TO COME BACK)": " 9:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:44AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 92,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "BRIDGEFORTH, K",
          "MRN": "1103010",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:19AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:53PM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 100,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 205,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 201,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 19,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "KNOX JR, F",
          "MRN": "495340",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:52AM ",
          "START_TIME(READY TO COME BACK)": " 9:52AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 140,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 88,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 17,
          "POC_PROC": 7,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "REED, R",
          "MRN": "1186020",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:55AM ",
          "START_TIME(READY TO COME BACK)": "11:01AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:38AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 71,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 179,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 173,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "COKER, C",
          "MRN": "1114200",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:35AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:48PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 95,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 199,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 197,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 13,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "GERMANY, A",
          "MRN": "240280",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:28AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:21PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 43,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 146,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 145,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "THIAM, S",
          "MRN": "498511",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:41AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:48PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 26,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 133,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 128,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "GERMANY, D",
          "MRN": "1177940",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:46AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:23PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 26,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 128,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 128,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "COLVARD, S",
          "MRN": "495070",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:55PM ",
          "START_TIME(READY TO COME BACK)": " 3:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:12PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:37PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -169,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 42,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 36,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "LNFI": "BROWN, I",
          "MRN": "1115390",
          "CA_ASSIGNED": "NUSRAT",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:47PM ",
          "START_TIME(READY TO COME BACK)": " 3:48PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -216,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "VIRTANEN, H",
          "MRN": "1294780",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:30AM ",
          "START_TIME(READY TO COME BACK)": " 8:30AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:33AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:04AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 222,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 34,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "WRIGHT, M",
          "MRN": "943460",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:45AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:58AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:28AM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 202,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "SMITH, J",
          "MRN": "520500",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "LAB",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:42AM ",
          "START_TIME(READY TO COME BACK)": " 9:08AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:08AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:08AM ",
          "ACK_TO_START_TIME": 26,
          "ACK_CURRENT_TIME_IN_OFFICE": 184,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 26,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 0,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "MUOIO, R",
          "MRN": "007746",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:26AM ",
          "START_TIME(READY TO COME BACK)": " 9:30AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:47AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:07AM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 162,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "NDIAYE, A",
          "MRN": "477710",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:03AM ",
          "START_TIME(READY TO COME BACK)": "10:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:14AM ",
          "ACK_TO_START_TIME": 24,
          "ACK_CURRENT_TIME_IN_OFFICE": 105,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 71,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "SNEED, R",
          "MRN": "386710",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:07AM ",
          "START_TIME(READY TO COME BACK)": "10:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:45AM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 120,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 33,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "KING, C",
          "MRN": "385900",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:42AM ",
          "START_TIME(READY TO COME BACK)": "10:48AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:47AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 84,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 65,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 59,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 4,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "SPARKS, C",
          "MRN": "1151490",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM B4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:42AM ",
          "START_TIME(READY TO COME BACK)": "12:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:04AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:11PM ",
          "ACK_TO_START_TIME": 79,
          "ACK_CURRENT_TIME_IN_OFFICE": 11,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 89,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 10,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 9,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "SHEPPARD, D",
          "MRN": "687570",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:22AM ",
          "START_TIME(READY TO COME BACK)": "11:41AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:38AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:21PM ",
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": 31,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 59,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 40,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "HAY, A",
          "MRN": "725190",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:42AM ",
          "START_TIME(READY TO COME BACK)": "11:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:55AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": 22,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 36,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "JULIEN, R",
          "MRN": "433780",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:05PM ",
          "START_TIME(READY TO COME BACK)": " 1:15PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:21PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:48PM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -63,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 33,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "HAYES, S",
          "MRN": "1270110",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:49PM ",
          "START_TIME(READY TO COME BACK)": " 2:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:02PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:42PM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": -109,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 16,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "FREEMAN, L",
          "MRN": "532340",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:25PM ",
          "START_TIME(READY TO COME BACK)": " 2:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:39PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:55PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -138,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 30,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "INABINETT, J",
          "MRN": "390640",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:05PM ",
          "START_TIME(READY TO COME BACK)": " 3:13PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:15PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:26PM ",
          "ACK_TO_START_TIME": 8,
          "ACK_CURRENT_TIME_IN_OFFICE": -181,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 21,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 13,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Wright, Kelly PA-C",
          "LNFI": "CRIMI, M",
          "MRN": "240140",
          "CA_ASSIGNED": "Amber W",
          "ROOM_ASSIGNED": "RM A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:21PM ",
          "START_TIME(READY TO COME BACK)": " 3:41PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:29PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": -209,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 5,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dawood, Bashar MD",
          "LNFI": "CANNON, J",
          "MRN": "653470",
          "CA_ASSIGNED": "SYDNEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:13PM ",
          "START_TIME(READY TO COME BACK)": " 2:13PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:15PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:41PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -121,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 88,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 9,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DILLASHAW, G",
          "MRN": "968480",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:39AM ",
          "START_TIME(READY TO COME BACK)": " 8:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:09AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:10AM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": 143,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 31,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 21,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "SPENCER, Y",
          "MRN": "1221330",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:43AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:01AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:29AM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 142,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "ZADRAVECZ, K",
          "MRN": "1220230",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:14AM ",
          "START_TIME(READY TO COME BACK)": " 8:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:16AM ",
          "ACK_TO_START_TIME": -58,
          "ACK_CURRENT_TIME_IN_OFFICE": 176,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 62,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 120,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BARBER, P",
          "MRN": "594640",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:09AM ",
          "START_TIME(READY TO COME BACK)": " 8:31AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:47AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:00AM ",
          "ACK_TO_START_TIME": -38,
          "ACK_CURRENT_TIME_IN_OFFICE": 161,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 51,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 89,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "MANSFIELD, W",
          "MRN": "894850",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:30AM ",
          "START_TIME(READY TO COME BACK)": " 9:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:40AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:25AM ",
          "ACK_TO_START_TIME": -57,
          "ACK_CURRENT_TIME_IN_OFFICE": 99,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 55,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 112,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DYE, T",
          "MRN": "1009820",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:00AM ",
          "START_TIME(READY TO COME BACK)": "10:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:33AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:52AM ",
          "ACK_TO_START_TIME": -41,
          "ACK_CURRENT_TIME_IN_OFFICE": 53,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 52,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 93,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "THOMPSON, K",
          "MRN": "1357170",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:57AM ",
          "START_TIME(READY TO COME BACK)": "10:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:01AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:23PM ",
          "ACK_TO_START_TIME": -66,
          "ACK_CURRENT_TIME_IN_OFFICE": 21,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 26,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 92,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "LOFTON, D",
          "MRN": "1167550",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:01PM ",
          "START_TIME(READY TO COME BACK)": " 1:11PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:44PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:30PM ",
          "ACK_TO_START_TIME": 10,
          "ACK_CURRENT_TIME_IN_OFFICE": -119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 89,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 79,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WILLIAMS, P",
          "MRN": "883810",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 1:55PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:59PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:21PM ",
          "ACK_TO_START_TIME": -8,
          "ACK_CURRENT_TIME_IN_OFFICE": -163,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 78,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "MIDDLETON, L",
          "MRN": "996710",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:55PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:29PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:44PM ",
          "ACK_TO_START_TIME": -32,
          "ACK_CURRENT_TIME_IN_OFFICE": -163,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 109,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "MUSTFUL, K",
          "MRN": "1387990",
          "CA_ASSIGNED": "TIANA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:09PM ",
          "START_TIME(READY TO COME BACK)": " 2:10PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:56PM ",
          "ACK_TO_START_TIME": -59,
          "ACK_CURRENT_TIME_IN_OFFICE": -178,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 106,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "SESTAK, D",
          "MRN": "1382930",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:43AM ",
          "START_TIME(READY TO COME BACK)": " 8:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:52AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 209,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 91,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 91,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 9,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "WATSON, L",
          "MRN": "726040",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:06AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:58PM ",
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": 202,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 265,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 248,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 12,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "KACOVSKI, L",
          "MRN": "793170",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:15AM ",
          "START_TIME(READY TO COME BACK)": " 9:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:53AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:31AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 176,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 75,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 5,
          "NON_POC_LABS": 7,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "WILLIAMS, B",
          "MRN": "836310",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:33AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:00PM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": 171,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 223,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 219,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 13,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "SMITH, B",
          "MRN": "793250",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:17AM ",
          "START_TIME(READY TO COME BACK)": "10:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:46AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:00PM ",
          "ACK_TO_START_TIME": 15,
          "ACK_CURRENT_TIME_IN_OFFICE": 100,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 163,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 148,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "HUTCHINS, V",
          "MRN": "801840",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:38AM ",
          "START_TIME(READY TO COME BACK)": "10:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:27AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 143,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 127,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "MARINELLO, I",
          "MRN": "1229810",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:55AM ",
          "START_TIME(READY TO COME BACK)": "11:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:38AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 22,
          "ACK_CURRENT_TIME_IN_OFFICE": 55,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 126,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "BOGOJEVSKI, N",
          "MRN": "899900",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:16AM ",
          "START_TIME(READY TO COME BACK)": "11:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:02PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 53,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 106,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 103,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "HENRY, D",
          "MRN": "772190",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:01PM ",
          "START_TIME(READY TO COME BACK)": " 1:05PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:22PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:26PM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": -53,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 85,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "COLLINS, T",
          "MRN": "813840",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:07PM ",
          "START_TIME(READY TO COME BACK)": " 2:13PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:25PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:28PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -121,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 75,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Baugh, Leslie PA",
          "LNFI": "MOORE, A",
          "MRN": "388550",
          "CA_ASSIGNED": "AREIONA",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:02PM ",
          "START_TIME(READY TO COME BACK)": " 3:17PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 15,
          "ACK_CURRENT_TIME_IN_OFFICE": -185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "JEZIERSKI, B",
          "MRN": "009631",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:48AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:48AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:53AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 202,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 5,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 3,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "CHINARIAN, E",
          "MRN": "1357600",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:13AM ",
          "START_TIME(READY TO COME BACK)": " 8:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:43AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:26AM ",
          "ACK_TO_START_TIME": 16,
          "ACK_CURRENT_TIME_IN_OFFICE": 223,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 73,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 11,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "MYERS, D",
          "MRN": "660310",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:09AM ",
          "START_TIME(READY TO COME BACK)": " 9:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:09AM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": 163,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 60,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 40,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "SHACKLEFORD, R",
          "MRN": "296750",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:54AM ",
          "START_TIME(READY TO COME BACK)": "10:08AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:25AM ",
          "ACK_TO_START_TIME": 14,
          "ACK_CURRENT_TIME_IN_OFFICE": 124,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 91,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 77,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 6,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "COUCH, J",
          "MRN": "292220",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:13AM ",
          "START_TIME(READY TO COME BACK)": "10:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:29AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:58AM ",
          "ACK_TO_START_TIME": 14,
          "ACK_CURRENT_TIME_IN_OFFICE": 105,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 105,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 91,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "JONES, A",
          "MRN": "444740",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:07PM ",
          "START_TIME(READY TO COME BACK)": " 2:07PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:08PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -115,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 1,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 1,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "KEMPKER, R",
          "MRN": "1230480",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:17PM ",
          "START_TIME(READY TO COME BACK)": "12:24PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:24PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:33PM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": -12,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 16,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 9,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "KAUFMANN, P",
          "MRN": "068712",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:20PM ",
          "START_TIME(READY TO COME BACK)": " 2:31PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:48PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:33PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": -139,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 73,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 6,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "TOWERS, J",
          "MRN": "943480",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:28PM ",
          "START_TIME(READY TO COME BACK)": " 2:43PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:49PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:33PM ",
          "ACK_TO_START_TIME": 15,
          "ACK_CURRENT_TIME_IN_OFFICE": -151,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 65,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "KERCE, D",
          "MRN": "201060",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:36PM ",
          "START_TIME(READY TO COME BACK)": " 3:13PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 37,
          "ACK_CURRENT_TIME_IN_OFFICE": -181,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Ferndale 9 Mile",
          "CAREGIVER_NAME": "Cunningham, Alexa PA-C",
          "LNFI": "HARDRICK, J",
          "MRN": "1294130",
          "CA_ASSIGNED": "Alexis",
          "ROOM_ASSIGNED": "RM A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:17PM ",
          "START_TIME(READY TO COME BACK)": " 3:41PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:27PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 24,
          "ACK_CURRENT_TIME_IN_OFFICE": -209,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "MUGHANNAM, M",
          "MRN": "775450",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:58AM ",
          "START_TIME(READY TO COME BACK)": "10:13AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:19AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:57AM ",
          "ACK_TO_START_TIME": 15,
          "ACK_CURRENT_TIME_IN_OFFICE": 119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 59,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 4,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "KIDIS, N",
          "MRN": "1295560",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A9",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:59AM ",
          "START_TIME(READY TO COME BACK)": "10:59AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:10AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 73,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 122,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 122,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 9,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "COWEN, J",
          "MRN": "1356220",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:33AM ",
          "START_TIME(READY TO COME BACK)": "10:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:57AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 17,
          "ACK_CURRENT_TIME_IN_OFFICE": 82,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 148,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 131,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 20,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "WIELGOT, P",
          "MRN": "774770",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:30AM ",
          "START_TIME(READY TO COME BACK)": "10:57AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:10AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 27,
          "ACK_CURRENT_TIME_IN_OFFICE": 75,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 151,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 124,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 13,
          "NON_POC_LABS": 5,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "WILLIAMS, F",
          "MRN": "1146840",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A9",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:17AM ",
          "START_TIME(READY TO COME BACK)": "11:20AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:20PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:02PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 52,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 105,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "SATCHER, T",
          "MRN": "1339550",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:48PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:07PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:37PM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": -40,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 169,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 165,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "HERRON, J",
          "MRN": "492040",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:32PM ",
          "START_TIME(READY TO COME BACK)": " 2:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:51PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 29,
          "ACK_CURRENT_TIME_IN_OFFICE": -109,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 130,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 101,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "MONROE, T",
          "MRN": "949690",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A9",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:51PM ",
          "START_TIME(READY TO COME BACK)": " 1:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -102,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 111,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 108,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 10,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "LIETZAU, D",
          "MRN": "788040",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:16PM ",
          "START_TIME(READY TO COME BACK)": " 3:17PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:39PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:41PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 24,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "BRASS, C",
          "MRN": "953510",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A9",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:51PM ",
          "START_TIME(READY TO COME BACK)": " 3:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:18PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 13,
          "ACK_CURRENT_TIME_IN_OFFICE": -172,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "LNFI": "NEZOL, J",
          "MRN": "949360",
          "CA_ASSIGNED": "SHANIYA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:58PM ",
          "START_TIME(READY TO COME BACK)": " 3:17PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:38PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": -185,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 13,
          "NON_POC_LABS": 6,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "PEGUES MCCLANAHAN, T",
          "MRN": "043277",
          "CA_ASSIGNED": "SHAMIKA",
          "ROOM_ASSIGNED": "RM A-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:25AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:20AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": -70,
          "ACK_CURRENT_TIME_IN_OFFICE": 237,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 49,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 119,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Walk, Monique NP",
          "LNFI": "TUGGLE, P",
          "MRN": "307990",
          "CA_ASSIGNED": "SHAMIKA",
          "ROOM_ASSIGNED": "RM A-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:00AM ",
          "START_TIME(READY TO COME BACK)": " 9:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 192,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 5,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "George, Christina FNP-BC",
          "LNFI": "STEELE, B",
          "MRN": "1350350",
          "CA_ASSIGNED": "SHAMIKA",
          "ROOM_ASSIGNED": "RM A-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:30AM ",
          "START_TIME(READY TO COME BACK)": "10:35AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:43AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:35PM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 97,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 120,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "DAVIS, M",
          "MRN": "1387080",
          "CA_ASSIGNED": "SHAMIKA",
          "ROOM_ASSIGNED": "RM A-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:52AM ",
          "START_TIME(READY TO COME BACK)": "11:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:05AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:35PM ",
          "ACK_TO_START_TIME": 18,
          "ACK_CURRENT_TIME_IN_OFFICE": 62,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 103,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 85,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 9,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Walk, Monique NP",
          "LNFI": "CASH, K",
          "MRN": "320860",
          "CA_ASSIGNED": "SHAMIKA",
          "ROOM_ASSIGNED": "RM A-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:41PM ",
          "START_TIME(READY TO COME BACK)": " 1:41PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:08PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -89,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 113,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 113,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "GAINES, E",
          "MRN": "493460",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:48AM ",
          "START_TIME(READY TO COME BACK)": " 7:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 7:54AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": -61,
          "ACK_CURRENT_TIME_IN_OFFICE": 205,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 92,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 153,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 10,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "CHANDLER, D",
          "MRN": "421460",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:03AM ",
          "START_TIME(READY TO COME BACK)": " 9:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:04AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": -59,
          "ACK_CURRENT_TIME_IN_OFFICE": 128,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 17,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 76,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "HUGHES, M",
          "MRN": "420910",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:34AM ",
          "START_TIME(READY TO COME BACK)": " 8:39AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:32AM ",
          "ACK_TO_START_TIME": -55,
          "ACK_CURRENT_TIME_IN_OFFICE": 153,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 58,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 113,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "LITTLETON, A",
          "MRN": "1224500",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:38AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:00PM ",
          "ACK_TO_START_TIME": -61,
          "ACK_CURRENT_TIME_IN_OFFICE": 35,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 22,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "LITTLETON, A",
          "MRN": "1224500",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:38AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:00PM ",
          "ACK_TO_START_TIME": -61,
          "ACK_CURRENT_TIME_IN_OFFICE": 35,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 22,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 11,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "WHITE, C",
          "MRN": "654260",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:29PM ",
          "START_TIME(READY TO COME BACK)": "12:29PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:37PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:07PM ",
          "ACK_TO_START_TIME": -60,
          "ACK_CURRENT_TIME_IN_OFFICE": -77,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 98,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "ALONZO, N",
          "MRN": "1156930",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 1:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:25PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:13PM ",
          "ACK_TO_START_TIME": -59,
          "ACK_CURRENT_TIME_IN_OFFICE": -112,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 129,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "ALONZO, N",
          "MRN": "1156930",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 1:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:25PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:13PM ",
          "ACK_TO_START_TIME": -59,
          "ACK_CURRENT_TIME_IN_OFFICE": -112,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 129,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Telegraph",
          "CAREGIVER_NAME": "Kurishi, Yasmine PA",
          "LNFI": "COOKS, L",
          "MRN": "1357870",
          "CA_ASSIGNED": "Riyana",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:15PM ",
          "START_TIME(READY TO COME BACK)": " 2:14PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:27PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": -61,
          "ACK_CURRENT_TIME_IN_OFFICE": -182,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "WESTIN, R",
          "MRN": "1316860",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:56AM ",
          "START_TIME(READY TO COME BACK)": " 7:56AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:06AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:01AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 256,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 65,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 65,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "COMPTON, P",
          "MRN": "1319990",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:14AM ",
          "START_TIME(READY TO COME BACK)": " 8:14AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:53AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 238,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "BUSE, C",
          "MRN": "1319100",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:31AM ",
          "START_TIME(READY TO COME BACK)": " 8:31AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:03AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 221,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "BLEVINS, K",
          "MRN": "1347080",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:01AM ",
          "START_TIME(READY TO COME BACK)": " 9:01AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:10AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 191,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 54,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 54,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "SCHROEDER, K",
          "MRN": "1362310",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:15AM ",
          "START_TIME(READY TO COME BACK)": "10:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 117,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 65,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 65,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "ROSE, W",
          "MRN": "1313990",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:20AM ",
          "START_TIME(READY TO COME BACK)": "11:20AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:52AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:22PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 52,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 122,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 122,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "TOWNSEND, I",
          "MRN": "1383870",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:22PM ",
          "START_TIME(READY TO COME BACK)": " 2:22PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:28PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:36PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -130,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 14,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "BANH, A",
          "MRN": "1382610",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:04PM ",
          "START_TIME(READY TO COME BACK)": " 3:07PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -175,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "BANH, H",
          "MRN": "1382570",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:05PM ",
          "START_TIME(READY TO COME BACK)": " 3:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:37PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -176,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "LUONG, D",
          "MRN": "1382600",
          "CA_ASSIGNED": "Kerri",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:05PM ",
          "START_TIME(READY TO COME BACK)": " 3:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:38PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -176,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "FRAS, J",
          "MRN": "1306640",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:56AM ",
          "START_TIME(READY TO COME BACK)": " 8:57AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:32AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:25AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 195,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 89,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "FOX, A",
          "MRN": "1321580",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:44AM ",
          "START_TIME(READY TO COME BACK)": " 8:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:58AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:15AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 208,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 31,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "HAMMON, T",
          "MRN": "1323180",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:17AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:02AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:55AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 175,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 98,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 98,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "OHARA, C",
          "MRN": "1312720",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:56AM ",
          "START_TIME(READY TO COME BACK)": " 9:56AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:23AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:22AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 136,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 86,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "WINTER, V",
          "MRN": "1333920",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:25AM ",
          "START_TIME(READY TO COME BACK)": "10:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:22AM ",
          "ACK_TO_START_TIME": 22,
          "ACK_CURRENT_TIME_IN_OFFICE": 85,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 35,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "SEROWIECKI, M",
          "MRN": "1330590",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:35AM ",
          "START_TIME(READY TO COME BACK)": "10:42AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:50AM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 90,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 75,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 68,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "VOTRUBA, A",
          "MRN": "1333000",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:55AM ",
          "START_TIME(READY TO COME BACK)": "10:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:09PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 77,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "WRIGHT, I",
          "MRN": "1334010",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:15AM ",
          "START_TIME(READY TO COME BACK)": "11:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": -3,
          "ACK_CURRENT_TIME_IN_OFFICE": 60,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 87,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 90,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "SPENCER, B",
          "MRN": "1331160",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:24AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:11PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": -1,
          "ACK_CURRENT_TIME_IN_OFFICE": 48,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 78,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "MARTIN, W",
          "MRN": "1326730",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:41AM ",
          "START_TIME(READY TO COME BACK)": "11:42AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 30,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 60,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "SPEARS, C",
          "MRN": "1331180",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:20PM ",
          "START_TIME(READY TO COME BACK)": "12:34PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:41PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:23PM ",
          "ACK_TO_START_TIME": 14,
          "ACK_CURRENT_TIME_IN_OFFICE": -22,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 63,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 49,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "LINSCOTT, D",
          "MRN": "1325900",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:31PM ",
          "START_TIME(READY TO COME BACK)": " 1:31PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:53PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -79,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 100,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 100,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 8,
          "NON_POC_LABS": 10,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "LINSCOTT, G",
          "MRN": "1325940",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:31PM ",
          "START_TIME(READY TO COME BACK)": " 1:31PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:55PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -79,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 100,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 100,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 8,
          "NON_POC_LABS": 8,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "GRAY, A",
          "MRN": "1322480",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:37PM ",
          "START_TIME(READY TO COME BACK)": " 1:37PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:02PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -85,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 94,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 94,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "DOLLIVER, L",
          "MRN": "1320880",
          "CA_ASSIGNED": "Bronwyn",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:40PM ",
          "START_TIME(READY TO COME BACK)": " 2:40PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:43PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -148,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 6,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "JACKSON, J",
          "MRN": "754650",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:06AM ",
          "START_TIME(READY TO COME BACK)": " 9:09AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:13AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 183,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 35,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "DAWSON, D",
          "MRN": "1359930",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:56AM ",
          "START_TIME(READY TO COME BACK)": " 9:58AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:05AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:49AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 134,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 51,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "GOOLSBY, T",
          "MRN": "1385850",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:18AM ",
          "START_TIME(READY TO COME BACK)": "10:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:33AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:02PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 113,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 103,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 6,
          "NON_POC_LABS": 8,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "BACON, V",
          "MRN": "861960",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:30PM ",
          "START_TIME(READY TO COME BACK)": " 1:32PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:36PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:34PM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -80,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 64,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "BUSH, I",
          "MRN": "867370",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:44PM ",
          "START_TIME(READY TO COME BACK)": " 1:45PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:42PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:34PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -93,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 49,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "MITCHELL, A",
          "MRN": "1152340",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:44PM ",
          "START_TIME(READY TO COME BACK)": " 2:47PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:00PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:54PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -155,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 67,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "CAREGIVER_NAME": "Hnatio, Bryan PA",
          "LNFI": "DOWNING, L",
          "MRN": "680190",
          "CA_ASSIGNED": "MIASIA",
          "ROOM_ASSIGNED": "ROOM B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:36PM ",
          "START_TIME(READY TO COME BACK)": " 3:43PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:11PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": -211,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "MACKLER, N",
          "MRN": "295100",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:00AM ",
          "START_TIME(READY TO COME BACK)": " 8:24AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:24AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:58AM ",
          "ACK_TO_START_TIME": -36,
          "ACK_CURRENT_TIME_IN_OFFICE": 168,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 58,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 94,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "CARSON, R",
          "MRN": "1105260",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:06AM ",
          "START_TIME(READY TO COME BACK)": " 8:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:51AM ",
          "ACK_TO_START_TIME": -26,
          "ACK_CURRENT_TIME_IN_OFFICE": 152,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 105,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 131,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "MARSHALL, S",
          "MRN": "022865",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:58AM ",
          "START_TIME(READY TO COME BACK)": "11:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:26AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:15PM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": -6,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 77,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "LITTLETON, A",
          "MRN": "1224500",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:00AM ",
          "START_TIME(READY TO COME BACK)": "10:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:11AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:35AM ",
          "ACK_TO_START_TIME": -48,
          "ACK_CURRENT_TIME_IN_OFFICE": 60,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 35,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "LITTLETON, A",
          "MRN": "1224500",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:00AM ",
          "START_TIME(READY TO COME BACK)": "10:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:11AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:35AM ",
          "ACK_TO_START_TIME": -48,
          "ACK_CURRENT_TIME_IN_OFFICE": 60,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 35,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 11,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "BROWN, L",
          "MRN": "1357430",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:00AM ",
          "START_TIME(READY TO COME BACK)": "11:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:18AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:39AM ",
          "ACK_TO_START_TIME": 18,
          "ACK_CURRENT_TIME_IN_OFFICE": -6,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 21,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "ALAHRAJ, G",
          "MRN": "1387190",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:24AM ",
          "START_TIME(READY TO COME BACK)": "10:38AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:40AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:20PM ",
          "ACK_TO_START_TIME": -46,
          "ACK_CURRENT_TIME_IN_OFFICE": 34,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "JENKINS, T",
          "MRN": "1200990",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:47AM ",
          "START_TIME(READY TO COME BACK)": "10:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:05AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:34PM ",
          "ACK_TO_START_TIME": -52,
          "ACK_CURRENT_TIME_IN_OFFICE": 17,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 99,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "PHILLIPS, M",
          "MRN": "1175460",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:53PM ",
          "START_TIME(READY TO COME BACK)": "12:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:24PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:30PM ",
          "ACK_TO_START_TIME": -52,
          "ACK_CURRENT_TIME_IN_OFFICE": -49,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 37,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 89,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "RUSSELL, T",
          "MRN": "415020",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:16PM ",
          "START_TIME(READY TO COME BACK)": "12:20PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:39PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:00PM ",
          "ACK_TO_START_TIME": -56,
          "ACK_CURRENT_TIME_IN_OFFICE": -68,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 100,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "JONES, M",
          "MRN": "1120930",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:00PM ",
          "START_TIME(READY TO COME BACK)": " 1:11PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:22PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:48PM ",
          "ACK_TO_START_TIME": 71,
          "ACK_CURRENT_TIME_IN_OFFICE": -119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 108,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 37,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "BAHOURA, K",
          "MRN": "1386810",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:37PM ",
          "START_TIME(READY TO COME BACK)": " 1:21PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:26PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:51PM ",
          "ACK_TO_START_TIME": -16,
          "ACK_CURRENT_TIME_IN_OFFICE": -129,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 90,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "BOSTIC, L",
          "MRN": "1134810",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:41PM ",
          "START_TIME(READY TO COME BACK)": " 1:16PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:59PM ",
          "ACK_TO_START_TIME": -25,
          "ACK_CURRENT_TIME_IN_OFFICE": -124,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 78,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 103,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "VEERA, S",
          "MRN": "1281050",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:46PM ",
          "START_TIME(READY TO COME BACK)": " 1:48PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:54PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:16PM ",
          "ACK_TO_START_TIME": -58,
          "ACK_CURRENT_TIME_IN_OFFICE": -156,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 30,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "RUIZ ESTEBAN, M",
          "MRN": "1388020",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:52PM ",
          "START_TIME(READY TO COME BACK)": " 1:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:03PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:43PM ",
          "ACK_TO_START_TIME": -58,
          "ACK_CURRENT_TIME_IN_OFFICE": -162,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 51,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 109,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "LNFI": "WRIGHT, T",
          "MRN": "1386430",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:42PM ",
          "START_TIME(READY TO COME BACK)": " 2:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:13PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": -30,
          "ACK_CURRENT_TIME_IN_OFFICE": -180,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "HACHEM, N",
          "MRN": "1387110",
          "CA_ASSIGNED": "RILEY",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:18PM ",
          "START_TIME(READY TO COME BACK)": " 2:55PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:01PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:09PM ",
          "ACK_TO_START_TIME": -23,
          "ACK_CURRENT_TIME_IN_OFFICE": -223,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 51,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "BROWN, T",
          "MRN": "302750",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM B-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:04AM ",
          "START_TIME(READY TO COME BACK)": " 9:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:34AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 188,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 70,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "SIMPSON, F",
          "MRN": "721070",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM D-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:45AM ",
          "START_TIME(READY TO COME BACK)": " 9:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:57AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:40AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 141,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 115,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 109,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "SIIVOLA, C",
          "MRN": "1232590",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM B-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:13AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:25AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:41AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 91,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "PRITCHETT, F",
          "MRN": "473940",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM B-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:56AM ",
          "START_TIME(READY TO COME BACK)": "12:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:16PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 40,
          "ACK_CURRENT_TIME_IN_OFFICE": -24,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 139,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 99,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "COUNTS, R",
          "MRN": "482670",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM B-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:34PM ",
          "START_TIME(READY TO COME BACK)": "12:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:41PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:15PM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": -24,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 101,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 99,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "RIDDLE, L",
          "MRN": "1353340",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM B-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:12PM ",
          "START_TIME(READY TO COME BACK)": " 2:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:26PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -120,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 82,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "TALBERT, S",
          "MRN": "857860",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM D-1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:21PM ",
          "START_TIME(READY TO COME BACK)": " 3:21PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:28PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:44PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -189,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 23,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 23,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "LEWIS, G",
          "MRN": "1233970",
          "CA_ASSIGNED": "SERENA",
          "ROOM_ASSIGNED": "RM A-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:33PM ",
          "START_TIME(READY TO COME BACK)": " 3:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:42PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:02PM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": -204,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 29,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 26,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "SEWELL, D",
          "MRN": "506350",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:11AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:44AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 259,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 51,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 51,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "CANTERBURY, M",
          "MRN": "040133",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:31AM ",
          "START_TIME(READY TO COME BACK)": " 8:31AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:49AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 221,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 117,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 117,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "STRATTON, R",
          "MRN": "209450",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:04AM ",
          "START_TIME(READY TO COME BACK)": " 9:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:24AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 188,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "JOHNSON, L",
          "MRN": "874740",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:12AM ",
          "START_TIME(READY TO COME BACK)": " 9:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:27AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 180,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 76,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "WRIGHT, K",
          "MRN": "506390",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:54AM ",
          "START_TIME(READY TO COME BACK)": "10:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:32AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:47AM ",
          "ACK_TO_START_TIME": 27,
          "ACK_CURRENT_TIME_IN_OFFICE": 111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 113,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 86,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "ANTHONY, K",
          "MRN": "008161",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:33AM ",
          "START_TIME(READY TO COME BACK)": "10:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:46AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 99,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 73,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 73,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "BURNS, S",
          "MRN": "301510",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:12AM ",
          "START_TIME(READY TO COME BACK)": "11:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:46AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 60,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 34,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 34,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "LINDSEY, P",
          "MRN": "666580",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:49AM ",
          "START_TIME(READY TO COME BACK)": "11:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:17PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 23,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 244,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 244,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 10,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "ISRAEL, J",
          "MRN": "1143020",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 19,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 240,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 240,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "LINDSEY, G",
          "MRN": "666570",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:01PM ",
          "START_TIME(READY TO COME BACK)": "12:01PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:19PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 11,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 232,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 232,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "CHARLES, J",
          "MRN": "382520",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:14PM ",
          "START_TIME(READY TO COME BACK)": " 1:14PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:59PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -62,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 159,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 159,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "WILSON, E",
          "MRN": "723110",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:31PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 32,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 142,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 110,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "ALFORD, B",
          "MRN": "927900",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:08PM ",
          "START_TIME(READY TO COME BACK)": " 2:12PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:24PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:28PM ",
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": -120,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 76,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "SEMAAN, A",
          "MRN": "534890",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A8",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:36PM ",
          "START_TIME(READY TO COME BACK)": " 2:37PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:44PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -145,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 68,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 67,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "WILLS, T",
          "MRN": "001320",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:40PM ",
          "START_TIME(READY TO COME BACK)": " 2:40PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:58PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:58PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -148,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 78,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 78,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Gadoua, Christopher PA-C",
          "LNFI": "LATHAM, V",
          "MRN": "586340",
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:14PM ",
          "START_TIME(READY TO COME BACK)": " 3:14PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:43PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -182,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "BURLEY, L",
          "MRN": "1010720",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:34AM ",
          "START_TIME(READY TO COME BACK)": " 9:18AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:12AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": 44,
          "ACK_CURRENT_TIME_IN_OFFICE": 174,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 106,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "TERZIEV, D",
          "MRN": "1011990",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:22AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:20AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 170,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 63,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 58,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 7,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "TERZIEVA, S",
          "MRN": "1008910",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:17AM ",
          "START_TIME(READY TO COME BACK)": " 9:22AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:21AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:20AM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 170,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 63,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 58,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "KIERNAN, K",
          "MRN": "1015440",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:52AM ",
          "START_TIME(READY TO COME BACK)": "10:12AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:09AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:24AM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": 120,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 92,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 72,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "GLACE, D",
          "MRN": "1003230",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:49AM ",
          "START_TIME(READY TO COME BACK)": " 9:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:50AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:45AM ",
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": 138,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 116,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 111,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "LEE, E",
          "MRN": "960380",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM B5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:41AM ",
          "START_TIME(READY TO COME BACK)": "11:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:12AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:59PM ",
          "ACK_TO_START_TIME": 19,
          "ACK_CURRENT_TIME_IN_OFFICE": 72,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 138,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 119,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "PYLE, J",
          "MRN": "1016240",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:46AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:41PM ",
          "ACK_TO_START_TIME": 33,
          "ACK_CURRENT_TIME_IN_OFFICE": 89,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 211,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 178,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "LIND, P",
          "MRN": "973920",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM B6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:41AM ",
          "START_TIME(READY TO COME BACK)": "11:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:12AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 30,
          "ACK_CURRENT_TIME_IN_OFFICE": 61,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 181,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 151,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "WEILER KONDRAT, K",
          "MRN": "995530",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:30AM ",
          "START_TIME(READY TO COME BACK)": "11:43AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:46AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:42PM ",
          "ACK_TO_START_TIME": 13,
          "ACK_CURRENT_TIME_IN_OFFICE": 29,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 132,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 119,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "MELLO JR, P",
          "MRN": "999950",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:48PM ",
          "START_TIME(READY TO COME BACK)": " 1:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:29PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:57PM ",
          "ACK_TO_START_TIME": 42,
          "ACK_CURRENT_TIME_IN_OFFICE": -78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 69,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "WILLIS, M",
          "MRN": "1000830",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:02PM ",
          "START_TIME(READY TO COME BACK)": " 1:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:29PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:59PM ",
          "ACK_TO_START_TIME": 28,
          "ACK_CURRENT_TIME_IN_OFFICE": -78,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 29,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "DUFORD, P",
          "MRN": "996990",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 2:10PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:06PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:56PM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": -118,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 5,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "GREGORASZ, J",
          "MRN": "973810",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:12PM ",
          "START_TIME(READY TO COME BACK)": " 2:21PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:22PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:56PM ",
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -129,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 35,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "SHUMYLO, M",
          "MRN": "264600",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:21PM ",
          "START_TIME(READY TO COME BACK)": " 3:30PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:23PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 9,
          "ACK_CURRENT_TIME_IN_OFFICE": -198,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Royal Oak Woodward",
          "CAREGIVER_NAME": "Rothenberg, Ronald DO",
          "LNFI": "PINNEO, K",
          "MRN": "998700",
          "CA_ASSIGNED": "Keyra",
          "ROOM_ASSIGNED": "RM A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:53PM ",
          "START_TIME(READY TO COME BACK)": " 4:07PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:07PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 14,
          "ACK_CURRENT_TIME_IN_OFFICE": -235,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "PETRIK, C",
          "MRN": "1155970",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:01AM ",
          "START_TIME(READY TO COME BACK)": " 8:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:19AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:50AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 250,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 49,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "HOWARD, S",
          "MRN": "446020",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:58AM ",
          "START_TIME(READY TO COME BACK)": " 8:58AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:15AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 194,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 90,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 90,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "HEWLETT, J",
          "MRN": "1221270",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:53AM ",
          "START_TIME(READY TO COME BACK)": " 8:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:15AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 199,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 95,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 95,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "JOHNSON, S",
          "MRN": "456950",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:36AM ",
          "START_TIME(READY TO COME BACK)": " 8:36AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:47AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 216,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 112,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 112,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "WRIGHT, D",
          "MRN": "1387310",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:48AM ",
          "START_TIME(READY TO COME BACK)": " 9:48AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:15AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 144,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 103,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 103,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 40,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "HARRIS, A",
          "MRN": "015590",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:50AM ",
          "START_TIME(READY TO COME BACK)": " 9:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:35AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 141,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 105,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "LAWHORN, J",
          "MRN": "861600",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:25AM ",
          "START_TIME(READY TO COME BACK)": "10:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:40AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:45AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 107,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "HOSKINS, J",
          "MRN": "919350",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:51AM ",
          "START_TIME(READY TO COME BACK)": "10:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 81,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 111,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 111,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "JETER, D",
          "MRN": "1385200",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:48AM ",
          "START_TIME(READY TO COME BACK)": "11:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:50AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": 91,
          "ACK_CURRENT_TIME_IN_OFFICE": 53,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 174,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "GIBSON, C",
          "MRN": "056519",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:44AM ",
          "START_TIME(READY TO COME BACK)": "12:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:07PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 79,
          "ACK_CURRENT_TIME_IN_OFFICE": 9,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 309,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 230,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "BOMAR, P",
          "MRN": "610120",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:58PM ",
          "START_TIME(READY TO COME BACK)": "12:58PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:20PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -46,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 175,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 175,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "THOMAS, N",
          "MRN": "1384490",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:57PM ",
          "START_TIME(READY TO COME BACK)": "12:57PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:05PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -45,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 176,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 176,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "STEPHENS, C",
          "MRN": "640010",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:39PM ",
          "START_TIME(READY TO COME BACK)": " 2:39PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:26PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -147,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Khemmoro, Annaliese PA",
          "LNFI": "WATKINS, P",
          "MRN": "628750",
          "CA_ASSIGNED": "SIERRA",
          "ROOM_ASSIGNED": "C2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:20PM ",
          "START_TIME(READY TO COME BACK)": " 3:20PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:33PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -188,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 48,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "BALLARIEL PORTER, P",
          "MRN": "517441",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:51AM ",
          "START_TIME(READY TO COME BACK)": " 8:52AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:11AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:29AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 200,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 98,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 97,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 2,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "WADE, C",
          "MRN": "1386290",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:05AM ",
          "START_TIME(READY TO COME BACK)": " 9:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:32AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:15AM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": 181,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 130,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 124,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "LOWE, M",
          "MRN": "913130",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:31AM ",
          "START_TIME(READY TO COME BACK)": " 9:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:50AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:23AM ",
          "ACK_TO_START_TIME": 18,
          "ACK_CURRENT_TIME_IN_OFFICE": 143,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 112,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 94,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 5,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "ONYEUMA, K",
          "MRN": "922380",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:49AM ",
          "START_TIME(READY TO COME BACK)": "10:49AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:15AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:20PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 83,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 91,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 91,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 9,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "TUCKER, S",
          "MRN": "634050",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:35AM ",
          "START_TIME(READY TO COME BACK)": "10:35AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:50AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:42PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 97,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 127,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 127,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 3,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "MORROW, G",
          "MRN": "000981",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:19PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:00PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:53PM ",
          "ACK_TO_START_TIME": 44,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 154,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 110,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "MARYAM, S",
          "MRN": "1387850",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 2:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:26PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 5,
          "ACK_CURRENT_TIME_IN_OFFICE": -116,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 6,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "MUNZEREEN, S",
          "MRN": "1387840",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 2:07PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:31PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 4,
          "ACK_CURRENT_TIME_IN_OFFICE": -115,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "ZELLARS, S",
          "MRN": "718620",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:22PM ",
          "START_TIME(READY TO COME BACK)": " 3:22PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:51PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -190,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Riggins, Valerie NP",
          "LNFI": "ADAMS, L",
          "MRN": "854360",
          "CA_ASSIGNED": "MONISHIA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:44PM ",
          "START_TIME(READY TO COME BACK)": " 3:44PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:58PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -212,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "SHIPP, G",
          "MRN": "859740",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:18AM ",
          "START_TIME(READY TO COME BACK)": " 8:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:43AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 26,
          "ACK_CURRENT_TIME_IN_OFFICE": 208,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 116,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 90,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "SHIPP, R",
          "MRN": "1387500",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:27AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 23,
          "ACK_CURRENT_TIME_IN_OFFICE": 202,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 107,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "CUSMANO, S",
          "MRN": "775970",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A10",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:38AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:56AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:14AM ",
          "ACK_TO_START_TIME": 12,
          "ACK_CURRENT_TIME_IN_OFFICE": 202,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 96,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "STEFANOW, M",
          "MRN": "1338220",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:53AM ",
          "START_TIME(READY TO COME BACK)": "10:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:10AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:00PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": 128,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 187,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 176,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "STREASICK, K",
          "MRN": "805220",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:17AM ",
          "START_TIME(READY TO COME BACK)": "10:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:33AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 15,
          "ACK_CURRENT_TIME_IN_OFFICE": 100,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 164,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 149,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "MEANS-SUMRALL, E",
          "MRN": "858750",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:46AM ",
          "START_TIME(READY TO COME BACK)": "10:57AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:00AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:01PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": 75,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 135,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 124,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "ELIASZ, B",
          "MRN": "229860",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:35AM ",
          "START_TIME(READY TO COME BACK)": "12:58PM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:55AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:02PM ",
          "ACK_TO_START_TIME": 83,
          "ACK_CURRENT_TIME_IN_OFFICE": -46,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 87,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 4,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "BUSCEMI, S",
          "MRN": "824730",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:48PM ",
          "START_TIME(READY TO COME BACK)": "12:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:21PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -42,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 174,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 168,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "HARRIS, T",
          "MRN": "846920",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A7",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:34PM ",
          "START_TIME(READY TO COME BACK)": " 1:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": -102,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 128,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 108,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "HEARD, L",
          "MRN": "1357750",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:26PM ",
          "START_TIME(READY TO COME BACK)": " 2:37PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:42PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:42PM ",
          "ACK_TO_START_TIME": 11,
          "ACK_CURRENT_TIME_IN_OFFICE": -145,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 76,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 65,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC SCS Harper",
          "CAREGIVER_NAME": "Kriko, Sarah PA",
          "LNFI": "JIMENEZ DE SALCEDO, A",
          "MRN": "1171930",
          "CA_ASSIGNED": "ERICA",
          "ROOM_ASSIGNED": "A6",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:30PM ",
          "START_TIME(READY TO COME BACK)": " 3:36PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:53PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 6,
          "ACK_CURRENT_TIME_IN_OFFICE": -204,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "CRANE, M",
          "MRN": "1320170",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:03AM ",
          "START_TIME(READY TO COME BACK)": " 9:03AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:09AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:41AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 189,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "MARTIN, J",
          "MRN": "1311310",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:28AM ",
          "START_TIME(READY TO COME BACK)": " 9:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:32AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 163,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 64,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 63,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "ABRAHAM, T",
          "MRN": "1317580",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:27AM ",
          "START_TIME(READY TO COME BACK)": "10:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:52AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 105,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 85,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 85,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "ABRAHAM, T",
          "MRN": "1317580",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:27AM ",
          "START_TIME(READY TO COME BACK)": "10:27AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:45AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:52AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 105,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 85,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 85,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 11,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "SCRIVENER, L",
          "MRN": "1314630",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:14AM ",
          "START_TIME(READY TO COME BACK)": "11:14AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:28AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:18PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 58,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 64,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 64,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "MOVSESYAN, A",
          "MRN": "1327560",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:02PM ",
          "START_TIME(READY TO COME BACK)": " 1:09PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:17PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": -57,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 69,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "HARDMAN, DONALD J. MD",
          "LNFI": "BURNETT, C",
          "MRN": "1319090",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:21PM ",
          "START_TIME(READY TO COME BACK)": " 1:21PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:34PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -69,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "BRYANT, R",
          "MRN": "1319010",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:03PM ",
          "START_TIME(READY TO COME BACK)": " 2:04PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:18PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:53PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -112,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 49,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "KRUEGER, D",
          "MRN": "1325250",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:10PM ",
          "START_TIME(READY TO COME BACK)": " 3:10PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:18PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -178,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC FLINT Linden",
          "CAREGIVER_NAME": "Davis, Janelle PA",
          "LNFI": "GEORGE, D",
          "MRN": "1322060",
          "CA_ASSIGNED": "Linda",
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:54PM ",
          "START_TIME(READY TO COME BACK)": " 3:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:06PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -222,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "CARTER, M",
          "MRN": "490640",
          "CA_ASSIGNED": "Catrece",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:09AM ",
          "START_TIME(READY TO COME BACK)": " 9:31AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:02AM ",
          "ACK_TO_START_TIME": 22,
          "ACK_CURRENT_TIME_IN_OFFICE": 101,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 53,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 31,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "MCMICKEL, V",
          "MRN": "465350",
          "CA_ASSIGNED": "Catrece",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:05AM ",
          "START_TIME(READY TO COME BACK)": " 8:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:16AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": -49,
          "ACK_CURRENT_TIME_IN_OFFICE": 176,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 85,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 134,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "MCMICKEL, V",
          "MRN": "465350",
          "CA_ASSIGNED": "Catrece",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:05AM ",
          "START_TIME(READY TO COME BACK)": " 8:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:16AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": -49,
          "ACK_CURRENT_TIME_IN_OFFICE": 176,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 85,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 134,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "GUINN, C",
          "MRN": "1209340",
          "CA_ASSIGNED": "Catrece",
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:42AM ",
          "START_TIME(READY TO COME BACK)": "10:51AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:05PM ",
          "ACK_TO_START_TIME": -51,
          "ACK_CURRENT_TIME_IN_OFFICE": 21,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 23,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "GOULET, L",
          "MRN": "1108260",
          "CA_ASSIGNED": "Catrece",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:53PM ",
          "START_TIME(READY TO COME BACK)": " 1:11PM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:11PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:31PM ",
          "ACK_TO_START_TIME": 18,
          "ACK_CURRENT_TIME_IN_OFFICE": -119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 38,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 20,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Gray, Jacquis PA",
          "LNFI": "HARPER, R",
          "MRN": "1104990",
          "CA_ASSIGNED": "Catrece",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:42PM ",
          "START_TIME(READY TO COME BACK)": " 1:56PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:56PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:19PM ",
          "ACK_TO_START_TIME": -46,
          "ACK_CURRENT_TIME_IN_OFFICE": -164,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 37,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 83,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "ALCHAMI, N",
          "MRN": "1388210",
          "CA_ASSIGNED": "GUEST CA",
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:34AM ",
          "START_TIME(READY TO COME BACK)": "10:16AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:56AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:56AM ",
          "ACK_TO_START_TIME": 42,
          "ACK_CURRENT_TIME_IN_OFFICE": 56,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 82,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 40,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "CAREGIVER_NAME": "Hadla, Tarek MD",
          "LNFI": "RAINES, J",
          "MRN": "1386860",
          "CA_ASSIGNED": "GUEST CA",
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:58AM ",
          "START_TIME(READY TO COME BACK)": "10:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:26AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:40AM ",
          "ACK_TO_START_TIME": 28,
          "ACK_CURRENT_TIME_IN_OFFICE": 46,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 102,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "BERENSON, E",
          "MRN": "859330",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:02AM ",
          "START_TIME(READY TO COME BACK)": " 8:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:45AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 250,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "RILEY, V",
          "MRN": "622190",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:41AM ",
          "START_TIME(READY TO COME BACK)": " 8:41AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:00AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:56AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 211,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 15,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 15,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "MORRISH, W",
          "MRN": "042657",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:34AM ",
          "START_TIME(READY TO COME BACK)": " 8:34AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:56AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:15AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 218,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "ALTMAN, J",
          "MRN": "698420",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:11AM ",
          "START_TIME(READY TO COME BACK)": "10:11AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:23AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:52AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 121,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "LOCKE, B",
          "MRN": "519510",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:46AM ",
          "START_TIME(READY TO COME BACK)": "10:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:59AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:48AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 86,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 62,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 62,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "BARNER, C",
          "MRN": "1209740",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:22AM ",
          "START_TIME(READY TO COME BACK)": "11:22AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:35AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:32PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 50,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 70,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 70,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "YELLOW",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "BROWN, T",
          "MRN": "1359770",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:43PM ",
          "START_TIME(READY TO COME BACK)": " 2:03PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:51PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 2:25PM ",
          "ACK_TO_START_TIME": 20,
          "ACK_CURRENT_TIME_IN_OFFICE": -111,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 42,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 22,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "FULLER, K",
          "MRN": "274480",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:54PM ",
          "START_TIME(READY TO COME BACK)": " 2:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 2:04PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:00PM ",
          "ACK_TO_START_TIME": 14,
          "ACK_CURRENT_TIME_IN_OFFICE": -116,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 66,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 52,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "WASHINGTON, L",
          "MRN": "489520",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:04PM ",
          "START_TIME(READY TO COME BACK)": " 3:05PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:15PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 4:02PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -173,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 58,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "YELLOW"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Zawisa, Hannah PA",
          "LNFI": "ROBERTS, G",
          "MRN": "590220",
          "CA_ASSIGNED": "ANYIAH",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 3:53PM ",
          "START_TIME(READY TO COME BACK)": " 3:54PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 4:12PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": -222,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Walk, Monique NP",
          "LNFI": "NICHOLS, L",
          "MRN": "639980",
          "CA_ASSIGNED": "KRYSTAL D",
          "ROOM_ASSIGNED": "RM C-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:00AM ",
          "START_TIME(READY TO COME BACK)": "10:00AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:10AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:40AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 132,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 100,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 100,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Niemi, Emily PA",
          "LNFI": "DUNNIGAN, D",
          "MRN": "720390",
          "CA_ASSIGNED": "KRYSTAL D",
          "ROOM_ASSIGNED": "RM B-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:13AM ",
          "START_TIME(READY TO COME BACK)": "10:13AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:41AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 119,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 88,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 88,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Walk, Monique NP",
          "LNFI": "COOPER JR, E",
          "MRN": "1387800",
          "CA_ASSIGNED": "KRYSTAL D",
          "ROOM_ASSIGNED": "RM C-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:35AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:56AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:34PM ",
          "ACK_TO_START_TIME": 7,
          "ACK_CURRENT_TIME_IN_OFFICE": 97,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 126,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 119,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 4,
          "NON_POC_LABS": 8,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Walk, Monique NP",
          "LNFI": "SULLIVAN, S",
          "MRN": "1359040",
          "CA_ASSIGNED": "KRYSTAL D",
          "ROOM_ASSIGNED": "RM C-2",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:11PM ",
          "START_TIME(READY TO COME BACK)": " 1:11PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:31PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 3:34PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -59,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 143,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 143,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "RED"
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Detroit Livernois",
          "CAREGIVER_NAME": "Walk, Monique NP",
          "LNFI": "JOHNSON, R",
          "MRN": "678830",
          "CA_ASSIGNED": "KRYSTAL D",
          "ROOM_ASSIGNED": "RM C-3",
          "APPT_DATE": "2025-04-07T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 2:46PM ",
          "START_TIME(READY TO COME BACK)": " 2:46PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 3:22PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": null,
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": -154,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": null,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": null,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": "",
          "POC_LABS": 1,
          "NON_POC_LABS": 3,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "GREEN",
          "TRUE_VOC_VALUE": "INVESTIGATE"
        }
      }
    ],
    "NocoDB4": [
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "WYRICK-JOHNSON, P",
          "MRN": 7261,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2950,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 1,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "MATTHEWS, P",
          "MRN": 590510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:50AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2893,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 2,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "MOBLEY, C",
          "MRN": 3937,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:54AM ",
          "START_TIME(READY TO COME BACK)": " 7:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2949,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 3,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WHITE, C",
          "MRN": 654260,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:04AM ",
          "START_TIME(READY TO COME BACK)": " 8:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2939,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 4,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HORYD, O",
          "MRN": 339810,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:20AM ",
          "START_TIME(READY TO COME BACK)": " 8:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2922,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 5,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WATKINS, D",
          "MRN": 294820,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:47AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2836,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 6,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "SHACKLEFORD, S",
          "MRN": 1353510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:42AM ",
          "START_TIME(READY TO COME BACK)": " 9:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:05AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 2839,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 7,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BROWNE, T",
          "MRN": 7581,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:55AM ",
          "START_TIME(READY TO COME BACK)": " 9:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:56AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2828,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 121,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 121,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 8,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ANAYA-BENCOMO, Z",
          "MRN": 657960,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2813,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 9,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "ALEXANDER, T",
          "MRN": 903450,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:21AM ",
          "START_TIME(READY TO COME BACK)": "10:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:53AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2802,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 10,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "JOHNSON, D",
          "MRN": 973140,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:02AM ",
          "START_TIME(READY TO COME BACK)": "11:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2761,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 125,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 11,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "KEILS, J",
          "MRN": 877490,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:37AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:27AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2786,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 12,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ROWAN, E",
          "MRN": 470040,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2759,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 49,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 13,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BALL, N",
          "MRN": 232380,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:29AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2734,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 102,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 14,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WEITHERSPOON, R",
          "MRN": 52489,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": "11:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2723,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 15,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BROWN, S",
          "MRN": 1120420,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2709,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 16,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HEMLINGER, J",
          "MRN": 12292,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:08PM ",
          "START_TIME(READY TO COME BACK)": "12:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:40PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2695,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 17,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "NICHOLSON, J",
          "MRN": 234850,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:35PM ",
          "START_TIME(READY TO COME BACK)": "12:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:55PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2668,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 16,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 18,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WILLIAMS, L",
          "MRN": 1345500,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:49PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2651,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 19,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "RILEY, S",
          "MRN": 485750,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:10AM ",
          "START_TIME(READY TO COME BACK)": " 8:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2933,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 18,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 20,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BATES, V",
          "MRN": 414340,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:15AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2928,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 21,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SCHRODER, R",
          "MRN": 577490,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:32AM ",
          "START_TIME(READY TO COME BACK)": " 8:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:49AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2911,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 22,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BALLYSINGH, E",
          "MRN": 348770,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2910,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 48,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 23,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MARTIN, V",
          "MRN": 212700,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:26AM ",
          "START_TIME(READY TO COME BACK)": " 9:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:13AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2857,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 24,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "JOSEPH, A",
          "MRN": 952200,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:37AM ",
          "START_TIME(READY TO COME BACK)": " 9:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:01AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2846,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 25,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "PARSON, D",
          "MRN": 633290,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:09AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2795,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 26,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCGEE, S",
          "MRN": 516570,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2738,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 27,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "ROWAN, J",
          "MRN": 706800,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:06AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 2757,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 28,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "WATERS-THOMAS, S",
          "MRN": 9947,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:19AM ",
          "START_TIME(READY TO COME BACK)": " 9:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:58AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2864,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 29,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SMITH, S",
          "MRN": 570210,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:40AM ",
          "START_TIME(READY TO COME BACK)": " 9:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2843,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 30,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCLAY, L",
          "MRN": 8314,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:32AM ",
          "START_TIME(READY TO COME BACK)": "11:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2731,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 31,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MOSBY, D",
          "MRN": 569920,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:46AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2717,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 32,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DAWSON SR, D",
          "MRN": 299170,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:52PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2616,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 33,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      }
    ],
    "Code9": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code17": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code18": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code19": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Main Version with LNFI": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code20": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code21": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code22": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "Code23": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ],
    "NocoDB5": [
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "WYRICK-JOHNSON, P",
          "MRN": 7261,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2950,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 1,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "MATTHEWS, P",
          "MRN": 590510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:50AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2893,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 2,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "MOBLEY, C",
          "MRN": 3937,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:54AM ",
          "START_TIME(READY TO COME BACK)": " 7:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2949,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 3,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WHITE, C",
          "MRN": 654260,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:04AM ",
          "START_TIME(READY TO COME BACK)": " 8:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2939,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 4,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HORYD, O",
          "MRN": 339810,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:20AM ",
          "START_TIME(READY TO COME BACK)": " 8:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2922,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 5,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WATKINS, D",
          "MRN": 294820,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:47AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2836,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 6,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "SHACKLEFORD, S",
          "MRN": 1353510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:42AM ",
          "START_TIME(READY TO COME BACK)": " 9:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:05AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 2839,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 7,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BROWNE, T",
          "MRN": 7581,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:55AM ",
          "START_TIME(READY TO COME BACK)": " 9:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:56AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2828,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 121,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 121,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 8,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ANAYA-BENCOMO, Z",
          "MRN": 657960,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2813,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 9,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "ALEXANDER, T",
          "MRN": 903450,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:21AM ",
          "START_TIME(READY TO COME BACK)": "10:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:53AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2802,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 10,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "JOHNSON, D",
          "MRN": 973140,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:02AM ",
          "START_TIME(READY TO COME BACK)": "11:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2761,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 125,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 11,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "KEILS, J",
          "MRN": 877490,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:37AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:27AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2786,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 12,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ROWAN, E",
          "MRN": 470040,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2759,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 49,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 13,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BALL, N",
          "MRN": 232380,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:29AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2734,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 102,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 14,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WEITHERSPOON, R",
          "MRN": 52489,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": "11:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2723,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 15,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BROWN, S",
          "MRN": 1120420,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2709,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 16,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HEMLINGER, J",
          "MRN": 12292,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:08PM ",
          "START_TIME(READY TO COME BACK)": "12:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:40PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2695,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 17,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "NICHOLSON, J",
          "MRN": 234850,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:35PM ",
          "START_TIME(READY TO COME BACK)": "12:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:55PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2668,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 16,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 18,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WILLIAMS, L",
          "MRN": 1345500,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:49PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2651,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 19,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "RILEY, S",
          "MRN": 485750,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:10AM ",
          "START_TIME(READY TO COME BACK)": " 8:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2933,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 18,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 20,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BATES, V",
          "MRN": 414340,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:15AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2928,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 21,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SCHRODER, R",
          "MRN": 577490,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:32AM ",
          "START_TIME(READY TO COME BACK)": " 8:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:49AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2911,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 22,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BALLYSINGH, E",
          "MRN": 348770,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2910,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 48,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 23,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MARTIN, V",
          "MRN": 212700,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:26AM ",
          "START_TIME(READY TO COME BACK)": " 9:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:13AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2857,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 24,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "JOSEPH, A",
          "MRN": 952200,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:37AM ",
          "START_TIME(READY TO COME BACK)": " 9:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:01AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2846,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 25,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "PARSON, D",
          "MRN": 633290,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:09AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2795,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 26,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCGEE, S",
          "MRN": 516570,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2738,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 27,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "ROWAN, J",
          "MRN": 706800,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:06AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 2757,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 28,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "WATERS-THOMAS, S",
          "MRN": 9947,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:19AM ",
          "START_TIME(READY TO COME BACK)": " 9:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:58AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2864,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 29,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SMITH, S",
          "MRN": 570210,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:40AM ",
          "START_TIME(READY TO COME BACK)": " 9:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2843,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 30,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCLAY, L",
          "MRN": 8314,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:32AM ",
          "START_TIME(READY TO COME BACK)": "11:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2731,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 31,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MOSBY, D",
          "MRN": 569920,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:46AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2717,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 32,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DAWSON SR, D",
          "MRN": 299170,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:52PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2616,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 33,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.10.98",
            "x-forwarded-for": "10.0.10.98",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua": "\"Chromium\";v=\"136\", \"Microsoft Edge\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "none",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "document",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "if-none-match": "W/\"b359-+Q7eFz0y4c7TogQ8Kx2t+unCWBQ\""
          },
          "params": {},
          "query": {
            "location": "EPIC Ferndale 9 Mile"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/0777f06b-3b22-4c94-b77e-fd9745033ab6",
          "executionMode": "production"
        }
      }
    ],
    "NocoDB6": [
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "WYRICK-JOHNSON, P",
          "MRN": 7261,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:53AM ",
          "START_TIME(READY TO COME BACK)": " 7:53AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:20AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2950,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 1,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "DIAG EP Southfield",
          "CAREGIVER_NAME": "US Shabanllari, Jerida",
          "LNFI": "MATTHEWS, P",
          "MRN": 590510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:50AM ",
          "START_TIME(READY TO COME BACK)": " 8:50AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2893,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 46,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 46,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 2,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "MOBLEY, C",
          "MRN": 3937,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 7:54AM ",
          "START_TIME(READY TO COME BACK)": " 7:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2949,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 4,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 3,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WHITE, C",
          "MRN": 654260,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:04AM ",
          "START_TIME(READY TO COME BACK)": " 8:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2939,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 27,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 27,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 4,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HORYD, O",
          "MRN": 339810,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:20AM ",
          "START_TIME(READY TO COME BACK)": " 8:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2922,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 13,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 5,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "WATKINS, D",
          "MRN": 294820,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:47AM ",
          "START_TIME(READY TO COME BACK)": " 9:47AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:30AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2836,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 2,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 6,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "SHACKLEFORD, S",
          "MRN": 1353510,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:42AM ",
          "START_TIME(READY TO COME BACK)": " 9:44AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:05AM ",
          "ACK_TO_START_TIME": 2,
          "ACK_CURRENT_TIME_IN_OFFICE": 2839,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 7,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BROWNE, T",
          "MRN": 7581,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:55AM ",
          "START_TIME(READY TO COME BACK)": " 9:55AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:56AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2828,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 121,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 121,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 8,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ANAYA-BENCOMO, Z",
          "MRN": 657960,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A3",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:10AM ",
          "START_TIME(READY TO COME BACK)": "10:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:31AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2813,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 4,
          "POC_PROC": 5,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 9,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "ALEXANDER, T",
          "MRN": 903450,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:21AM ",
          "START_TIME(READY TO COME BACK)": "10:21AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:53AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2802,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 10,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "JOHNSON, D",
          "MRN": 973140,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:02AM ",
          "START_TIME(READY TO COME BACK)": "11:02AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2761,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 125,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 125,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 6,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 11,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "KEILS, J",
          "MRN": 877490,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:37AM ",
          "START_TIME(READY TO COME BACK)": "10:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:27AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2786,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 50,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 50,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 12,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "ROWAN, E",
          "MRN": 470040,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "B2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:04AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2759,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 83,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 82,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 49,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 13,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "BALL, N",
          "MRN": 232380,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:29AM ",
          "START_TIME(READY TO COME BACK)": "11:29AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:11PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2734,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 102,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 102,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 14,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WEITHERSPOON, R",
          "MRN": 52489,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:40AM ",
          "START_TIME(READY TO COME BACK)": "11:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:54PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2723,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 74,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 74,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 15,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "BROWN, S",
          "MRN": 1120420,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:53AM ",
          "START_TIME(READY TO COME BACK)": "11:54AM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:26PM ",
          "ACK_TO_START_TIME": 1,
          "ACK_CURRENT_TIME_IN_OFFICE": 2709,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 33,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 16,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "PA, Lab X-Ray",
          "LNFI": "HEMLINGER, J",
          "MRN": 12292,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:08PM ",
          "START_TIME(READY TO COME BACK)": "12:08PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:40PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2695,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 32,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 32,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 17,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "NICHOLSON, J",
          "MRN": 234850,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": "A2",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:35PM ",
          "START_TIME(READY TO COME BACK)": "12:35PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:55PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2668,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 80,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 80,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 16,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 18,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "WILLIAMS, L",
          "MRN": 1345500,
          "CA_ASSIGNED": null,
          "ROOM_ASSIGNED": null,
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "12:52PM ",
          "START_TIME(READY TO COME BACK)": "12:52PM ",
          "CA_ROOM_ASSIGN_TIME_START": null,
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:49PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2651,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 57,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 57,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 19,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "RILEY, S",
          "MRN": 485750,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:10AM ",
          "START_TIME(READY TO COME BACK)": " 8:10AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:17AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:28AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2933,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 18,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 18,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 20,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BATES, V",
          "MRN": 414340,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:15AM ",
          "START_TIME(READY TO COME BACK)": " 8:15AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:37AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 8:59AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2928,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 44,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 44,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 21,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SCHRODER, R",
          "MRN": 577490,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:32AM ",
          "START_TIME(READY TO COME BACK)": " 8:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:49AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:33AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2911,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 61,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 61,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 22,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "BALLYSINGH, E",
          "MRN": 348770,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 8:33AM ",
          "START_TIME(READY TO COME BACK)": " 8:33AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 8:44AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:21AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2910,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 48,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 48,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 2,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 23,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MARTIN, V",
          "MRN": 212700,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:26AM ",
          "START_TIME(READY TO COME BACK)": " 9:26AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:42AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:13AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2857,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 47,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 47,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 24,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "JOSEPH, A",
          "MRN": 952200,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:37AM ",
          "START_TIME(READY TO COME BACK)": " 9:37AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:01AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2846,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 84,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 84,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 1,
          "POC_PROC": 1,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 25,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "PARSON, D",
          "MRN": 633290,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "10:28AM ",
          "START_TIME(READY TO COME BACK)": "10:28AM ",
          "CA_ROOM_ASSIGN_TIME_START": "10:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:09AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2795,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 41,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 1,
          "NON_POC_LABS": 1,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 26,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCGEE, S",
          "MRN": 516570,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:25AM ",
          "START_TIME(READY TO COME BACK)": "11:25AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:36AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "12:08PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2738,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 43,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 43,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 27,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "ROWAN, J",
          "MRN": 706800,
          "CA_ASSIGNED": "LACREISHA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:03AM ",
          "START_TIME(READY TO COME BACK)": "11:06AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:14AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "11:44AM ",
          "ACK_TO_START_TIME": 3,
          "ACK_CURRENT_TIME_IN_OFFICE": 2757,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 41,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 38,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "YELLOW",
          "Id": 28,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "WATERS-THOMAS, S",
          "MRN": 9947,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:19AM ",
          "START_TIME(READY TO COME BACK)": " 9:19AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:31AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 9:58AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2864,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 39,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 39,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 29,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "SMITH, S",
          "MRN": 570210,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 9:40AM ",
          "START_TIME(READY TO COME BACK)": " 9:40AM ",
          "CA_ROOM_ASSIGN_TIME_START": " 9:51AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": "10:36AM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2843,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 56,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 56,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 8,
          "POC_PROC": 4,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 30,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MCLAY, L",
          "MRN": 8314,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "B4",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:32AM ",
          "START_TIME(READY TO COME BACK)": "11:32AM ",
          "CA_ROOM_ASSIGN_TIME_START": "11:41AM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:16PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2731,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 104,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 104,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 3,
          "POC_PROC": 0,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "RED",
          "Id": 31,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "LNFI": "MOSBY, D",
          "MRN": 569920,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A5",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": "11:46AM ",
          "START_TIME(READY TO COME BACK)": "11:46AM ",
          "CA_ROOM_ASSIGN_TIME_START": "12:09PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:07PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2717,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 81,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 81,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 2,
          "NON_POC_LABS": 7,
          "POC_PROC": 3,
          "CALC_VOC_VALUE": "INVESTIGATE",
          "TRUE_VOC_VALUE": "INVESTIGATE",
          "Id": 32,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      },
      {
        "json": {
          "LOCATION_NAME": "EPIC Southfield 10 Mile",
          "CAREGIVER_NAME": "Fedirko, Nicolas FNP-BC",
          "LNFI": "DAWSON SR, D",
          "MRN": 299170,
          "CA_ASSIGNED": "TEARRA",
          "ROOM_ASSIGNED": "A1",
          "APPT_DATE": "2025-04-05T00:00:00.000Z",
          "ACK_TIME(PT HERE)": " 1:27PM ",
          "START_TIME(READY TO COME BACK)": " 1:27PM ",
          "CA_ROOM_ASSIGN_TIME_START": " 1:45PM ",
          "CHECK_OUT(PATIET HAS LEFT THE BUILDING)": " 1:52PM ",
          "ACK_TO_START_TIME": 0,
          "ACK_CURRENT_TIME_IN_OFFICE": 2616,
          "ACTUAL_ACK_TO_CHECKOUT_TIME": 25,
          "ACTUAL_CHARTUP_TO_CHECKOUT_TIME": 25,
          "PREDICTED_TIME_WITH_TOTAL_PROCEDURES": null,
          "POC_LABS": 0,
          "NON_POC_LABS": 0,
          "POC_PROC": 2,
          "CALC_VOC_VALUE": "RED",
          "TRUE_VOC_VALUE": "GREEN",
          "Id": 33,
          "CreatedAt": "2025-04-07 17:21:06",
          "UpdatedAt": null
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 5,
  "updatedAt": "2025-07-09T13:05:09.619Z",
  "versionId": "383a91f8-d97a-49d4-a900-ae2975e24731"
}