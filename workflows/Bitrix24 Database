{
  "active": true,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Bitrix24 Projects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bitrix24 Projects": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Bitrix24 Projects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-10T18:32:37.382Z",
  "id": "KhMrlASFGj1b0Xbg",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Bitrix24 Database",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "36a95453-c745-45c4-b83a-bf258c79a801",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a9f34b16-686d-433d-9896-87a1221ea071",
              "leftValue": "={{ $json.NAME }}",
              "rightValue": "GA_",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        0
      ],
      "id": "3ece7cc5-32b8-4d2b-8002-21b45104eca0",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "b_sonet_group",
          "mode": "list",
          "cachedResultName": "b_sonet_group"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        220,
        0
      ],
      "id": "363363dc-24e5-4884-9517-da71b67836c7",
      "name": "Bitrix24 Projects",
      "credentials": {
        "mySql": {
          "id": "2o9Jf8MlLyX0Sg1D",
          "name": "Bitrix24"
        }
      }
    },
    {
      "parameters": {
        "path": "5ab5ca2d-634d-4b9e-9912-cda43a40db49",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        -180
      ],
      "id": "5949264d-6ab0-4046-822a-46d37a0eadbf",
      "name": "Webhook",
      "webhookId": "5ab5ca2d-634d-4b9e-9912-cda43a40db49"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    /* Reset and global box-sizing */\n    html {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    *, *::before, *::after {\n      box-sizing: inherit;\n    }\n    body {\n      margin: 0;\n      padding: 0;\n      background: #f4f4f4;\n      font-family: Arial, sans-serif;\n    }\n\n    /* Wrapper now fills the viewport (or grows if content needs more) */\n    .wrapper {\n      display: flex;\n      flex-direction: column;\n      min-height: 100vh;\n      padding: 1rem;\n      max-width: 800px;\n      margin: 0 auto;\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n    }\n\n    /* Tabs fixed height */\n    .tabs {\n      display: flex;\n      flex: 0 0 auto;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active {\n      background: #ffd500;\n    }\n\n    /* Content grows to fill leftover space, but is at least 400px high */\n    .content {\n      position: relative;\n      flex: 1 1 auto;\n      min-height: 400px;\n      /* if inner content ever exceeds, it will scroll here */\n      overflow: auto;\n    }\n\n    /* Loader overlay */\n    #loader {\n      display: none;\n      position: absolute;\n      inset: 0;\n      background: rgba(255,255,255,0.8);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.2rem;\n      z-index: 10;\n    }\n\n    /* iframe fills its container exactly */\n    #listFrame {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border: none;\n    }\n\n    /* form sits on top when visible */\n    form {\n      position: relative;\n      display: none;\n      z-index: 1;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full {\n      flex-direction: column;\n    }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select {\n      height: 2.5rem;\n    }\n    select::-ms-expand {\n      display: none;\n    }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon {\n      display: none;\n    }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    /* toast styling */\n    #toast {\n      position: fixed;\n      bottom: 1rem;\n      right: 1rem;\n      background: #4caf50;\n      color: white;\n      padding: 0.8rem 1.2rem;\n      border-radius: 4px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      pointer-events: none;\n      z-index: 1000;\n    }\n    #toast.show {\n      opacity: 1;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"loader\">Loading…</div>\n      <iframe id=\"listFrame\"></iframe>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div id=\"toast\">Task created successfully!</div>\n\n  <script>\n    const GET_URL  = 'https://xl.epicpc.com/webhook/7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb';\n    const POST_URL = 'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15';\n\n    const tabList   = document.getElementById('tab-list');\n    const tabNew    = document.getElementById('tab-new');\n    const listFrame = document.getElementById('listFrame');\n    const loader    = document.getElementById('loader');\n    const form      = document.getElementById('taskForm');\n    const toast     = document.getElementById('toast');\n    const submitBtn = form.querySelector('button[type=\"submit\"]');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      form.style.display      = 'none';\n      loader.style.display    = 'flex';\n      listFrame.style.display = 'block';\n      listFrame.src = GET_URL;\n    }\n\n    listFrame.addEventListener('load', () => {\n      loader.style.display = 'none';\n    });\n\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      listFrame.style.display = 'none';\n      form.style.display      = 'block';\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      submitBtn.disabled    = true;\n      submitBtn.textContent = 'Submitting…';\n\n      const payload = {\n        id:          Number(document.getElementById('tasksSelect').value),\n        name:        document.getElementById('tasksSelect')\n                           .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role:        document.getElementById('roleSelect').value,\n        template:    document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate:     document.getElementById('dueDate').value,\n        priority:    document.getElementById('priority').value,\n      };\n\n      try {\n        const resp = await fetch(POST_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          showList();\n          form.reset();\n          submitBtn.disabled    = false;\n          submitBtn.textContent = 'Submit';\n        }, 2000);\n\n      } catch (err) {\n        toast.textContent      = 'Error: ' + err.message;\n        toast.style.background = '#e53935';\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          toast.textContent      = 'Task created successfully!';\n          toast.style.background = '#4caf50';\n          submitBtn.disabled     = false;\n          submitBtn.textContent  = 'Submit';\n        }, 3000);\n      }\n    });\n\n    // initialize on load\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -60
      ],
      "id": "ada1d0e5-4eaa-4a03-b8f1-6241a9d1ba1f",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        1260,
        -60
      ],
      "id": "9b920627-a768-4a0b-b636-91f54aa4812e",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "NAME"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        660,
        -100
      ],
      "id": "608afe1e-7b7f-4ece-835e-42f172392c9c",
      "name": "Sort"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        1260,
        -220
      ],
      "id": "b4ea3a45-8a97-451a-9218-3e6e55842b66",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "71e356cc-29e9-48d1-9ed9-2dd55cb2fc15",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1320,
        240
      ],
      "id": "b0affea6-5725-4423-98ec-55fd298bb74d",
      "name": "Webhook1",
      "webhookId": "71e356cc-29e9-48d1-9ed9-2dd55cb2fc15"
    },
    {
      "parameters": {
        "jsCode": "// items[] is assumed to be the array of workgroup objects\nconst workgroups = items.map(i => i.json);\n\n// build your <option> list\nconst options = workgroups\n  .map(wg => `<option value=\"${wg.ID}\">${wg.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>TAC Board</title>\n  <style>\n    /* --- Variables --- */\n    :root {\n      --yellow: #FFD500;\n      --yellow-dark: #E6C300;\n      --gray-light: #F4F4F4;\n      --gray-med: #E0E0E0;\n      --gray-dark: #999;\n      --text-dark: #222;\n      --accent-purple: #6A4BAA;\n      --accent-red: #EF6C63;\n      --accent-green: #8FCE00;\n      --font-sans: \"Segoe UI\", Roboto, Arial, sans-serif;\n    }\n\n    /* --- Reset & Base --- */\n    * { box-sizing: border-box; margin: 0; padding: 0; }\n    body {\n      font-family: var(--font-sans);\n      background: var(--gray-light);\n      color: var(--text-dark);\n      line-height: 1.4;\n      padding: 1rem;\n    }\n    button { cursor: pointer; }\n\n    /* --- Header --- */\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1rem;\n    }\n    header .branding {\n      display: flex; align-items: center;\n    }\n    header .branding img {\n      height: 50px;\n      margin-right: 1rem;\n    }\n    header h1 {\n      font-size: 1.5rem;\n      margin-bottom: 0.2rem;\n    }\n    header p { font-size: 0.9rem; color: var(--gray-dark); }\n\n    header .search-container {\n      position: relative;\n      width: 200px;\n    }\n    header .search-container input {\n      width: 100%;\n      padding: 0.4rem 2rem 0.4rem 0.8rem;\n      border-radius: 20px;\n      border: 1px solid var(--gray-med);\n    }\n    header .search-container .icon {\n      position: absolute;\n      right: 0.6rem;\n      top: 50%; transform: translateY(-50%);\n      font-size: 1rem;\n      color: var(--gray-dark);\n    }\n\n    /* --- Patient / Task Header Card --- */\n    .card-header {\n      background: var(--yellow);\n      border-radius: 8px;\n      padding: 1rem;\n      display: flex;\n      align-items: center;\n      margin-bottom: 1rem;\n    }\n    .card-header .avatar {\n      flex-shrink: 0;\n      width: 60px; height: 60px;\n      background: var(--gray-med);\n      border-radius: 50%;\n      margin-right: 1rem;\n    }\n    .card-header .info {\n      flex: 1;\n      display: flex;\n      justify-content: space-between;\n    }\n    .card-header .info .left {\n      font-size: 1.1rem;\n      font-weight: bold;\n    }\n    .card-header .info .left p {\n      font-weight: normal;\n      font-size: 0.9rem;\n      color: var(--gray-dark);\n    }\n    .card-header .info .right {\n      text-align: right;\n      font-size: 0.9rem;\n    }\n    .card-header .info .right p {\n      margin: 0.2rem 0;\n    }\n    .card-header .info .right a {\n      font-size: 0.9rem;\n      color: blue;\n      text-decoration: none;\n    }\n\n    /* --- Tabs --- */\n    .tabs {\n      display: flex;\n      margin-bottom: 1rem;\n      border-radius: 20px;\n      overflow: hidden;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.6rem;\n      border: none;\n      background: var(--gray-med);\n      font-weight: bold;\n    }\n    .tabs button.active {\n      background: var(--yellow);\n    }\n\n    /* --- Section Layout --- */\n    .section {\n      background: #fff;\n      border-radius: 8px;\n      padding: 1rem;\n      margin-bottom: 1rem;\n    }\n    .section .section-header {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 1rem;\n    }\n    .section .section-header .dropdown {\n      position: relative;\n    }\n    .section .section-header .dropdown button {\n      background: var(--yellow);\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 20px;\n      font-size: 0.9rem;\n    }\n    .section .section-header .dropdown-content {\n      display: none;\n      position: absolute;\n      top: 120%;\n      left: 0;\n      background: #fff;\n      border: 1px solid var(--gray-med);\n      border-radius: 4px;\n      width: 200px;\n      max-height: 150px;\n      overflow-y: auto;\n      z-index: 10;\n    }\n    .section .section-header .dropdown-content div {\n      padding: 0.5rem;\n      border-bottom: 1px solid var(--gray-light);\n      cursor: pointer;\n    }\n    .section .section-header .dropdown-content div:last-child {\n      border-bottom: none;\n    }\n    .section .section-header .dropdown-content div:hover {\n      background: var(--gray-light);\n    }\n\n    .section .fields {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1rem;\n    }\n    .field-card {\n      background: var(--gray-light);\n      border-radius: 8px;\n      padding: 0.8rem;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n    .field-card .label {\n      font-size: 0.9rem;\n      font-weight: bold;\n    }\n    .field-card .value {\n      padding: 0.3rem 0.6rem;\n      border-radius: 4px;\n      font-size: 0.9rem;\n      background: #fff;\n    }\n\n    /* Status pills */\n    .pill {\n      padding: 0.4rem 0.8rem;\n      border-radius: 20px;\n      font-size: 0.8rem;\n      font-weight: bold;\n      color: #fff;\n    }\n    .pill.inprogress { background: var(--accent-purple); }\n    .pill.failed     { background: var(--accent-red); }\n    .pill.done       { background: var(--accent-green); }\n\n    /* --- New Task Form --- */\n    .form-container {\n      background: var(--gray-light);\n      padding: 1rem;\n      border: 2px solid var(--gray-dark);\n      border-radius: 8px;\n      max-width: 700px;\n      margin: 0 auto;\n    }\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n    }\n    .form-row.full { display: block; }\n    .form-row input,\n    .form-row textarea,\n    .form-row select {\n      width: 100%;\n      padding: 0.6rem;\n      border: 1px solid var(--gray-med);\n      border-radius: 4px;\n      font-size: 1rem;\n    }\n    .form-row textarea { height: 100px; resize: vertical; }\n    .form-actions {\n      text-align: right;\n    }\n    .form-actions button {\n      background: var(--yellow);\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n    }\n\n    /* --- Utility --- */\n    .hidden { display: none; }\n  </style>\n</head>\n<body>\n\n  <!-- Header -->\n  <header>\n    <div class=\"branding\">\n      <img src=\"logo.png\" alt=\"EPIC\">\n      <div>\n        <h1>TAC Board</h1>\n        <p>Tasks and Communications Board</p>\n      </div>\n    </div>\n    <div class=\"search-container\">\n      <input type=\"text\" placeholder=\"Search…\">\n      <span class=\"icon\">🔍</span>\n    </div>\n  </header>\n\n  <!-- Patient Card (first mockup) -->\n  <div class=\"card-header\">\n    <div class=\"avatar\"></div>\n    <div class=\"info\">\n      <div class=\"left\">\n        Jon Snow<br>\n        <p>📞 1234567890 &nbsp; 📍 Address</p>\n      </div>\n      <div class=\"right\">\n        <p><strong>MRN</strong>: 1234</p>\n        <p><strong>Care Management Eligibility</strong>: Yes</p>\n        <p><strong>Care Manager</strong>: Manager Name</p>\n        <p><strong>Care Coordinator</strong>: Name</p>\n        <a href=\"#\">More Patient Details</a>\n      </div>\n    </div>\n  </div>\n\n  <!-- Tabs -->\n  <div class=\"tabs\">\n    <button class=\"active\">VTAC</button>\n    <button>NVTAC</button>\n    <button>RTAC</button>\n  </div>\n\n  <!-- VTAC Section -->\n  <section class=\"section\">\n    <div class=\"section-header\">\n      <div class=\"dropdown\">\n        <button id=\"vtacSelectBtn\">CC/CCM ▼</button>\n        <div class=\"dropdown-content\" id=\"vtacOptions\">\n          <div>CC/CCM</div>\n          <div>Option 2</div>\n          <div>Option 3</div>\n        </div>\n      </div>\n      <button style=\"\n        background: var(--yellow);\n        border: none;\n        padding: 0.6rem 1rem;\n        border-radius: 4px;\n      \">+ Initiate task</button>\n    </div>\n    <div class=\"fields\">\n      <div class=\"field-card\">\n        <span class=\"label\">Meds</span>\n        <span class=\"pill inprogress\">In progress</span>\n      </div>\n      <div class=\"field-card\">\n        <span class=\"label\">Meds</span>\n        <span class=\"pill failed\">Failed</span>\n      </div>\n      <div class=\"field-card\">\n        <span class=\"label\">Consult/Referrals</span>\n        <span class=\"value\">Ordered, Scheduled, Pending</span>\n      </div>\n      <div class=\"field-card\">\n        <span class=\"label\">Consult/Referrals</span>\n        <span class=\"pill done\">Done</span>\n      </div>\n      <div class=\"field-card\" style=\"grid-column: 1 / span 2;\">\n        <span class=\"label\">Care Mgnt Tasks</span>\n        <span class=\"value\">DS Involvement, etc</span>\n      </div>\n      <div class=\"field-card\">\n        <span class=\"label\">Follow-up Dates</span>\n        <span class=\"value\">📅 01/01/2025</span>\n      </div>\n    </div>\n  </section>\n\n  <!-- New Task Form (second/third mockup) -->\n  <div class=\"form-container\">\n    <div class=\"tabs\">\n      <button class=\"active\">Task List</button>\n      <button>+ New Task</button>\n    </div>\n\n    <div class=\"form-row\">\n      <select>\n        <option>Tasks ▼</option>\n        <option>Patient Education</option>\n        <option>Patient Risk Stratification</option>\n        <option>Chronic Disease Management</option>\n        <option>Individualized Care Planning</option>\n        <option>Custom</option>\n      </select>\n      <select>\n        <option>Role ▼</option>\n      </select>\n      <select>\n        <option>Assigned ▼</option>\n      </select>\n    </div>\n\n    <div class=\"form-row full\">\n      <textarea placeholder=\"Summary\"></textarea>\n    </div>\n\n    <div class=\"form-row\">\n      <input type=\"text\" placeholder=\"📅 01/01/2025\">\n      <input type=\"text\" placeholder=\"Priority 1\">\n    </div>\n\n    <div class=\"form-actions\">\n      <button>Submit</button>\n    </div>\n  </div>\n\n  <script>\n    // Simple dropdown toggle\n    document.querySelectorAll('.dropdown button').forEach(btn => {\n      btn.addEventListener('click', () => {\n        const list = btn.nextElementSibling;\n        list.style.display = list.style.display === 'block' ? 'none' : 'block';\n      });\n    });\n    document.querySelectorAll('.dropdown-content div').forEach(item => {\n      item.addEventListener('click', () => {\n        const btn = item.closest('.dropdown').querySelector('button');\n        btn.textContent = item.textContent + ' ▼';\n        item.parentElement.style.display = 'none';\n      });\n    });\n  </script>\n</body>\n</html>\n\n`;\n\n// return an HTTP response directly from this Code node\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        -500
      ],
      "id": "5ce7ba8a-87fb-40bb-b168-55eac1486323",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active {\n      background: #ffd500;\n    }\n    .content { min-height: 250px; }\n    .placeholder {\n      text-align: center;\n      color: #666;\n      font-size: 1.2rem;\n      margin-top: 4rem;\n    }\n    form { display: none; }\n    form.visible { display: block; }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      flex: 1;\n      padding: 0.6rem;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      font-size: 1rem;\n      height: 2.5rem;\n      background: #fff;\n      appearance: none;  /* hide native arrow */\n    }\n    textarea {\n      height: 100px;\n      resize: vertical;\n      line-height: 1.4;\n    }\n\n    /* Date picker container */\n    .icon-input,\n    .priority-select {\n      position: relative;\n      flex: 1;\n    }\n    /* Hide native calendar icon */\n    .icon-input input[type=\"date\"] {\n      width: 100%;\n      padding: 0.6rem;\n      padding-left: 2.5rem;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      font-size: 1rem;\n      height: 2.5rem;\n      background: #fff;\n      appearance: none;\n    }\n    /* Hide native clear/reset in Firefox */\n    .icon-input input[type=\"date\"]::-ms-clear { display: none; }\n    /* Hide the picker indicator in WebKit */\n    .icon-input input[type=\"date\"]::-webkit-calendar-picker-indicator {\n      opacity: 0; width: 0; height: 0;\n    }\n\n    /* Priority dropdown container */\n    .priority-select select {\n      width: 100%;\n      padding: 0.6rem;\n      padding-right: 2.5rem;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      font-size: 1rem;\n      height: 2.5rem;\n      background: #fff;\n      appearance: none;\n    }\n\n    /* Our custom icons */\n    .icon-input .icon,\n    .priority-select .icon {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      font-size: 1.2rem;\n      pointer-events: all;\n      cursor: pointer;\n      z-index: 2;\n    }\n    .icon-input .icon { left: 0.8rem; }\n    .priority-select .icon { right: 0.8rem; }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"placeholder\" class=\"placeholder\">No tasks to display</div>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"assignedSelect\" required>\n            <option value=\"\" disabled selected>Assigned ▼</option>\n            <option value=\"userA\">User A</option>\n            <option value=\"userB\">User B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"summary\" placeholder=\"Summary\" required></textarea>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <script>\n    // Tab toggling\n    const tabList = document.getElementById('tab-list');\n    const tabNew  = document.getElementById('tab-new');\n    const placeholder = document.getElementById('placeholder');\n    const form = document.getElementById('taskForm');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      placeholder.style.display = 'block';\n      form.classList.remove('visible');\n    }\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      placeholder.style.display = 'none';\n      form.classList.add('visible');\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    // Open native calendar on icon click\n    document.querySelectorAll('.icon-input .icon').forEach(icon => {\n      icon.addEventListener('click', () => {\n        const dateInput = icon.nextElementSibling;\n        if (typeof dateInput.showPicker === 'function') {\n          dateInput.showPicker();\n        } else {\n          dateInput.focus();\n        }\n      });\n    });\n\n    // Submit handler\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const sel = document.getElementById('tasksSelect');\n      const payload = {\n        id:   Number(sel.value),\n        name: sel.options[sel.selectedIndex].text,\n        role: document.getElementById('roleSelect').value,\n        assigned: document.getElementById('assignedSelect').value,\n        summary: document.getElementById('summary').value,\n        dueDate: document.getElementById('dueDate').value,\n        priority: document.getElementById('priority').value,\n      };\n      try {\n        const resp = await fetch('https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n        alert('Submitted!');\n        showList();\n      } catch (err) {\n        alert('Error: ' + err.message);\n      }\n    });\n\n    // Initialize view\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        -640
      ],
      "id": "a9187421-f5d4-4c35-9ce1-fe955fe807a3",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active {\n      background: #ffd500;\n    }\n    .content { min-height: 250px; }\n    .placeholder {\n      text-align: center;\n      color: #666;\n      font-size: 1.2rem;\n      margin-top: 4rem;\n    }\n    form { display: none; }\n    form.visible { display: block; }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;            /* allow wrapping */\n    }\n    .form-row.full {\n      flex-direction: column;\n    }\n\n    /* unify appearance & hide native arrows */\n    select, textarea, input[type=\"date\"] {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      font-size: 1rem;\n      padding: 0.6rem;\n      height: 2.5rem;\n    }\n    /* hide IE/Edge select arrow */\n    select::-ms-expand { display: none; }\n    /* hide webkit date picker icon entirely */\n    input[type=\"date\"]::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n    textarea {\n      height: 100px;\n      resize: vertical;\n      line-height: 1.4;\n      /* remove fixed height so it can expand if needed */\n      height: auto;\n      min-height: 100px;\n    }\n\n    /* split date & priority evenly */\n    .icon-input,\n    .priority-select {\n      position: relative;\n      flex: 1 1 calc(50% - 0.5rem);\n      min-width: 200px; /* optional to avoid too-narrow fields */\n    }\n\n    /* our custom icons */\n    .icon-input .icon,\n    .priority-select .icon {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      font-size: 1.2rem;\n      cursor: pointer;\n      z-index: 2;\n      pointer-events: all;\n    }\n    .icon-input .icon { left: 0.8rem; }\n    .priority-select .icon { right: 0.8rem; }\n\n    /* give the date input left padding for icon */\n    .icon-input input[type=\"date\"] {\n      padding-left: 2.5rem;\n    }\n    /* give the select right padding for its icon */\n    .priority-select select {\n      padding-right: 2.5rem;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    /* stack on small screens */\n    @media (max-width: 600px) {\n      .form-row {\n        flex-direction: column;\n      }\n      .icon-input,\n      .priority-select {\n        flex: 1 1 100%;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"placeholder\" class=\"placeholder\">No tasks to display</div>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"assignedSelect\" required>\n            <option value=\"\" disabled selected>Assigned ▼</option>\n            <option value=\"userA\">User A</option>\n            <option value=\"userB\">User B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"summary\" placeholder=\"Summary\" required></textarea>\n        </div>\n\n        <div class=\"form-row\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <script>\n    // Tabs\n    const tabList = document.getElementById('tab-list');\n    const tabNew  = document.getElementById('tab-new');\n    const placeholder = document.getElementById('placeholder');\n    const form = document.getElementById('taskForm');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      placeholder.style.display = 'block';\n      form.classList.remove('visible');\n    }\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      placeholder.style.display = 'none';\n      form.classList.add('visible');\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    // Open native date picker\n    document.querySelectorAll('.icon-input .icon').forEach(icon => {\n      icon.addEventListener('click', () => {\n        const dateInput = icon.nextElementSibling;\n        if (typeof dateInput.showPicker === 'function') {\n          dateInput.showPicker();\n        } else {\n          dateInput.focus();\n        }\n      });\n    });\n\n    // Submit\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const sel = document.getElementById('tasksSelect');\n      const payload = {\n        id:       Number(sel.value),\n        name:     sel.options[sel.selectedIndex].text,\n        role:     document.getElementById('roleSelect').value,\n        assigned: document.getElementById('assignedSelect').value,\n        summary:  document.getElementById('summary').value,\n        dueDate:  document.getElementById('dueDate').value,\n        priority: document.getElementById('priority').value,\n      };\n      try {\n        const resp = await fetch('https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n        alert('Submitted!');\n        showList();\n      } catch (err) {\n        alert('Error: ' + err.message);\n      }\n    });\n\n    // Initialize\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        -800
      ],
      "id": "e46a75dc-95c0-4eb7-ad44-714a2bed4ccb",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active {\n      background: #ffd500;\n    }\n    .content { min-height: 250px; }\n    .placeholder {\n      text-align: center;\n      color: #666;\n      font-size: 1.2rem;\n      margin-top: 4rem;\n    }\n    form { display: none; }\n    form.visible { display: block; }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    /* any .form-row.full always stacks its children vertically */\n    .form-row.full {\n      flex-direction: column;\n    }\n\n    /* unify appearance & hide native arrows */\n    select, textarea, input[type=\"date\"] {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select {\n      height: 2.5rem;\n    }\n    /* hide IE/Edge select arrow */\n    select::-ms-expand { display: none; }\n    /* hide webkit date picker icon entirely */\n    input[type=\"date\"]::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n\n    /* textarea: give it plenty of space */\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n    }\n\n    /* split date & priority evenly — on stacked rows these will each be 100% */\n    .icon-input,\n    .priority-select {\n      position: relative;\n      flex: 1 1 calc(50% - 0.5rem);\n      min-width: 200px;\n    }\n\n    /* when inside .full, force 100% width */\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    /* our custom icons */\n    .icon-input .icon,\n    .priority-select .icon {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      font-size: 1.2rem;\n      cursor: pointer;\n      z-index: 2;\n      pointer-events: all;\n    }\n    .icon-input .icon { left: 0.8rem; }\n    .priority-select .icon { right: 0.8rem; }\n\n    /* date input: padding for icon + full width in stacked mode */\n    .icon-input input[type=\"date\"] {\n      padding-left: 2.5rem;\n      width: 100%;\n    }\n\n    /* select: padding for icon + full width */\n    .priority-select select {\n      padding-right: 2.5rem;\n      width: 100%;\n    }\n\n    /* hide the decorative ▼ from priority completely */\n    .priority-select .icon {\n      display: none;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"placeholder\" class=\"placeholder\">No tasks to display</div>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"assignedSelect\" required>\n            <option value=\"\" disabled selected>Assigned ▼</option>\n            <option value=\"userA\">User A</option>\n            <option value=\"userB\">User B</option>\n          </select>\n        </div>\n\n        <!-- summary gets extra height -->\n        <div class=\"form-row full\">\n          <textarea id=\"summary\" placeholder=\"Summary\" required></textarea>\n        </div>\n\n        <!-- now this row is .full so it stacks -->\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <script>\n    // Tabs\n    const tabList = document.getElementById('tab-list');\n    const tabNew  = document.getElementById('tab-new');\n    const placeholder = document.getElementById('placeholder');\n    const form = document.getElementById('taskForm');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      placeholder.style.display = 'block';\n      form.classList.remove('visible');\n    }\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      placeholder.style.display = 'none';\n      form.classList.add('visible');\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    // Open native date picker\n    document.querySelectorAll('.icon-input .icon').forEach(icon => {\n      icon.addEventListener('click', () => {\n        const dateInput = icon.nextElementSibling;\n        if (typeof dateInput.showPicker === 'function') {\n          dateInput.showPicker();\n        } else {\n          dateInput.focus();\n        }\n      });\n    });\n\n    // Submit\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const sel = document.getElementById('tasksSelect');\n      const payload = {\n        id:       Number(sel.value),\n        name:     sel.options[sel.selectedIndex].text,\n        role:     document.getElementById('roleSelect').value,\n        assigned: document.getElementById('assignedSelect').value,\n        summary:  document.getElementById('summary').value,\n        dueDate:  document.getElementById('dueDate').value,\n        priority: document.getElementById('priority').value,\n      };\n      try {\n        const resp = await fetch('https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n        alert('Submitted!');\n        showList();\n      } catch (err) {\n        alert('Error: ' + err.message);\n      }\n    });\n\n    // Initialize\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1900,
        -940
      ],
      "id": "3bc5323c-d884-443f-bfe8-42c44318df24",
      "name": "Code4"
    },
    {
      "parameters": {
        "path": "7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        260
      ],
      "id": "c0386d31-2f8a-43ec-8b71-908cdf3c0d24",
      "name": "Webhook2",
      "webhookId": "7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    html { box-sizing: border-box; }\n    *, *:before, *:after { box-sizing: inherit; }\n\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active { background: #ffd500; }\n\n    .content { min-height: 250px; }\n    .placeholder {\n      text-align: center;\n      color: #666;\n      font-size: 1.2rem;\n      margin-top: 4rem;\n    }\n    form { display: none; }\n    form.visible { display: block; }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select {\n      height: 2.5rem;\n    }\n    select::-ms-expand { display: none; }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    /* wrapper styling for date + priority */\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon { display: none; }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"placeholder\" class=\"placeholder\">No tasks to display</div>\n\n      <form id=\"taskForm\">\n        <!-- re-added selects -->\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <!-- renamed to Description -->\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <!-- stacked date + priority -->\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <script>\n    // Tabs\n    const tabList     = document.getElementById('tab-list');\n    const tabNew      = document.getElementById('tab-new');\n    const placeholder = document.getElementById('placeholder');\n    const form        = document.getElementById('taskForm');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew.classList.remove('active');\n      placeholder.style.display = 'block';\n      form.classList.remove('visible');\n    }\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew.classList.add('active');\n      placeholder.style.display = 'none';\n      form.classList.add('visible');\n    }\n    tabList.addEventListener('click', showList);\n    tabNew.addEventListener('click', showNew);\n\n    // clicking anywhere on the date wrapper opens picker\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    // Submit\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const payload = {\n        id:          Number(document.getElementById('tasksSelect').value),\n        name:        document.getElementById('tasksSelect')\n                         .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role:        document.getElementById('roleSelect').value,\n        template:    document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate:     document.getElementById('dueDate').value,\n        priority:    document.getElementById('priority').value,\n      };\n      try {\n        const resp = await fetch(\n          'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15',\n          {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          }\n        );\n        if (!resp.ok) throw new Error(resp.statusText);\n        alert('Submitted!');\n        showList();\n      } catch (err) {\n        alert('Error: ' + err.message);\n      }\n    });\n\n    // Initialize on load\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1520,
        -460
      ],
      "id": "f51256d6-c980-48ed-9511-58859bc8b7f1",
      "name": "Code5"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Coming Soon</title>\n  <!-- Google Font -->\n  <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap\" rel=\"stylesheet\">\n  <!-- Font Awesome -->\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\"\n    integrity=\"sha512-p+1u+YcGJ65+lqs8bi3xzo3GZrFxDF8XGgq9qEoD2MjG9Gx9+VYNHk0JsfXdjfxWLi0X1iogar2ujxZRKX+w2g==\"\n    crossorigin=\"anonymous\"\n    referrerpolicy=\"no-referrer\"\n  />\n  <style>\n    /* caution stripes background */\n    body {\n      margin: 0;\n      height: 100vh;\n      background: repeating-linear-gradient(\n        45deg,\n        #ffc107 0,\n        #ffc107 10px,\n        #333333 10px,\n        #333333 20px\n      );\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-family: 'Montserrat', sans-serif;\n      color: #fff;\n      text-align: center;\n    }\n\n    .content {\n      background: rgba(0, 0, 0, 0.75);\n      padding: 40px 60px;\n      border-radius: 10px;\n      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);\n      max-width: 90%;\n    }\n\n    .content .icon {\n      font-size: 4rem;\n      margin-bottom: 20px;\n      display: inline-block;\n      animation: spin 6s linear infinite;\n      color: #ffc107;\n    }\n\n    h1 {\n      margin: 0 0 10px;\n      font-size: 2.5rem;\n      text-transform: uppercase;\n      letter-spacing: 2px;\n    }\n\n    p {\n      margin: 0 0 20px;\n      font-size: 1.1rem;\n      line-height: 1.4;\n    }\n\n    /* simple email subscribe form */\n    .subscribe {\n      display: flex;\n      max-width: 400px;\n      margin: 0 auto;\n    }\n    .subscribe input[type=\"email\"] {\n      flex: 1;\n      padding: 12px 15px;\n      border: none;\n      border-radius: 4px 0 0 4px;\n      font-size: 1rem;\n    }\n    .subscribe button {\n      padding: 12px 20px;\n      border: none;\n      background: #ffc107;\n      color: #333;\n      text-transform: uppercase;\n      font-weight: bold;\n      cursor: pointer;\n      border-radius: 0 4px 4px 0;\n      transition: background 0.3s ease;\n    }\n    .subscribe button:hover {\n      background: #e0a800;\n    }\n\n    /* spin animation */\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n\n    /* make page responsive */\n    @media (max-width: 480px) {\n      .content {\n        padding: 30px 20px;\n      }\n      h1 {\n        font-size: 2rem;\n      }\n      .content .icon {\n        font-size: 3rem;\n      }\n    }\n  </style>\n</head>\n<body>\n\n  <div class=\"content\">\n    <div class=\"icon\">\n      <i class=\"fas fa-cog\"></i>\n    </div>\n    <h1>Coming Soon</h1>\n    <p>We’re hard at work building something awesome. Stay tuned!</p>\n\n    <form class=\"subscribe\" action=\"#\" method=\"post\">\n      <input type=\"email\" placeholder=\"Enter your email\" required>\n      <button type=\"submit\">Notify Me</button>\n    </form>\n  </div>\n\n</body>\n</html>\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        220,
        260
      ],
      "id": "aef79beb-4908-4d58-9d3c-85066215a992",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    html { box-sizing: border-box; }\n    *, *:before, *:after { box-sizing: inherit; }\n\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n      position: relative;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active { background: #ffd500; }\n\n    .content { min-height: 250px; }\n    .placeholder {\n      text-align: center;\n      color: #666;\n      font-size: 1.2rem;\n      margin-top: 4rem;\n    }\n    form { display: none; }\n    form.visible { display: block; }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select { height: 2.5rem; }\n    select::-ms-expand { display: none; }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon { display: none; }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    /* toast styling */\n    #toast {\n      position: fixed;\n      bottom: 1rem;\n      right: 1rem;\n      background: #4caf50;\n      color: white;\n      padding: 0.8rem 1.2rem;\n      border-radius: 4px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      pointer-events: none;\n      z-index: 1000;\n    }\n    #toast.show {\n      opacity: 1;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"placeholder\" class=\"placeholder\">No tasks to display</div>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div id=\"toast\">Task created successfully!</div>\n\n  <script>\n    const tabList     = document.getElementById('tab-list');\n    const tabNew      = document.getElementById('tab-new');\n    const placeholder = document.getElementById('placeholder');\n    const form        = document.getElementById('taskForm');\n    const toast       = document.getElementById('toast');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      placeholder.style.display = 'block';\n      form.classList.remove('visible');\n    }\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      placeholder.style.display = 'none';\n      form.classList.add('visible');\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    // clicking wrapper opens date picker\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const payload = {\n        id:          Number(document.getElementById('tasksSelect').value),\n        name:        document.getElementById('tasksSelect')\n                         .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role:        document.getElementById('roleSelect').value,\n        template:    document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate:     document.getElementById('dueDate').value,\n        priority:    document.getElementById('priority').value,\n      };\n\n      try {\n        const resp = await fetch(\n          'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15',\n          {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          }\n        );\n        if (!resp.ok) throw new Error(resp.statusText);\n\n        // show toast\n        toast.classList.add('show');\n        // after 2s, hide toast and show the list\n        setTimeout(() => {\n          toast.classList.remove('show');\n          showList();\n        }, 2000);\n\n      } catch (err) {\n        // error toast\n        toast.textContent = 'Error: ' + err.message;\n        toast.style.background = '#e53935';\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          // restore original text/color\n          toast.textContent = 'Task created successfully!';\n          toast.style.background = '#4caf50';\n        }, 3000);\n      }\n    });\n\n    // start on List\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1520,
        -600
      ],
      "id": "273b8fd4-efc2-4519-9b22-1c488988a32a",
      "name": "Code6"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    html { box-sizing: border-box; }\n    *, *:before, *:after { box-sizing: inherit; }\n\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n      position: relative;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active { background: #ffd500; }\n\n    .content { min-height: 400px; }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      display: none;\n    }\n    form {\n      display: none;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select { height: 2.5rem; }\n    select::-ms-expand { display: none; }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon { display: none; }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    /* toast styling */\n    #toast {\n      position: fixed;\n      bottom: 1rem;\n      right: 1rem;\n      background: #4caf50;\n      color: white;\n      padding: 0.8rem 1.2rem;\n      border-radius: 4px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      pointer-events: none;\n      z-index: 1000;\n    }\n    #toast.show {\n      opacity: 1;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <!-- Task List iframe -->\n      <iframe id=\"listFrame\" sandbox=\"allow-scripts allow-same-origin\"></iframe>\n\n      <!-- New Task form -->\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div id=\"toast\">Task created successfully!</div>\n\n  <script>\n    const GET_URL  = 'https://xl.epicpc.com/webhook/7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb';\n    const POST_URL = 'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15';\n\n    const tabList   = document.getElementById('tab-list');\n    const tabNew    = document.getElementById('tab-new');\n    const listFrame = document.getElementById('listFrame');\n    const form      = document.getElementById('taskForm');\n    const toast     = document.getElementById('toast');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      form.style.display      = 'none';\n      listFrame.style.display = 'block';\n      // load the task list if not already loaded\n      if (!listFrame.src) {\n        listFrame.src = GET_URL;\n      }\n    }\n\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      listFrame.style.display = 'none';\n      form.style.display      = 'block';\n    }\n\n    tabList .addEventListener('click', showList);\n    tabNew  .addEventListener('click', showNew);\n\n    // clicking wrapper opens date picker\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const payload = {\n        id:          Number(document.getElementById('tasksSelect').value),\n        name:        document.getElementById('tasksSelect')\n                         .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role:        document.getElementById('roleSelect').value,\n        template:    document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate:     document.getElementById('dueDate').value,\n        priority:    document.getElementById('priority').value,\n      };\n\n      try {\n        const resp = await fetch(POST_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          showList();\n          form.reset();   // reset selects, textarea, date\n          // clear iframe so it reloads fresh\n          listFrame.src = '';\n        }, 2000);\n\n      } catch (err) {\n        toast.textContent = 'Error: ' + err.message;\n        toast.style.background = '#e53935';\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          toast.textContent = 'Task created successfully!';\n          toast.style.background = '#4caf50';\n        }, 3000);\n      }\n    });\n\n    // initialize on load\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1560,
        -740
      ],
      "id": "47753b4c-1144-4ef0-8e7f-16aded03630f",
      "name": "Code7"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    html { box-sizing: border-box; }\n    *, *:before, *:after { box-sizing: inherit; }\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n      position: relative;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active { background: #ffd500; }\n\n    .content {\n      position: relative;\n      min-height: 400px;\n    }\n    /* loader overlay */\n    #loader {\n      display: none;\n      position: absolute;\n      inset: 0;\n      background: rgba(255,255,255,0.8);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.2rem;\n      z-index: 10;\n    }\n    /* iframe fills the .content area */\n    #listFrame {\n      position: absolute;\n      top: 0; left: 0;\n      width: 100%; height: 100%;\n      border: none;\n    }\n    /* form sits on top when visible */\n    form {\n      position: relative;\n      display: none;\n      z-index: 1;\n    }\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select { height: 2.5rem; }\n    select::-ms-expand { display: none; }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon { display: none; }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    /* toast styling */\n    #toast {\n      position: fixed;\n      bottom: 1rem;\n      right: 1rem;\n      background: #4caf50;\n      color: white;\n      padding: 0.8rem 1.2rem;\n      border-radius: 4px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      pointer-events: none;\n      z-index: 1000;\n    }\n    #toast.show {\n      opacity: 1;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"loader\">Loading…</div>\n      <iframe id=\"listFrame\"></iframe>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div id=\"toast\">Task created successfully!</div>\n\n  <script>\n    const GET_URL  = 'https://xl.epicpc.com/webhook/7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb';\n    const POST_URL = 'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15';\n\n    const tabList   = document.getElementById('tab-list');\n    const tabNew    = document.getElementById('tab-new');\n    const listFrame = document.getElementById('listFrame');\n    const loader    = document.getElementById('loader');\n    const form      = document.getElementById('taskForm');\n    const toast     = document.getElementById('toast');\n    const submitBtn = form.querySelector('button[type=\"submit\"]');\n\n    // Show the Task List\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      form.style.display      = 'none';\n      loader.style.display    = 'flex';\n      listFrame.style.display = 'block';\n      // always reload the iframe\n      listFrame.src = GET_URL;\n    }\n\n    // Hide loader once iframe content has loaded\n    listFrame.addEventListener('load', () => {\n      loader.style.display = 'none';\n    });\n\n    // Show the New Task form\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      listFrame.style.display = 'none';\n      form.style.display      = 'block';\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    // Icon-input date picker handler\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    // On form submit: disable button, show loader, post payload\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      submitBtn.disabled    = true;\n      submitBtn.textContent = 'Submitting…';\n\n      const payload = {\n        id:          Number(document.getElementById('tasksSelect').value),\n        name:        document.getElementById('tasksSelect')\n                           .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role:        document.getElementById('roleSelect').value,\n        template:    document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate:     document.getElementById('dueDate').value,\n        priority:    document.getElementById('priority').value,\n      };\n\n      try {\n        const resp = await fetch(POST_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n\n        // success toast\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          // go back to list, reload it\n          showList();\n          // reset form fields\n          form.reset();\n          // restore submit button\n          submitBtn.disabled    = false;\n          submitBtn.textContent = 'Submit';\n        }, 2000);\n\n      } catch (err) {\n        // error toast\n        toast.textContent      = 'Error: ' + err.message;\n        toast.style.background = '#e53935';\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          toast.textContent      = 'Task created successfully!';\n          toast.style.background = '#4caf50';\n          submitBtn.disabled     = false;\n          submitBtn.textContent  = 'Submit';\n        }, 3000);\n      }\n    });\n\n    // initialize on load\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -200
      ],
      "id": "b06abdda-05b3-4837-b088-2646462669fc",
      "name": "Code8"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    /* Make body fill viewport */\n    html, body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n    html { box-sizing: border-box; }\n    *, *:before, *:after { box-sizing: inherit; }\n\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n      display: flex;\n      justify-content: center;\n      align-items: stretch;\n    }\n\n    .wrapper {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      max-width: 800px;\n      height: 100%;\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      box-sizing: border-box;\n    }\n\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active { background: #ffd500; }\n\n    .content {\n      position: relative;\n      flex: 1;                /* fill remaining vertical space */\n      display: flex;          /* enable flex children */\n      min-height: 300px;      /* fallback minimum */\n      overflow: hidden;       /* clip loader & iframe to this box */\n    }\n\n    #loader {\n      position: absolute;\n      inset: 0;\n      background: rgba(255,255,255,0.8);\n      display: none;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.2rem;\n      z-index: 10;\n    }\n\n    /* iframe now simply flex:1 */\n    #listFrame {\n      flex: 1;\n      width: 100%;\n      height: 100%;\n      border: none;\n    }\n\n    form {\n      position: relative;\n      display: none;\n      z-index: 1;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select { height: 2.5rem; }\n    select::-ms-expand { display: none; }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon { display: none; }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    #toast {\n      position: fixed;\n      bottom: 1rem;\n      right: 1rem;\n      background: #4caf50;\n      color: white;\n      padding: 0.8rem 1.2rem;\n      border-radius: 4px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      pointer-events: none;\n      z-index: 1000;\n    }\n    #toast.show {\n      opacity: 1;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"loader\">Loading…</div>\n      <iframe id=\"listFrame\" sandbox=\"allow-scripts allow-same-origin\"></iframe>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div id=\"toast\">Task created successfully!</div>\n\n  <script>\n    const GET_URL  = 'https://xl.epicpc.com/webhook/7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb';\n    const POST_URL = 'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15';\n\n    const tabList   = document.getElementById('tab-list');\n    const tabNew    = document.getElementById('tab-new');\n    const listFrame = document.getElementById('listFrame');\n    const loader    = document.getElementById('loader');\n    const form      = document.getElementById('taskForm');\n    const toast     = document.getElementById('toast');\n    const submitBtn = form.querySelector('button[type=\"submit\"]');\n\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      form.style.display      = 'none';\n      loader.style.display    = 'flex';\n      listFrame.style.display = 'block';\n      listFrame.src = GET_URL;\n    }\n\n    listFrame.addEventListener('load', () => {\n      loader.style.display = 'none';\n    });\n\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      listFrame.style.display = 'none';\n      form.style.display      = 'block';\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      submitBtn.disabled    = true;\n      submitBtn.textContent = 'Submitting…';\n\n      const payload = {\n        id: Number(document.getElementById('tasksSelect').value),\n        name: document.getElementById('tasksSelect')\n                  .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role: document.getElementById('roleSelect').value,\n        template: document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate: document.getElementById('dueDate').value,\n        priority: document.getElementById('priority').value,\n      };\n\n      try {\n        const resp = await fetch(POST_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          form.reset();\n          submitBtn.disabled    = false;\n          submitBtn.textContent = 'Submit';\n          showList();\n        }, 2000);\n\n      } catch (err) {\n        toast.textContent      = 'Error: ' + err.message;\n        toast.style.background = '#e53935';\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          toast.textContent      = 'Task created successfully!';\n          toast.style.background = '#4caf50';\n          submitBtn.disabled     = false;\n          submitBtn.textContent  = 'Submit';\n        }, 3000);\n      }\n    });\n\n    // initialize\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -340
      ],
      "id": "9b2f9930-5a88-4d2b-ba14-cbeb2fc785f7",
      "name": "Code9"
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node\nconst tasks = items.map(i => i.json);\nconst optionsHtml = tasks\n  .map(t => `<option value=\"${t.ID}\">${t.NAME.trim()}</option>`)\n  .join(\"\\n\");\n\nconst html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TAC Board – New Task</title>\n  <style>\n    html { box-sizing: border-box; }\n    *, *:before, *:after { box-sizing: inherit; }\n    body {\n      font-family: Arial, sans-serif;\n      background: #f4f4f4;\n      padding: 1rem;\n    }\n    .wrapper {\n      background: #fff;\n      border: 2px solid #999;\n      border-radius: 12px;\n      padding: 1rem;\n      max-width: 800px;\n      margin: auto;\n      position: relative;\n    }\n    .tabs {\n      display: flex;\n      border-radius: 20px;\n      overflow: hidden;\n      margin-bottom: 1rem;\n    }\n    .tabs button {\n      flex: 1;\n      padding: 0.8rem;\n      border: none;\n      background: #e0e0e0;\n      font-weight: bold;\n      cursor: pointer;\n    }\n    .tabs button.active { background: #ffd500; }\n\n    .content {\n      position: relative;\n      min-height: 400px;\n    }\n    /* loader overlay */\n    #loader {\n      display: none;\n      position: absolute;\n      inset: 0;\n      background: rgba(255,255,255,0.8);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-size: 1.2rem;\n      z-index: 10;\n    }\n    /* iframe fills the .content area */\n    #listFrame {\n      position: absolute;\n      top: 0; left: 0;\n      width: 100%; height: 100%;\n      border: none;\n    }\n    /* form sits on top when visible */\n    form {\n      position: relative;\n      display: none;\n      z-index: 1;\n    }\n    .form-row {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 1rem;\n      flex-wrap: wrap;\n    }\n    .form-row.full { flex-direction: column; }\n\n    select, textarea {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      appearance: none;\n      font-size: 1rem;\n      padding: 0.6rem;\n    }\n    select { height: 2.5rem; }\n    select::-ms-expand { display: none; }\n\n    textarea {\n      line-height: 1.4;\n      min-height: 200px;\n      resize: vertical;\n      width: 100%;\n    }\n\n    .icon-input,\n    .priority-select {\n      display: flex;\n      align-items: center;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background: #fff;\n      padding: 0.6rem;\n      width: 100%;\n    }\n    .form-row.full .icon-input,\n    .form-row.full .priority-select {\n      flex: 1 1 100%;\n    }\n\n    .icon-input .icon,\n    .priority-select .icon {\n      font-size: 1.2rem;\n      margin: 0 0.5rem;\n      pointer-events: none;\n    }\n    .priority-select .icon { display: none; }\n\n    .icon-input input[type=\"date\"],\n    .priority-select select {\n      all: unset;\n      flex: 1;\n      cursor: pointer;\n    }\n\n    .actions {\n      text-align: right;\n    }\n    .actions button {\n      background: #ffd500;\n      border: none;\n      padding: 0.8rem 1.6rem;\n      border-radius: 4px;\n      font-size: 1rem;\n      font-weight: bold;\n      cursor: pointer;\n    }\n\n    /* toast styling */\n    #toast {\n      position: fixed;\n      bottom: 1rem;\n      right: 1rem;\n      background: #4caf50;\n      color: white;\n      padding: 0.8rem 1.2rem;\n      border-radius: 4px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n      pointer-events: none;\n      z-index: 1000;\n    }\n    #toast.show {\n      opacity: 1;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"wrapper\">\n    <div class=\"tabs\">\n      <button id=\"tab-list\" class=\"active\">Task List</button>\n      <button id=\"tab-new\">+ New Task</button>\n    </div>\n\n    <div class=\"content\">\n      <div id=\"loader\">Loading…</div>\n      <iframe id=\"listFrame\"></iframe>\n\n      <form id=\"taskForm\">\n        <div class=\"form-row\">\n          <select id=\"tasksSelect\" required>\n            <option value=\"\" disabled selected>Tasks ▼</option>\n            ${optionsHtml}\n          </select>\n          <select id=\"roleSelect\" required>\n            <option value=\"\" disabled selected>Role ▼</option>\n            <option value=\"role1\">Role 1</option>\n            <option value=\"role2\">Role 2</option>\n          </select>\n          <select id=\"templateSelect\" required>\n            <option value=\"\" disabled selected>Template ▼</option>\n            <option value=\"templateA\">Template A</option>\n            <option value=\"templateB\">Template B</option>\n          </select>\n        </div>\n\n        <div class=\"form-row full\">\n          <textarea id=\"description\" placeholder=\"Description\" required></textarea>\n        </div>\n\n        <div class=\"form-row full\">\n          <div class=\"icon-input\">\n            <span class=\"icon\">📅</span>\n            <input id=\"dueDate\" type=\"date\" required>\n          </div>\n          <div class=\"priority-select\">\n            <span class=\"icon\">▼</span>\n            <select id=\"priority\" required>\n              <option value=\"\" disabled selected>Priority ▼</option>\n              <option value=\"low\">Low</option>\n              <option value=\"med-low\">Medium-Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"med-high\">Medium-High</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"actions\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div id=\"toast\">Task created successfully!</div>\n\n  <script>\n    const GET_URL  = 'https://xl.epicpc.com/webhook/7bc7c3a1-590a-411f-9d5a-bfb8fcc7f8bb';\n    const POST_URL = 'https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15';\n\n    const tabList   = document.getElementById('tab-list');\n    const tabNew    = document.getElementById('tab-new');\n    const listFrame = document.getElementById('listFrame');\n    const loader    = document.getElementById('loader');\n    const form      = document.getElementById('taskForm');\n    const toast     = document.getElementById('toast');\n    const submitBtn = form.querySelector('button[type=\"submit\"]');\n\n    // Show the Task List\n    function showList() {\n      tabList.classList.add('active');\n      tabNew .classList.remove('active');\n      form.style.display      = 'none';\n      loader.style.display    = 'flex';\n      listFrame.style.display = 'block';\n      // always reload the iframe\n      listFrame.src = GET_URL;\n    }\n\n    // Hide loader once iframe content has loaded\n    listFrame.addEventListener('load', () => {\n      loader.style.display = 'none';\n    });\n\n    // Show the New Task form\n    function showNew() {\n      tabList.classList.remove('active');\n      tabNew .classList.add('active');\n      listFrame.style.display = 'none';\n      form.style.display      = 'block';\n    }\n\n    tabList.addEventListener('click', showList);\n    tabNew .addEventListener('click', showNew);\n\n    // Icon-input date picker handler\n    document.querySelectorAll('.icon-input').forEach(wr => {\n      wr.addEventListener('click', () => {\n        const inp = wr.querySelector('input[type=\"date\"]');\n        if (inp.showPicker) inp.showPicker();\n        else inp.focus();\n      });\n    });\n\n    // On form submit: disable button, show loader, post payload\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      submitBtn.disabled    = true;\n      submitBtn.textContent = 'Submitting…';\n\n      const payload = {\n        id:          Number(document.getElementById('tasksSelect').value),\n        name:        document.getElementById('tasksSelect')\n                           .options[document.getElementById('tasksSelect').selectedIndex].text,\n        role:        document.getElementById('roleSelect').value,\n        template:    document.getElementById('templateSelect').value,\n        description: document.getElementById('description').value,\n        dueDate:     document.getElementById('dueDate').value,\n        priority:    document.getElementById('priority').value,\n      };\n\n      try {\n        const resp = await fetch(POST_URL, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!resp.ok) throw new Error(resp.statusText);\n\n        // success toast\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          // go back to list, reload it\n          showList();\n          // reset form fields\n          form.reset();\n          // restore submit button\n          submitBtn.disabled    = false;\n          submitBtn.textContent = 'Submit';\n        }, 2000);\n\n      } catch (err) {\n        // error toast\n        toast.textContent      = 'Error: ' + err.message;\n        toast.style.background = '#e53935';\n        toast.classList.add('show');\n        setTimeout(() => {\n          toast.classList.remove('show');\n          toast.textContent      = 'Task created successfully!';\n          toast.style.background = '#4caf50';\n          submitBtn.disabled     = false;\n          submitBtn.textContent  = 'Submit';\n        }, 3000);\n      }\n    });\n\n    // initialize on load\n    showList();\n  </script>\n</body>\n</html>\n`;\n\nreturn {\n  statusCode: 200,\n  headers: { 'Content-Type': 'text/html' },\n  body: html,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        -480
      ],
      "id": "a229af12-4854-4ce5-bf62-1d12908a9cf5",
      "name": "Code10"
    }
  ],
  "pinData": {
    "Code": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code1": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Webhook1": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.93",
            "x-forwarded-for": "10.0.24.93",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "content-length": "137",
            "sec-ch-ua-platform": "\"Windows\"",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0",
            "sec-ch-ua": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"",
            "content-type": "application/json",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "origin": "https://xl.epicpc.com",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "cors",
            "sec-fetch-dest": "empty",
            "referer": "https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; patient_phone=2488726322; patient_dob_year=1988; patient_dob_month=02; patient_dob_day=01; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDk0Njg5MTcsImV4cCI6MTc1MDA3MzcxN30.2VHUqKXlIP9WzpA1-g0nZijV7peMpyke9xsc6gDo7kk; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2FUaabMN1VjnnOFE7CfvOVYRVJtsRdseWOBXQCVMb1sgsTyqLnQZm2h4gU2F7mtvXS4JdQVbNqwkw%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX19r%2BUL7mY0DEaM%2BhHKJAm%2BFTGus0ydA2zN5RDU9Hg0BTrsiWpwdilHjaLtspgNM0nYUdMDZVlyHvWdMaIUOSGEDWiHhOGdIBoEVHEWMmZkCQGHwR6pA45HiGZ7FlRREA9N%2BE1vSX3cWitGAmkEnJUk94JtMvpEyKOU%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2BwRhYlUO3HJWArPckurO7%2BxXpKUQKb0FhizP2NAFzd0X8qQZ9CM%2FTIK4OcwsUG3kV0IMyPRIpBzWLAzOl0ERgjffjRNt761z6DWczW2lU9OT7XtbHsD9evdsjWjU3yyC76UfXHgZg3JA%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1749582978012%2C%2201975b1b-3e0f-7af7-9d3a-e5fc6cbb0eba%22%2C1749580201487%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2Bei52NOUxI%2B%2FETNKDdfzB3Sg%2F5fEs91TyH7tKkCC09PqQ81dcxTyn8BXYRStUGezvWGgNb899XxQ453oGM6pD%2FwJAqba%2BaVbHaDukFqBf9kJpG85fQqA7pX0AenGd3R2ZbrJ8OPuXsgA%3D%3D"
          },
          "params": {},
          "query": {},
          "body": {
            "id": 270,
            "name": "GA_CARE_COORDINATION",
            "role": "role1",
            "assigned": "userA",
            "summary": "sacvssv",
            "dueDate": "2025-06-11",
            "priority": "medium"
          },
          "webhookUrl": "https://xl.epicpc.com/webhook/71e356cc-29e9-48d1-9ed9-2dd55cb2fc15",
          "executionMode": "production"
        }
      }
    ],
    "Code2": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code3": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code4": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code5": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code6": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code7": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code8": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code9": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ],
    "Code10": [
      {
        "json": {
          "statusCode": 200,
          "headers": {
            "Content-Type": "text/html"
          },
          "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Select Workgroup</title>\n  <style>\n    body { \n      font-family: Arial, sans-serif; \n      background: #f4f4f4; \n      display: flex; \n      justify-content: center; \n      align-items: center; \n      height: 100vh; \n      margin: 0;\n    }\n    .container { \n      background: #fff; \n      padding: 2rem; \n      border-radius: 8px; \n      box-shadow: 0 2px 10px rgba(0,0,0,0.1); \n      width: 300px;\n      text-align: center;\n    }\n    select { \n      width: 100%; \n      padding: 0.5rem; \n      margin: 1rem 0; \n      border: 1px solid #ccc; \n      border-radius: 4px; \n      font-size: 1rem;\n    }\n    button { \n      padding: 0.6rem 1.2rem; \n      font-size: 1rem; \n      border: none; \n      border-radius: 4px; \n      background: #007BFF; \n      color: #fff; \n      cursor: pointer; \n    }\n    button:hover { background: #0056b3; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Select a Workgroup</h2>\n    <select id=\"workgroupSelect\">\n      <option value=\"165\">GA_VBR_QUALITY_AND_GAPS</option>\n<option value=\"178\">GA_CAREMANAGEMENT_CC_GENERIC_INBOX</option>\n<option value=\"236\">GA_PIS_CARE_ENCOUNTER STATUS</option>\n<option value=\"247\">GA_SAM_CAMPAIGNS</option>\n<option value=\"248\">GA_VALUE_VOLUME_EXPERIMENTS</option>\n<option value=\"249\">GA_BILLING_RELATED_DISCUSSIONS</option>\n<option value=\"251\">GA_SPA_PAGES_UPDATES</option>\n<option value=\"252\">GA_TOC</option>\n<option value=\"254\">GA_MEDICAL_PRIOR_AUTHORIZATIONS</option>\n<option value=\"255\">GA_MEDICATION_PRIOR_AUTHORIZATIONS</option>\n<option value=\"263\">GA_REFILLS</option>\n<option value=\"267\">GA_REFERRALS</option>\n<option value=\"268\">GA_MEDICAL_RECORDS</option>\n<option value=\"269\">GA_CARE_MANAGEMENT</option>\n<option value=\"270\">GA_CARE_COORDINATION</option>\n<option value=\"271\">GA_NON_POC_LABS</option>\n<option value=\"272\">GA_NON_POC_RADIOLOGY</option>\n<option value=\"275\">GA_LAB</option>\n<option value=\"277\">GA_BSP_BILLING_RELATED_DISCUSSIONS</option>\n    </select>\n    <button id=\"submitBtn\">Submit</button>\n  </div>\n\n  <script>\n    document\n      .getElementById('submitBtn')\n      .addEventListener('click', () => {\n        const selectedId = document.getElementById('workgroupSelect').value;\n        fetch('https://xl.epicpc.com/webhook/5ab5ca2d-634d-4b9e-9912-cda43a40db49', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ ID: Number(selectedId) })\n        })\n        .then(response => {\n          if (response.ok) {\n            alert('Workgroup submitted successfully!');\n          } else {\n            alert('Submission failed: ' + response.statusText);\n          }\n        })\n        .catch(err => {\n          alert('Error: ' + err.message);\n        });\n      });\n  </script>\n</body>\n</html>\n"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-06-10T20:43:19.485Z",
  "versionId": "f2a0bd12-d8e2-42b2-8ad7-6b75b5b79e59"
}