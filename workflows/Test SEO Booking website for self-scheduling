{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-29T19:22:06.311Z",
  "id": "RIBqCiXsaTOE3ZUH",
  "isArchived": false,
  "meta": null,
  "name": "Test SEO Booking website for self-scheduling",
  "nodes": [
    {
      "parameters": {
        "path": "30b4b0fe-6113-4996-92dd-54b2e339143e",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "1d5af85e-0860-4a85-8fe9-5826812adcc0",
      "name": "Webhook",
      "webhookId": "30b4b0fe-6113-4996-92dd-54b2e339143e"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>Zocdoc Hero - Book local OB-GYNs</title>\n<style>\n  /* Reset & base */\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    background-color: #FEFBE8;\n    color: #1a1a1a;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  a:hover,\n  button:hover {\n    opacity: 0.85;\n  }\n\n  /* Header */\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem 2rem;\n    background: white;\n    box-shadow: 0 2px 6px rgba(0,0,0,0.05);\n  }\n  .logo {\n    font-weight: 700;\n    font-size: 1.5rem;\n    color: #222;\n    user-select: none;\n  }\n  nav {\n    display: flex;\n    align-items: center;\n    gap: 1.25rem;\n    font-weight: 600;\n    font-size: 0.95rem;\n  }\n  nav > a {\n    padding: 0.3rem 0.1rem;\n    white-space: nowrap;\n  }\n\n  /* Right controls */\n  .user-controls {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    position: relative;\n  }\n  /* Log in dropdown */\n  .login-dropdown {\n    position: relative;\n    font-weight: 600;\n    font-size: 0.95rem;\n    cursor: pointer;\n    user-select: none;\n  }\n  .login-dropdown .label {\n    display: flex;\n    align-items: center;\n    gap: 0.3rem;\n  }\n  .login-dropdown svg {\n    width: 10px;\n    height: 10px;\n    fill: #444;\n    transition: transform 0.3s ease;\n  }\n  .login-dropdown.open svg {\n    transform: rotate(180deg);\n  }\n  /* Dropdown menu */\n  .login-menu {\n    position: absolute;\n    top: 120%;\n    right: 0;\n    background: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    box-shadow: 0 8px 16px rgba(0,0,0,0.12);\n    min-width: 140px;\n    display: none;\n    flex-direction: column;\n    z-index: 1000;\n  }\n  .login-menu.open {\n    display: flex;\n  }\n  .login-menu a {\n    padding: 0.5rem 1rem;\n    font-weight: 400;\n    font-size: 0.9rem;\n    color: #222;\n    border-bottom: 1px solid #eee;\n  }\n  .login-menu a:last-child {\n    border-bottom: none;\n  }\n  .login-menu a:hover {\n    background-color: #FEFBE8;\n  }\n\n  /* Sign up button */\n  .sign-up-btn {\n    background-color: #FFE600;\n    border: none;\n    font-weight: 700;\n    font-size: 0.95rem;\n    padding: 0.5rem 1.3rem;\n    border-radius: 9999px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  .sign-up-btn:focus {\n    outline: 3px solid #d6cc00;\n    outline-offset: 2px;\n  }\n  .sign-up-btn:hover {\n    background-color: #f5db00;\n  }\n\n  /* Hero container */\n  .hero {\n    flex: 1 0 auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 4rem 1rem 6rem;\n    text-align: center;\n  }\n  .hero-title {\n    font-weight: 700;\n    font-size: 2.25rem;\n    max-width: 560px;\n    margin-bottom: 3rem;\n    line-height: 1.15;\n    user-select: none;\n  }\n\n  /* Search Bar */\n  form.search-bar {\n    display: flex;\n    max-width: 900px;\n    width: 100%;\n    background: white;\n    border-radius: 9999px;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.07);\n    overflow: hidden;\n  }\n\n  /* Each input container */\n  .search-input-group {\n    flex: 1;\n    padding: 0.9rem 1.5rem;\n    border: none;\n    font-size: 1rem;\n    color: #333;\n    background: transparent;\n    border-right: 1px solid #eee;\n  }\n  .search-input-group:last-of-type {\n    border-right: none;\n  }\n  .search-input-group input, .search-input-group select {\n    width: 100%;\n    font-family: inherit;\n    font-size: inherit;\n    border: none;\n    outline: none;\n    background: transparent;\n    color: inherit;\n  }\n\n  /* Input placeholders */\n  .search-input-group input::placeholder {\n    color: #aaa;\n    font-weight: 400;\n  }\n\n  /* Focus outline on containers */\n  .search-input-group:focus-within {\n    outline: 2px solid #FFE600;\n    outline-offset: -2px;\n    background-color: #fffde7;\n  }\n\n  /* Search button */\n  button.search-btn {\n    background-color: #FFE600;\n    border: none;\n    color: #222;\n    font-weight: 700;\n    font-size: 1.1rem;\n    padding: 0 2.2rem;\n    cursor: pointer;\n    border-radius: 0 9999px 9999px 0;\n    transition: background-color 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  button.search-btn:hover,\n  button.search-btn:focus {\n    background-color: #f5db00;\n    outline: none;\n  }\n  button.search-btn:focus-visible {\n    outline: 3px solid #d6cc00;\n    outline-offset: 2px;\n  }\n\n  /* Responsive */\n  @media (max-width: 720px) {\n    header {\n      flex-wrap: wrap;\n      gap: 1rem;\n      padding: 1rem;\n    }\n    nav {\n      flex-basis: 100%;\n      justify-content: center;\n      order: 2;\n    }\n    .user-controls {\n      order: 3;\n      justify-content: center;\n      width: 100%;\n    }\n    .logo {\n      order: 1;\n      flex-grow: 1;\n      text-align: center;\n      font-size: 1.35rem;\n    }\n    .hero {\n      padding: 3rem 1rem 4rem;\n    }\n    .hero-title {\n      font-size: 1.75rem;\n      max-width: 100%;\n      padding: 0 1rem;\n    }\n    form.search-bar {\n      flex-direction: column;\n      max-width: 360px;\n      border-radius: 12px;\n      box-shadow: none;\n    }\n    .search-input-group {\n      padding: 0.75rem 1rem;\n      border-right: none !important;\n      border-bottom: 1px solid #eee;\n    }\n    .search-input-group:last-of-type {\n      border-bottom: none !important;\n    }\n    button.search-btn {\n      border-radius: 0 0 12px 12px;\n      padding: 0.9rem 0;\n      font-size: 1rem;\n      width: 100%;\n      margin-top: 0.5rem;\n    }\n  }\n</style>\n</head>\n<body>\n\n<header>\n  <a href=\"#\" class=\"logo\" aria-label=\"Zocdoc Logo\">Zocdoc</a>\n\n  <nav aria-label=\"Primary navigation\">\n    <a href=\"#\">Browse</a>\n    <a href=\"#\">Help</a>\n    <a href=\"#\">List your practice on Zocdoc</a>\n  </nav>\n\n  <div class=\"user-controls\">\n    <div class=\"login-dropdown\" id=\"loginDropdown\" tabindex=\"0\" aria-haspopup=\"true\" aria-expanded=\"false\" aria-label=\"Log in menu\">\n      <div class=\"label\" aria-controls=\"loginMenu\">\n        Log in\n        <svg viewBox=\"0 0 10 6\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0l5 6 5-6z\"/></svg>\n      </div>\n      <div class=\"login-menu\" id=\"loginMenu\" role=\"menu\">\n        <a href=\"#\" role=\"menuitem\" tabindex=\"-1\">Patient Log in</a>\n        <a href=\"#\" role=\"menuitem\" tabindex=\"-1\">Doctor Log in</a>\n      </div>\n    </div>\n    <button class=\"sign-up-btn\" type=\"button\">Sign up</button>\n  </div>\n</header>\n\n<main>\n  <section class=\"hero\" aria-label=\"Hero: Book local OB-GYNs who take your insurance\">\n    <h1 class=\"hero-title\">Book local OB-GYNs who take your insurance</h1>\n    <form class=\"search-bar\" id=\"searchForm\" aria-label=\"Search for doctors, location, and insurance\">\n      <div class=\"search-input-group\">\n        <input \n          type=\"text\" \n          id=\"conditionInput\" \n          name=\"condition\" \n          placeholder=\"Condition, procedure, doctor\" \n          aria-label=\"Condition, procedure, or doctor\" \n          autocomplete=\"off\" \n          list=\"condition-list\"\n          required\n        />\n        <datalist id=\"condition-list\"></datalist>\n      </div>\n      <div class=\"search-input-group\">\n        <input \n          type=\"text\" \n          id=\"locationInput\" \n          name=\"location\" \n          placeholder=\"Westland, MI\" \n          aria-label=\"Location\" \n          autocomplete=\"off\"\n          list=\"location-list\"\n          required \n        />\n        <datalist id=\"location-list\"></datalist>\n      </div>\n      <div class=\"search-input-group\">\n        <input \n          type=\"text\" \n          id=\"insuranceInput\" \n          name=\"insurance\" \n          placeholder=\"Insurance carrier and plan\" \n          aria-label=\"Insurance carrier and plan\" \n          autocomplete=\"off\"\n          list=\"insurance-list\"\n          required \n        />\n        <datalist id=\"insurance-list\"></datalist>\n      </div>\n      <button class=\"search-btn\" type=\"submit\" aria-label=\"Search\">\n        Search\n      </button>\n    </form>\n  </section>\n</main>\n\n<script>\n  // Webhook URLs as top-of-file constants\n  const CONDITIONS_ENDPOINT    = 'https://YOUR_N8N_DOMAIN/webhook/conditions';\n  const LOCATION_ENDPOINT      = 'https://YOUR_N8N_DOMAIN/webhook/location';\n  const INSURANCE_ENDPOINT     = 'https://YOUR_N8N_DOMAIN/webhook/insurance';\n  const SEARCH_SUBMIT_ENDPOINT = 'https://YOUR_N8N_DOMAIN/webhook/submitSearch';\n\n  // Login dropdown functionality\n  (() => {\n    const dropdown = document.getElementById('loginDropdown');\n    const menu = document.getElementById('loginMenu');\n\n    function toggleDropdown(open) {\n      const isOpen = dropdown.classList.contains('open');\n      if (typeof open === 'boolean') {\n        if (open === isOpen) return; // no change\n      }\n      dropdown.classList.toggle('open');\n      menu.classList.toggle('open');\n      dropdown.setAttribute('aria-expanded', dropdown.classList.contains('open'));\n    }\n\n    dropdown.addEventListener('click', e => {\n      e.stopPropagation();\n      toggleDropdown();\n    });\n\n    dropdown.addEventListener('keydown', e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        toggleDropdown();\n      } else if (e.key === 'Escape') {\n        toggleDropdown(false);\n        dropdown.focus();\n      }\n    });\n\n    document.addEventListener('click', () => {\n      toggleDropdown(false);\n    });\n\n    menu.querySelectorAll('a').forEach(link => {\n      link.addEventListener('keydown', e => {\n        if(e.key === 'Escape'){\n          toggleDropdown(false);\n          dropdown.focus();\n        }\n      });\n    });\n  })();\n\n  // Helper for fetching autocomplete suggestions and populating datalist\n  async function fetchSuggestions(endpoint, query) {\n    if (!query || query.length < 2) return [];\n    try {\n      const url = new URL(endpoint);\n      url.searchParams.set('q', query);\n      const response = await fetch(url.toString(), { method: 'GET' });\n      if (!response.ok) return [];\n      const data = await response.json();\n      // Expecting array of strings\n      if (!Array.isArray(data)) return [];\n      return data;\n    } catch {\n      return [];\n    }\n  }\n\n  // Attach autocomplete handlers\n  (() => {\n    const conditionInput = document.getElementById('conditionInput');\n    const conditionList = document.getElementById('condition-list');\n\n    const locationInput = document.getElementById('locationInput');\n    const locationList = document.getElementById('location-list');\n\n    const insuranceInput = document.getElementById('insuranceInput');\n    const insuranceList = document.getElementById('insurance-list');\n\n    let conditionTimer, locationTimer, insuranceTimer;\n\n    conditionInput.addEventListener('input', () => {\n      clearTimeout(conditionTimer);\n      conditionTimer = setTimeout(async () => {\n        const suggestions = await fetchSuggestions(CONDITIONS_ENDPOINT, conditionInput.value);\n        updateDatalist(conditionList, suggestions);\n      }, 300);\n    });\n    locationInput.addEventListener('input', () => {\n      clearTimeout(locationTimer);\n      locationTimer = setTimeout(async () => {\n        const suggestions = await fetchSuggestions(LOCATION_ENDPOINT, locationInput.value);\n        updateDatalist(locationList, suggestions);\n      }, 300);\n    });\n    insuranceInput.addEventListener('input', () => {\n      clearTimeout(insuranceTimer);\n      insuranceTimer = setTimeout(async () => {\n        const suggestions = await fetchSuggestions(INSURANCE_ENDPOINT, insuranceInput.value);\n        updateDatalist(insuranceList, suggestions);\n      }, 300);\n    });\n\n    function updateDatalist(datalist, items) {\n      datalist.innerHTML = '';\n      for (const item of items) {\n        const option = document.createElement('option');\n        option.value = item;\n        datalist.appendChild(option);\n      }\n    }\n  })();\n\n  // Form submission handler\n  (() => {\n    const form = document.getElementById('searchForm');\n\n    form.addEventListener('submit', async e => {\n      e.preventDefault();\n      const condition = form.condition.value.trim();\n      const location = form.location.value.trim();\n      const insurance = form.insurance.value.trim();\n\n      if (!condition || !location || !insurance) {\n        alert('Please fill in all fields.');\n        return;\n      }\n\n      const payload = {\n        condition,\n        location,\n        insurance,\n        timestamp: new Date().toISOString(),\n      };\n\n      try {\n        const res = await fetch(SEARCH_SUBMIT_ENDPOINT, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        });\n        if (!res.ok) throw new Error('Network response was not ok');\n        // For demo: Just alert success and reset\n        alert('Search submitted successfully!');\n        form.reset();\n      } catch (err) {\n        alert('Failed to submit search. Please try again.');\n      }\n    });\n  })();\n</script>\n\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        220,
        0
      ],
      "id": "d5faae6d-82d4-4e3c-94a7-25639823194e",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "path": "d0bc369d-963e-455b-885e-f6502ed12f15",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        240
      ],
      "id": "6e1a19d9-dbdc-487e-a9f9-d87329e253ed",
      "name": "Webhook1",
      "webhookId": "d0bc369d-963e-455b-885e-f6502ed12f15"
    },
    {
      "parameters": {
        "jsCode": "/***** n8n Code Node: Scheduling Page *****/\nconst providers = items[0].json.providers || [];\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Scheduling Interface</title>\n  <style>\n    /* ##### 1. Main Page CSS */\n    /* TODO: real styles here */\n\n    .loader-skeleton {\n      position: fixed;\n      inset: 0;\n      background: white;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      z-index: 9999;\n    }\n    .spinner {\n      border: 4px solid #eee;\n      border-top: 4px solid #3498db;\n      border-radius: 50%;\n      width: 48px;\n      height: 48px;\n      animation: spin 1s linear infinite;\n      margin-bottom: 0.5em;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    .header-pinned {\n      position: sticky;\n      top: 0;\n      background: white;\n      border-bottom: 1px solid #ccc;\n      display: flex;\n      align-items: center;\n      gap: 0.75rem;\n      padding: 0.5rem 1rem;\n      z-index: 10;\n    }\n\n    .logo-placeholder {\n      min-width: 120px;\n      height: 40px;\n      background: #ccc;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: bold;\n      color: #666;\n      user-select: none;\n    }\n\n    input[type=\"text\"] {\n      flex: 1 1 auto;\n      padding: 0.4em 0.5em;\n      font-size: 1rem;\n      border: 1px solid #aaa;\n      border-radius: 4px;\n    }\n\n    select {\n      padding: 0.4em 0.5em;\n      font-size: 1rem;\n      border: 1px solid #aaa;\n      border-radius: 4px;\n    }\n\n    .btn-secondary {\n      padding: 0.5em 1em;\n      background: #2ecc71;\n      border: none;\n      border-radius: 4px;\n      color: white;\n      cursor: pointer;\n      font-weight: 600;\n    }\n\n    .btn-primary {\n      padding: 0.5em 1em;\n      background: #3498db;\n      border: none;\n      border-radius: 4px;\n      color: white;\n      cursor: pointer;\n      font-weight: 600;\n    }\n\n    /* ##### 2. Provider Section CSS */\n    #providers {\n      padding: 1rem;\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n      gap: 1rem;\n      background: white;\n    }\n\n    .provider-card-skeleton {\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      padding: 1rem;\n      display: flex;\n      flex-direction: column;\n      gap: 0.5rem;\n      background: #fff;\n    }\n\n    .skeleton {\n      background: #ddd;\n      border-radius: 4px;\n      animation: pulse 1.5s infinite ease-in-out;\n    }\n    @keyframes pulse {\n      0%, 100% {\n        opacity: 1;\n      }\n      50% {\n        opacity: 0.4;\n      }\n    }\n\n    .skeleton.photo {\n      width: 100%;\n      aspect-ratio: 4 / 3;\n      border-radius: 6px;\n    }\n\n    .skeleton.line.name {\n      height: 1rem;\n      width: 60%;\n      border-radius: 2px;\n    }\n\n    .skeleton.line.info {\n      height: 1rem;\n      width: 40%;\n      border-radius: 2px;\n    }\n\n    .skeleton.calendar-grid {\n      margin-top: 0.5rem;\n      display: flex;\n      gap: 0.25rem;\n    }\n\n    .skeleton.box {\n      flex: 1 1 0;\n      height: 30px;\n      border-radius: 4px;\n    }\n\n    /* ##### 3. Map Section CSS */\n    #map {\n      margin-top: 1rem;\n      height: 350px;\n      background: #e5e5e5;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    #map-container {\n      width: 100%;\n      height: 100%;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- ##### 1. Main Page -->\n  <div id=\"loader\" class=\"loader-skeleton\" aria-live=\"polite\" aria-busy=\"true\">\n    <div class=\"spinner\" role=\"img\" aria-label=\"Loading spinner\"></div>\n    <p>Loading…</p>\n  </div>\n\n  <header class=\"header-pinned\">\n    <div class=\"logo-placeholder\" aria-label=\"Logo placeholder\">Logo</div>\n    <input type=\"text\" placeholder=\"Condition, procedure, doctor name…\" aria-label=\"Search\" />\n    <select aria-label=\"Location selector\">\n      <option>City, State</option>\n    </select>\n    <button class=\"btn-secondary\" type=\"button\">Add insurance</button>\n    <button class=\"btn-primary\" type=\"button\">Search</button>\n  </header>\n\n  <!-- ##### 2. Provider Section -->\n  <section id=\"providers\" aria-live=\"polite\" aria-busy=\"true\">\n    <!-- TODO: JS will replace these skeletons with real provider cards -->\n    <div class=\"provider-card-skeleton\" role=\"article\" aria-hidden=\"true\">\n      <div class=\"skeleton photo\"></div>\n      <div class=\"skeleton line name\"></div>\n      <div class=\"skeleton line info\"></div>\n      <div class=\"skeleton calendar-grid\">\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n      </div>\n    </div>\n    <div class=\"provider-card-skeleton\" role=\"article\" aria-hidden=\"true\">\n      <div class=\"skeleton photo\"></div>\n      <div class=\"skeleton line name\"></div>\n      <div class=\"skeleton line info\"></div>\n      <div class=\"skeleton calendar-grid\">\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n      </div>\n    </div>\n    <div class=\"provider-card-skeleton\" role=\"article\" aria-hidden=\"true\">\n      <div class=\"skeleton photo\"></div>\n      <div class=\"skeleton line name\"></div>\n      <div class=\"skeleton line info\"></div>\n      <div class=\"skeleton calendar-grid\">\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n        <div class=\"skeleton box\"></div>\n      </div>\n    </div>\n  </section>\n\n  <!-- ##### 3. Map Section -->\n  <section id=\"map\" aria-label=\"Provider Locations Map\">\n    <!-- TODO: insert map iframe or JS map library here -->\n    <div id=\"map-container\"></div>\n  </section>\n\n  <script>\n    async function fetchProviders() {\n      // TODO: Replace with your n8n webhook endpoint e.g. fetch('/webhook/your-endpoint')\n      // const response = await fetch('/webhook/...');\n      // const json = await response.json();\n      // return json.providers;\n\n      // For now, simulate with injected data\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve(${JSON.stringify(providers)});\n        }, 1000);\n      });\n    }\n\n    function createProviderCard(provider) {\n      const card = document.createElement('article');\n      card.className = 'provider-card';\n      card.setAttribute('role', 'article');\n      card.innerHTML = \\`\n        <img src=\"\\${provider.photoUrl || 'https://via.placeholder.com/320x240?text=Photo'}\" alt=\"Photo of \\${provider.name}\" style=\"width:100%;aspect-ratio:4/3;object-fit:cover;border-radius:6px\" />\n        <h3>\\${provider.name || 'No Name'}</h3>\n        <p>Rating: \\${provider.rating || 'N/A'}</p>\n        <p>\\${provider.address || 'Address not available'}</p>\n        <div class=\"calendar-grid\" aria-label=\"Availability for \\${provider.name || 'provider'}\">\n          <!-- TODO: render calendar grid here -->\n          <small>Availability calendar placeholder</small>\n        </div>\n      \\`;\n      return card;\n    }\n\n    function addMapMarkers(providers) {\n      // TODO: loop providers and add markers to #map-container\n\n      // Example pseudocode:\n      // const map = initializeYourMap('map-container');\n      // providers.forEach(p => {\n      //   if(p.lat && p.lng) {\n      //     addMarkerToMap(map, p.lat, p.lng, p.name);\n      //   }\n      // });\n    }\n\n    async function main() {\n      const loader = document.getElementById('loader');\n      const providersSection = document.getElementById('providers');\n\n      const data = await fetchProviders();\n\n      // Clear skeleton placeholders\n      providersSection.innerHTML = '';\n\n      if (data.length === 0) {\n        providersSection.innerHTML = '<p>No providers found.</p>';\n      } else {\n        data.forEach(provider => {\n          const card = createProviderCard(provider);\n          providersSection.appendChild(card);\n        });\n      }\n\n      addMapMarkers(data);\n      loader.style.display = 'none';\n    }\n\n    window.addEventListener('load', main);\n  </script>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        240
      ],
      "id": "ae51f0d5-7a41-4ab2-9254-e5b393995b6f",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        440,
        240
      ],
      "id": "661b6e6e-a5d0-4b35-a13f-e9a2ed7f0794",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node JavaScript snippet generating full HTML with embedded placeholders and structure\n\nconst providers = items[0].json.providers || [];\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Scheduling Interface</title>\n  <style>\n    /* Minimal CSS with clear comments */\n\n    /* Reset & basics */\n    body, html {\n      margin: 0; padding: 0; height: 100%;\n      font-family: system-ui, sans-serif;\n      background: #f9f9f9;\n      color: #222;\n    }\n\n    /* ##### 1. Main Page - Loader & layout */\n    #loader {\n      position: fixed;\n      top: 0; left:0; right:0; bottom:0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      background: #fff;\n      z-index: 1000;\n    }\n    /* spinner - simple CSS spinner */\n    .spinner {\n      border: 4px solid #eee;\n      border-top: 4px solid #3498db;\n      border-radius: 50%;\n      width: 48px;\n      height: 48px;\n      animation: spin 1s linear infinite;\n      margin-bottom: 0.5em;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg);}\n      100% { transform: rotate(360deg);}\n    }\n    /* Temporary placeholders for loading data */\n    .placeholder {\n      background: #ddd;\n      border-radius: 4px;\n      animation: pulse 1.5s infinite ease-in-out;\n    }\n    @keyframes pulse {\n      0%,100% {opacity: 1;}\n      50% {opacity: 0.4;}\n    }\n\n    /* Header */\n    header {\n      position: sticky;\n      top: 0;\n      background: white;\n      border-bottom: 1px solid #ccc;\n      display: flex;\n      align-items: center;\n      gap: 0.75rem;\n      padding: 0.5rem 1rem;\n      z-index: 10;\n    }\n\n    header .logo {\n      flex-shrink: 0;\n      width: 120px;\n      height: 40px;\n      background: #ccc; /* /* TODO: Replace with real logo image */ */\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n      font-size: 1.25rem;\n      color: #666;\n      user-select: none;\n    }\n\n    header input[type=\"search\"], header select {\n      padding: 0.4em 0.5em;\n      font-size: 1rem;\n      border: 1px solid #aaa;\n      border-radius: 4px;\n      flex-grow: 1;\n      min-width: 140px;\n    }\n\n    header button {\n      padding: 0.5em 1em;\n      border-radius: 4px;\n      border: none;\n      background: #3498db;\n      color: white;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.2s ease;\n    }\n    header button:hover {\n      background: #2573b5;\n    }\n    header .add-insurance-btn {\n      background: #2ecc71;\n      margin-left: auto;\n    }\n    header .add-insurance-btn:hover {\n      background: #239b4a;\n    }\n\n    /* ##### 2. Provider Section */\n    #providers {\n      padding: 1rem;\n      display: grid;\n      grid-template-columns: repeat(auto-fill,minmax(280px,1fr));\n      gap: 1rem;\n      background: #fff;\n      min-height: 300px;\n    }\n\n    /* Placeholder card skeleton */\n    .provider-card {\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      padding: 1rem;\n      background: white;\n      display: flex;\n      flex-direction: column;\n      gap: 0.5rem;\n      box-shadow: 0 1px 3px rgb(0 0 0 / 0.1);\n    }\n    .provider-photo.placeholder {\n      width: 100%;\n      aspect-ratio: 4/3;\n      background: #ddd;\n      border-radius: 6px;\n    }\n    .provider-name.placeholder,\n    .provider-rating.placeholder,\n    .provider-address.placeholder {\n      height: 1rem;\n      width: 70%;\n      background: #ddd;\n      border-radius: 2px;\n    }\n    .calendar-grid.placeholder {\n      margin-top: 0.5rem;\n      height: 60px;\n      background: #ddd;\n      border-radius: 4px;\n    }\n\n    /* ##### 3. Map Section */\n    #map {\n      margin-top: 1rem;\n      height: 350px;\n      background: #e5e5e5;\n      border-radius: 8px;\n      overflow: hidden;\n    }\n    #map > div, #map iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      display: block;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- ##### 1. Main Page -->\n  <div id=\"loader\" aria-live=\"polite\" aria-busy=\"true\">\n    <div class=\"spinner\" role=\"img\" aria-label=\"Loading spinner\"></div>\n    <div>Loading…</div>\n  </div>\n\n  <header>\n    <div class=\"logo\" aria-label=\"Logo placeholder\">Logo</div>\n    <input type=\"search\" placeholder=\"Condition, procedure, doctor name…\" aria-label=\"Search input\" />\n    <select aria-label=\"Location selector\">\n      <option value=\"\" disabled selected>City, State</option>\n      <!-- TODO: populate cities dynamically if needed -->\n      <option>New York, NY</option>\n      <option>Los Angeles, CA</option>\n      <option>Chicago, IL</option>\n    </select>\n    <button type=\"button\" class=\"add-insurance-btn\">Add insurance</button>\n    <button type=\"button\" id=\"search-btn\">Search</button>\n  </header>\n\n  <!-- ##### 2. Provider Section -->\n  <section id=\"providers\" aria-live=\"polite\" aria-label=\"Providers list\">\n    <!-- Placeholder skeleton card while data loads -->\n    <article class=\"provider-card\" aria-busy=\"true\">\n      <div class=\"provider-photo placeholder\" aria-hidden=\"true\"></div>\n      <div class=\"provider-name placeholder\" aria-hidden=\"true\"></div>\n      <div class=\"provider-rating placeholder\" aria-hidden=\"true\"></div>\n      <div class=\"provider-address placeholder\" aria-hidden=\"true\"></div>\n      <div class=\"calendar-grid placeholder\" aria-hidden=\"true\"></div>\n    </article>\n\n    <!-- TODO: insert provider cards here by JS fetching data from /webhook/... -->\n  </section>\n\n  <!-- ##### 3. Map Section -->\n  <section id=\"map\" aria-label=\"Provider locations map\">\n    <!-- Simple iframe placeholder, could swap with JS map lib div -->\n    <div id=\"map-container\">\n      <!-- TODO: insert map library container here (e.g. Leaflet or Google Maps) -->\n      <iframe src=\"https://maps.google.com/maps?q=usa&t=&z=4&ie=UTF8&iwloc=&output=embed\" \n       title=\"Map placeholder\" aria-hidden=\"true\"></iframe>\n    </div>\n  </section>\n\n  <script>\n    // Simulated JS to illustrate data fetch and map marker placement\n\n    async function fetchProviders() {\n      // TODO: Replace with your n8n webhook endpoint\n      // const res = await fetch('/webhook/your-endpoint');\n      // const data = await res.json();\n      // return data.providers;\n\n      // Simulated delay and data for demo\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve(${JSON.stringify(providers)});\n        }, 1000);\n      });\n    }\n\n    function createProviderCard(provider) {\n      const card = document.createElement('article');\n      card.className = 'provider-card';\n      card.innerHTML = \\`\n        <img src=\"\\${provider.photoUrl || 'https://via.placeholder.com/320x240?text=Photo'}\" alt=\"Photo of \\${provider.name}\" style=\"border-radius:6px;width:100%;aspect-ratio:4/3;object-fit:cover\" />\n        <h3>\\${provider.name}</h3>\n        <p>Rating: \\${provider.rating || 'N/A'}</p>\n        <p>\\${provider.address || 'Address not available'}</p>\n        <div class=\"calendar-grid\" aria-label=\"Available schedule for \\${provider.name}\">\n          <!-- TODO: render calendar grid here -->\n          <small>Availability calendar placeholder</small>\n        </div>\n      \\`;\n      return card;\n    }\n\n    function initMap(providers) {\n      // TODO: hook into the same n8n data source\n      // Replace the iframe with a real map, for example using Leaflet or Google Maps JS API\n\n      // Example (pseudo-code):\n      // const map = L.map('map-container').setView([39.8283, -98.5795], 4);\n      // L.tileLayer(...).addTo(map);\n      // providers.forEach(p => {\n      //   if(p.lat && p.lng) L.marker([p.lat, p.lng]).addTo(map).bindPopup(p.name);\n      // });\n\n      // For now, just log:\n      console.log('Map markers to be added for providers:', providers);\n    }\n\n    async function main() {\n      const loader = document.getElementById('loader');\n      const providersSection = document.getElementById('providers');\n\n      const data = await fetchProviders();\n\n      // Clear placeholders\n      providersSection.innerHTML = '';\n\n      if(data.length === 0) {\n        providersSection.innerHTML = '<p>No providers found.</p>';\n      } else {\n        data.forEach(provider => {\n          const card = createProviderCard(provider);\n          providersSection.appendChild(card);\n        });\n      }\n\n      initMap(data);\n\n      loader.style.display = 'none';\n    }\n\n    window.addEventListener('load', main);\n  </script>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        400
      ],
      "id": "04ab12ef-294d-4f13-aef9-33003c422ef3",
      "name": "Code1"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-04-29T20:11:07.108Z",
  "versionId": "822a49a0-a53f-41fe-98d6-50576b5a01b1"
}