{
  "active": true,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Read PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If After Today",
            "type": "main",
            "index": 0
          },
          {
            "node": "Date & Time2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time2": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code Days Until Appointment",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "NocoDB Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Status Scheduled": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time3": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time4": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "HTTP Blue Sky Appointments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If After Today": {
      "main": [
        [
          {
            "node": "If Status Scheduled",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Blue Sky Appointments": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time5": {
      "main": [
        [
          {
            "node": "Date & Time4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Days Until Appointment": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NocoDB Message": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Twilio": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Send SMS": {
      "main": [
        [
          {
            "node": "Twilio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token": {
      "main": [
        [
          {
            "node": "Extract PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token": {
      "main": [
        [
          {
            "node": "Check Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "IF PM Token Valid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid": {
      "main": [
        [
          {
            "node": "Read PM Token1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Read PM Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token1": {
      "main": [
        [
          {
            "node": "Extract PM Token1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          },
          {
            "node": "Date & Time5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Date & Time3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "If Send SMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-22T17:52:53.210Z",
  "id": "9Im1keCckiaq1i0Z",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Blue Sky Automated Reminders",
  "nodes": [
    {
      "parameters": {},
      "id": "2258abfe-2ab5-4b25-809e-45db1cb57b33",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -288,
        1000
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "74116e8c-c90f-4896-ba8e-5ecccdf977ad",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -88,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "yyyy-MM-dd",
        "options": {}
      },
      "id": "f8a8fe89-77a3-4131-b3b9-4802a3296075",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        72,
        1000
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e6e1d780-c45e-4235-a99e-5f0a97779624",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2000,
        1280
      ]
    },
    {
      "parameters": {},
      "id": "42adad03-0d51-4fb2-aa5e-e164cf0846bc",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2220,
        1600
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.getscheduleinfo.ApptTime2 }}",
        "format": "MM-dd-yyyy",
        "options": {}
      },
      "id": "cde7336f-c906-4b0a-9266-e6bcf6511861",
      "name": "Date & Time2",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        2220,
        1180
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "8b974747-e684-4cb5-9720-3daae3afa568",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2620,
        1340
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "3f0e0d38-1838-4259-9483-2e9289f3d879",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2960,
        1320
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "getscheduleinfo",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "9d431157-44e2-4899-b8b8-a50bee05a897",
      "name": "Split Out1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1800,
        1280
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "# Blue Sky Appointment by location\n\n## Can add multiple by abbr | abbr",
        "height": 455.7513211144958,
        "width": 608.3494282802835,
        "color": 5
      },
      "id": "bf8669b7-696b-4e3c-aa85-107d7faf5c2a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1540,
        1000
      ]
    },
    {
      "parameters": {
        "content": "# Start",
        "height": 379.9571366757016,
        "width": 627.0411884194559,
        "color": 4
      },
      "id": "bc1551f1-b7a7-491b-b5f7-1e26fefcd459",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        771
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "08403d37-be2c-4cfa-bbb9-ffde2c467aed",
              "leftValue": "={{ $json.getscheduleinfo.Status }}",
              "rightValue": "S",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "51ce5fad-69f9-4099-81a6-0a14016581ee",
      "name": "If Status Scheduled",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2420,
        1360
      ]
    },
    {
      "parameters": {
        "content": "# Qualify Appointment",
        "height": 511.31456362066797,
        "width": 552.2796121072605
      },
      "id": "491dbf23-a562-4612-aa6d-7d913ae4ce2a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2188.4033398766246,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $('Date & Time').item.json.currentDate }}",
        "outputFieldName": "currentDate",
        "options": {}
      },
      "id": "d38ec470-e720-4447-bbcd-aa70ec44bc91",
      "name": "Date & Time3",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1000,
        1000
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "3f0e57a5-09f1-4872-9c73-d05a6edda6f1",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1240,
        1020
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json[\"futureDate\"] }}",
        "outputFieldName": "futureDate",
        "options": {}
      },
      "id": "972989de-e36a-4377-94c0-48fc87409b05",
      "name": "Date & Time4",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1160,
        1200
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "e9ffac25-2b72-40d5-94f2-4718e4404ee1",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1380,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b5489633-926b-4d3a-b6b7-077ee6855187",
              "leftValue": "={{ $json.getscheduleinfo.ApptTime2 }}",
              "rightValue": "={{ $('Date & Time1').item.json.formattedDate }}",
              "operator": {
                "type": "dateTime",
                "operation": "afterOrEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "53e84c4a-216f-4cba-9749-07ac816d6d2f",
      "name": "If After Today",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2220,
        1360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Action",
              "value": "GetSchedule"
            },
            {
              "name": "AppUserID",
              "value": "HEROERP"
            },
            {
              "name": "Appname",
              "value": "EPICPC.NMNWokflow.TestApp"
            },
            {
              "name": "Token",
              "value": "={{ $json.data }}"
            },
            {
              "name": "Parameter1",
              "value": "={{ $json[\"currentDate\"] }}|{{ $json[\"futureDate\"] }}"
            },
            {
              "name": "Parameter2",
              "value": "="
            },
            {
              "name": "Parameter3",
              "value": "BS"
            },
            {
              "name": "Parameter4"
            },
            {
              "name": "Parameter5"
            },
            {
              "name": "Parameter6",
              "value": "Active"
            },
            {
              "name": "Data"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "bae34f6b-7a33-40a8-8186-4bbc254bb621",
      "name": "HTTP Blue Sky Appointments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1600,
        1280
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "addToDate",
        "magnitude": "={{ $('Date & Time').item.json.currentDate }}",
        "duration": 60,
        "outputFieldName": "futureDate",
        "options": {}
      },
      "id": "72f477aa-f0db-409d-862c-ae1315ebd73d",
      "name": "Date & Time5",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1000,
        1200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Define the future date\nconst futureDate = new Date($json.getscheduleinfo.ApptTime2);\n\n// Get the current date\nconst currentDate = new Date();\n\n// Calculate the difference in milliseconds\nconst differenceInMilliseconds = futureDate - currentDate;\n\n// Convert the difference to days\nconst differenceInDays = Math.ceil(differenceInMilliseconds / (1000 * 60 * 60 * 24));\n\n// Return the result\nreturn [{ json: { daysUntilAppointment: differenceInDays } }];\n"
      },
      "id": "ea9a4a36-9e2e-4d08-b5f9-ffe980218776",
      "name": "Code Days Until Appointment",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2780,
        1260
      ]
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pysbx6fvsyde3st",
        "table": "mkezv951pd12r8w",
        "returnAll": true,
        "options": {
          "where": "=(Abbreviation,eq,{{ $json[\"getscheduleinfo\"][\"appttype\"] }})~and(DaysPrior,eq,{{ $json[\"daysUntilAppointment\"] }})"
        }
      },
      "id": "26ab1c1d-adac-443d-aef0-6d58109bdf94",
      "name": "NocoDB Message",
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        3140,
        1180
      ],
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "zd060BM2p9Jgj1wN",
          "name": "PowerAccount"
        }
      }
    },
    {
      "parameters": {
        "from": "+1844 844 4412",
        "to": "=+1{{ $json.getscheduleinfo.Patient_Cell_Phone }}",
        "toWhatsapp": "=",
        "message": "={{ $json.Message }}",
        "options": {}
      },
      "id": "cfd7f01b-22e3-46e3-9e24-ffa39a6ed1ae",
      "name": "Twilio",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        4160,
        1346
      ],
      "credentials": {
        "twilioApi": {
          "id": "UC7eFoliSFqVPETZ",
          "name": "Twilio Account EPIC"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "17e935fa-f98e-4719-9e8e-67c6a3f5dedf",
              "leftValue": "={{ $json.Message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6fdbf26b-261b-48f0-9b46-9736c7ccd66c",
      "name": "If Send SMS",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3920,
        1306
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "46931b13-2529-4724-a59b-967406b9c02a",
              "name": "Message",
              "value": "={{ $json.Message.replaceAll('[date]', $json.formattedDate) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "56631b5d-e51b-4f14-958a-f3f920695353",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3480,
        1180
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "1e5ecfed-5486-4030-a4e3-f9a6e0ae331d",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3300,
        1040
      ]
    },
    {
      "parameters": {
        "content": "# Current date and Future date (30 days out)",
        "height": 616.3224183222834,
        "width": 552.2796121072605
      },
      "id": "204cb446-354e-40fb-8ff2-2a28a398dc89",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        960,
        834.9921452983846
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "id": "f291b12c-a752-4ee0-93cf-267c87b70e66",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -280,
        860
      ]
    },
    {
      "parameters": {
        "content": "# Message to send",
        "height": 501.79027216604254,
        "width": 1052.5912633800672,
        "color": 6
      },
      "id": "58e63f3a-c9f3-4227-ba8c-8c12781e93b9",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2760,
        1008.8152126688778
      ]
    },
    {
      "parameters": {
        "content": "# Send SMS",
        "height": 320.84416664704173,
        "width": 398.80816453758547,
        "color": 4
      },
      "id": "b423adf8-4bf2-4ad8-8b08-3377fc8ba18e",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3900,
        1200
      ]
    },
    {
      "parameters": {
        "content": "## Bitrix24 Outbound webhook automation\n\n//Event\nOutbound webhook\n//ExecutionIn \nparallel\n//Time\nImmediately\n//Condition\n  //None\n//Webhook\nhttps://xl.epicpc.com/webhook/5d8f2d10-2f14-4ecf-ba2c-21ddec07e9a6?id={{ID}}&name={{Name}}&bucket={{Status}}&groupid={{Group (Project) (ID)}}&bucket=7&email={{Tags}}&message={{Description}}\n",
        "height": 341,
        "width": 681,
        "color": 7
      },
      "id": "b4b886b6-d813-4519-b650-dcf093ac0612",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1460,
        80
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://bsb.bitrix24.com/rest/41/q1peh1vh95hch7og/tasks.task.add.json",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"fields\": {\n       \"TITLE\": \"Automated Reminder\",\n       \"GROUP_ID\": \"33\",\n       \"RESPONSIBLE_ID\": \"41\",\n       \"DESCRIPTION\": \"Test {{'\\\\n'}} Description\",\n\"TAGS\": [\"TagTest\"]\n   }\n}",
        "options": {}
      },
      "id": "e432f334-f1a4-48fe-b1da-204ec49acb5f",
      "name": "HTTP Request4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1960,
        140
      ]
    },
    {
      "parameters": {
        "fileSelector": "/home/node/pmtoken.txt",
        "options": {}
      },
      "id": "85432ecf-4de3-4889-9d3d-564b3417718c",
      "name": "Read PM Token",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -300,
        1300
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "ec73d39d-f44c-4aa8-9e7b-d3e699e851dc",
      "name": "Extract PM Token",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -160,
        1300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"HEROERP\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"Fwuser#12345\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "cae6eabe-7c91-4621-82dc-51efd3bb2f17",
      "name": "Check Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        20,
        1300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "fe0eaa10-d33a-4e8b-98b0-0073442483c5",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "a1044643-e6b5-4166-96d0-06ab9e589ee5",
      "name": "IF PM Token Valid",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        300,
        1300
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "4919a569-55b8-409d-a3c3-bc4f2febd68e",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        460,
        1400
      ],
      "webhookId": "68208181-d1f9-48be-aa40-c046f9fecefa"
    },
    {
      "parameters": {
        "content": "# ASPM Authentication",
        "height": 373.491094826977,
        "width": 1273.589504056921,
        "color": 4
      },
      "id": "b81a0778-097c-4059-a78c-b4895ce38df1",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        1200
      ]
    },
    {
      "parameters": {
        "fileSelector": "pmtoken.txt",
        "options": {}
      },
      "id": "bfd1cab3-2397-4be3-8c92-264e0bb76140",
      "name": "Read PM Token1",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        600,
        1280
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "a2dcf402-3f48-48bf-a2ec-2084acb84c4c",
      "name": "Extract PM Token1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        740,
        1280
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "5b5fc48a-33d8-4a66-b8e7-942f750b85ae",
      "name": "Merge5",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3680,
        1300
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [],
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-07-08T17:38:55.591Z",
      "updatedAt": "2024-07-08T17:38:55.591Z",
      "id": "FD2jDQ4ashwE4ESm",
      "name": "Ricky"
    },
    {
      "createdAt": "2024-06-01T20:41:48.993Z",
      "updatedAt": "2024-06-01T20:41:48.993Z",
      "id": "N7jx3FSOuxvAbK8V",
      "name": "Thomas"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-08-16T17:33:38.574Z",
  "versionId": "8ba863cd-9afa-4c50-b7fa-12e229841688"
}