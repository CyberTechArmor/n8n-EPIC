{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Microsoft SQL4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify Room": {
      "main": [
        []
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        []
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Microsoft SQL2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Microsoft SQL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook4": {
      "main": [
        [
          {
            "node": "Respond to Webhook5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook5": {
      "main": [
        [
          {
            "node": "Respond to Webhook6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook6": {
      "main": [
        [
          {
            "node": "Respond to Webhook7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL1": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Respond to Webhook9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "Microsoft SQL3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL3": {
      "main": [
        [
          {
            "node": "Respond to Webhook12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Confirm": {
      "main": [
        [
          {
            "node": "Respond to Webhook18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Confirm1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token3": {
      "main": [
        [
          {
            "node": "Extract PM Token3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token3": {
      "main": [
        [
          {
            "node": "Check Token2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token2": {
      "main": [
        [
          {
            "node": "Code71",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF PM Token Valid2": {
      "main": [
        [
          {
            "node": "Read PM Token22",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PM Token22": {
      "main": [
        [
          {
            "node": "Extract PM Token22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PM Token22": {
      "main": [
        [
          {
            "node": "Edit Fields16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "USER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields16": {
      "main": [
        [
          {
            "node": "Merge16",
            "type": "main",
            "index": 1
          },
          {
            "node": "Merge17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "USER": {
      "main": [
        [
          {
            "node": "Read PM Token3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code71": {
      "main": [
        [
          {
            "node": "IF PM Token Valid2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Patient by Phone Number": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge16": {
      "main": [
        [
          {
            "node": "HTTP Confirm1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Merge16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "Code76",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook6": {
      "main": [
        [
          {
            "node": "USER",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge17",
            "type": "main",
            "index": 1
          },
          {
            "node": "Date & Time2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge17": {
      "main": [
        [
          {
            "node": "Merge18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code72": {
      "main": [
        [
          {
            "node": "Merge18",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge18": {
      "main": [
        [
          {
            "node": "HTTP Confirm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields17": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code76": {
      "main": [
        [
          {
            "node": "Respond to Webhook16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook4": {
      "main": [
        [
          {
            "node": "USER",
            "type": "main",
            "index": 0
          },
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time2": {
      "main": [
        [
          {
            "node": "Code72",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL4": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL5": {
      "main": [
        [
          {
            "node": "Respond to Webhook20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook7": {
      "main": [
        [
          {
            "node": "Microsoft SQL5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instant Visit": {
      "main": [
        [
          {
            "node": "Call Parse-RefererURL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Record1": {
      "main": [
        [
          {
            "node": "Crypto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Parse-RefererURL": {
      "main": [
        [
          {
            "node": "Microsoft SQL6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL7": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Crypto3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          },
          {
            "node": "Provider Moderator Link3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Crypto3": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto2": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto4": {
      "main": [
        [
          {
            "node": "Respond to Webhook25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Manual Record1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Manual Record1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Provider Moderator Link3": {
      "main": [
        [
          {
            "node": "Crypto5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto5": {
      "main": [
        []
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LDAP": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "LDAP",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LDAP1": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Unlock",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unlock": {
      "main": [
        [
          {
            "node": "Limit2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL8": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "Respond to Webhook26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "LDAP1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL6": {
      "main": [
        [
          {
            "node": "Sort1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit2": {
      "main": [
        [
          {
            "node": "Microsoft SQL8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort1": {
      "main": [
        [
          {
            "node": "Limit3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Call Parse-RefererURL1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Find Patient by Phone Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Parse-RefererURL1": {
      "main": [
        [
          {
            "node": "Microsoft SQL9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft SQL9": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Find Patient by Phone Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-21T15:45:38.797Z",
  "id": "iPqGoP1LzGfITtWI",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Room Tablets - Scheduling",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "--DECLARE @MRN VARCHAR(10) = '{{ $json.query.mrn }}';\nDECLARE @MRN VARCHAR(10) = '498790';\nDECLARE @APPTDATE DATE = '2025-05-21';\n--DECLARE @APPTDATE DATE = '{{ $json.formattedDate }}';\n \nselect top 25 s.DEM_EXTERNALID as MRN,s.IMREDEM_CODE,lr.LOCATION_ID,s.LOCATION_NAME,lr.ROOM_ID,lr.ROOM_ABBR_TEXT,lr.ROOM_TEXT,s.CAREGIVER_NAME,s.SCHED_DATE,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,s.SCHED_STATUS\nfrom [HPSITE].[SCHEDULE_VIEW] s \nleft join [EMR].[HPSITE].[SCHEDULE_TRACKINGSTATUS] t on s.IMRESCHED_CODE=t.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=t.TRACKINGSTATUS_ID\nleft join [EMR].[HPSITE].[DEMOGRAPHICS] d on d.IMREDEM_CODE=s.IMREDEM_CODE\nleft join [EMR].[HPSITE].[LOCATION_ROOM] lr on lr.LOCATION_ID=s.LOCATION_ID and lr.ROOM_ID=s.ROOM_ID\nWHERE S.DEM_EXTERNALID = @MRN AND CAST(S.SCHED_DATE AS DATE) = @APPTDATE\nORDER BY S.SCHED_DATE DESC"
      },
      "id": "f8057521-9d51-46e1-9ab6-0424ac34e205",
      "name": "Identify Room",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        -20,
        -480
      ],
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "path": "9635c884-df57-4076-9d04-e32de5c22829",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -200,
        -80
      ],
      "id": "513fb416-4462-441f-9a34-db6578bf0d54",
      "name": "Webhook",
      "webhookId": "9635c884-df57-4076-9d04-e32de5c22829"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" />\n  <style>\n    :root {\n      --overlay-bg: rgba(0, 0, 0, 0.85);\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --bar-bg: #303030;\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n    }\n\n    /* Overlay covering whole viewport */\n    .dark-overlay {\n      position: fixed;\n      inset: 0;\n      background: var(--overlay-bg);\n      display: flex;\n      z-index: 1000;\n      color: #fff;\n      user-select: none;\n      transition: all 0.35s ease;\n      overflow: hidden;\n    }\n\n    /* Shrunk overlay style for top bar */\n    .dark-overlay.shrunk {\n      height: 56px;\n      width: 100%;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: auto;\n      background: var(--bar-bg);\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n    }\n\n    /* Left side occupies 50%, large button */\n    .overlay-left {\n      flex: 1;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 2rem;\n      border-right: 1px solid rgba(255, 255, 255, 0.15);\n      transition: all 0.35s ease;\n      /* Ensure full height for buttons */\n      height: 100%;\n      box-sizing: border-box;\n    }\n\n    /* On shrunk, left panel shrinks horizontally and padding reduced */\n    .dark-overlay.shrunk .overlay-left {\n      padding: 0;\n      border-right: none;\n      flex: 0 0 auto;\n      width: 100%;\n      height: 100%;\n      justify-content: center;\n    }\n\n    /* Right side occupies 50%, two stacked buttons */\n    .overlay-right {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding: 2rem;\n      gap: 1rem;\n      transition: all 0.35s ease;\n      height: 100%;\n      box-sizing: border-box;\n    }\n\n    /* On shrunk, right panel hides */\n    .dark-overlay.shrunk .overlay-right {\n      display: none;\n    }\n\n    /* Buttons have same font size (large and uniform) */\n    button {\n      font-size: 1.75rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      box-shadow: 0 4px 8px rgb(0 0 0 / 0.3);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      user-select: none;\n      transition: background 0.3s ease, color 0.3s ease;\n      padding: 0.5rem 1rem;\n      /* Make buttons fill their container height & width */\n      width: 100%;\n      height: 100%;\n      line-height: 1.2;\n    }\n\n    /* Manual Checkout button: black background, white text */\n    #btnManualCheckout {\n      background: #000;\n      color: #fff;\n    }\n    #btnManualCheckout:hover,\n    #btnManualCheckout:focus {\n      background: #222;\n      outline: none;\n    }\n\n    /* Checkout with Clark and Lois buttons: orange background, black text */\n    #btnCheckoutClark,\n    #btnCheckoutLois {\n      background: var(--orange);\n      color: #000;\n      flex: 1;\n      min-height: auto;\n      max-height: 100%;\n    }\n    #btnCheckoutClark:hover,\n    #btnCheckoutClark:focus,\n    #btnCheckoutLois:hover,\n    #btnCheckoutLois:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n\n    /* Start Over button shown only in shrunk overlay */\n    #btnStartOver {\n      background: var(--green);\n      color: white;\n      font-size: 1.75rem;\n      font-weight: 600;\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      box-shadow: 0 4px 8px rgb(0 0 0 / 0.3);\n      display: none;\n      justify-content: center;\n      align-items: center;\n      user-select: none;\n      padding: 0.5rem 1rem;\n      width: auto;\n      height: 40px;\n      min-width: 160px;\n      transition: background 0.3s ease, color 0.3s ease;\n    }\n    /* Show start over button when overlay is shrunk */\n    .dark-overlay.shrunk #btnStartOver {\n      display: flex;\n    }\n    #btnStartOver:hover,\n    #btnStartOver:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n\n    /* Frame container - fills whole viewport behind overlay */\n    .content {\n      position: absolute;\n      inset: 0;\n      overflow: hidden;\n      z-index: 0;\n    }\n\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n    }\n\n    /* Loader overlay remains unchanged */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Dark overlay with split left/right -->\n  <div class=\"dark-overlay\" role=\"region\" aria-label=\"Checkout options\">\n    <div class=\"overlay-left\">\n      <!-- Manual Checkout button -->\n      <button id=\"btnManualCheckout\" type=\"button\">Manual Checkout</button>\n      <!-- Start Over button - hidden until shrunk -->\n      <button id=\"btnStartOver\" type=\"button\" aria-hidden=\"true\">Start Over</button>\n    </div>\n    <div class=\"overlay-right\">\n      <button id=\"btnCheckoutClark\" type=\"button\">Checkout with Clark</button>\n      <button id=\"btnCheckoutLois\" type=\"button\">Checkout with Lois</button>\n    </div>\n  </div>\n\n  <main class=\"content\">\n    <iframe id=\"patientFrame\" title=\"Patient Frame\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" aria-live=\"assertive\" aria-busy=\"true\" aria-label=\"Loading\"></div>\n  </main>\n\n  <script>\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n\n    /* Mini HTML page so the image fills the whole frame, never scrolls */\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\n        `<!DOCTYPE html><html><head><meta charset=\"utf-8\"> <style>html,body{margin:0;height:100%;background:#000;overflow:hidden} img{width:100%;height:100%;object-fit:contain}</style></head> <body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`\n      );\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const overlay = document.querySelector(\".dark-overlay\");\n\n    const btnManualCheckout = document.getElementById(\"btnManualCheckout\");\n    const btnCheckoutClark = document.getElementById(\"btnCheckoutClark\");\n    const btnCheckoutLois = document.getElementById(\"btnCheckoutLois\");\n    const btnStartOver = document.getElementById(\"btnStartOver\");\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n    });\n\n    /* Initial state */\n    frame.src = placeholderPage;\n\n    function manualCheckout() {\n      showLoader();\n      overlay.classList.add(\"shrunk\");\n\n      // Load the \"checkPatientOut\" webhook — the manual checkout action per your original code\n      frame.src = webhookBase + \"?action=checkPatientOut&_=\" + Date.now();\n    }\n\n    function checkoutClark() {\n      showLoader();\n      frame.src = placeholderPage;\n      fetch(webhookBase + \"?action=checkoutClark\", { mode: \"no-cors\" }).catch(() => {});\n      overlay.style.display = \"none\";\n    }\n\n    function checkoutLois() {\n      showLoader();\n      frame.src = placeholderPage;\n      fetch(webhookBase + \"?action=checkoutLois\", { mode: \"no-cors\" }).catch(() => {});\n      overlay.style.display = \"none\";\n    }\n\n    function startOver() {\n      showLoader();\n\n      // Reset iframe to placeholder\n      frame.src = placeholderPage;\n\n      // Show overlay full again\n      overlay.classList.remove(\"shrunk\");\n      overlay.style.display = \"flex\";\n\n      // Wait for iframe to load, loader will hide automatically\n    }\n\n    btnManualCheckout.addEventListener(\"click\", manualCheckout);\n    btnCheckoutClark.addEventListener(\"click\", checkoutClark);\n    btnCheckoutLois.addEventListener(\"click\", checkoutLois);\n    btnStartOver.addEventListener(\"click\", startOver);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1420,
        -420
      ],
      "id": "a3012d9a-2ac3-404f-84b8-57544095aa21",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.currentDate }}",
        "format": "yyyy-MM-dd",
        "options": {}
      },
      "id": "f10e4033-96f2-4ad2-b66a-cbe375cedeb9",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        300,
        180
      ]
    },
    {
      "parameters": {
        "includeTime": false,
        "options": {}
      },
      "id": "5d91af35-fa29-43d2-8625-848e994811b1",
      "name": "Date & Time1",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        100,
        180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -120,
        180
      ],
      "id": "6bfd2702-4fba-4280-86eb-37295e766b2b",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "=https://xl.epicpc.com/webhook/b4264e0e-085f-49c0-9471-1009eafa4ce01?fullName={{ $json.PATIENT_FIRSTNAME }}%2B{{ $json.PATIENT_LASTNAME }}&patientId={{ $json.DEM_EXTERNALID }}&caretype=DCARE&Location={{ $json.LOCATION_NAME }}&room={{ $json.ROOM_ABBR_TEXT }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3160,
        -460
      ],
      "id": "0282a4c1-48d5-4d48-8de2-be08821c9f25",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "path": "b682d55d-0785-49c3-ae32-cf28a94dc821",
        "responseMode": "=responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1680,
        -140
      ],
      "id": "6a995bd4-29ec-454d-824f-9d2713a89e9b",
      "name": "Webhook1",
      "webhookId": "b682d55d-0785-49c3-ae32-cf28a94dc821"
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2680,
        0
      ],
      "id": "5916c3e5-d37e-4d08-afce-b0a12b42d915",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e45036e1-d7f8-42ed-8a33-5a58ad5211fa",
              "leftValue": "={{ $json.query.action }}",
              "rightValue": "getRoomedPatient",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2240,
        -140
      ],
      "id": "fa07de04-0222-4466-b4e1-8b899815676c",
      "name": "If"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\">\n\n  <style>\n    :root{\n      --bar-bg:       #303030;\n      --green:        #2ecc71;\n      --green-d:      #28b463;\n      --orange:       #ff9800;\n      --orange-d:     #ef6c00;\n    }\n\n    *{box-sizing:border-box;margin:0;padding:0;font-family:\"Inter\",Arial,sans-serif;}\n    html,body{height:100%;width:100%;}\n\n    /* ── Top bar ─────────────────────────── */\n    .top-bar{\n      background:var(--bar-bg);\n      display:flex;\n      align-items:center;\n      gap:1rem;\n      padding:.75rem 1.25rem;\n      box-shadow:0 2px 4px rgba(0,0,0,.3);\n    }\n    .epic-btn{\n      border:none;border-radius:4px;\n      padding:.6rem 1.2rem;\n      font-size:1rem;font-weight:600;\n      color:#fff;cursor:pointer;\n      transition:background .25s ease;\n    }\n    .btn-green{background:var(--green);}\n    .btn-green:hover,.btn-green:focus{background:var(--green-d);}\n    .btn-orange{background:var(--orange);}\n    .btn-orange:hover,.btn-orange:focus{background:var(--orange-d);}\n    .epic-btn:focus{outline:none;}\n\n    /* ── Frame container ─────────────────── */\n    .content{\n      position:absolute;top:56px;left:0;right:0;bottom:0;\n      overflow:hidden;\n    }\n    iframe{\n      width:100%;height:100%;border:none;\n    }\n\n    /* ── Loader overlay ──────────────────── */\n    .loader{\n      position:absolute;inset:0;\n      display:flex;justify-content:center;align-items:center;\n      background:rgba(255,255,255,.6);\n      z-index:10;\n    }\n    .loader.hidden{display:none;}\n    .loader::after{\n      content:'';\n      width:48px;height:48px;\n      border:6px solid #bbb;\n      border-top-color:#333;\n      border-radius:50%;\n      animation:spin 1s linear infinite;\n    }\n    @keyframes spin{to{transform:rotate(360deg);}}\n  </style>\n</head>\n<body>\n  <header class=\"top-bar\">\n    <button id=\"btnRoom\"     class=\"epic-btn btn-green\">Get&nbsp;Roomed&nbsp;Patient</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\">Check&nbsp;Patient&nbsp;Out</button>\n  </header>\n\n  <main class=\"content\">\n    <iframe id=\"patientFrame\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\"></div>\n  </main>\n\n  <script>\n    const webhookBase      = 'https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821';\n    const placeholderImage = 'https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png';\n\n    /* Mini HTML page so the image fills the whole frame, never scrolls */\n    const placeholderPage = 'data:text/html;charset=utf-8,' + encodeURIComponent(`\n      <!DOCTYPE html><html><head><meta charset=\"utf-8\">\n      <style>html,body{margin:0;height:100%;background:#000;overflow:hidden}\n      img{width:100%;height:100%;object-fit:contain}</style></head>\n      <body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame  = document.getElementById('patientFrame');\n    const loader = document.getElementById('loader');\n\n    function showLoader(){ loader.classList.remove('hidden'); }\n    function hideLoader(){ loader.classList.add('hidden'); }\n\n    /* Hide loader once any navigation completes */\n    frame.addEventListener('load', hideLoader);\n\n    /* Initial state */\n    frame.src = placeholderPage;\n\n    /* ── Button actions ─────────────────── */\n    function getRoomedPatient(){\n      showLoader();\n      frame.src = webhookBase + '?action=getRoomedPatient&_=' + Date.now();\n    }\n\n    function checkPatientOut(){\n      showLoader();\n      /* optional background ping */\n      fetch(webhookBase + '?action=checkPatientOut', { mode:'no-cors' })\n        .catch(()=>{});             // ignore CORS errors\n      frame.src = placeholderPage;  // reset view\n    }\n\n    document.getElementById('btnRoom')    .addEventListener('click', getRoomedPatient);\n    document.getElementById('btnCheckOut').addEventListener('click', checkPatientOut);\n  </script>\n</body>\n</html>\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        960,
        -20
      ],
      "id": "a4b68c6a-83ad-4455-91ee-8c167ca84985",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Quick Scheduler\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Base URLs for webhooks\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n    const checkoutWebhookBase = \"https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet\";\n\n    // Placeholder page (same as before)\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    // Store the patientId returned by \"Quick Scheduler\"\n    let currentPatientId = null;\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Quick Scheduler button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n\n      // Fetch the JSON response to extract patientId\n      fetch(url)\n        .then(response => {\n          // Attempt to parse JSON\n          return response.json().catch(() => {\n            throw new Error(\"Response was not valid JSON.\");\n          });\n        })\n        .then(data => {\n          if (data.patientId) {\n            currentPatientId = data.patientId;\n          } else {\n            alert(\"Patient ID not received from Quick Scheduler response.\");\n          }\n          // Regardless, load the iframe with the same URL\n          frame.src = url;\n          addToHistory(url);\n        })\n        .catch(err => {\n          console.error(err);\n          alert(\"Error fetching patient ID: \" + err.message);\n          // Fallback: still load the iframe even if JSON parsing failed\n          frame.src = url;\n          addToHistory(url);\n        });\n    }\n\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Checkout Patient button behavior (top bar only)\n    // Calls the new webhook with patientId\n    function checkOutPatient() {\n      if (!currentPatientId) {\n        alert(\"Patient ID not available. Cannot check out.\");\n        return;\n      }\n      showLoader();\n      const checkoutUrl =\n        checkoutWebhookBase + \"?patientId=\" + encodeURIComponent(currentPatientId);\n      // Fire the checkout webhook (no-cors as before)\n      fetch(checkoutUrl, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a short delay so webhook can fire\n      setTimeout(() => {\n        window.location.href =\n          window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        800,
        -200
      ],
      "id": "1bcf419b-950f-4e4b-8e8a-09ae2146ae25",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\">\n  <style>\n    :root{\n      --bar-bg:       #303030;\n      --green:        #2ecc71;\n      --green-d:      #28b463;\n      --orange:       #ff9800;\n      --orange-d:     #ef6c00;\n      --dark-blue:    #003366;\n      --dark-blue-d:  #002244;\n    }\n    *{box-sizing:border-box;margin:0;padding:0;font-family:\"Inter\",Arial,sans-serif;}\n    html,body{height:100%;width:100%;}\n    /* ── Top bar ─────────────────────────── */\n    .top-bar{\n      background:var(--bar-bg);\n      display:flex;\n      align-items:center;\n      justify-content: space-between;\n      padding:.75rem 1.25rem;\n      box-shadow:0 2px 4px rgba(0,0,0,.3);\n      position: relative;\n    }\n    /* We will absolutely position the middle button in the center */\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n\n    .epic-btn{\n      border:none;\n      border-radius:4px;\n      padding:.6rem 1.2rem;\n      font-size:1rem;\n      font-weight:600;\n      cursor:pointer;\n      transition: background .25s ease, color .25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: current orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ─────────────────── */\n    .content{\n      position:absolute;top:56px;left:0;right:0;bottom:0;\n      overflow:hidden;\n    }\n    iframe{\n      width:100%;height:100%;border:none;\n    }\n    /* ── Loader overlay ──────────────────── */\n    .loader{\n      position:absolute;inset:0;\n      display:flex;justify-content:center;align-items:center;\n      background:rgba(255,255,255,.6);\n      z-index:10;\n    }\n    .loader.hidden{display:none;}\n    .loader::after{\n      content:'';\n      width:48px;height:48px;\n      border:6px solid #bbb;\n      border-top-color:#333;\n      border-radius:50%;\n      animation:spin 1s linear infinite;\n    }\n    @keyframes spin{to{transform:rotate(360deg);}}\n  </style>\n</head>\n<body>\n  <header class=\"top-bar\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Manual&nbsp;Checkout</button>\n    <button id=\"btnVirtualClark\"  class=\"epic-btn btn-dark-blue\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\"      class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <main class=\"content\">\n    <iframe id=\"patientFrame\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\"></div>\n  </main>\n  <script>\n    // Current webhook URLs:\n    const webhookBase = 'https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821';\n    // Placeholder for Virtual Clark (example)\n    const webhookVirtualClark = 'https://placeholder.webhook/virtual-clark';\n\n    const placeholderImage = 'https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png';\n    const placeholderPage = 'data:text/html;charset=utf-8,' + encodeURIComponent(`\n      <!DOCTYPE html><html><head><meta charset=\"utf-8\">\n      <style>html,body{margin:0;height:100%;background:#000;overflow:hidden}\n      img{width:100%;height:100%;object-fit:contain}</style></head>\n      <body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame  = document.getElementById('patientFrame');\n    const loader = document.getElementById('loader');\n\n    function showLoader(){ loader.classList.remove('hidden'); }\n    function hideLoader(){ loader.classList.add('hidden'); }\n    frame.addEventListener('load', hideLoader);\n\n    // Helper to get current URL params and format as query string (without leading \"?\")\n    function getCurrentParamsString() {\n      // Keep only location, room, or any others from current url params\n      const params = new URLSearchParams(window.location.search);\n      // For explicitness, let's pick only certain keys if needed:\n      // But user said \"any of the current url prams\", so take them all.\n      return params.toString();\n    }\n\n    // Builds URL with action param + current params (if any)\n    // Ensures to merge/append params correctly\n    function buildUrl(base, action) {\n      const currentParams = getCurrentParamsString();\n      // Start with base url and ?action=...\n      let url = base + '?action=' + encodeURIComponent(action);\n      // Append other params if exist\n      if(currentParams) {\n        // For neatness, avoid dup action param if exists in current params\n        let paramsWithoutAction = new URLSearchParams(currentParams);\n        paramsWithoutAction.delete('action');\n        const restParams = paramsWithoutAction.toString();\n        if(restParams) url += '&' + restParams;\n      }\n      // Add nonce to prevent caching\n      url += '&_=' + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Button actions:\n\n    // Left: Manual Checkout (use main webhook + action=manualCheckout)\n    function manualCheckout(){\n      showLoader();\n      const url = buildUrl(webhookBase, 'manualCheckout');\n      frame.src = url;\n    }\n\n    // Middle: Virtual Clark (use placeholder webhook + action=virtualClark)\n    function virtualClark(){\n      showLoader();\n      let url = webhookVirtualClark + '?action=virtualClark';\n      const currentParams = getCurrentParamsString();\n      if(currentParams) {\n        // remove possible action param if any\n        const params = new URLSearchParams(currentParams);\n        params.delete('action');\n        const rest = params.toString();\n        if(rest) url += '&' + rest;\n      }\n      url += '&_=' + Date.now();\n      frame.src = url;\n    }\n\n    // Right: Checkout Patient (main webhook with action=checkPatientOut), plus background fetch\n    function checkOutPatient(){\n      showLoader();\n      const url = buildUrl(webhookBase, 'checkPatientOut');\n      // Background ping with no-cors\n      fetch(url, { mode: 'no-cors' }).catch(() => {});\n      // Reset iframe to placeholder page as per current behavior\n      frame.src = placeholderPage;\n    }\n\n    document.getElementById('btnManualCheckout').addEventListener('click', manualCheckout);\n    document.getElementById('btnVirtualClark').addEventListener('click', virtualClark);\n    document.getElementById('btnCheckOut').addEventListener('click', checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1000,
        -200
      ],
      "id": "94b4cb31-f90e-4337-9aaf-d9e93747b96f",
      "name": "Respond to Webhook5"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\">\n  <style>\n    :root{\n      --bar-bg:       #303030;\n      --green:        #2ecc71;\n      --green-d:      #28b463;\n      --orange:       #ff9800;\n      --orange-d:     #ef6c00;\n      --dark-blue:    #003366;\n      --dark-blue-d:  #002244;\n    }\n    *{box-sizing:border-box;margin:0;padding:0;font-family:\"Inter\",Arial,sans-serif;}\n    html,body{height:100%;width:100%;}\n    /* ── Top bar ─────────────────────────── */\n    .top-bar{\n      background:var(--bar-bg);\n      display:flex;\n      align-items:center;\n      justify-content: space-between;\n      padding:.75rem 1.25rem;\n      box-shadow:0 2px 4px rgba(0,0,0,.3);\n      position: relative;\n    }\n    /* Absolutely center the middle button */\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n\n    .epic-btn{\n      border:none;\n      border-radius:4px;\n      padding:.6rem 1.2rem;\n      font-size:1rem;\n      font-weight:600;\n      cursor:pointer;\n      transition: background .25s ease, color .25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: current orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n\n    /* ── Frame container ─────────────────── */\n    .content{\n      position:absolute;top:56px;left:0;right:0;bottom:0;\n      overflow:hidden;\n    }\n    iframe{\n      width:100%;height:100%;border:none;\n    }\n\n    /* ── Loader overlay ──────────────────── */\n    .loader{\n      position:absolute;inset:0;\n      display:flex;justify-content:center;align-items:center;\n      background:rgba(255,255,255,.6);\n      z-index:10;\n    }\n    .loader.hidden{display:none;}\n    .loader::after{\n      content:'';\n      width:48px;height:48px;\n      border:6px solid #bbb;\n      border-top-color:#333;\n      border-radius:50%;\n      animation:spin 1s linear infinite;\n    }\n    @keyframes spin{to{transform:rotate(360deg);}}\n  </style>\n</head>\n<body>\n  <header class=\"top-bar\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Manual&nbsp;Checkout</button>\n    <button id=\"btnVirtualClark\"  class=\"epic-btn btn-dark-blue\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\"      class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <main class=\"content\">\n    <iframe id=\"patientFrame\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\"></div>\n  </main>\n  <script>\n    const webhookBase = 'https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821';\n    const webhookVirtualClark = 'https://placeholder.webhook/virtual-clark';\n\n    const placeholderImage = 'https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png';\n    const placeholderPage = 'data:text/html;charset=utf-8,' + encodeURIComponent(`\n      <!DOCTYPE html><html><head><meta charset=\"utf-8\">\n      <style>html,body{margin:0;height:100%;background:#000;overflow:hidden}\n      img{width:100%;height:100%;object-fit:contain}</style></head>\n      <body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById('patientFrame');\n    const loader = document.getElementById('loader');\n\n    function showLoader() { loader.classList.remove('hidden'); }\n    function hideLoader() { loader.classList.add('hidden'); }\n    frame.addEventListener('load', hideLoader);\n\n    // Build query string from current URL params, excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete('action');\n      return params.toString();\n    }\n    // Build a URL including base, action, current params, and cache buster\n    function buildUrl(base, action) {\n      let url = base + '?action=' + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += '&' + currentParams;\n      }\n      url += '&_=' + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Manual Checkout button: works exactly like getRoomedPatient in original\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, 'getRoomedPatient');\n      frame.src = url;\n    }\n    // Virtual Clark button\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + '?action=virtualClark';\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += '&' + currentParams;\n      }\n      url += '&_=' + Date.now();\n      frame.src = url;\n    }\n    // Checkout Patient button\n    function checkOutPatient() {\n      showLoader();\n      const url = buildUrl(webhookBase, 'checkPatientOut');\n      fetch(url, {mode: 'no-cors'}).catch(() => {});\n      frame.src = placeholderPage;\n    }\n\n    document.getElementById('btnManualCheckout').addEventListener('click', manualCheckout);\n    document.getElementById('btnVirtualClark').addEventListener('click', virtualClark);\n    document.getElementById('btnCheckOut').addEventListener('click', checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1180,
        -200
      ],
      "id": "9e4fa29a-2015-4cd9-88bd-b67d4268391f",
      "name": "Respond to Webhook6"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --overlay-bg: rgba(0, 0, 0, 0.7);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.3;\n      z-index: -1;\n      filter: brightness(0.3);\n    }\n\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Manual Checkout (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Manual&nbsp;Checkout</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Manual Checkout\">Manual&nbsp;Checkout</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <script>\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const content = document.querySelector(\".content\");\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n\n    frame.addEventListener(\"load\", hideLoader);\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      content.classList.add(\"active\");\n    }\n\n    // Manual Checkout button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n    }\n\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n    }\n\n    // Checkout Patient button behavior (top bar only)\n    // Calls webhook then reloads entire page to show overlay again\n    function checkOutPatient() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"checkPatientOut\");\n      fetch(url, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a small delay so webhook can fire\n      setTimeout(() => {\n        // Reload current main page URL to reset overlay and state\n        window.location.href = window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n\n    // Top bar button event handlers\n    document\n      .getElementById(\"btnManualCheckout\")\n      .addEventListener(\"click\", manualCheckout);\n    document\n      .getElementById(\"btnVirtualClark\")\n      .addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1340,
        -200
      ],
      "id": "f9f2629f-3570-4225-80cf-717640bb477f",
      "name": "Respond to Webhook7"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='%7 mile%';\ndeclare @RM_ABBR varchar(20)='%A1%';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,0,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        2260,
        -740
      ],
      "id": "e0ff3477-bc62-4050-a9c8-720a07e818f3",
      "name": "Microsoft SQL",
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='{{ $json.query.location }}%%';\ndeclare @RM_ABBR varchar(20)='%{{ $json.query.room }}%';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        2420,
        0
      ],
      "id": "5f3ee349-1425-41bf-adc3-a8eee70c4a29",
      "name": "Microsoft SQL1",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='{{ $json.query.location }}%%';\ndeclare @RM_ABBR varchar(20)='{{ $json.query.room }}';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        2420,
        -220
      ],
      "id": "928cc36b-8d70-42bd-97f5-1e53f39c799c",
      "name": "Microsoft SQL2",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "53558fc2-5dc3-4175-9ed6-f859df961f7c",
              "leftValue": "={{ $json.DEM_EXTERNALID }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2640,
        -220
      ],
      "id": "2b1624d5-8f14-4d48-b9c8-b1b16df8f8ff",
      "name": "If1"
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "https://xl.epicpc.com/webhook/577ffaad-3f8c-4e1c-a24b-7c2a094453bd",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3160,
        -200
      ],
      "id": "3cde2406-4af0-43d1-a265-efdf6db189eb",
      "name": "Respond to Webhook8"
    },
    {
      "parameters": {
        "path": "577ffaad-3f8c-4e1c-a24b-7c2a094453bd",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        2980,
        -200
      ],
      "id": "4b2d61db-4682-4e4f-8bac-02f2729d7f81",
      "name": "Webhook2",
      "webhookId": "577ffaad-3f8c-4e1c-a24b-7c2a094453bd"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Please assign the patient</title>\n  <style>\n    html, body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n      background: #fff;\n      width: 100%;\n      height: 100vh;\n    }\n    body {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: 100vh;\n      width: 100vw;\n    }\n    .message {\n      font-family: 'Arial Black', Arial, sans-serif;\n      font-size: 3.5rem;\n      font-weight: bold;\n      text-align: center;\n      color: #222;\n      letter-spacing: 1px;\n      line-height: 1.2;\n      text-transform: none;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"message\">\n    Please assign the patient to a room.<br><br>\n    Once assigned, please try again.\n  </div>\n</body>\n</html>\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3200,
        -200
      ],
      "id": "5a32de69-d87a-4fde-b9cf-360cc4f03ba2",
      "name": "Respond to Webhook9"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://10.0.3.175:5049/run-checkout",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic YWRtaW46c3VwZXJzZWNyZXRwYXNz"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "mrn",
              "value": "197520"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3000,
        -560
      ],
      "id": "ee36cb2c-be49-41fb-8fde-9d9ca33e06cc",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Manual Checkout (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Manual&nbsp;Checkout</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Manual Checkout\">Manual&nbsp;Checkout</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <script>\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const content = document.querySelector(\".content\");\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n\n    frame.addEventListener(\"load\", hideLoader);\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      content.classList.add(\"active\");\n    }\n\n    // Manual Checkout button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n    }\n\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n    }\n\n    // Checkout Patient button behavior (top bar only)\n    // Calls webhook then reloads entire page to show overlay again\n    function checkOutPatient() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"checkPatientOut\");\n      fetch(url, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a small delay so webhook can fire\n      setTimeout(() => {\n        // Reload current main page URL to reset overlay and state\n        window.location.href = window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n\n    // Top bar button event handlers\n    document\n      .getElementById(\"btnManualCheckout\")\n      .addEventListener(\"click\", manualCheckout);\n    document\n      .getElementById(\"btnVirtualClark\")\n      .addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        800,
        -340
      ],
      "id": "3f9e0ede-c462-4e1c-9703-043ca2ac9115",
      "name": "Respond to Webhook10"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Manual Checkout (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Manual&nbsp;Checkout</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Manual Checkout\">Manual&nbsp;Checkout</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const content = document.querySelector(\".content\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      content.classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Manual Checkout button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Checkout Patient button behavior (top bar only)\n    // Calls webhook then reloads entire page to show overlay again\n    function checkOutPatient() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"checkPatientOut\");\n      fetch(url, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a small delay so webhook can fire\n      setTimeout(() => {\n        // Reload current main page URL to reset overlay and state\n        window.location.href =\n          window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        800,
        -480
      ],
      "id": "fd2328e4-aa04-4e31-84e3-1206750f25f3",
      "name": "Respond to Webhook11"
    },
    {
      "parameters": {
        "path": "e9c0debd-7392-4a91-9b5b-edec328f6779",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        600,
        740
      ],
      "id": "2ae46a2a-fc66-4fbb-864e-906cd127a17d",
      "name": "Webhook3",
      "webhookId": "e9c0debd-7392-4a91-9b5b-edec328f6779"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='%{{ $json.body.location }}%';\ndeclare @RM_ABBR varchar(20)='%{{ $json.body.room }}%';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        820,
        740
      ],
      "id": "48f5145a-c1b7-441c-ba38-0364c4880c8e",
      "name": "Microsoft SQL3",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.DEM_EXTERNALID }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1040,
        740
      ],
      "id": "375d6dd2-5ecd-4ee6-a3af-4f7afc5220a9",
      "name": "Respond to Webhook12"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Quick Scheduler\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Quick Scheduler button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Checkout Patient button behavior (top bar only)\n    // Calls webhook then reloads entire page to show overlay again\n    function checkOutPatient() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"checkPatientOut\");\n      fetch(url, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a small delay so webhook can fire\n      setTimeout(() => {\n        // Reload current main page URL to reset overlay and state\n        window.location.href =\n          window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        800,
        -580
      ],
      "id": "25794723-ea72-4851-9969-338fcd18d037",
      "name": "Respond to Webhook13"
    },
    {
      "parameters": {
        "content": "# Checkout",
        "height": 1380,
        "width": 4260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -100,
        1440
      ],
      "typeVersion": 1,
      "id": "64c6a219-0bc0-4744-8847-e0cf24cdb0c3",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"SetAppointmentStatus\",\n\"AppUserID\":\"eliseai\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"{{ $json.body.Patient_ID }}\",\n\"Token\":\"{{ $json.Token }}\",\n\"Parameter1\":\"{{ $json.body.Appointment_ID }}\",\n\"Parameter2\":\"AC\",\n\"Parameter3\":\"\",\n\"Parameter4\":\"{{ $json.timeInteger }}\",\n\"Parameter5\":\"\",\n\"Parameter6\":\"\",\n\"Data\":\"\"\n \n}",
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "5446ed48-edd3-469e-a84b-1b46a5b202a5",
      "name": "HTTP Confirm",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3400,
        2240
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetAppointmentsByChangeDTTM\",\n\"AppUserID\":\"eliseai\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"{{ $json.Patient_ID }}\",\n\"Token\":\"{{ $json.Token }}\",\n\"Parameter1\":\"2025-03-12\",\n\"Parameter2\":\"\",\n\"Parameter3\":\"\",\n\"Parameter4\":\"\",\n\"Parameter5\":\"\",\n\"Parameter6\":\"\",\n\"Data\":\"\"\n \n}",
        "options": {
          "allowUnauthorizedCerts": true,
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "297a2cf8-7171-49b9-ae8a-d1dc2da7fcd5",
      "name": "HTTP Confirm1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3360,
        1720
      ],
      "retryOnFail": true
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $json.user }}.txt",
        "options": {}
      },
      "id": "76e8fc82-14ba-4a97-968b-a50ddbb29eaa",
      "name": "Read PM Token3",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1500,
        1920
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "22c3a95f-4a6f-4ab4-81d8-5e1dd2f535c8",
      "name": "Extract PM Token3",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1640,
        1920
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.0.1.47:10443/UnityPM/UnityService.svc/json/magicjson",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"Action\":\"GetUserAuthentication\",\n\"AppUserID\":\"{{ $('USER').item.json.user }}\",\n\"Appname\":\"EPICPC.NMNWokflow.TestApp\",\n\"PatientID\":\"\",\n\"Token\":\"{{ $json[\"data\"] }}\",\n\"Parameter1\":\"{{ $('USER').item.json.password }}\"\n}\n",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "d4810ca2-c1a9-4201-8741-7eb273ce06dc",
      "name": "Check Token2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1820,
        1920
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "5b98f9ee-f738-4edc-a8bb-db9bb925a76b",
      "name": "Wait4",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2260,
        2020
      ],
      "webhookId": "666ea0a7-be04-4fbf-80a1-d71780f7eac8"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.data[0].getuserauthenticationinfo[0].ValidUser }}",
              "value2": "YES"
            }
          ]
        }
      },
      "id": "a3868d69-bae7-4f62-8d75-df9dec46c0a1",
      "name": "IF PM Token Valid2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2100,
        1920
      ]
    },
    {
      "parameters": {
        "content": "# ASPM Authentication ELISEAI",
        "height": 373.491094826977,
        "width": 1498.6041394020742,
        "color": 6
      },
      "id": "dc92dbb6-5943-46cd-9ad6-488cef63545c",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1080,
        1820
      ]
    },
    {
      "parameters": {
        "fileSelector": "=pmtoken-{{ $('USER').item.json.user }}.txt",
        "options": {}
      },
      "id": "eaa53d4c-a49b-4033-971e-deff3301e447",
      "name": "Read PM Token22",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        2320,
        1860
      ],
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "e06d170b-b09c-4748-bd5c-3ac17b00633a",
      "name": "Extract PM Token22",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2460,
        1860
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "workflowId": "aUCNcTe36bHU5YKn",
        "options": {}
      },
      "id": "8f4169c1-92aa-4094-bdc6-600c773f5edd",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2440,
        2020
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7588a9fa-9c56-4c5d-8e77-30bda7a5d1ef",
              "name": "Token",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "81ee6e7b-4ab7-4bd2-9b0a-a9ef7e92f034",
      "name": "Edit Fields16",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2620,
        1860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b806a87b-407c-47eb-b9ba-1aca0d81400d",
              "name": "user",
              "value": "eliseai",
              "type": "string"
            },
            {
              "id": "c45539b3-dcfd-4d9b-a267-54d31648d3b0",
              "name": "password",
              "value": "L3tsC0nnect!C0nf",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bae88244-0d95-4b57-a420-de0877b89fb8",
      "name": "USER",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1340,
        1920
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.data = JSON.parse(item.json.data);\n}\n\nreturn $input.all();"
      },
      "id": "849b260a-6ae7-4a7a-bf6d-d59009fdf0cf",
      "name": "Code71",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1960,
        1920
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "--APM PatientInfoWithInsInfo\nwith genpatinfo as (\n    select g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_LFI,\n           g.Patient_First_Name, g.Patient_Last_Name, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n           g.Patient_SSN, g.Patient_Sex, g.Patient_DOB, g.Patient_Age, g.Patient_Marital_Status, g.Patient_Home_Phone, g.Patient_Cell_Phone,\n           g.Patient_Primary_Phone_Number, g.Patient_Email\n    from [PM].[vwGenPatInfo] g\n),\npatid as (\n    select p.Patient_ID, p.Patient_Number, p.Date_Registered,\n           p.Comments, p.Account_ID, p.Contact_ID\n    from [PM].[Patients] p\n),\npatpol as (\n    select pp.Patient_Policy_ID, pp.Policy_ID, pp.Patient_ID,\n           pp.Coverage, pp.Verified_Date\n    from [PM].[Patient_Policies] pp\n),\ngenpol as (\n    select po.Policy_ID, po.Group_No, po.Certificate_No,\n           po.Comments, po.Effective_Date, po.Expiration_Date,\n           po.Carrier_ID, po.Insurance_Plan_ID, po.Contact_ID, po.Account_ID\n    from [PM].[Policies] po\n)\nselect g.Patient_ID, g.Patient_Number, g.Patient_Name, g.Patient_First_Name, g.Patient_Last_Name,\n       g.Patient_LFI, g.Patient_Street1, g.Patient_City, g.Patient_State, g.Patient_Zip_Code,\n       g.Patient_SSN, g.Patient_Sex, convert(varchar(10), g.Patient_DOB, 101) as Patient_DOB, g.Patient_Age, g.Patient_Marital_Status,\n       g.Patient_Home_Phone, g.Patient_Cell_Phone, g.Patient_Email,\n       p.Account_ID, p.Contact_ID, p.Date_Registered, p.Comments,\n       pp.Patient_Policy_ID, pp.Policy_ID, pp.Coverage, pp.Verified_Date,\n       po.Account_ID, po.Carrier_ID, c.Name, c.Payor_Number, i.CoPayment_Amount,\n       po.Insurance_Plan_ID, po.Carrier_ID, po.Certificate_No, po.Group_No,\n       po.Comments, po.Effective_Date, po.Expiration_Date\nfrom genpatinfo g\nleft join patid p on p.Patient_ID = g.Patient_ID\nleft join patpol pp on pp.Patient_ID = g.Patient_ID\nleft join genpol po on po.Policy_ID = pp.Policy_ID\nleft join [PM].[Carriers] c on c.Carrier_ID = po.Carrier_ID\nleft join [PM].[Insurance_Plans] i on i.Insurance_Plan_ID = po.Insurance_Plan_ID\nwhere (g.Patient_Number = '{{ $json.query.patientId }}')"
      },
      "id": "9d540ece-61c9-4476-ab7d-ff50cdcc7a03",
      "name": "Find Patient by Phone Number",
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1,
      "position": [
        1740,
        1600
      ],
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3080,
        1720
      ],
      "id": "b07469fa-a796-44f0-962b-0e812028bccd",
      "name": "Merge16"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2560,
        1600
      ],
      "id": "3ad69373-54f8-4f3c-b287-53c4b62f73fa",
      "name": "Limit1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "getappointmentsbychangedttminfo",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3560,
        1720
      ],
      "id": "ae816595-33d4-422c-a29a-015f035b932e",
      "name": "Split Out",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "48472136-0132-4f50-9433-a657245b6425",
              "leftValue": "={{ $json.Status }}",
              "rightValue": "A",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3980,
        1700
      ],
      "id": "1566fce4-f27e-43a1-a8ef-fe087bae7d49",
      "name": "If16"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "39bb0bf8-8a26-42d3-9aeb-roomtablet",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        20,
        2280
      ],
      "id": "a7a37c5d-b7d4-4c0c-a762-543d2af84f16",
      "name": "Webhook6",
      "webhookId": "39bb0bf8-8a26-42d3-9aeb-f8350d9a89a0"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2880,
        2260
      ],
      "id": "f7003895-85ad-4f4d-9183-872c8571ec29",
      "name": "Merge17"
    },
    {
      "parameters": {
        "jsCode": "// Loop through each incoming item\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i];\n  \n  // The input currentDate is an ISO string with timezone offset, e.g.\n  // \"2025-07-25T12:50:47.372-04:00\"\n  \n  // Extract the substring containing the local time HH:mm\n  // Characters at index 11 to 16 are \"HH:mm\"\n  const timePart = item.json.currentDate.slice(11, 16);\n  \n  // Remove the colon to get \"HHmm\" and convert to integer\n  // e.g. \"12:50\" -> \"1250\" -> 1250\n  const timeInteger = parseInt(timePart.replace(':', ''), 10);\n  \n  // Add the integer time to the JSON object for this item\n  item.json.timeInteger = timeInteger;\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1740,
        2400
      ],
      "id": "21959610-d400-4924-be49-b7076c7beb62",
      "name": "Code72"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3080,
        2440
      ],
      "id": "515197dc-46ed-4586-a8ac-43066bec6717",
      "name": "Merge18"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "77afb776-3ddc-4b1f-b211-61b4f508ac08",
              "leftValue": "={{ $json.Resource_Abbr }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3740,
        1720
      ],
      "id": "c172cc6d-ed87-41a2-a366-3ab1a98a49b5",
      "name": "If17"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3400,
        1400
      ],
      "id": "154249f5-e16d-4ff0-8228-8fb29d8b5585",
      "name": "Edit Fields17"
    },
    {
      "parameters": {
        "jsCode": "// Get all incoming appointment items.\nconst appointments = $input.all().map(item => item.json);\n\n// Retrieve the redirect parameters from the \"Webhook4\" node.\nconst webhook4Data = $node[\"Webhook4\"].json;\nconst fullNameValue = encodeURIComponent(webhook4Data.query.fullName);\nconst patientIdValue = encodeURIComponent(webhook4Data.query.patientId);\n\n// Decode for display\nconst displayName = decodeURIComponent(fullNameValue).replaceAll(\"+\", \" \");\nconst displayMrn = decodeURIComponent(patientIdValue);\n\n// Helper: Split the Appointment_DateTime string into a date and a time.\nfunction formatDateTime(dateTimeStr) {\n  const parts = dateTimeStr.split(' ');\n  return {\n    date: parts[0] || '',\n    time: parts.slice(1).join(' ') || ''\n  };\n}\n\n// Build HTML table rows for each appointment.\nlet rows = '';\nappointments.forEach((appointment, index) => {\n  const dt = formatDateTime(appointment.Appointment_DateTime || '');\n  const attendingName = `${appointment.AttendingFirstName || ''} ${appointment.AttendingLastName || ''}`.trim();\n  const location = appointment.Appt_Sched_Department_Desc || appointment.Appt_Sched_Location_Desc || '';\n  // If Check_Out_Time exists (non-empty), mark status as \"Checked Out\"\n  const status = (appointment.Check_Out_Time && appointment.Check_Out_Time.trim() !== '')\n    ? \"Checked Out\"\n    : \"\";\n  // Render the checkout button only if not already checked out.\n  const checkoutButton = (status === \"Checked Out\")\n    ? \"\"\n    : `<button id=\"checkout-button-${index}\" class=\"checkout-button\" onclick=\"checkoutAppointment(${index})\">Checkout</button>`;\n  \n  rows += `<tr>\n    <td>${attendingName}</td>\n    <td>${location}</td>\n    <td>${dt.date}</td>\n    <td>${dt.time}</td>\n    <td>${status}</td>\n    <td style=\"text-align:center;\">${checkoutButton}</td>\n  </tr>`;\n});\n\n// Embed the appointments data as JSON for use in the client-side script.\nconst appointmentsData = JSON.stringify(appointments);\n\n// Build the full HTML document.\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Appointments</title>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      font-family: Arial, sans-serif;\n      background-image: url('https://file.taskfire.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png');\n      background-size: cover;\n      background-position: center;\n      overflow: hidden;\n    }\n    .container {\n      max-width: 900px;\n      width: 100%;\n      background-color: rgba(255,255,255,0.9);\n      margin: 40px auto;\n      padding: 16px;\n      border-radius: 8px;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n      overflow: hidden;\n    }\n    h2 {\n      text-align: center;\n      margin-bottom: 8px;\n      color: #111827;\n    }\n    h3 {\n      text-align: center;\n      margin-top: 0;\n      margin-bottom: 16px;\n      color: #111827;\n      font-weight: normal;\n    }\n    .table-responsive {\n      margin-top: 16px;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background-color: #ffffff;\n      font-size: 14px;\n      line-height: 1.4em;\n    }\n    thead {\n      background-color: #000;\n      color: #fff;\n    }\n    thead th {\n      padding: 12px;\n      text-align: left;\n      border-bottom: 1px solid #d1d5db;\n    }\n    tbody td {\n      padding: 12px;\n      border-top: 1px solid #e5e7eb;\n      vertical-align: middle;\n    }\n    tbody tr:hover {\n      background-color: #f9fafb;\n    }\n    .checkout-button {\n      padding: 8px 16px;\n      background-color: #f44336;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n    }\n    .checkout-button:hover {\n      background-color: #d32f2f;\n    }\n    .checkout-button:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n    .back-button {\n      padding: 8px 16px;\n      background-color: #1976d2;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n      margin-top: 20px;\n    }\n    .back-button:hover {\n      background-color: #1565c0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Appointments</h2>\n    <h3>Patient: ${displayName} (MRN: ${displayMrn})</h3>\n    <div class=\"table-responsive\">\n      <table>\n        <thead>\n          <tr>\n            <th>Attending</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Status</th>\n            <th style=\"text-align:center;\">Checkout</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${rows}\n        </tbody>\n      </table>\n    </div>\n    <div style=\"text-align: center;\">\n      <button class=\"back-button\" onclick=\"backToScheduler()\">Back to Scheduler</button>\n    </div>\n  </div>\n  <script>\n    // Parse the embedded appointments data.\n    const appointmentsData = ${appointmentsData};\n\n    // Read the \"url\" parameter from the current page URL.\n    const urlParams = new URLSearchParams(window.location.search);\n    const returnUrl = urlParams.get('url');\n\n    // When a checkout button is clicked, disable it, show a loader, post the appointment data,\n    // and then automatically redirect the PARENT window to returnUrl (if provided).\n    function checkoutAppointment(index) {\n      const appointment = appointmentsData[index];\n      const button = document.getElementById('checkout-button-' + index);\n      if (button) {\n        button.disabled = true;\n        button.innerText = \"Loading...\";\n      }\n      fetch('https://xl.epicpc.com/webhook/39bb0bf8-8a26-42d3-9aeb-roomtablet', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(appointment)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n      .then(text => {\n        // Redirect the parent frame if returnUrl is present.\n        if (returnUrl) {\n          window.top.location.href = returnUrl;\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        if (button) {\n          button.disabled = false;\n          button.innerText = \"Checkout\";\n        }\n      });\n    }\n\n    // The Back to Scheduler button redirects the PARENT window to returnUrl (if provided).\n    function backToScheduler() {\n      if (returnUrl) {\n        window.top.location.href = returnUrl;\n      }\n    }\n  </script>\n</body>\n</html>`;\n\n// Return the generated HTML as the output of this node.\nreturn [{ json: { html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4200,
        1600
      ],
      "id": "c4ab61be-0f53-4aa7-a6cf-9c991c9c8a72",
      "name": "Code76"
    },
    {
      "parameters": {
        "path": "4ab15d3f-8a32-43cd-9223-roomtablet",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        1600
      ],
      "id": "ec0719cb-e216-4002-ae54-b4ba57c95c58",
      "name": "Webhook4",
      "webhookId": "4ab15d3f-8a32-43cd-9223-9aa4cbddf07b"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        1600,
        2400
      ],
      "id": "abfa1f82-81af-4c05-8eb9-448cddc91902",
      "name": "Date & Time2"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>No Appointments</title>\n\n  <!-- Early IE check: If IE, only show the warning message and stop. -->\n  <script>\n    if (document.documentMode) {\n      var style =\n        '<style>' +\n          'body {' +\n            'margin: 0; padding: 0; background-color: #f3f4f6;' +\n            'display: flex; align-items: center; justify-content: center;' +\n            'min-height: 100vh; font-family: Arial, sans-serif;' +\n          '}' +\n          '.ie-message {' +\n            'max-width: 600px; margin: auto; font-size: 1.2rem;' +\n            'color: #333; padding: 20px; text-align: center;' +\n            'background: #fff; border-radius: 8px;' +\n            'box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);' +\n          '}' +\n          '.ie-message p { margin: 1em 0; }' +\n          '.ie-message button {' +\n            'padding: 0.6em 1.2em;' +\n            'font-size: 1rem;' +\n            'cursor: pointer;' +\n            'border: none;' +\n            'border-radius: 4px;' +\n            'background-color: #0066cc;' +\n            'color: #fff;' +\n            'transition: background-color 0.2s;' +\n          '}' +\n          '.ie-message button:hover {' +\n            'background-color: #005bb5;' +\n          '}' +\n        '</style>';\n\n      var messageHTML =\n        '<div class=\"ie-message\">' +\n          '<p><strong>Quick Scheduler does not work with Internet Explorer.</strong></p>' +\n          '<p>Please change your default browser to Chrome or Edge. Thank you!</p>' +\n          '<p>' +\n            '<button onclick=\"window.open(\\'https://file.cybertech.app/EPIC/Documents/Default%20Browsing.pdf\\', \\'_blank\\')\">' +\n              'Download Instructions' +\n            '</button>' +\n          '</p>' +\n        '</div>';\n\n      document.write(style + messageHTML);\n      document.close();\n    }\n  </script>\n\n  <link href=\"https://cdn.jsdelivr.net/npm/shadcn-ui@latest/dist/shadcn-ui.min.css\" rel=\"stylesheet\">\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: 100vh;\n      background-color: #f3f4f6;\n      margin: 0;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      padding: 20px;\n      background-color: white;\n      border-radius: 15px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n      text-align: center;\n      position: relative;\n    }\n    .logo {\n      width: 100%;\n      border-radius: 10px;\n      margin-bottom: 20px;\n    }\n    .title {\n      font-size: 1.5rem;\n      font-weight: bold;\n      color: #333;\n      margin-bottom: 10px;\n    }\n    .patient-info {\n      font-size: 1rem;\n      color: #555;\n      margin-bottom: 20px;\n    }\n    .button-group {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n    .care-button {\n      padding: 15px;\n      font-size: 18px;\n      font-weight: bold;\n      color: white;\n      border: none;\n      border-radius: 30px;\n      cursor: pointer;\n      transition: transform 0.3s ease, box-shadow 0.3s ease;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n      background: linear-gradient(135deg, #4a90e2, #357abd);\n    }\n    .care-button:hover {\n      transform: scale(1.05);\n      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <img\n      src=\"https://file.taskfire.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\"\n      alt=\"Logo\"\n      class=\"logo\"\n    />\n    <h1 class=\"title\">No appointments to checkout.</h1>\n    <div class=\"patient-info\">\n      <p id=\"patientName\"></p>\n      <p id=\"patientId\"></p>\n    </div>\n    <div class=\"button-group\">\n      <!-- Checkout Button -->\n      <button class=\"care-button\" onclick=\"checkout()\">Start Over</button>\n    </div>\n  </div>\n\n  <script>\n    // Fallback query-string parser for IE\n    function getUrlParams() {\n      var search = window.location.search || \"\";\n      if (search.indexOf(\"?\") === 0) {\n        search = search.substring(1);\n      }\n      var parts = search.split(\"&\");\n      var params = {};\n      for (var i = 0; i < parts.length; i++) {\n        var pair = parts[i].split(\"=\");\n        var key = decodeURIComponent(pair[0] || \"\");\n        var value = decodeURIComponent(pair[1] || \"\");\n        if (key) {\n          params[key] = value;\n        }\n      }\n      return params;\n    }\n\n    var existingParams = getUrlParams();\n    var fullName = existingParams.fullName || \"Unknown Patient\";\n    var patientId = existingParams.patientId || \"Unknown MRN\";\n\n    document.getElementById(\"patientName\").textContent = \"Patient: \" + fullName;\n    document.getElementById(\"patientId\").textContent = \"MRN: \" + patientId;\n\n    // Redirect function for the Checkout button\n    function checkout() {\n      window.location.href = \"https://xl.epicpc.com/webhook/b4264e0e-085f-49c0-9471-1009eafa4ce01?fullName={{ $('Webhook4').item.json.query.fullName.replaceAll(\" \",\"+\") }}&patientId={{ $('Webhook4').item.json.query.patientId }}\";\n    }\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        4440,
        1860
      ],
      "id": "eff0c4ba-79a8-4a52-87f1-be440af4e7bb",
      "name": "Respond to Webhook17"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "Success",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        3700,
        2240
      ],
      "id": "92d81da3-39cd-4ce4-a4af-5a786e09955f",
      "name": "Respond to Webhook18"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        4420,
        1600
      ],
      "id": "693bb754-b385-47f8-82fa-5808d6da7b0d",
      "name": "Respond to Webhook16"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Quick Scheduler\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"${placeholderImage}\" alt=\"Placeholder\"/></body></html>`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Quick Scheduler button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Checkout Patient button behavior (top bar only)\n    // Calls webhook then reloads entire page to show overlay again\n    function checkOutPatient() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"checkPatientOut\");\n      fetch(url, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a small delay so webhook can fire\n      setTimeout(() => {\n        // Reload current main page URL to reset overlay and state\n        window.location.href =\n          window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        800,
        -720
      ],
      "id": "892bc141-ac3c-430a-b0f3-7974c86e2436",
      "name": "Respond to Webhook14"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, using DEM_EXTERNALID as patientId\n// and PATIENT_FIRSTNAME / PATIENT_LASTNAME for fullName.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from DEM_EXTERNALID)\nlet fullNameParam = '';\nlet patientId = '';\nlet schedTimeInParam = '';\nlet schedTimeStartParam = '';\nlet locationNameParam = '';\nlet roomAbbrParam = '';\nlet caregiverNameParam = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = incomingData[0].PATIENT_FIRSTNAME + ' ' + incomingData[0].PATIENT_LASTNAME;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use DEM_EXTERNALID field as patientId\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n\n  // Additional params extracted and encoded\n  schedTimeInParam = encodeURIComponent(incomingData[0].SCHED_TIMEIN || '');\n  schedTimeStartParam = encodeURIComponent(incomingData[0].SCHED_TIMESTART || '');\n  locationNameParam = encodeURIComponent(incomingData[0].LOCATION_NAME || '').replace(/%20/g, '+');\n  roomAbbrParam = encodeURIComponent(incomingData[0].ROOM_ABBR_TEXT || '').replace(/%20/g, '+');\n  caregiverNameParam = encodeURIComponent(incomingData[0].CAREGIVER_NAME || '').replace(/%20/g, '+');\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId and additional params for Virtual Clark\n\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    /* Your existing CSS unchanged */\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n      --green: #28a745;\n      --green-d: #218838;\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 3rem;\n      max-width: 1000px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: none;\n      min-width: 240px;\n      padding: 1.6rem 3rem;\n      font-size: 1.4rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      text-align: center;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInitInstant {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInitInstant:hover,\n    #btnInitInstant:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.5rem 2.5rem;\n      font-size: 0.9rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      text-align: center;\n      user-select: none;\n      box-sizing: border-box;\n      margin: 0 0.4rem;\n      min-width: auto;\n      width: auto;\n    }\n    #btnVirtualClark {\n      flex-grow: 1;\n      max-width: none;\n      margin-left: 0.4rem;\n      margin-right: 0.4rem;\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnVirtualClark:hover,\n    #btnVirtualClark:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInstantVisit {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInstantVisit:hover,\n    #btnInstantVisit:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n      border: 2px solid var(--orange);\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n      <button id=\"btnInitInstant\" type=\"button\">Instant&nbsp;Visit</button>\n    </div>\n  </div>\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n    <button id=\"btnInstantVisit\" class=\"epic-btn\" type=\"button\">Instant&nbsp;Visit</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe\n      id=\"patientFrame\"\n      title=\"Patient Flow Content\"\n      src=\"\"\n      allow=\"camera; microphone; fullscreen; autoplay\"\n      allowfullscreen\n    ></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n    const schedTimeInParam = \"${schedTimeInParam}\";\n    const schedTimeStartParam = \"${schedTimeStartParam}\";\n    const locationNameParam = \"${locationNameParam}\";\n    const roomAbbrParam = \"${roomAbbrParam}\";\n    const caregiverNameParam = \"${caregiverNameParam}\";\n\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://xl.epicpc.com/webhook/aa888bfa-2c88-44ed-af20-40eaa3146aa7\";\n    const webhookInstantVisitRedirectUrl = \"https://xl.epicpc.com/webhook/c5d8bd6f-8803-4296-a9fe-789df93c5385\";\n\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = 'data:text/html;charset=utf-8,' +\n      encodeURIComponent(\n        '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>' +\n        'html,body{margin:0;height:100%;background:#000;overflow:hidden;}' +\n        'img{width:100%;height:100%;object-fit:contain;}' +\n        '</style></head><body>' +\n        '<img src=\"' + placeholderImage + '\" alt=\"Placeholder\"/>' +\n        '</body></html>'\n      );\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() { loader.classList.remove(\"hidden\"); }\n    function hideLoader() { loader.classList.add(\"hidden\"); }\n\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n    });\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n    }\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => initOverlay.style.display = \"none\", 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n    }\n\n    async function requestMediaPermissions() {\n      try {\n        await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        return true;\n      } catch (err) {\n        alert(\"Camera and microphone permissions are required to continue.\");\n        return false;\n      }\n    }\n\n    async function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    async function virtualClark() {\n      showLoader();\n      // Build Virtual Clark URL passing patientId as 'user' plus additional params\n      let url = webhookVirtualClark +\n        '?user=' + encodeURIComponent(patientId) +\n        '&fullName=' + fullNameParam +\n        '&schedTimeIn=' + schedTimeInParam +\n        '&schedTimeStart=' + schedTimeStartParam +\n        '&locationName=' + locationNameParam +\n        '&roomAbbr=' + roomAbbrParam +\n        '&caregiverName=' + caregiverNameParam;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Instant Visit redirects entire page, no iframe\n    function instantVisitRedirect() {\n      window.location.href = webhookInstantVisitRedirectUrl;\n    }\n\n    async function checkOutPatient() {\n      showLoader();\n      const url =\n        'https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=' +\n        fullNameParam +\n        '&patientId=' +\n        patientId +\n        '&url=' +\n        parentPageUrl;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      const rest = params.toString();\n      if (rest) url += \"&\" + rest;\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    function withMediaPermission(actionFunc) {\n      return async () => {\n        const granted = await requestMediaPermissions();\n        if (granted) {\n          revealMainInterface();\n          await actionFunc();\n        }\n      };\n    }\n\n    // Event listeners with updated Instant Visit behavior\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", withMediaPermission(manualCheckout));\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", withMediaPermission(virtualClark));\n    document.getElementById(\"btnInitInstant\").addEventListener(\"click\", () => {\n      // Instant Visit from overlay redirects entire page directly\n      instantVisitRedirect();\n    });\n\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnInstantVisit\").addEventListener(\"click\", () => {\n      // Instant Visit from top bar also redirects entire page\n      instantVisitRedirect();\n    });\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n\n    frame.src = placeholderPage;\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        420,
        -60
      ],
      "id": "5178a6c3-42a1-45be-9735-a39c585ceebb",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        720,
        -180
      ],
      "id": "b3aa0f13-9745-478d-b5b9-21ccdbefa3c5",
      "name": "Respond to Webhook15"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website with a dynamic \"Checkout\" webhook URL\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Extract the MRN (patientId) from the first item (if available)\nconst patientId = incomingData.length ? incomingData[0].MRN : '';\n\n// 3. Build the full HTML as a template literal, injecting the patientId into the checkout URL\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Quick Scheduler\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected patientId from the n8n Code node\n    const patientId = \"${patientId}\";\n\n    // Base URLs for the manual & virtual actions (unchanged)\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n    // Placeholder page displayed before any action\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/></body></html>\\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Quick Scheduler button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Checkout Patient button behavior (top bar only)\n    // Calls the new webhook with the MRN as patientId, then reloads\n    function checkOutPatient() {\n      showLoader();\n      // Injected patientId variable used here:\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?patientId=\\${patientId}\\`;\n      fetch(url, { mode: \"no-cors\" }).catch(() => {});\n      // Reload entire page after a small delay so webhook can fire\n      setTimeout(() => {\n        // Reload current main page URL to reset overlay and state\n        window.location.href =\n          window.location.origin + window.location.pathname + window.location.search;\n      }, 300);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node (or equivalent) can serve it directly as the website\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -900
      ],
      "id": "ed4510d3-7ffe-4b51-b8aa-842e5f9e49bd",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, with “Checkout Patient” loading into the iframe\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Extract the MRN (patientId) from the first item (if available)\nconst patientId = incomingData.length ? incomingData[0].MRN : '';\n\n// 3. Build the full HTML as a template literal, injecting the patientId into the checkout iframe URL\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Quick Scheduler\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected patientId from the n8n Code node\n    const patientId = \"${patientId}\";\n\n    // Base URLs for the manual & virtual actions (unchanged)\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n    // Placeholder page displayed before any action\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/></body></html>\\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, and cache-buster\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action);\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Quick Scheduler button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark\";\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Checkout Patient button behavior (top bar only)\n    // Now navigates the iframe directly to the checkout URL with patientId\n    function checkOutPatient() {\n      showLoader();\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?patientId=\\${patientId}\\`;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly as the webpage\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -1000
      ],
      "id": "c4771035-3ca8-4923-aaa1-3a5bd40ef470",
      "name": "Code2"
    },
    {
      "parameters": {
        "jsCode": "// Get all incoming appointment items.\nconst appointments = $input.all().map(item => item.json);\n\n// Retrieve the redirect parameters from the \"Webhook2\" node.\nconst webhook2Data = $node[\"Webhook4\"].json;\nconst fullNameValue = encodeURIComponent(webhook2Data.query.fullName);\nconst patientIdValue = encodeURIComponent(webhook2Data.query.patientId);\n\n// Helper: Split the Appointment_DateTime string into a date and a time.\nfunction formatDateTime(dateTimeStr) {\n  const parts = dateTimeStr.split(' ');\n  return {\n    date: parts[0] || '',\n    time: parts.slice(1).join(' ') || ''\n  };\n}\n\n// Build HTML table rows for each appointment.\nlet rows = '';\nappointments.forEach((appointment, index) => {\n  const dt = formatDateTime(appointment.Appointment_DateTime || '');\n  const attendingName = `${appointment.AttendingFirstName || ''} ${appointment.AttendingLastName || ''}`.trim();\n  const location = appointment.Appt_Sched_Department_Desc || appointment.Appt_Sched_Location_Desc || '';\n  // If Check_Out_Time exists (non-empty), mark status as \"Checked Out\"\n  const status = (appointment.Check_Out_Time && appointment.Check_Out_Time.trim() !== '')\n    ? \"Checked Out\"\n    : \"\";\n  // Render the checkout button only if not already checked out.\n  const checkoutButton = (status === \"Checked Out\")\n    ? \"\"\n    : `<button id=\"checkout-button-${index}\" class=\"checkout-button\" onclick=\"checkoutAppointment(${index})\">Checkout</button>`;\n  \n  rows += `<tr>\n    <td>${attendingName}</td>\n    <td>${location}</td>\n    <td>${dt.date}</td>\n    <td>${dt.time}</td>\n    <td>${status}</td>\n    <td style=\"text-align:center;\">${checkoutButton}</td>\n  </tr>`;\n});\n\n// Embed the appointments data as JSON for use in the client-side script.\nconst appointmentsData = JSON.stringify(appointments);\n\n// Build the full HTML document.\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Appointments</title>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      font-family: Arial, sans-serif;\n      background-image: url('https://file.taskfire.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png');\n      background-size: cover;\n      background-position: center;\n      overflow: hidden;\n    }\n    .container {\n      max-width: 900px;\n      width: 100%;\n      background-color: rgba(255,255,255,0.9);\n      margin: 40px auto;\n      padding: 16px;\n      border-radius: 8px;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n      overflow: hidden;\n    }\n    h2 {\n      text-align: center;\n      margin-bottom: 16px;\n      color: #111827;\n    }\n    .table-responsive {\n      margin-top: 16px;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background-color: #ffffff;\n      font-size: 14px;\n      line-height: 1.4em;\n    }\n    thead {\n      background-color: #000;\n      color: #fff;\n    }\n    thead th {\n      padding: 12px;\n      text-align: left;\n      border-bottom: 1px solid #d1d5db;\n    }\n    tbody td {\n      padding: 12px;\n      border-top: 1px solid #e5e7eb;\n      vertical-align: middle;\n    }\n    tbody tr:hover {\n      background-color: #f9fafb;\n    }\n    .checkout-button {\n      padding: 8px 16px;\n      background-color: #f44336;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n    }\n    .checkout-button:hover {\n      background-color: #d32f2f;\n    }\n    .checkout-button:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n    .back-button {\n      padding: 8px 16px;\n      background-color: #1976d2;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n      margin-top: 20px;\n    }\n    .back-button:hover {\n      background-color: #1565c0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Appointments</h2>\n    <div class=\"table-responsive\">\n      <table>\n        <thead>\n          <tr>\n            <th>Attending</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Status</th>\n            <th style=\"text-align:center;\">Checkout</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${rows}\n        </tbody>\n      </table>\n    </div>\n    <div style=\"text-align: center;\">\n      <button class=\"back-button\" onclick=\"backToScheduler()\">Back to Scheduler</button>\n    </div>\n  </div>\n  <script>\n    // Parse the embedded appointments data.\n    const appointmentsData = ${appointmentsData};\n\n    // When a checkout button is clicked, disable it, show a loader, post the appointment data,\n    // and then automatically redirect using the n8n variable values.\n    function checkoutAppointment(index) {\n      const appointment = appointmentsData[index];\n      const button = document.getElementById('checkout-button-' + index);\n      if (button) {\n        button.disabled = true;\n        button.innerText = \"Loading...\";\n      }\n      fetch('https://xl.epicpc.com/webhook/39bb0bf8-8a26-42d3-9aeb-roomtablet', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(appointment)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n      .then(text => {\n        window.location.href = \\`https://xl.epicpc.com/webhook/b4264e0e-085f-49c0-9471-1009eafa4ce01?fullName=${fullNameValue}&patientId=${patientIdValue}\\`;\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        if (button) {\n          button.disabled = false;\n          button.innerText = \"Checkout\";\n        }\n      });\n    }\n\n    // The Back to Scheduler button redirects to the same URL.\n    function backToScheduler() {\n      window.location.href = \\`https://xl.epicpc.com/webhook/b4264e0e-085f-49c0-9471-1009eafa4ce01?fullName=${fullNameValue}&patientId=${patientIdValue}\\`;\n    }\n  </script>\n</body>\n</html>`;\n\n// Return the generated HTML as the output of this node.\nreturn [{ json: { html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3760,
        1460
      ],
      "id": "b728f246-aedc-4ccd-9627-a920a0c518b7",
      "name": "Code78"
    },
    {
      "parameters": {
        "jsCode": "// Get all incoming appointment items.\nconst appointments = $input.all().map(item => item.json);\n\n// Retrieve the redirect parameters from the \"Webhook4\" node.\nconst webhook4Data = $node[\"Webhook4\"].json;\nconst fullNameValue = encodeURIComponent(webhook4Data.query.fullName);\nconst patientIdValue = encodeURIComponent(webhook4Data.query.patientId);\n\n// Helper: Split the Appointment_DateTime string into a date and a time.\nfunction formatDateTime(dateTimeStr) {\n  const parts = dateTimeStr.split(' ');\n  return {\n    date: parts[0] || '',\n    time: parts.slice(1).join(' ') || ''\n  };\n}\n\n// Build HTML table rows for each appointment.\nlet rows = '';\nappointments.forEach((appointment, index) => {\n  const dt = formatDateTime(appointment.Appointment_DateTime || '');\n  const attendingName = `${appointment.AttendingFirstName || ''} ${appointment.AttendingLastName || ''}`.trim();\n  const location = appointment.Appt_Sched_Department_Desc || appointment.Appt_Sched_Location_Desc || '';\n  // If Check_Out_Time exists (non-empty), mark status as \"Checked Out\"\n  const status = (appointment.Check_Out_Time && appointment.Check_Out_Time.trim() !== '')\n    ? \"Checked Out\"\n    : \"\";\n  // Render the checkout button only if not already checked out.\n  const checkoutButton = (status === \"Checked Out\")\n    ? \"\"\n    : `<button id=\"checkout-button-${index}\" class=\"checkout-button\" onclick=\"checkoutAppointment(${index})\">Checkout</button>`;\n  \n  rows += `<tr>\n    <td>${attendingName}</td>\n    <td>${location}</td>\n    <td>${dt.date}</td>\n    <td>${dt.time}</td>\n    <td>${status}</td>\n    <td style=\"text-align:center;\">${checkoutButton}</td>\n  </tr>`;\n});\n\n// Embed the appointments data as JSON for use in the client-side script.\nconst appointmentsData = JSON.stringify(appointments);\n\n// Build the full HTML document.\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Appointments</title>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      font-family: Arial, sans-serif;\n      background-image: url('https://file.taskfire.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png');\n      background-size: cover;\n      background-position: center;\n      overflow: hidden;\n    }\n    .container {\n      max-width: 900px;\n      width: 100%;\n      background-color: rgba(255,255,255,0.9);\n      margin: 40px auto;\n      padding: 16px;\n      border-radius: 8px;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n      overflow: hidden;\n    }\n    h2 {\n      text-align: center;\n      margin-bottom: 16px;\n      color: #111827;\n    }\n    .table-responsive {\n      margin-top: 16px;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background-color: #ffffff;\n      font-size: 14px;\n      line-height: 1.4em;\n    }\n    thead {\n      background-color: #000;\n      color: #fff;\n    }\n    thead th {\n      padding: 12px;\n      text-align: left;\n      border-bottom: 1px solid #d1d5db;\n    }\n    tbody td {\n      padding: 12px;\n      border-top: 1px solid #e5e7eb;\n      vertical-align: middle;\n    }\n    tbody tr:hover {\n      background-color: #f9fafb;\n    }\n    .checkout-button {\n      padding: 8px 16px;\n      background-color: #f44336;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n    }\n    .checkout-button:hover {\n      background-color: #d32f2f;\n    }\n    .checkout-button:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n    .back-button {\n      padding: 8px 16px;\n      background-color: #1976d2;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n      margin-top: 20px;\n    }\n    .back-button:hover {\n      background-color: #1565c0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Appointments</h2>\n    <div class=\"table-responsive\">\n      <table>\n        <thead>\n          <tr>\n            <th>Attending</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Status</th>\n            <th style=\"text-align:center;\">Checkout</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${rows}\n        </tbody>\n      </table>\n    </div>\n    <div style=\"text-align: center;\">\n      <button class=\"back-button\" onclick=\"backToScheduler()\">Back to Scheduler</button>\n    </div>\n  </div>\n  <script>\n    // Parse the embedded appointments data.\n    const appointmentsData = ${appointmentsData};\n\n    // Read the \"url\" parameter from the current page URL.\n    const urlParams = new URLSearchParams(window.location.search);\n    const returnUrl = urlParams.get('url');\n\n    // When a checkout button is clicked, disable it, show a loader, post the appointment data,\n    // and then automatically redirect to the returnUrl (if provided).\n    function checkoutAppointment(index) {\n      const appointment = appointmentsData[index];\n      const button = document.getElementById('checkout-button-' + index);\n      if (button) {\n        button.disabled = true;\n        button.innerText = \"Loading...\";\n      }\n      fetch('https://xl.epicpc.com/webhook/39bb0bf8-8a26-42d3-9aeb-roomtablet', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(appointment)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n      .then(text => {\n        // If a \"url\" parameter is present, navigate there; otherwise do nothing.\n        if (returnUrl) {\n          window.location.href = returnUrl;\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        if (button) {\n          button.disabled = false;\n          button.innerText = \"Checkout\";\n        }\n      });\n    }\n\n    // The Back to Scheduler button redirects to the URL specified in the \"url\" parameter.\n    function backToScheduler() {\n      if (returnUrl) {\n        window.location.href = returnUrl;\n      }\n    }\n  </script>\n</body>\n</html>`;\n\n// Return the generated HTML as the output of this node.\nreturn [{ json: { html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3760,
        1340
      ],
      "id": "739d8b0c-6bbf-4820-9eee-598acf4c9ad4",
      "name": "Code79"
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "=https://xl.epicpc.com/webhook/b4264e0e-085f-49c0-9471-1009eafa4ce01?fullName={{ $json.PATIENT_FIRSTNAME }}%2B{{ $json.PATIENT_LASTNAME }}&patientId={{ $json.DEM_EXTERNALID }}&caretype=DCARE",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        2740,
        -620
      ],
      "id": "a0639ee3-a545-475e-a561-618b2077a2ac",
      "name": "Respond to Webhook19"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, now passing the parent page’s URL as a “url” parameter whenever iframe navigation occurs\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Extract the MRN (patientId) from the first item (if available)\nconst patientId = incomingData.length ? incomingData[0].MRN : '';\n\n// 3. Build the full HTML as a template literal, injecting the patientId into the checkout iframe URL\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --green: #2ecc71;\n      --green-d: #28b463;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      /* lighter overlay */\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html,\n    body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* ── Overlay background EPIC image ────────────────────────── */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* ── Top bar (hidden initially) ────────────────────────── */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    #btnVirtualClark {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    /* Left button: white bg, black text */\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    /* Middle button: dark blue bg, white text */\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Right button: orange style */\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* ── Frame container ────────────────────────── */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* ── Loader overlay ────────────────────────── */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* ── Back/Forward nav buttons fixed bottom left ────────────────────────── */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler (left) & Virtual Clark (right) buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar hidden initially -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\" aria-label=\"Quick Scheduler\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\" aria-label=\"Virtual Clark\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\" aria-label=\"Checkout Patient\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area hidden initially -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\" aria-label=\"Back\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\" aria-label=\"Forward\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected patientId from the n8n Code node\n    const patientId = \"${patientId}\";\n\n    // Base URLs for the manual & virtual actions\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    // Compute the current page’s full URL and URL-encode it once\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder page displayed before any action\n    const placeholderImage =\n      \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage =\n      \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>html,body{margin:0;height:100%;background:#000;overflow:hidden}img{width:100%;height:100%;object-fit:contain}</style></head><body><img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/></body></html>\\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n\n    // Navigation buttons and elements\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    // History stack and pointer to manage iframe navigation\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false; // to ignore events triggered by history push\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    // Build query string from current URL params excluding 'action'\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n\n    // Build url with base, action, current params, parent page URL, and cache-buster\n    function buildUrl(base, action) {\n      // Attach action and the parent page’s URL as \"url\" param\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    // Initial iframe state\n    frame.src = placeholderPage;\n\n    // Show main interface: hide overlay, show top bar + content with fade\n    function revealMainInterface() {\n      // Fade out overlay\n      initOverlay.classList.add(\"hidden\");\n      // After fade-out transition (400ms), set display:none\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      // Show top bar + iframe content\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n\n      // Show navigation buttons\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    // Add URL to history stack (if not navigating via back/forward)\n    function addToHistory(url) {\n      if (isNavigating) return;\n      // If not at the end, cut all forward history first\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    // Update navigation buttons enabled/disabled states\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n\n      // Update aria-disabled for accessibility\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    // On Back button click\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // On Forward button click\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    // Quick Scheduler button behavior (both initial overlay and top bar)\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Virtual Clark button behavior (both initial overlay and top bar)\n    function virtualClark() {\n      showLoader();\n      // Build URL with action=virtualClark, parent page, current params, timestamp\n      let url = webhookVirtualClark + \"?action=virtualClark&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    // Checkout Patient button behavior (top bar only)\n    // Now navigates the iframe directly to the checkout URL with patientId + parent page URL\n    function checkOutPatient() {\n      showLoader();\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?patientId=\\${patientId}&url=\\${parentPageUrl}\\`;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Initial overlay button event handlers\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    // Top bar button event handlers\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly as the webpage\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -1140
      ],
      "id": "83ed3894-ddc0-4ada-be5d-280978f10c55",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, fixing parentPageUrl logic \n// so it’s computed in-browser. “Checkout Patient” will include fullName, patientId, and url.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName and patientId (DEM_EXTERNALID)\nlet fullName = '';\nlet patientId = '';\nif (incomingData.length) {\n  const firstName = incomingData[0].PATIENT_FIRSTNAME || '';\n  const lastName = incomingData[0].PATIENT_LASTNAME || '';\n  // Encode each name segment, then join with %2B\n  fullName = encodeURIComponent(firstName) + '%2B' + encodeURIComponent(lastName);\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n}\n\n// 3. Build the full HTML as a template literal, injecting fullName and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler & Virtual Clark buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullName and patientId from n8n\n    const fullName = \"${fullName}\";\n    const patientId = \"${patientId}\";\n\n    // Base URLs\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    // Compute parent page’s URL in-browser\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder page HTML as data URI\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <style>\n              html, body { margin: 0; height: 100%; background: #000; overflow: hidden; }\n              img { width: 100%; height: 100%; object-fit: contain; }\n            </style>\n          </head>\n          <body>\n            <img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/>\n          </body>\n        </html>\n      \\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    frame.src = placeholderPage;\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    function checkOutPatient() {\n      showLoader();\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=\\${fullName}&patientId=\\${MRN}&url=\\${parentPageUrl}\\`;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -1280
      ],
      "id": "3b159296-e51e-4529-94d7-0dbaa8019d36",
      "name": "Code4"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, with “Checkout Patient” using MRN from incoming JSON as patientId\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName and patientId (now from MRN)\nlet fullName = '';\nlet patientId = '';\nif (incomingData.length) {\n  const firstName = incomingData[0].PATIENT_FIRSTNAME || '';\n  const lastName = incomingData[0].PATIENT_LASTNAME || '';\n  // Encode each name segment, then join with %2B\n  fullName = encodeURIComponent(firstName) + '%2B' + encodeURIComponent(lastName);\n\n  // Use MRN from incoming JSON\n  patientId = incomingData[0].MRN || '';\n}\n\n// 3. Build the full HTML as a template literal, injecting fullName and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler & Virtual Clark buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullName and patientId (from MRN) from n8n\n    const fullName = \"${fullName}\";\n    const patientId = \"${patientId}\";\n\n    // Base URLs\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    // Compute parent page’s URL in-browser\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder page HTML as data URI\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <style>\n              html, body { margin: 0; height: 100%; background: #000; overflow: hidden; }\n              img { width: 100%; height: 100%; object-fit: contain; }\n            </style>\n          </head>\n          <body>\n            <img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/>\n          </body>\n        </html>\n      \\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    frame.src = placeholderPage;\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    function checkOutPatient() {\n      showLoader();\n      // Use MRN as patientId\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=\\${fullName}&patientId=\\${patientId}&url=\\${parentPageUrl}\\`;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        -1420
      ],
      "id": "86041d14-83ba-4db8-8a08-2fb695aa3798",
      "name": "Code5"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='{{ $json.query.location }}%%';\ndeclare @RM_ABBR varchar(20)='%{{ $json.query.room }}%';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        -20,
        -80
      ],
      "id": "d2950be1-b0c4-4e9f-8421-6b240f2ce6ed",
      "name": "Microsoft SQL4",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "path": "9635c884-df57-4076-9d04-e32de5c22829",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -200,
        -480
      ],
      "id": "bb4a5863-01e2-49c6-8679-39e52044530f",
      "name": "Webhook5",
      "webhookId": "9635c884-df57-4076-9d04-e32de5c22829",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# OLD",
        "height": 220,
        "width": 520,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        -520
      ],
      "typeVersion": 1,
      "id": "42d96c1b-4848-4473-a84e-77891526d5cc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, ensuring Checkout uses the MRN as patientId \n// and formats fullName with plus signs for spaces.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from MRN)\nlet fullNameParam = '';\nlet patientId = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = `${incomingData[0].PATIENT_FIRSTNAME} ${incomingData[0].PATIENT_LASTNAME}`;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use MRN field directly\n  patientId = incomingData[0].MRN || '';\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <!-- Inter (optional) -->\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler & Virtual Clark buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullNameParam and patientId from n8n\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n\n    // Base URLs\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    // Compute parent page’s URL in-browser\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder page HTML as data URI\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <style>\n              html, body { margin: 0; height: 100%; background: #000; overflow: hidden; }\n              img { width: 100%; height: 100%; object-fit: contain; }\n            </style>\n          </head>\n          <body>\n            <img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/>\n          </body>\n        </html>\n      \\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    frame.src = placeholderPage;\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    function checkOutPatient() {\n      showLoader();\n      // Build checkout URL using MRN as patientId, and fullNameParam plus parentPageUrl\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=\\${fullNameParam}&patientId=\\${patientId}&url=\\${parentPageUrl}\\`;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        260,
        -1540
      ],
      "id": "796ab54e-79f1-4712-855e-4967d46d0c93",
      "name": "Code6"
    },
    {
      "parameters": {
        "jsCode": "// Get all incoming appointment items.\nconst appointments = $input.all().map(item => item.json);\n\n// Retrieve the redirect parameters from the \"Webhook4\" node.\nconst webhook4Data = $node[\"Webhook4\"].json;\nconst fullNameValue = encodeURIComponent(webhook4Data.query.fullName);\nconst patientIdValue = encodeURIComponent(webhook4Data.query.patientId);\n\n// Helper: Split the Appointment_DateTime string into a date and a time.\nfunction formatDateTime(dateTimeStr) {\n  const parts = dateTimeStr.split(' ');\n  return {\n    date: parts[0] || '',\n    time: parts.slice(1).join(' ') || ''\n  };\n}\n\n// Build HTML table rows for each appointment.\nlet rows = '';\nappointments.forEach((appointment, index) => {\n  const dt = formatDateTime(appointment.Appointment_DateTime || '');\n  const attendingName = `${appointment.AttendingFirstName || ''} ${appointment.AttendingLastName || ''}`.trim();\n  const location = appointment.Appt_Sched_Department_Desc || appointment.Appt_Sched_Location_Desc || '';\n  // If Check_Out_Time exists (non-empty), mark status as \"Checked Out\"\n  const status = (appointment.Check_Out_Time && appointment.Check_Out_Time.trim() !== '')\n    ? \"Checked Out\"\n    : \"\";\n  // Render the checkout button only if not already checked out.\n  const checkoutButton = (status === \"Checked Out\")\n    ? \"\"\n    : `<button id=\"checkout-button-${index}\" class=\"checkout-button\" onclick=\"checkoutAppointment(${index})\">Checkout</button>`;\n  \n  rows += `<tr>\n    <td>${attendingName}</td>\n    <td>${location}</td>\n    <td>${dt.date}</td>\n    <td>${dt.time}</td>\n    <td>${status}</td>\n    <td style=\"text-align:center;\">${checkoutButton}</td>\n  </tr>`;\n});\n\n// Embed the appointments data as JSON for use in the client-side script.\nconst appointmentsData = JSON.stringify(appointments);\n\n// Build the full HTML document.\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Appointments</title>\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: 100%;\n      font-family: Arial, sans-serif;\n      background-image: url('https://file.taskfire.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png');\n      background-size: cover;\n      background-position: center;\n      overflow: hidden;\n    }\n    .container {\n      max-width: 900px;\n      width: 100%;\n      background-color: rgba(255,255,255,0.9);\n      margin: 40px auto;\n      padding: 16px;\n      border-radius: 8px;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n      overflow: hidden;\n    }\n    h2 {\n      text-align: center;\n      margin-bottom: 16px;\n      color: #111827;\n    }\n    .table-responsive {\n      margin-top: 16px;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      background-color: #ffffff;\n      font-size: 14px;\n      line-height: 1.4em;\n    }\n    thead {\n      background-color: #000;\n      color: #fff;\n    }\n    thead th {\n      padding: 12px;\n      text-align: left;\n      border-bottom: 1px solid #d1d5db;\n    }\n    tbody td {\n      padding: 12px;\n      border-top: 1px solid #e5e7eb;\n      vertical-align: middle;\n    }\n    tbody tr:hover {\n      background-color: #f9fafb;\n    }\n    .checkout-button {\n      padding: 8px 16px;\n      background-color: #f44336;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n    }\n    .checkout-button:hover {\n      background-color: #d32f2f;\n    }\n    .checkout-button:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n    .back-button {\n      padding: 8px 16px;\n      background-color: #1976d2;\n      color: #fff;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 14px;\n      margin-top: 20px;\n    }\n    .back-button:hover {\n      background-color: #1565c0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h2>Appointments</h2>\n    <div class=\"table-responsive\">\n      <table>\n        <thead>\n          <tr>\n            <th>Attending</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Time</th>\n            <th>Status</th>\n            <th style=\"text-align:center;\">Checkout</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${rows}\n        </tbody>\n      </table>\n    </div>\n    <div style=\"text-align: center;\">\n      <button class=\"back-button\" onclick=\"backToScheduler()\">Back to Scheduler</button>\n    </div>\n  </div>\n  <script>\n    // Parse the embedded appointments data.\n    const appointmentsData = ${appointmentsData};\n\n    // Read the \"url\" parameter from the current page URL.\n    const urlParams = new URLSearchParams(window.location.search);\n    const returnUrl = urlParams.get('url');\n\n    // When a checkout button is clicked, disable it, show a loader, post the appointment data,\n    // and then automatically redirect the PARENT window to returnUrl (if provided).\n    function checkoutAppointment(index) {\n      const appointment = appointmentsData[index];\n      const button = document.getElementById('checkout-button-' + index);\n      if (button) {\n        button.disabled = true;\n        button.innerText = \"Loading...\";\n      }\n      fetch('https://xl.epicpc.com/webhook/39bb0bf8-8a26-42d3-9aeb-roomtablet', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(appointment)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n      .then(text => {\n        // Redirect the parent frame if returnUrl is present.\n        if (returnUrl) {\n          window.top.location.href = returnUrl;\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        if (button) {\n          button.disabled = false;\n          button.innerText = \"Checkout\";\n        }\n      });\n    }\n\n    // The Back to Scheduler button redirects the PARENT window to returnUrl (if provided).\n    function backToScheduler() {\n      if (returnUrl) {\n        window.top.location.href = returnUrl;\n      }\n    }\n  </script>\n</body>\n</html>`;\n\n// Return the generated HTML as the output of this node.\nreturn [{ json: { html } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3700,
        1220
      ],
      "id": "802df1b6-32c1-4995-893c-737414005ff6",
      "name": "Code77"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "  {\n    \"IMRESCHED_CODE\": 2796580,\n    \"IMREDEM_CODE\": 80076,\n    \"DEM_EXTERNALID\": \"197520\",\n    \"IMREPROV_CODE\": 13304,\n    \"SCHED_TIMEIN\": \"2025-05-24T12:23:00.697Z\",\n    \"SCHED_TIMESTART\": \"2025-05-21T10:00:00.000Z\",\n    \"SCHED_TIMEOUT\": null,\n    \"LOCATION_NAME\": \"EPIC Detroit 7 Mile\",\n    \"LOCATION_ID\": 66,\n    \"PATIENT_FIRSTNAME\": \"TEDDY\",\n    \"PATIENT_LASTNAME\": \"TEST\",\n    \"PATIENT_PHONE\": null,\n    \"SCHED_DATE\": \"2025-05-21T12:00:00.000Z\",\n    \"SCHED_PMSID\": \"25624799\",\n    \"SCHED_TEXT\": \"TEDDY TEST\",\n    \"CAREGIVER_NAME\": \"Joseph, rosilin NP\",\n    \"ROOM_ABBR_TEXT\": \"A1\",\n    \"ROOM_TEXT\": \"ROOM A1\",\n    \"TRACKINGSTATUS_TEXT\": \"LEA MARIE\"\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2220,
        340
      ],
      "id": "8e0649b1-5dc6-4f69-a174-858b33e497c9",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "81cc0d44-0312-49f7-b583-7cc6f6be898d",
              "leftValue": "={{ $json.query.room }}",
              "rightValue": "Z1",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1900,
        -140
      ],
      "id": "8950344e-9fdf-404d-86df-50b8824a6a4c",
      "name": "If2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6f7193ad-35f5-4c1e-86d9-aa3b0a24e7a6",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2760,
        -460
      ],
      "id": "cb2fd961-093b-4160-aede-d7db5bcd0cfd",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, using DEM_EXTERNALID as patientId\n// and PATIENT_FIRSTNAME / PATIENT_LASTNAME for fullName.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from DEM_EXTERNALID)\nlet fullNameParam = '';\nlet patientId = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = `${incomingData[0].PATIENT_FIRSTNAME} ${incomingData[0].PATIENT_LASTNAME}`;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use DEM_EXTERNALID field as patientId\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler & Virtual Clark buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\" type=\"button\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\" type=\"button\">Virtual&nbsp;Clark</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\" type=\"button\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\" aria-disabled=\"true\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\" aria-disabled=\"true\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullNameParam and patientId (from DEM_EXTERNALID) from n8n\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n\n    // Base URLs\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://placeholder.webhook/virtual-clark\";\n\n    // Compute parent page’s URL in-browser\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder page HTML as data URI\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = \"data:text/html;charset=utf-8,\" +\n      encodeURIComponent(\\`\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <style>\n              html, body { margin: 0; height: 100%; background: #000; overflow: hidden; }\n              img { width: 100%; height: 100%; object-fit: contain; }\n            </style>\n          </head>\n          <body>\n            <img src=\"\\${placeholderImage}\" alt=\"Placeholder\"/>\n          </body>\n        </html>\n      \\`);\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() {\n      loader.classList.remove(\"hidden\");\n    }\n    function hideLoader() {\n      loader.classList.add(\"hidden\");\n    }\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      updateNavButtons();\n    });\n\n    function getCurrentParamsString() {\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      return params.toString();\n    }\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    frame.src = placeholderPage;\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => {\n        initOverlay.style.display = \"none\";\n      }, 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n      updateNavButtons();\n    }\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n      updateNavButtons();\n    }\n\n    function updateNavButtons() {\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n      btnBack.setAttribute(\"aria-disabled\", btnBack.disabled.toString());\n      btnForward.setAttribute(\"aria-disabled\", btnForward.disabled.toString());\n    }\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => {\n          isNavigating = false;\n          updateNavButtons();\n        }, 500);\n        showLoader();\n      }\n    });\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n    function virtualClark() {\n      showLoader();\n      let url = webhookVirtualClark + \"?action=virtualClark&url=\" + parentPageUrl;\n      const currentParams = getCurrentParamsString();\n      if (currentParams) {\n        url += \"&\" + currentParams;\n      }\n      url += \"&_=\" + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n    function checkOutPatient() {\n      showLoader();\n      // Build checkout URL with DEM_EXTERNALID as patientId\n      const url = \\`https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=\\${fullNameParam}&patientId=\\${patientId}&url=\\${parentPageUrl}\\`;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        -1260
      ],
      "id": "4533535f-33e8-4fad-8d6c-2bb66b5ba265",
      "name": "Code7"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='%{{ $json.query.location }}%';\ndeclare @RM_ABBR varchar(20)='%{{ $json.query.room }}%';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        820,
        1000
      ],
      "id": "0710873e-2a02-4794-8594-fb986abc225b",
      "name": "Microsoft SQL5",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "=https://xl.epicpc.com/webhook/aa888bfa-2c88-44ed-af20-40eaa3146aa7?user={{ $json.DEM_EXTERNALID }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1040,
        1000
      ],
      "id": "fee8e323-bf4a-4e29-a015-e7a2f887327e",
      "name": "Respond to Webhook20"
    },
    {
      "parameters": {
        "path": "0dfd1586-60f3-4735-b8e7-4ff7da3a0d83",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        580,
        1000
      ],
      "id": "a93ce1c0-6889-4b04-b501-8720a573946d",
      "name": "Webhook7",
      "webhookId": "0dfd1586-60f3-4735-b8e7-4ff7da3a0d83"
    },
    {
      "parameters": {
        "content": "# Virtual QR",
        "height": 200,
        "width": 1260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        180,
        960
      ],
      "id": "bda11cb8-76a8-4e8b-9727-54ddc3c583ce",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, using DEM_EXTERNALID as patientId\n// and PATIENT_FIRSTNAME / PATIENT_LASTNAME for fullName.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from DEM_EXTERNALID)\nlet fullNameParam = '';\nlet patientId = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = incomingData[0].PATIENT_FIRSTNAME + ' ' + incomingData[0].PATIENT_LASTNAME;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use DEM_EXTERNALID field as patientId\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 6rem;\n      max-width: 800px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: 1 1 40%;\n      max-width: 350px;\n      padding: 2.8rem 3rem;\n      font-size: 2rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n      text-align: center;\n      min-width: 250px;\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.6rem 1.2rem;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      flex-shrink: 0;\n      min-width: 130px;\n      text-align: center;\n      user-select: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-dark-blue {\n      background: var(--dark-blue);\n      color: #fff;\n    }\n    .btn-dark-blue:hover,\n    .btn-dark-blue:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler & Virtual Clark buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn btn-dark-blue\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullNameParam and patientId from n8n\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n\n    // Base webhooks\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://xl.epicpc.com/webhook/aa888bfa-2c88-44ed-af20-40eaa3146aa7\";\n\n    // Parent page’s URL\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder content while loading\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = 'data:text/html;charset=utf-8,' +\n      encodeURIComponent(\n        '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>' +\n        'html,body{margin:0;height:100%;background:#000;overflow:hidden;}' +\n        'img{width:100%;height:100%;object-fit:contain;}' +\n        '</style></head><body>' +\n        '<img src=\"' + placeholderImage + '\" alt=\"Placeholder\"/>' +\n        '</body></html>'\n      );\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() { loader.classList.remove(\"hidden\"); }\n    function hideLoader() { loader.classList.add(\"hidden\"); }\n\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n    });\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n    }\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => initOverlay.style.display = \"none\", 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n    }\n\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      const rest = params.toString();\n      if (rest) url += \"&\" + rest;\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function virtualClark() {\n      showLoader();\n      // Use string concatenation instead of template literal\n      const url = webhookVirtualClark + '?user=' + patientId;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function checkOutPatient() {\n      showLoader();\n      const url =\n        'https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=' +\n        fullNameParam +\n        '&patientId=' +\n        patientId +\n        '&url=' +\n        parentPageUrl;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n\n    // start with placeholder\n    frame.src = placeholderPage;\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        380,
        -1760
      ],
      "id": "b2f86bb7-6d3b-4b09-8671-f793f7d833ae",
      "name": "Code8"
    },
    {
      "parameters": {
        "path": "c5d8bd6f-8803-4296-a9fe-789df93c5385",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1720,
        720
      ],
      "id": "77646a59-5a69-4f0b-b344-062b00dffbaf",
      "name": "Instant Visit",
      "webhookId": "c5d8bd6f-8803-4296-a9fe-789df93c5385"
    },
    {
      "parameters": {
        "content": "# Instant Visit",
        "height": 380,
        "width": 1920,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1640,
        580
      ],
      "typeVersion": 1,
      "id": "7f357c43-f68d-421e-bdb4-e76fbaa2d02b",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>Working on Feature</title>\n<style>\n  /* Reset */\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body, html {\n    height: 100%;\n    background: linear-gradient(135deg, #1e1e1e, #2c2c2c);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    overflow: hidden;\n    perspective: 900px;\n  }\n\n  /* Container for text and frame */\n  .wrapper {\n    position: relative;\n    width: 440px;\n    height: 160px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  /* The static readable text */\n  .text {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #eeeeee;\n    font-weight: 700;\n    font-size: 2.2rem;\n    text-align: center;\n    user-select: none;\n    line-height: 1.25;\n    z-index: 2;\n    max-width: 90vw;\n  }\n\n  .subtitle {\n    font-weight: 500;\n    font-size: 1rem;\n    margin-top: 0.4em;\n    color: #cccccc;\n  }\n\n  /* 3D wireframe cube container */\n  .cube {\n    position: absolute;\n    width: 300px;\n    height: 140px;\n    top: 50%;\n    left: 50%;\n    transform-style: preserve-3d;\n    transform-origin: center center;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n  }\n\n  /* Each edge (line) of the cube */\n  .edge {\n    position: absolute;\n    background-color: #888;\n    opacity: 0.4;\n    border-radius: 1px;\n  }\n\n  /* Define the 12 edges of the cube */\n\n  /* Width, height, depth respectively */\n  /* Cube approx 300 x 140 x 80 */\n\n  /* Front face edges */\n  .edge.front.top {\n    width: 300px;\n    height: 2px;\n    top: 0;\n    left: 0;\n  }\n  .edge.front.bottom {\n    width: 300px;\n    height: 2px;\n    bottom: 0;\n    left: 0;\n  }\n  .edge.front.left {\n    width: 2px;\n    height: 140px;\n    top: 0;\n    left: 0;\n  }\n  .edge.front.right {\n    width: 2px;\n    height: 140px;\n    top: 0;\n    right: 0;\n  }\n\n  /* Back face edges (translated along z-axis) */\n  .edge.back.top {\n    width: 300px;\n    height: 2px;\n    top: 0;\n    left: 0;\n    transform: translateZ(-80px);\n  }\n  .edge.back.bottom {\n    width: 300px;\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    transform: translateZ(-80px);\n  }\n  .edge.back.left {\n    width: 2px;\n    height: 140px;\n    top: 0;\n    left: 0;\n    transform: translateZ(-80px);\n  }\n  .edge.back.right {\n    width: 2px;\n    height: 140px;\n    top: 0;\n    right: 0;\n    transform: translateZ(-80px);\n  }\n\n  /* Connect front and back faces (depth edges) */\n  .edge.depth.topLeft {\n    width: 2px;\n    height: 80px;\n    top: 0;\n    left: 0;\n    transform-origin: top;\n    transform: translateX(0) translateZ(0);\n  }\n  .edge.depth.topRight {\n    width: 2px;\n    height: 80px;\n    top: 0;\n    right: 0;\n    transform-origin: top;\n    transform: translateX(0) translateZ(0);\n  }\n  .edge.depth.bottomLeft {\n    width: 2px;\n    height: 80px;\n    bottom: 0;\n    left: 0;\n    transform-origin: bottom;\n    transform: translateX(0) translateZ(0);\n  }\n  .edge.depth.bottomRight {\n    width: 2px;\n    height: 80px;\n    bottom: 0;\n    right: 0;\n    transform-origin: bottom;\n    transform: translateX(0) translateZ(0);\n  }\n\n</style>\n</head>\n<body>\n\n<div class=\"wrapper\" aria-label=\"We are currently working on this feature.\">\n  <div class=\"text\">\n    We are currently working on this feature\n    <div class=\"subtitle\">Thank you for your patience!</div>\n  </div>\n  <div class=\"cube\" id=\"cube\">\n    <!-- Front -->\n    <div class=\"edge front top\"></div>\n    <div class=\"edge front bottom\"></div>\n    <div class=\"edge front left\"></div>\n    <div class=\"edge front right\"></div>\n\n    <!-- Back -->\n    <div class=\"edge back top\"></div>\n    <div class=\"edge back bottom\"></div>\n    <div class=\"edge back left\"></div>\n    <div class=\"edge back right\"></div>\n\n    <!-- Depth -->\n    <div class=\"edge depth topLeft\"></div>\n    <div class=\"edge depth topRight\"></div>\n    <div class=\"edge depth bottomLeft\"></div>\n    <div class=\"edge depth bottomRight\"></div>\n  </div>\n</div>\n\n<script>\n  // In this script, animate cube rotation slowly along X and Y axis\n\n  const cube = document.getElementById('cube');\n  let angleX = 0;\n  let angleY = 0;\n\n  function animate() {\n    angleX += 0.15; // degrees per frame, slow rotation\n    angleY += 0.1;\n\n    // Keep angle in 0-360 range\n    if (angleX >= 360) angleX -= 360;\n    if (angleY >= 360) angleY -= 360;\n\n    cube.style.transform = \n      `translate(-50%, -50%) rotateX(${angleX}deg) rotateY(${angleY}deg)`;\n    \n    requestAnimationFrame(animate);\n  }\n\n  animate();\n</script>\n\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2920,
        760
      ],
      "id": "111e20f3-4c86-40db-b1ca-452259285a22",
      "name": "Respond to Webhook21"
    },
    {
      "parameters": {
        "type": "SHA512",
        "value": "=create{{ $json[\"apicall\"] }}0moVaMlz0NHGUQyie9X8h1W4BlKsGF6P1qtdqkiGUM"
      },
      "id": "9f5500f0-0f5c-4e60-8a1c-7ca2c052707b",
      "name": "Crypto",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        2960,
        420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://vid.epicpc.com/bigbluebutton/api/create?{{ $json[\"apicall\"] }}&checksum={{ $json[\"data\"] }}",
        "options": {}
      },
      "id": "f9a4c295-0d42-47bb-b15d-d7075a8d3ac6",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3100,
        420
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "apicall",
              "stringValue": "=allowStartStopRecording=true&autoStartRecording=false&attendeePW=ap&meetingID={{ $json.DEM_EXTERNALID }}&moderatorPW=mp&name={{ encodeURIComponent($json[\"DEM_FIRSTNAME\"]) }}%20{{ encodeURIComponent($json[\"DEM_LASTNAME\"]) }}&record=true&disabledFeatures=sharedNotes,chat&preUploadedPresentation=https://toms.app/tools/blank.pdf&meta_bbb-recording-ready-url=https%3A%2F%2Fxl.epicpc.com%2Fwebhook%2F4ca2f260-d673-4671-a207-99868dab5c75&meta_endCallbackUrl=https://xl.epicpc.com/webhook/cbfc9f1f-9f13-4243-830a-bcf54f2a218f&endWhenNoModerator=true&endWhenNoModeratorDelayInMinutes=5&logo=https://i0.wp.com/epichs.org/wp-content/uploads/2024/01/Side-Black-Font.png&logoutURL={{ encodeURIComponent($('Instant Visit').item.json.headers.referer) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3758297a-1b41-48f7-ad3a-b744e7f25f4c",
      "name": "Manual Record1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2800,
        420
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='%{{ $json.location }}%';\ndeclare @RM_ABBR varchar(20)='{{ $json.room }}';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        2120,
        820
      ],
      "id": "e679eee5-76d8-4881-9dd8-bf8c9bec0085",
      "name": "Microsoft SQL6",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "A5at9JUY2hWqZiFY",
          "mode": "list",
          "cachedResultName": "Parse-RefererURL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "headers_referer": "={{ $json.headers.referer }}"
          },
          "matchingColumns": [
            "headers_referer"
          ],
          "schema": [
            {
              "id": "headers_referer",
              "displayName": "headers_referer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1960,
        720
      ],
      "name": "Call Parse-RefererURL",
      "id": "661e0eb7-6157-4c54-b6ab-bd89cee0193c"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='{{ $json.query.location }}%%';\ndeclare @RM_ABBR varchar(20)='%{{ $json.query.room }}%';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        2100,
        560
      ],
      "id": "afd3cd8d-3b41-4649-85ca-dbf75e2c343d",
      "name": "Microsoft SQL7",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "type": "SHA512",
        "value": "=join{{ $json[\"apicall\"] }}0moVaMlz0NHGUQyie9X8h1W4BlKsGF6P1qtdqkiGUM"
      },
      "id": "1bbbc7c5-f522-4bf5-92c5-280bd353feca",
      "name": "Crypto3",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        3640,
        380
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "apicall",
              "stringValue": "=fullName={{ encodeURIComponent($('Merge').item.json[\"PATIENT_FIRSTNAME\"]) }}&meetingID={{ $('Merge').item.json[\"DEM_EXTERNALID\"] }}&password=mp&redirect=true&role=VIEWER&userdata-bbb_auto_join_audio=true&userdata-bbb_skip_check_audio=true&userdata-bbb_skip_check_audio_on_first_join=true&userdata-bbb_skip_echotest_if_previous_device=true&userdata-bbb_listen_only_mode=false&userdata-bbb_force_listen_only=false&userdata-bbb_auto_share_webcam=true&userdata-bbb_skip_video_preview=true&userdata-bbb_show_session_details_on_join=false"
            }
          ]
        },
        "options": {}
      },
      "id": "642b649a-9bac-4c08-88ed-3e643d1c1ddf",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        3480,
        360
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3320,
        420
      ],
      "id": "11f8a053-8c6c-4b6a-a34b-df49197fca2a",
      "name": "Merge"
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "=https://meet.automade.io/bigbluebutton/api/join?{{ $json[\"apicall\"] }}&checksum={{ $json[\"data\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3620,
        240
      ],
      "id": "4c93fb3e-2358-4a10-bad3-75bdee52e8fa",
      "name": "Respond to Webhook22"
    },
    {
      "parameters": {
        "type": "SHA512",
        "value": "=create{{ $json[\"apicall\"] }}ERC1mdLFFlfZ3T9AHVu3Fkssb8TDVRfUBcOrKiOo"
      },
      "id": "b3d80c21-9f49-4c15-9afc-c20e764cf24b",
      "name": "Crypto2",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        2740,
        280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://meet.automade.io/bigbluebutton/api/create?{{ $json[\"apicall\"] }}&checksum={{ $json[\"data\"] }}",
        "options": {}
      },
      "id": "3c896651-29ea-4f14-b413-3505f634bd4b",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2880,
        280
      ]
    },
    {
      "parameters": {
        "type": "SHA512",
        "value": "=join{{ $json[\"apicall\"] }}ERC1mdLFFlfZ3T9AHVu3Fkssb8TDVRfUBcOrKiOo"
      },
      "id": "d044c5b4-2a14-4a26-8d5e-3c28a8edc144",
      "name": "Crypto4",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        3420,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f3f388f6-690a-45ab-b787-705c24ad36cd",
              "leftValue": "={{ $json.DEM_EXTERNALID }}",
              "rightValue": "=",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2540,
        560
      ],
      "id": "ac2978db-66e4-49fd-9d02-cea5170fcfb2",
      "name": "If3",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "=https://vid.epicpc.com/bigbluebutton/api/join?{{ $json[\"apicall\"] }}&checksum={{ $json[\"data\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3620,
        380
      ],
      "id": "c228bef5-55e8-40cc-ad75-c81104f01f01",
      "name": "Respond to Webhook24"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "Please assign a patient to the room.",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2920,
        620
      ],
      "id": "397033a0-bcb7-4ec7-817d-043245bbed6b",
      "name": "Respond to Webhook23"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "  {\n    \"IMRESCHED_CODE\": 2796580,\n    \"IMREDEM_CODE\": 80076,\n    \"DEM_EXTERNALID\": \"197520\",\n    \"IMREPROV_CODE\": 13304,\n    \"SCHED_TIMEIN\": \"2025-05-24T12:23:00.697Z\",\n    \"SCHED_TIMESTART\": \"2025-05-21T10:00:00.000Z\",\n    \"SCHED_TIMEOUT\": null,\n    \"LOCATION_NAME\": \"EPIC Detroit 7 Mile\",\n    \"LOCATION_ID\": 66,\n    \"PATIENT_FIRSTNAME\": \"TEDDY\",\n    \"PATIENT_LASTNAME\": \"TEST\",\n    \"PATIENT_PHONE\": null,\n    \"SCHED_DATE\": \"2025-05-21T12:00:00.000Z\",\n    \"SCHED_PMSID\": \"25624799\",\n    \"SCHED_TEXT\": \"TEDDY TEST\",\n    \"CAREGIVER_NAME\": \"Joseph, rosilin NP\",\n    \"ROOM_ABBR_TEXT\": \"A1\",\n    \"ROOM_TEXT\": \"ROOM A1\",\n    \"TRACKINGSTATUS_TEXT\": \"LEA MARIE\"\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2680,
        680
      ],
      "id": "76b57325-03a7-4a92-b801-54e9ebcf3251",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "apicall",
              "stringValue": "=fullName=Thomas&meetingID={{ $json.DEM_EXTERNALID }}&password=mp&redirect=true&role=MODERATOR&userdata-bbb_auto_join_audio=true&userdata-bbb_skip_check_audio=true&userdata-bbb_skip_check_audio_on_first_join=true&userdata-bbb_skip_echotest_if_previous_device=true&userdata-bbb_listen_only_mode=false&userdata-bbb_force_listen_only=false&userdata-bbb_auto_share_webcam=true&userdata-bbb_skip_video_preview=true&userdata-bbb_show_session_details_on_join=false&webcamBackgroundURL=https%3A%2F%2Ffile.cybertech.app%2FKiosk%2FEPIC%2FHQ%2Fepic%20health%20wall%20yellow.png"
            }
          ]
        },
        "options": {}
      },
      "id": "8d0a6d4b-16a2-4ef9-968d-b64db9e917b0",
      "name": "Provider Moderator Link3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        3520,
        20
      ]
    },
    {
      "parameters": {
        "type": "SHA512",
        "value": "=join{{ $json[\"apicall\"] }}ERC1mdLFFlfZ3T9AHVu3Fkssb8TDVRfUBcOrKiOo"
      },
      "id": "b610db36-7641-4d03-aa4c-d44ae568bf31",
      "name": "Crypto5",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        3620,
        20
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "=<iframe\n  src=\"https://meet.automade.io/bigbluebutton/api/join?{{ $json[\"apicall\"] }}&checksum={{ $json[\"data\"] }}\"\n  style=\"width:100%; height:600px; border:0;\"\n  allow=\"geolocation *; microphone *; camera *; display-capture *;\"\n  allowFullScreen\n  webkitallowfullscreen\n  mozallowfullscreen\n  sandbox=\"allow-same-origin allow-scripts allow-modals allow-forms\"\n  scrolling=\"no\">\n</iframe>\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        3640,
        100
      ],
      "id": "ad1f11f2-b3ae-48be-8779-5be20752283f",
      "name": "Respond to Webhook25"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "\n  {\n    \"IMRESCHED_CODE\": 2796580,\n    \"IMREDEM_CODE\": 80076,\n    \"DEM_EXTERNALID\": \"197520\",\n    \"IMREPROV_CODE\": 13304,\n    \"SCHED_TIMEIN\": \"2025-05-24T12:23:00.697Z\",\n    \"SCHED_TIMESTART\": \"2025-05-21T10:00:00.000Z\",\n    \"SCHED_TIMEOUT\": null,\n    \"LOCATION_NAME\": \"EPIC Detroit 7 Mile\",\n    \"LOCATION_ID\": 66,\n    \"PATIENT_FIRSTNAME\": \"TEDDY\",\n    \"PATIENT_LASTNAME\": \"TEST\",\n    \"PATIENT_PHONE\": null,\n    \"SCHED_DATE\": \"2025-05-21T12:00:00.000Z\",\n    \"SCHED_PMSID\": \"25624799\",\n    \"SCHED_TEXT\": \"TEDDY TEST\",\n    \"CAREGIVER_NAME\": \"Joseph, rosilin NP\",\n    \"ROOM_ABBR_TEXT\": \"A1\",\n    \"ROOM_TEXT\": \"ROOM A1\",\n    \"TRACKINGSTATUS_TEXT\": \"LEA MARIE\"\n  }\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2080,
        440
      ],
      "id": "e07f3ad4-680e-44f6-b76f-fd5d85b4314f",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "baseDN": "OU=Exclus1ve Physicians,DC=ecoe,DC=local",
        "searchFor": "(objectclass=user)",
        "attribute": "cn",
        "searchText": "={{ $json.First_Name }} {{ $json.Last_Name }}",
        "options": {}
      },
      "type": "n8n-nodes-base.ldap",
      "typeVersion": 1,
      "position": [
        5440,
        780
      ],
      "id": "e2c2192d-a446-43a1-a2a1-28b6d40192e4",
      "name": "LDAP",
      "alwaysOutputData": true,
      "credentials": {
        "ldap": {
          "id": "lMuN0cx6hMG02pC1",
          "name": "LDAP IT Helpdesk"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        6200,
        840
      ],
      "id": "0612702a-f2bd-4a29-8246-a06a1af453cd",
      "name": "Merge1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5300,
        620
      ],
      "id": "bce660a3-caca-4711-9034-2bb185767a0e",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "baseDN": "OU=Exclus1ve Physicians,DC=ecoe,DC=local",
        "searchFor": "(objectclass=user)",
        "attribute": "sAMAccountName",
        "searchText": "=ithelpdesk",
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.ldap",
      "typeVersion": 1,
      "position": [
        4460,
        240
      ],
      "id": "3bfced0a-77b8-44bd-96e7-e3687b470204",
      "name": "LDAP1",
      "alwaysOutputData": true,
      "credentials": {
        "ldap": {
          "id": "lMuN0cx6hMG02pC1",
          "name": "LDAP IT Helpdesk"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "dn": "CN=IT Help Desk,OU=ServiceAccounts,OU=6.3 Staff,OU=6.0 Information Technology,OU=Exclus1ve Physicians,DC=ecoe,DC=local",
        "attributes": {
          "replace": [
            {
              "id": "lockoutTime",
              "value": "0"
            }
          ]
        }
      },
      "id": "2aa7fe61-66f9-4986-b3be-4cf69684dd39",
      "name": "Unlock",
      "type": "n8n-nodes-base.ldap",
      "typeVersion": 1,
      "position": [
        4460,
        480
      ],
      "credentials": {
        "ldap": {
          "id": "9xIn6eVIIen5iGtz",
          "name": "power"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        4940,
        680
      ],
      "id": "f8eb4098-1233-455a-97a5-8b03f0eda4e8",
      "name": "Merge2"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DECLARE @RES VARCHAR(50) = '%%';\n\nSELECT\n    r.Resource_ID AS res_resource_id,\n    r.Abbreviation AS res_abbreviation,\n    r.Description AS res_description,\n    r.Appointment_Group_ID AS res_appointment_group_id,\n    ag.Abbreviation AS appt_gp_abbreviation,\n    ag.Description AS appt_gp_description,\n    r.Practitioner_ID AS res_practitioner_id,\n    p.Practitioner_ID AS prac_practitioner_id,\n    p.Is_Ref_Source,\n    p.Is_Physician,\n    p.Abbreviation AS prac_abbreviation,\n    UPPER(p.First_Name) AS First_Name,\n    UPPER(p.Last_Name) AS Last_Name,\n    p.Sex,\n    p.Street1,\n    p.City,\n    p.State,\n    p.Zip_Code,\n    p.Phone,\n    p.Phone_Ext,\n    p.Fax_Number,\n    p.UPIN,\n    p.Specialty_ID,\n    p.Is_Non_Person,\n    p.Specialty_ID AS spec_Specialty_Id,\n    s.Abbreviation AS spec_abbreviation,\n    s.Description AS spec_description,\n    p.Is_Mid_Level,\n    p.Is_Mid_Level_PA,\n    p.Inactivation_Date,\n    p.Is_Locum_Tenan\nFROM [PM].[Resources] r\nLEFT JOIN [PM].[Practitioners] p ON r.Practitioner_ID = p.Practitioner_ID\nLEFT JOIN [PM].[Specialties] s ON p.Specialty_ID = s.Specialty_ID\nLEFT JOIN [PM].[Appointment_Groups] ag ON r.Appointment_Group_ID = ag.Appointment_Group_ID\nWHERE r.Description LIKE @RES\n  AND r.Description NOT LIKE 'zz%' \n  AND r.Description NOT LIKE 'CM%'\n  AND r.Description NOT LIKE 'super%'\n  AND r.Description NOT LIKE 'blue%'\n  AND r.Description NOT LIKE 'bella%'\n  AND r.Description NOT LIKE 'surg%'\n  AND r.Description NOT LIKE 'uop'\n  AND r.Description NOT LIKE 'Tin%'\n  AND r.Description NOT LIKE 'dunc%'\n  AND p.Inactivation_Date IS NULL\n  AND r.Description NOT LIKE 'prior%'\n  AND r.Description NOT LIKE 'chee%'\n  AND r.Description NOT LIKE 'PA,%'\n  AND r.Description NOT LIKE 'PharmD - Sabbagh, Hussein'\n  AND r.Description NOT LIKE '%event%'\nORDER BY r.Abbreviation;"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        4800,
        540
      ],
      "id": "f13810ea-634f-4173-8702-585030f83fc6",
      "name": "Microsoft SQL8",
      "credentials": {
        "microsoftSql": {
          "id": "wyNxSZ4e8ERWmP4v",
          "name": "Microsoft SQL PM"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const providersData = items.map(item => ({\n  First_Name: item.json.First_Name || '',\n  Last_Name: item.json.Last_Name || '',\n  appt_gp_description: item.json.appt_gp_description || '',\n  spec_description: item.json.spec_description || '',\n  City: item.json.City || '',\n  calledProviderUsername: item.json.calledprovider || '',\n  calledProviderName: [item.json.First_Name, item.json.Last_Name].filter(Boolean).join(' ').trim(),\n  visitURL: item.json.visitURL || ''\n}));\n\nconst providersJson = JSON.stringify(providersData);\nconst inputData = items[0].json;\n\nconst htmlContent = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Provider Selection</title>\n  <style>\n    body { font-family: Arial, sans-serif; padding: 20px; }\n    .info { margin-bottom: 20px; }\n    /* Container for big buttons at top */\n    .top-buttons {\n      display: flex;\n      justify-content: flex-start;\n      gap: 12px;\n      margin-bottom: 24px;\n      align-items: center;\n    }\n    #joinRunningMeeting, #cancelInstantVisit {\n      background-color: #0078D4;\n      color: white;\n      border: none;\n      border-radius: 5px;\n      padding: 14px 28px;\n      cursor: pointer;\n      font-weight: bold;\n      font-size: 18px;\n      user-select: none;\n      transition: background-color 0.2s ease;\n    }\n    #cancelInstantVisit {\n      background-color: #d9534f;\n    }\n    #joinRunningMeeting:hover {\n      background-color: #005a9e;\n    }\n    #cancelInstantVisit:hover {\n      background-color: #c9302c;\n    }\n    #search { margin-bottom: 10px; padding: 6px; width: 300px; }\n    .filters {\n      margin-bottom: 10px;\n      display: flex;\n      gap: 16px;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n    .filters label {\n      font-weight: bold;\n      margin-right: 6px;\n    }\n    select {\n      padding: 6px;\n      min-width: 150px;\n    }\n    table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n    th, td { padding: 8px 12px; border: 1px solid #ccc; text-align: left; }\n    th { cursor: pointer; background-color: #f9f9f9; user-select: none; }\n    th.sort-asc::after { content: \" ▲\"; font-size: 0.7em; }\n    th.sort-desc::after { content: \" ▼\"; font-size: 0.7em; }\n    .button { padding: 6px 12px; background-color: #0078D4; color: #fff; border: none; border-radius: 4px; cursor: pointer; }\n    .button:disabled { background-color: #aaa; cursor: default; }\n\n    .overlay {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.3);\n      z-index: 1000;\n    }\n    .loader {\n      display: none;\n      position: fixed;\n      top: 50%; left: 50%;\n      transform: translate(-50%, -50%);\n      background: rgba(255,255,255,0.9);\n      padding: 20px; border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      z-index: 1001;\n    }\n    .modal {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.4);\n      z-index: 1002;\n    }\n    .modal-content {\n      background: #fff;\n      margin: 15% auto;\n      padding: 20px 24px;\n      border-radius: 8px;\n      width: 80%;\n      max-width: 320px;\n      text-align: center;\n    }\n    .modal-content p { margin-bottom: 20px; }\n    .modal-content textarea {\n      width: 100%;\n      height: 80px;\n      margin: 0 0 20px 0;\n      padding: 8px 10px;\n      resize: vertical;\n      font-size: 14px;\n      box-sizing: border-box;\n    }\n    .modal-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n    }\n    .modal-buttons button {\n      flex: 1;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      font-weight: bold;\n      font-size: 16px;\n      user-select: none;\n    }\n    #cancelReason {\n      background-color: #d9534f;\n      color: white;\n    }\n    #cancelReason:hover {\n      background-color: #c9302c;\n    }\n    #sendReason {\n      background-color: #0078D4;\n      color: white;\n    }\n    #sendReason:hover {\n      background-color: #005a9e;\n    }\n    .pagination {\n      margin-top: 15px;\n      display: flex;\n      gap: 8px;\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n    .pagination button {\n      padding: 6px 12px;\n      border: 1px solid #ccc;\n      background: #fff;\n      cursor: pointer;\n      border-radius: 4px;\n    }\n    .pagination button.active, .pagination button:hover {\n      background-color: #0078D4;\n      color: white;\n      border-color: #0078D4;\n    }\n    .pagination button:disabled {\n      background: #eee;\n      cursor: default;\n      color: #999;\n      border-color: #ccc;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"info\">\n    <strong>Patient:</strong> <span id=\"patient\"></span>\n  </div>\n\n  <div class=\"top-buttons\">\n    <button id=\"joinRunningMeeting\" type=\"button\">Join Running Meeting</button>\n    <button id=\"cancelInstantVisit\" type=\"button\">Cancel Instant Visit</button>\n  </div>\n\n  <input type=\"text\" id=\"search\" placeholder=\"Search providers…\" />\n  <div class=\"filters\">\n    <label for=\"filterSpecialty\">Specialty:</label>\n    <select id=\"filterSpecialty\">\n      <option value=\"\">All</option>\n    </select>\n    <label for=\"filterLocation\">Location:</label>\n    <select id=\"filterLocation\">\n      <option value=\"\">All</option>\n    </select>\n  </div>\n\n  <table id=\"providersTable\">\n    <thead>\n      <tr>\n        <th data-key=\"name\">Provider</th>\n        <th data-key=\"appt_gp_description\">Appointment Group</th>\n        <th data-key=\"spec_description\">Specialty</th>\n        <th data-key=\"City\">City</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  </table>\n\n  <div class=\"pagination\" id=\"pagination\"></div>\n  <div class=\"overlay\" id=\"overlay\"></div>\n  <div class=\"loader\" id=\"loader\">Loading…</div>\n\n  <div class=\"modal\" id=\"messageModal\">\n    <div class=\"modal-content\">\n      <p id=\"messageText\"></p>\n      <button class=\"button\" id=\"closeModal\">Close</button>\n    </div>\n  </div>\n\n  <div class=\"modal\" id=\"reasonModal\">\n    <div class=\"modal-content\">\n      <p><strong>Reason for Instant Visit:</strong></p>\n      <textarea id=\"reasonInput\" placeholder=\"Enter reason for visit...\"></textarea>\n      <div class=\"modal-buttons\">\n        <button class=\"button\" id=\"cancelReason\">Cancel</button>\n        <button class=\"button\" id=\"sendReason\">Start</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    (function() {\n      // Patient info from inputData\n      const inputData = ${JSON.stringify(inputData)};\n      const patientLastName = inputData.PATIENT_LASTNAME || '';\n      const patientFirstName = inputData.PATIENT_FIRSTNAME || '';\n      const patientMRN = inputData.DEM_EXTERNALID || '';\n      document.getElementById('patient').textContent = \\`\\${patientLastName}, \\${patientFirstName} | MRN: \\${patientMRN}\\`;\n\n      const providersRaw = ${providersJson};\n      let providers = providersRaw.map(p => ({\n        name: ((p.First_Name && p.First_Name.trim()) && (p.Last_Name && p.Last_Name.trim())) ? \\`\\${p.First_Name} \\${p.Last_Name}\\` : '',\n        appt_gp_description: p.appt_gp_description || '',\n        spec_description: p.spec_description || '',\n        City: p.City || '',\n        calledProviderUsername: p.calledProviderUsername || '',\n        calledProviderName: p.calledProviderName || '',\n        visitURL: p.visitURL || ''\n      }));\n\n      const ROWS_PER_PAGE = 15;\n      let currentPage = 1;\n      let sortState = { key: '', asc: true };\n      let filters = { specialty: '', location: '' };\n      let searchTerm = '';\n\n      const tbody = document.querySelector('#providersTable tbody');\n      const specialtySelect = document.getElementById('filterSpecialty');\n      const locationSelect = document.getElementById('filterLocation');\n      const paginationContainer = document.getElementById('pagination');\n\n      const overlay = document.getElementById('overlay');\n      const loader = document.getElementById('loader');\n      const modal = document.getElementById('messageModal');\n      const msgText = document.getElementById('messageText');\n      const closeModal = document.getElementById('closeModal');\n\n      const reasonModal = document.getElementById('reasonModal');\n      const reasonInput = document.getElementById('reasonInput');\n      const cancelReasonBtn = document.getElementById('cancelReason');\n      const sendReasonBtn = document.getElementById('sendReason');\n\n      // Cancel button - navigates back\n      document.getElementById('cancelInstantVisit').addEventListener('click', () => {\n        window.history.back();\n      });\n\n      // \"Join Running Meeting\" button - redirect immediately to first provider's visitURL (adjust as needed)\n      document.getElementById('joinRunningMeeting').addEventListener('click', () => {\n        const firstProvider = providers[0];\n        if (firstProvider && firstProvider.visitURL) {\n          window.location.href = firstProvider.visitURL;\n        } else {\n          alert('No meeting URL available to join.');\n        }\n      });\n\n      closeModal.addEventListener('click', () => modal.style.display = 'none');\n\n      cancelReasonBtn.addEventListener('click', () => {\n        reasonInput.value = '';\n        reasonModal.style.display = 'none';\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        showLoader(false);\n      });\n\n      function showLoader(on) {\n        overlay.style.display = on ? 'block' : 'none';\n        loader.style.display = on ? 'block' : 'none';\n      }\n\n      function showModal(message) {\n        msgText.textContent = message;\n        modal.style.display = 'block';\n      }\n\n      function requestReason() {\n        reasonInput.value = '';\n        reasonModal.style.display = 'block';\n        reasonInput.focus();\n\n        return new Promise((resolve) => {\n          const onSend = () => {\n            const reason = reasonInput.value.trim();\n            if (!reason) {\n              alert('Please enter a reason for the visit.');\n              reasonInput.focus();\n              return;\n            }\n            cleanup();\n            resolve(reason);\n          };\n          const onCancel = () => {\n            cleanup();\n            resolve(undefined);\n          };\n          function cleanup() {\n            reasonModal.style.display = 'none';\n            sendReasonBtn.removeEventListener('click', onSend);\n            cancelReasonBtn.removeEventListener('click', onCancel);\n          }\n          sendReasonBtn.addEventListener('click', onSend);\n          cancelReasonBtn.addEventListener('click', onCancel);\n        });\n      }\n\n      function populateFilters() {\n        const specialties = Array.from(new Set(providers.map(p => p.spec_description).filter(s => s))).sort();\n        const locations = Array.from(new Set(providers.map(p => p.City).filter(c => c))).sort();\n        specialties.forEach(s => {\n          const option = document.createElement('option');\n          option.value = s;\n          option.textContent = s;\n          specialtySelect.appendChild(option);\n        });\n        locations.forEach(c => {\n          const option = document.createElement('option');\n          option.value = c;\n          option.textContent = c;\n          locationSelect.appendChild(option);\n        });\n      }\n\n      function applyFiltersAndSearch() {\n        return providers.filter(p => {\n          const matchesSpecialty = filters.specialty ? p.spec_description === filters.specialty : true;\n          const matchesLocation = filters.location ? p.City === filters.location : true;\n          const matchesSearch = searchTerm ? (\n            p.name.toLowerCase().includes(searchTerm) ||\n            p.appt_gp_description.toLowerCase().includes(searchTerm) ||\n            p.spec_description.toLowerCase().includes(searchTerm) ||\n            p.City.toLowerCase().includes(searchTerm)\n          ) : true;\n          return matchesSpecialty && matchesLocation && matchesSearch;\n        });\n      }\n\n      function sortProviders(data) {\n        if (!sortState.key) return data;\n        return data.slice().sort((a, b) => {\n          const valA = a[sortState.key] ? a[sortState.key].toLowerCase() : '';\n          const valB = b[sortState.key] ? b[sortState.key].toLowerCase() : '';\n          if (valA === '' && valB !== '') return 1;\n          if (valB === '' && valA !== '') return -1;\n          if (valA < valB) return sortState.asc ? -1 : 1;\n          if (valA > valB) return sortState.asc ? 1 : -1;\n          return 0;\n        });\n      }\n\n      function renderTable(data) {\n        tbody.innerHTML = '';\n        if (data.length === 0) {\n          const row = document.createElement('tr');\n          const cell = document.createElement('td');\n          cell.colSpan = 5;\n          cell.style.textAlign = 'center';\n          cell.textContent = 'No providers found.';\n          row.appendChild(cell);\n          tbody.appendChild(row);\n          return;\n        }\n        const start = (currentPage - 1) * ROWS_PER_PAGE;\n        const end = Math.min(start + ROWS_PER_PAGE, data.length);\n        for (let i = start; i < end; i++) {\n          const p = data[i];\n          const nameCell = p.name || '';\n          const row = document.createElement('tr');\n          row.innerHTML = \\`\n            <td>\\${nameCell}</td>\n            <td>\\${p.appt_gp_description}</td>\n            <td>\\${p.spec_description}</td>\n            <td>\\${p.City}</td>\n            <td><button class=\"button join-btn\" data-index=\"\\${i}\">Join</button></td>\n          \\`;\n          tbody.appendChild(row);\n        }\n        document.querySelectorAll('.join-btn').forEach(btn => {\n          btn.addEventListener('click', () => joinProvider(btn.dataset.index));\n        });\n      }\n\n      function renderPagination(totalItems) {\n        paginationContainer.innerHTML = '';\n        const totalPages = Math.ceil(totalItems / ROWS_PER_PAGE);\n        if (totalPages <= 1) return;\n        const prevBtn = document.createElement('button');\n        prevBtn.textContent = 'Prev';\n        prevBtn.disabled = currentPage === 1;\n        prevBtn.addEventListener('click', () => {\n          if (currentPage > 1) {\n            currentPage--;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(prevBtn);\n        const maxPagesToShow = 7;\n        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n        let endPage = startPage + maxPagesToShow - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - maxPagesToShow + 1);\n        }\n        for (let i = startPage; i <= endPage; i++) {\n          const btn = document.createElement('button');\n          btn.textContent = i;\n          if (i === currentPage) btn.classList.add('active');\n          btn.addEventListener('click', () => {\n            currentPage = i;\n            updateTable();\n          });\n          paginationContainer.appendChild(btn);\n        }\n        const nextBtn = document.createElement('button');\n        nextBtn.textContent = 'Next';\n        nextBtn.disabled = currentPage === totalPages;\n        nextBtn.addEventListener('click', () => {\n          if (currentPage < totalPages) {\n            currentPage++;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(nextBtn);\n      }\n\n      function updateTable() {\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const totalPages = Math.ceil(filtered.length / ROWS_PER_PAGE) || 1;\n        if (currentPage > totalPages) currentPage = totalPages;\n        renderTable(filtered);\n        renderPagination(filtered.length);\n      }\n\n      async function joinProvider(index) {\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = true);\n        showLoader(true);\n\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const prov = filtered[index];\n\n        const reason = await requestReason();\n\n        if (reason === undefined) {\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n          return;\n        }\n\n        const payload = {\n          calledProviderUsername: prov.calledProviderUsername,\n          calledProviderName: prov.calledProviderName,\n          patientName: \\`\\${patientLastName}, \\${patientFirstName}\\`,\n          patientNumber: patientMRN,\n          provider: prov.name || '',\n          appointmentGroup: prov.appt_gp_description,\n          specialty: prov.spec_description,\n          city: prov.City,\n          reasonForVisit: reason\n        };\n\n        try {\n          const resp = await fetch('https://xl.epicpc.com/webhook/e850608b-e046-49e7-825f-f52e1d912958', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          });\n          if (!resp.ok) throw new Error('HTTP ' + resp.status);\n\n          if (prov.visitURL) {\n            window.location.href = prov.visitURL;\n          } else {\n            showModal('Success! Please check your chat messages!');\n          }\n        } catch (error) {\n          console.error(error);\n          showModal('There was an issue, please try again.');\n        } finally {\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        }\n      }\n\n      document.getElementById('search').addEventListener('input', e => {\n        searchTerm = e.target.value.trim().toLowerCase();\n        currentPage = 1;\n        updateTable();\n      });\n      specialtySelect.addEventListener('change', e => {\n        filters.specialty = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      locationSelect.addEventListener('change', e => {\n        filters.location = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      const headers = document.querySelectorAll('#providersTable th[data-key]');\n      headers.forEach(th => {\n        th.addEventListener('click', () => {\n          const key = th.getAttribute('data-key');\n          if (sortState.key === key) {\n            sortState.asc = !sortState.asc;\n          } else {\n            sortState.key = key;\n            sortState.asc = true;\n          }\n          currentPage = 1;\n          headers.forEach(h => h.classList.remove('sort-asc', 'sort-desc'));\n          th.classList.add(sortState.asc ? 'sort-asc' : 'sort-desc');\n          updateTable();\n        });\n      });\n\n      populateFilters();\n      updateTable();\n    })();\n  </script>\n</body>\n</html>`;\n\nreturn [\n  {\n    json: {\n      html: htmlContent,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6200,
        620
      ],
      "id": "68d59063-ffcb-44d6-be12-c245aaad688e",
      "name": "Code9"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        6440,
        620
      ],
      "id": "b546d41b-f821-4f89-b21e-f1c5dac87931",
      "name": "Respond to Webhook26"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "630d8424-35fa-41c6-9bac-0b5a53386860",
              "name": "cn",
              "value": "={{ $json.cn }}",
              "type": "string"
            },
            {
              "id": "41dd3dc4-765c-4f2c-ae70-ef082338491f",
              "name": "calledprovider",
              "value": "={{ $json.sAMAccountName }}",
              "type": "string"
            },
            {
              "id": "f149678e-4a93-41cc-b9a9-624500c0b264",
              "name": "givenName",
              "value": "={{ $json.givenName }}",
              "type": "string"
            },
            {
              "id": "c49c9765-13b9-44d2-9f03-e48d226d7eb6",
              "name": "sn",
              "value": "={{ $json.sn }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5680,
        800
      ],
      "id": "ac38931d-a8a1-403b-99f1-a44aa8cc7016",
      "name": "Edit Fields4",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "http://n8n-main:5678/webhook/5d41a48c-e148-4281-a174-592a6d350b5e",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "PatientMrn",
              "value": "=ERROR"
            },
            {
              "name": "=PatientFirstName",
              "value": "=ERROR"
            },
            {
              "name": "PatientLastName",
              "value": "=Double Lockout"
            },
            {
              "name": "ProviderFirstName",
              "value": "n8n"
            },
            {
              "name": "calledProviderUsername",
              "value": "=tstilwell"
            },
            {
              "name": "calledProviderName",
              "value": "=Thomas"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4760,
        380
      ],
      "id": "6f593b1a-2051-4a2a-9ed7-843f8da51b36",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        4020,
        660
      ],
      "id": "a1809e2c-a1f8-44f0-b54e-cc9245c5add0",
      "name": "Merge3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        4860,
        880
      ],
      "id": "9721f4fc-ab27-4cf9-b476-2779713caa3c",
      "name": "Limit"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e37d5be5-eaa0-4971-91c6-655cd9d02fa2",
              "name": "visitURL",
              "value": "=https://vid.epicpc.com/bigbluebutton/api/join?{{ $json[\"apicall\"] }}&checksum={{ $json[\"data\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3960,
        380
      ],
      "id": "c62415ff-8f95-4d3a-bc26-ad45a2bcbe81",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "jsCode": "// Build the providers list from input items, extracting needed fields including City and calledProviderUsername/Name\nconst providersData = items.map(item => ({\n  First_Name: item.json.First_Name || '',\n  Last_Name: item.json.Last_Name || '',\n  appt_gp_description: item.json.appt_gp_description || '',\n  spec_description: item.json.spec_description || '',\n  City: item.json.City || '',\n  calledProviderUsername: item.json.calledprovider || '',  // renamed here\n  calledProviderName: [item.json.First_Name, item.json.Last_Name].filter(Boolean).join(' ').trim()\n}));\n// Stringify providersData for safe embedding in JS\nconst providersJson = JSON.stringify(providersData);\n// Build the full HTML content with embedded providers JSON\nconst htmlContent = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Provider Selection</title>\n  <style>\n    body { font-family: Arial, sans-serif; padding: 20px; }\n    .info { margin-bottom: 20px; }\n    #search { margin-bottom: 10px; padding: 6px; width: 300px; }\n    /* Filters container */\n    .filters {\n      margin-bottom: 10px;\n      display: flex;\n      gap: 16px;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n    .filters label {\n      font-weight: bold;\n      margin-right: 6px;\n    }\n    select {\n      padding: 6px;\n      min-width: 150px;\n    }\n    table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n    th, td { padding: 8px 12px; border: 1px solid #ccc; text-align: left; }\n    th { cursor: pointer; background-color: #f9f9f9; user-select: none; }\n    th.sort-asc::after {\n      content: \" ▲\";\n      font-size: 0.7em;\n    }\n    th.sort-desc::after {\n      content: \" ▼\";\n      font-size: 0.7em;\n    }\n    .button { padding: 6px 12px; background-color: #0078D4; color: #fff; border: none; border-radius: 4px; cursor: pointer; }\n    .button:disabled { background-color: #aaa; cursor: default; }\n\n    .overlay {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.3);\n      z-index: 1000;\n    }\n    .loader {\n      display: none;\n      position: fixed;\n      top: 50%; left: 50%;\n      transform: translate(-50%, -50%);\n      background: rgba(255,255,255,0.9);\n      padding: 20px; border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      z-index: 1001;\n    }\n    .modal {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.4);\n      z-index: 1002;\n    }\n    .modal-content {\n      background: #fff;\n      margin: 15% auto;\n      padding: 20px 24px; /* equal horizontal padding */\n      border-radius: 8px;\n      width: 80%;\n      max-width: 320px;\n      text-align: center;\n    }\n    .modal-content p { margin-bottom: 20px; }\n    .modal-content textarea {\n      width: 100%;\n      height: 80px;\n      margin: 0 0 20px 0; /* margin-top:0; margin-bottom:20px */\n      padding: 8px 10px;   /* equal horizontal padding */\n      resize: vertical;\n      font-size: 14px;\n      box-sizing: border-box;\n    }\n    .modal-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n    }\n    .modal-buttons button {\n      flex: 1;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    #cancelReason {\n      background-color: #d9534f; /* bootstrap’s red */\n      color: white;\n    }\n    #cancelReason:hover {\n      background-color: #c9302c;\n    }\n    #sendReason {\n      background-color: #0078D4;\n      color: white;\n    }\n    #sendReason:hover {\n      background-color: #005a9e;\n    }\n    /* Pagination styles */\n    .pagination {\n      margin-top: 15px;\n      display: flex;\n      gap: 8px;\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n    .pagination button {\n      padding: 6px 12px;\n      border: 1px solid #ccc;\n      background: #fff;\n      cursor: pointer;\n      border-radius: 4px;\n    }\n    .pagination button.active, .pagination button:hover {\n      background-color: #0078D4;\n      color: white;\n      border-color: #0078D4;\n    }\n    .pagination button:disabled {\n      background: #eee;\n      cursor: default;\n      color: #999;\n      border-color: #ccc;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"info\">\n    <strong>User:</strong> <span id=\"username\"></span><br />\n    <strong>Patient:</strong> <span id=\"patient\"></span>\n  </div>\n  <input type=\"text\" id=\"search\" placeholder=\"Search providers…\" />\n  <div class=\"filters\">\n    <label for=\"filterSpecialty\">Specialty:</label>\n    <select id=\"filterSpecialty\">\n      <option value=\"\">All</option>\n    </select>\n    <label for=\"filterLocation\">Location:</label>\n    <select id=\"filterLocation\">\n      <option value=\"\">All</option>\n    </select>\n  </div>\n  <table id=\"providersTable\">\n    <thead>\n      <tr>\n        <th data-key=\"name\">Provider</th>\n        <th data-key=\"appt_gp_description\">Appointment Group</th>\n        <th data-key=\"spec_description\">Specialty</th>\n        <th data-key=\"City\">City</th> <!-- Added City column header with sortable data-key -->\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  </table>\n  <div class=\"pagination\" id=\"pagination\"></div>\n  <div class=\"overlay\" id=\"overlay\"></div>\n  <div class=\"loader\" id=\"loader\">Loading…</div>\n\n  <!-- Existing general message modal -->\n  <div class=\"modal\" id=\"messageModal\">\n    <div class=\"modal-content\">\n      <p id=\"messageText\"></p>\n      <button class=\"button\" id=\"closeModal\">Close</button>\n    </div>\n  </div>\n\n  <!-- NEW Modal for reason input -->\n  <div class=\"modal\" id=\"reasonModal\">\n    <div class=\"modal-content\">\n      <p><strong>Reason for Instant Visit:</strong></p>\n      <textarea id=\"reasonInput\" placeholder=\"Enter reason for visit...\"></textarea>\n      <div class=\"modal-buttons\">\n        <button class=\"button\" id=\"cancelReason\">Cancel</button>\n        <button class=\"button\" id=\"sendReason\">Send</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    (function() {\n      const params = new URLSearchParams(window.location.search);\n      const urlParams = {};\n      params.forEach((value, key) => {\n        urlParams[key] = value;\n      });\n      // Use calledProviderUsername from urlParams only for display, real logic uses provider data\n      const calledProviderUsernameParam = urlParams.calledprovider || '';\n      const first = urlParams.dem_firstname || '';\n      const last = urlParams.dem_lastname || '';\n      const patientName = \\`\\${first} \\${last}\\`.trim();\n      const patientNumber = urlParams.patientid || urlParams.mrn || '';\n      document.getElementById('username').textContent = calledProviderUsernameParam;\n      document.getElementById('patient').textContent = patientName;\n      let providersRaw = ${providersJson};\n      let providers = providersRaw.map(p => ({\n        name: (p.First_Name && p.Last_Name) ? \\`\\${p.First_Name} \\${p.Last_Name}\\` : '',\n        appt_gp_description: p.appt_gp_description || '',\n        spec_description: p.spec_description || '',\n        City: p.City || '',\n        calledProviderUsername: p.calledProviderUsername || '',\n        calledProviderName: p.calledProviderName || ''\n      }));\n      // Find called provider full name if username found (used only for display, optional)\n      let calledProviderName = '';\n      if (calledProviderUsernameParam) {\n        const matchedProvider = providers.find(p =>\n          p.calledProviderUsername && p.calledProviderUsername.toLowerCase() === calledProviderUsernameParam.toLowerCase()\n        );\n        if (matchedProvider) {\n          calledProviderName = matchedProvider.name;\n        }\n      }\n      const ROWS_PER_PAGE = 15;\n      let currentPage = 1;\n      let sortState = { key: '', asc: true };\n      let filters = { specialty: '', location: '' };\n      let searchTerm = '';\n      const tbody = document.querySelector('#providersTable tbody');\n      const specialtySelect = document.getElementById('filterSpecialty');\n      const locationSelect = document.getElementById('filterLocation');\n      const paginationContainer = document.getElementById('pagination');\n\n      const overlay = document.getElementById('overlay');\n      const loader = document.getElementById('loader');\n      const modal = document.getElementById('messageModal');\n      const msgText = document.getElementById('messageText');\n      const closeModal = document.getElementById('closeModal');\n\n      // Reason modal and its elements\n      const reasonModal = document.getElementById('reasonModal');\n      const reasonInput = document.getElementById('reasonInput');\n      const cancelReasonBtn = document.getElementById('cancelReason');\n      const sendReasonBtn = document.getElementById('sendReason');\n\n      closeModal.addEventListener('click', () => modal.style.display = 'none');\n\n      cancelReasonBtn.addEventListener('click', () => {\n        reasonInput.value = '';\n        reasonModal.style.display = 'none';\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        showLoader(false);\n      });\n\n      // Helper to show/hide loader and overlay\n      function showLoader(on) {\n        overlay.style.display = on ? 'block' : 'none';\n        loader.style.display = on ? 'block' : 'none';\n      }\n      // Show message modal\n      function showModal(message) {\n        msgText.textContent = message;\n        modal.style.display = 'block';\n      }\n      // Utility: Waits for reason input via modal, returns a Promise<string|undefined>\n      function requestReason() {\n        reasonInput.value = '';\n        reasonModal.style.display = 'block';\n        reasonInput.focus();\n\n        return new Promise((resolve) => {\n          // Send handler\n          const onSend = () => {\n            const reason = reasonInput.value.trim();\n            if (!reason) {\n              // Optionally, prevent empty submission or just proceed\n              alert('Please enter a reason for the visit.');\n              reasonInput.focus();\n              return;\n            }\n            cleanup();\n            resolve(reason);\n          };\n          // Cancel handler\n          const onCancel = () => {\n            cleanup();\n            resolve(undefined);\n          };\n\n          function cleanup() {\n            reasonModal.style.display = 'none';\n            sendReasonBtn.removeEventListener('click', onSend);\n            cancelReasonBtn.removeEventListener('click', onCancel);\n          }\n          sendReasonBtn.addEventListener('click', onSend);\n          cancelReasonBtn.addEventListener('click', onCancel);\n        });\n      }\n\n      function populateFilters() {\n        const specialties = Array.from(new Set(providers.map(p => p.spec_description).filter(s => s))).sort();\n        const locations = Array.from(new Set(providers.map(p => p.City).filter(c => c))).sort();\n        specialties.forEach(s => {\n          const option = document.createElement('option');\n          option.value = s;\n          option.textContent = s;\n          specialtySelect.appendChild(option);\n        });\n        locations.forEach(c => {\n          const option = document.createElement('option');\n          option.value = c;\n          option.textContent = c;\n          locationSelect.appendChild(option);\n        });\n      }\n      function applyFiltersAndSearch() {\n        return providers.filter(p => {\n          const matchesSpecialty = filters.specialty ? p.spec_description === filters.specialty : true;\n          const matchesLocation = filters.location ? p.City === filters.location : true;\n          const matchesSearch = searchTerm ? (\n            p.name.toLowerCase().includes(searchTerm) ||\n            p.appt_gp_description.toLowerCase().includes(searchTerm) ||\n            p.spec_description.toLowerCase().includes(searchTerm) ||\n            p.City.toLowerCase().includes(searchTerm)\n          ) : true;\n          return matchesSpecialty && matchesLocation && matchesSearch;\n        });\n      }\n      function sortProviders(data) {\n        if (!sortState.key) return data;\n        return data.slice().sort((a, b) => {\n          const valA = a[sortState.key] ? a[sortState.key].toLowerCase() : '';\n          const valB = b[sortState.key] ? b[sortState.key].toLowerCase() : '';\n          if (valA === '' && valB !== '') return 1;\n          if (valB === '' && valA !== '') return -1;\n          if (valA < valB) return sortState.asc ? -1 : 1;\n          if (valA > valB) return sortState.asc ? 1 : -1;\n          return 0;\n        });\n      }\n      function renderTable(data) {\n        tbody.innerHTML = '';\n        if (data.length === 0) {\n          const row = document.createElement('tr');\n          const cell = document.createElement('td');\n          cell.colSpan = 5;\n          cell.style.textAlign = 'center';\n          cell.textContent = 'No providers found.';\n          row.appendChild(cell);\n          tbody.appendChild(row);\n          return;\n        }\n        const start = (currentPage - 1) * ROWS_PER_PAGE;\n        const end = Math.min(start + ROWS_PER_PAGE, data.length);\n        for (let i = start; i < end; i++) {\n          const p = data[i];\n          const row = document.createElement('tr');\n          row.innerHTML = \\`\n            <td>\\${p.name}</td>\n            <td>\\${p.appt_gp_description}</td>\n            <td>\\${p.spec_description}</td>\n            <td>\\${p.City}</td>\n            <td><button class=\"button join-btn\" data-index=\"\\${i}\">Join</button></td>\n          \\`;\n          tbody.appendChild(row);\n        }\n        document.querySelectorAll('.join-btn').forEach(btn => {\n          btn.addEventListener('click', () => joinProvider(btn.dataset.index));\n        });\n      }\n      function renderPagination(totalItems) {\n        paginationContainer.innerHTML = '';\n        const totalPages = Math.ceil(totalItems / ROWS_PER_PAGE);\n        if (totalPages <= 1) return;\n        const prevBtn = document.createElement('button');\n        prevBtn.textContent = 'Prev';\n        prevBtn.disabled = currentPage === 1;\n        prevBtn.addEventListener('click', () => {\n          if (currentPage > 1) {\n            currentPage--;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(prevBtn);\n        const maxPagesToShow = 7;\n        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n        let endPage = startPage + maxPagesToShow - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - maxPagesToShow + 1);\n        }\n        for (let i = startPage; i <= endPage; i++) {\n          const btn = document.createElement('button');\n          btn.textContent = i;\n          if (i === currentPage) btn.classList.add('active');\n          btn.addEventListener('click', () => {\n            currentPage = i;\n            updateTable();\n          });\n          paginationContainer.appendChild(btn);\n        }\n        const nextBtn = document.createElement('button');\n        nextBtn.textContent = 'Next';\n        nextBtn.disabled = currentPage === totalPages;\n        nextBtn.addEventListener('click', () => {\n          if (currentPage < totalPages) {\n            currentPage++;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(nextBtn);\n      }\n      function updateTable() {\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const totalPages = Math.ceil(filtered.length / ROWS_PER_PAGE) || 1;\n        if (currentPage > totalPages) currentPage = totalPages;\n        renderTable(filtered);\n        renderPagination(filtered.length);\n      }\n\n      document.getElementById('search').addEventListener('input', e => {\n        searchTerm = e.target.value.trim().toLowerCase();\n        currentPage = 1;\n        updateTable();\n      });\n      specialtySelect.addEventListener('change', e => {\n        filters.specialty = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      locationSelect.addEventListener('change', e => {\n        filters.location = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      const headers = document.querySelectorAll('#providersTable th[data-key]');\n      headers.forEach(th => {\n        th.addEventListener('click', () => {\n          const key = th.getAttribute('data-key');\n          if (sortState.key === key) {\n            sortState.asc = !sortState.asc;\n          } else {\n            sortState.key = key;\n            sortState.asc = true;\n          }\n          currentPage = 1;\n          headers.forEach(h => h.classList.remove('sort-asc', 'sort-desc'));\n          th.classList.add(sortState.asc ? 'sort-asc' : 'sort-desc');\n          updateTable();\n        });\n      });\n\n      // Updated joinProvider to first request reason via modal\n      async function joinProvider(index) {\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = true);\n        showLoader(true);\n\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const prov = filtered[index];\n\n        // Request reason for visit from user\n        const reason = await requestReason();\n\n        if (reason === undefined) {\n          // User cancelled entering reason, just re-enable buttons and loader off\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n          return;\n        }\n\n        const payload = {\n          ...urlParams,\n          calledProviderUsername: prov.calledProviderUsername,\n          calledProviderName: prov.calledProviderName,\n          patientName: patientName,\n          patientNumber: patientNumber,\n          provider: prov.name,\n          appointmentGroup: prov.appt_gp_description,\n          specialty: prov.spec_description,\n          city: prov.City,\n          reasonForVisit: reason\n        };\n        try {\n          const resp = await fetch('https://xl.epicpc.com/webhook/e850608b-e046-49e7-825f-f52e1d912958', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          });\n          if (!resp.ok) throw new Error('HTTP ' + resp.status);\n          showModal('Success! Please check your chat messages!');\n        } catch (err) {\n          console.error(err);\n          showModal('There was an issue, please try again.');\n        } finally {\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        }\n      }\n\n      populateFilters();\n      updateTable();\n    })();\n  </script>\n</body>\n</html>\n`;\n// Return the HTML as _one item_ in output with a json property `html`\nreturn [\n  {\n    json: {\n      html: htmlContent,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5960,
        480
      ],
      "id": "05efac73-3417-485e-8eff-e91fd224618a",
      "name": "Code10"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, using DEM_EXTERNALID as patientId\n// and PATIENT_FIRSTNAME / PATIENT_LASTNAME for fullName.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from DEM_EXTERNALID)\nlet fullNameParam = '';\nlet patientId = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = incomingData[0].PATIENT_FIRSTNAME + ' ' + incomingData[0].PATIENT_LASTNAME;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use DEM_EXTERNALID field as patientId\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n      --green: #28a745;\n      --green-d: #218838;\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 3rem;\n      max-width: 1000px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    /* Initial overlay buttons */\n    #initOverlay button {\n      flex: none;\n      min-width: 240px;\n      padding: 1.6rem 3rem;\n      font-size: 1.4rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      text-align: center;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInitInstant {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInitInstant:hover,\n    #btnInitInstant:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    /* Top bar buttons */\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.5rem 2.5rem; /* updated padding */\n      font-size: 0.9rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      text-align: center;\n      user-select: none;\n      box-sizing: border-box;\n      margin: 0 0.4rem;\n      min-width: auto;\n      width: auto;\n    }\n    #btnVirtualClark {\n      flex-grow: 1;\n      max-width: none;\n      margin-left: 0.4rem;\n      margin-right: 0.4rem;\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnVirtualClark:hover,\n    #btnVirtualClark:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInstantVisit {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInstantVisit:hover,\n    #btnInstantVisit:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n      border: 2px solid var(--orange);\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler, Virtual Clark and Instant Visit buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n      <button id=\"btnInitInstant\" type=\"button\">Instant&nbsp;Visit</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n    <button id=\"btnInstantVisit\" class=\"epic-btn\" type=\"button\">Instant&nbsp;Visit</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullNameParam and patientId from n8n\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n\n    // Base webhooks\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://xl.epicpc.com/webhook/aa888bfa-2c88-44ed-af20-40eaa3146aa7\";\n    const webhookInstantVisit = \"https://xl.epicpc.com/webhook/c5d8bd6f-8803-4296-a9fe-789df93c5385\";\n\n    // Parent page’s URL\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder content while loading\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = 'data:text/html;charset=utf-8,' +\n      encodeURIComponent(\n        '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>' +\n        'html,body{margin:0;height:100%;background:#000;overflow:hidden;}' +\n        'img{width:100%;height:100%;object-fit:contain;}' +\n        '</style></head><body>' +\n        '<img src=\"' + placeholderImage + '\" alt=\"Placeholder\"/>' +\n        '</body></html>'\n      );\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() { loader.classList.remove(\"hidden\"); }\n    function hideLoader() { loader.classList.add(\"hidden\"); }\n\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n    });\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n    }\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => initOverlay.style.display = \"none\", 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n    }\n\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      const rest = params.toString();\n      if (rest) url += \"&\" + rest;\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function virtualClark() {\n      showLoader();\n      const url = webhookVirtualClark + '?user=' + patientId;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function instantVisit() {\n      showLoader();\n      const url = webhookInstantVisit + '?patientId=' + encodeURIComponent(patientId) + '&_=' + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function checkOutPatient() {\n      showLoader();\n      const url =\n        'https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=' +\n        fullNameParam +\n        '&patientId=' +\n        patientId +\n        '&url=' +\n        parentPageUrl;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Event listeners for buttons\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnInitInstant\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      instantVisit();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnInstantVisit\").addEventListener(\"click\", instantVisit);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n\n    // start with placeholder page\n    frame.src = placeholderPage;\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        740,
        -1200
      ],
      "id": "48ce874f-5376-40ff-990e-65698b148683",
      "name": "Code11"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, using DEM_EXTERNALID as patientId\n// and PATIENT_FIRSTNAME / PATIENT_LASTNAME for fullName.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from DEM_EXTERNALID)\nlet fullNameParam = '';\nlet patientId = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = incomingData[0].PATIENT_FIRSTNAME + ' ' + incomingData[0].PATIENT_LASTNAME;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use DEM_EXTERNALID field as patientId\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n      --green: #28a745;\n      --green-d: #218838;\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    /* Overlay */\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 3rem;\n      max-width: 1000px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    /* Initial overlay buttons */\n    #initOverlay button {\n      flex: none;\n      min-width: 240px;\n      padding: 1.6rem 3rem;\n      font-size: 1.4rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      text-align: center;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInitInstant {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInitInstant:hover,\n    #btnInitInstant:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    /* Top bar */\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    /* Top bar buttons */\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.5rem 2.5rem;\n      font-size: 0.9rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      text-align: center;\n      user-select: none;\n      box-sizing: border-box;\n      margin: 0 0.4rem;\n      min-width: auto;\n      width: auto;\n    }\n    #btnVirtualClark {\n      flex-grow: 1;\n      max-width: none;\n      margin-left: 0.4rem;\n      margin-right: 0.4rem;\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnVirtualClark:hover,\n    #btnVirtualClark:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInstantVisit {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInstantVisit:hover,\n    #btnInstantVisit:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n      border: 2px solid var(--orange);\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    /* Frame container */\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    /* Loader overlay */\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    /* Navigation buttons */\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Initial overlay with Quick Scheduler, Virtual Clark and Instant Visit buttons -->\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n      <button id=\"btnInitInstant\" type=\"button\">Instant&nbsp;Visit</button>\n    </div>\n  </div>\n  <!-- Top bar (hidden initially) -->\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n    <button id=\"btnInstantVisit\" class=\"epic-btn\" type=\"button\">Instant&nbsp;Visit</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <!-- iframe content area -->\n  <main class=\"content\" aria-live=\"polite\">\n    <!-- IMPORTANT: Added allow attribute for mic + camera -->\n    <iframe id=\"patientFrame\" title=\"Patient Flow Content\" src=\"\" allow=\"camera; microphone; fullscreen; autoplay\"></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <!-- Navigation buttons for iframe history -->\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    // Injected fullNameParam and patientId from n8n\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n\n    // Base webhooks\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://xl.epicpc.com/webhook/aa888bfa-2c88-44ed-af20-40eaa3146aa7\";\n    const webhookInstantVisit = \"https://xl.epicpc.com/webhook/c5d8bd6f-8803-4296-a9fe-789df93c5385\";\n\n    // Parent page’s URL\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    // Placeholder content while loading\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = 'data:text/html;charset=utf-8,' +\n      encodeURIComponent(\n        '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>' +\n        'html,body{margin:0;height:100%;background:#000;overflow:hidden;}' +\n        'img{width:100%;height:100%;object-fit:contain;}' +\n        '</style></head><body>' +\n        '<img src=\"' + placeholderImage + '\" alt=\"Placeholder\"/>' +\n        '</body></html>'\n      );\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() { loader.classList.remove(\"hidden\"); }\n    function hideLoader() { loader.classList.add(\"hidden\"); }\n\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n    });\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n    }\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => initOverlay.style.display = \"none\", 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n    }\n\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      const rest = params.toString();\n      if (rest) url += \"&\" + rest;\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function virtualClark() {\n      showLoader();\n      const url = webhookVirtualClark + '?user=' + patientId;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function instantVisit() {\n      showLoader();\n      const url = webhookInstantVisit + '?patientId=' + encodeURIComponent(patientId) + '&_=' + Date.now();\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function checkOutPatient() {\n      showLoader();\n      const url =\n        'https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=' +\n        fullNameParam +\n        '&patientId=' +\n        patientId +\n        '&url=' +\n        parentPageUrl;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Event listeners for buttons\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      manualCheckout();\n    });\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      virtualClark();\n    });\n    document.getElementById(\"btnInitInstant\").addEventListener(\"click\", () => {\n      revealMainInterface();\n      instantVisit();\n    });\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnInstantVisit\").addEventListener(\"click\", instantVisit);\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n\n    // start with placeholder page\n    frame.src = placeholderPage;\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        -1200
      ],
      "id": "bb438459-ef91-4131-83a3-2bed13a35da1",
      "name": "Code12"
    },
    {
      "parameters": {
        "jsCode": "// The input is expected to be an array with one object as per your example input.\n// Extract the first item JSON from incoming items to get patient + visitURL and provider info.\n\nconst inputData = items[0].json;\n\n// Extract patient details from incoming JSON\nconst patientFirstName = inputData.PATIENT_FIRSTNAME || '';\nconst patientLastName = inputData.PATIENT_LASTNAME || '';\nconst patientName = `${patientFirstName} ${patientLastName}`.trim();\nconst patientNumber = inputData.DEM_EXTERNALID || ''; // MRN number, used as meetingID\n\n// Set calling provider fixed\nconst callingProviderUsername = 'Room Tablet';\nconst callingProviderName = 'Room Tablet';\n\n// The input provider/source data is an array; here your example is a single-item array for the provider and visitURL.\nconst inputProviders = items.map(item => item.json);\n\n// Build the provider data array for table (same as before but with correct calledProviderUsername fixed)\nconst providersData = inputProviders.map(p => ({\n  First_Name: p.First_Name || p.PATIENT_FIRSTNAME || '',\n  Last_Name: p.Last_Name || p.PATIENT_LASTNAME || '',\n  appt_gp_description: p.appt_gp_description || p.appt_gp_description || '', // may be in input or empty\n  spec_description: p.spec_description || p.spec_description || '',\n  City: p.City || p.City || '',\n  calledProviderUsername: callingProviderUsername,  // fixed as \"Room Tablet\"\n  calledProviderName: callingProviderName,\n  visitURL: p.visitURL || ''  // save visitURL here for redirect on send\n}));\n\nconst providersJson = JSON.stringify(providersData);\n\nconst htmlContent = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Provider Selection</title>\n  <style>\n    /* ...existing styles unchanged... */\n    body { font-family: Arial, sans-serif; padding: 20px; }\n    .info { margin-bottom: 20px; }\n    #search { margin-bottom: 10px; padding: 6px; width: 300px; }\n    .filters {\n      margin-bottom: 10px;\n      display: flex;\n      gap: 16px;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n    .filters label {\n      font-weight: bold;\n      margin-right: 6px;\n    }\n    select {\n      padding: 6px;\n      min-width: 150px;\n    }\n    table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n    th, td { padding: 8px 12px; border: 1px solid #ccc; text-align: left; }\n    th { cursor: pointer; background-color: #f9f9f9; user-select: none; }\n    th.sort-asc::after { content: \" ▲\"; font-size: 0.7em; }\n    th.sort-desc::after { content: \" ▼\"; font-size: 0.7em; }\n    .button { padding: 6px 12px; background-color: #0078D4; color: #fff; border: none; border-radius: 4px; cursor: pointer; }\n    .button:disabled { background-color: #aaa; cursor: default; }\n    .overlay {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.3);\n      z-index: 1000;\n    }\n    .loader {\n      display: none;\n      position: fixed;\n      top: 50%; left: 50%;\n      transform: translate(-50%, -50%);\n      background: rgba(255,255,255,0.9);\n      padding: 20px; border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      z-index: 1001;\n    }\n    .modal {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.4);\n      z-index: 1002;\n    }\n    .modal-content {\n      background: #fff;\n      margin: 15% auto;\n      padding: 20px 24px;\n      border-radius: 8px;\n      width: 80%;\n      max-width: 320px;\n      text-align: center;\n    }\n    .modal-content p { margin-bottom: 20px; }\n    .modal-content textarea {\n      width: 100%;\n      height: 80px;\n      margin: 0 0 20px 0;\n      padding: 8px 10px;\n      resize: vertical;\n      font-size: 14px;\n      box-sizing: border-box;\n    }\n    .modal-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n    }\n    .modal-buttons button {\n      flex: 1;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    #cancelReason {\n      background-color: #d9534f;\n      color: white;\n    }\n    #cancelReason:hover {\n      background-color: #c9302c;\n    }\n    #sendReason {\n      background-color: #0078D4;\n      color: white;\n    }\n    #sendReason:hover {\n      background-color: #005a9e;\n    }\n    .pagination {\n      margin-top: 15px;\n      display: flex;\n      gap: 8px;\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n    .pagination button {\n      padding: 6px 12px;\n      border: 1px solid #ccc;\n      background: #fff;\n      cursor: pointer;\n      border-radius: 4px;\n    }\n    .pagination button.active, .pagination button:hover {\n      background-color: #0078D4;\n      color: white;\n      border-color: #0078D4;\n    }\n    .pagination button:disabled {\n      background: #eee;\n      cursor: default;\n      color: #999;\n      border-color: #ccc;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"info\">\n    <strong>User:</strong> <span id=\"username\">${callingProviderName}</span><br />\n    <strong>Patient:</strong> <span id=\"patient\">${patientName}</span>\n  </div>\n  <input type=\"text\" id=\"search\" placeholder=\"Search providers…\" />\n  <div class=\"filters\">\n    <label for=\"filterSpecialty\">Specialty:</label>\n    <select id=\"filterSpecialty\">\n      <option value=\"\">All</option>\n    </select>\n    <label for=\"filterLocation\">Location:</label>\n    <select id=\"filterLocation\">\n      <option value=\"\">All</option>\n    </select>\n  </div>\n  <table id=\"providersTable\">\n    <thead>\n      <tr>\n        <th data-key=\"name\">Provider</th>\n        <th data-key=\"appt_gp_description\">Appointment Group</th>\n        <th data-key=\"spec_description\">Specialty</th>\n        <th data-key=\"City\">City</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  </table>\n  <div class=\"pagination\" id=\"pagination\"></div>\n  <div class=\"overlay\" id=\"overlay\"></div>\n  <div class=\"loader\" id=\"loader\">Loading…</div>\n\n  <!-- Existing general message modal -->\n  <div class=\"modal\" id=\"messageModal\">\n    <div class=\"modal-content\">\n      <p id=\"messageText\"></p>\n      <button class=\"button\" id=\"closeModal\">Close</button>\n    </div>\n  </div>\n\n  <!-- NEW Modal for reason input -->\n  <div class=\"modal\" id=\"reasonModal\">\n    <div class=\"modal-content\">\n      <p><strong>Reason for Instant Visit:</strong></p>\n      <textarea id=\"reasonInput\" placeholder=\"Enter reason for visit...\"></textarea>\n      <div class=\"modal-buttons\">\n        <button class=\"button\" id=\"cancelReason\">Cancel</button>\n        <button class=\"button\" id=\"sendReason\">Send</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    (function() {\n      // Patient and user info are embedded in DOM - no need to parse from URL params now.\n      const callingProviderUsername = \"${callingProviderUsername}\";\n      const callingProviderName = \"${callingProviderName}\";\n      const patientName = \"${patientName}\";\n      const patientNumber = \"${patientNumber}\";\n\n      // Providers data from backend JSON embed\n      let providersRaw = ${providersJson};\n\n      let providers = providersRaw.map(p => ({\n        name: (p.First_Name && p.Last_Name) ? \\`\\${p.First_Name} \\${p.Last_Name}\\` : '',\n        appt_gp_description: p.appt_gp_description || '',\n        spec_description: p.spec_description || '',\n        City: p.City || '',\n        calledProviderUsername: p.calledProviderUsername || '',\n        calledProviderName: p.calledProviderName || '',\n        visitURL: p.visitURL || ''\n      }));\n\n      const ROWS_PER_PAGE = 15;\n      let currentPage = 1;\n      let sortState = { key: '', asc: true };\n      let filters = { specialty: '', location: '' };\n      let searchTerm = '';\n\n      const tbody = document.querySelector('#providersTable tbody');\n      const specialtySelect = document.getElementById('filterSpecialty');\n      const locationSelect = document.getElementById('filterLocation');\n      const paginationContainer = document.getElementById('pagination');\n\n      const overlay = document.getElementById('overlay');\n      const loader = document.getElementById('loader');\n      const modal = document.getElementById('messageModal');\n      const msgText = document.getElementById('messageText');\n      const closeModal = document.getElementById('closeModal');\n\n      const reasonModal = document.getElementById('reasonModal');\n      const reasonInput = document.getElementById('reasonInput');\n      const cancelReasonBtn = document.getElementById('cancelReason');\n      const sendReasonBtn = document.getElementById('sendReason');\n\n      closeModal.addEventListener('click', () => modal.style.display = 'none');\n\n      cancelReasonBtn.addEventListener('click', () => {\n        reasonInput.value = '';\n        reasonModal.style.display = 'none';\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        showLoader(false);\n      });\n\n      function showLoader(on) {\n        overlay.style.display = on ? 'block' : 'none';\n        loader.style.display = on ? 'block' : 'none';\n      }\n      function showModal(message) {\n        msgText.textContent = message;\n        modal.style.display = 'block';\n      }\n\n      function requestReason() {\n        reasonInput.value = '';\n        reasonModal.style.display = 'block';\n        reasonInput.focus();\n\n        return new Promise((resolve) => {\n          const onSend = () => {\n            const reason = reasonInput.value.trim();\n            if (!reason) {\n              alert('Please enter a reason for the visit.');\n              reasonInput.focus();\n              return;\n            }\n            cleanup();\n            resolve(reason);\n          };\n          const onCancel = () => {\n            cleanup();\n            resolve(undefined);\n          };\n          function cleanup() {\n            reasonModal.style.display = 'none';\n            sendReasonBtn.removeEventListener('click', onSend);\n            cancelReasonBtn.removeEventListener('click', onCancel);\n          }\n          sendReasonBtn.addEventListener('click', onSend);\n          cancelReasonBtn.addEventListener('click', onCancel);\n        });\n      }\n\n      function populateFilters() {\n        const specialties = Array.from(new Set(providers.map(p => p.spec_description).filter(s => s))).sort();\n        const locations = Array.from(new Set(providers.map(p => p.City).filter(c => c))).sort();\n        specialties.forEach(s => {\n          const option = document.createElement('option');\n          option.value = s;\n          option.textContent = s;\n          specialtySelect.appendChild(option);\n        });\n        locations.forEach(c => {\n          const option = document.createElement('option');\n          option.value = c;\n          option.textContent = c;\n          locationSelect.appendChild(option);\n        });\n      }\n      function applyFiltersAndSearch() {\n        return providers.filter(p => {\n          const matchesSpecialty = filters.specialty ? p.spec_description === filters.specialty : true;\n          const matchesLocation = filters.location ? p.City === filters.location : true;\n          const matchesSearch = searchTerm ? (\n            p.name.toLowerCase().includes(searchTerm) ||\n            p.appt_gp_description.toLowerCase().includes(searchTerm) ||\n            p.spec_description.toLowerCase().includes(searchTerm) ||\n            p.City.toLowerCase().includes(searchTerm)\n          ) : true;\n          return matchesSpecialty && matchesLocation && matchesSearch;\n        });\n      }\n      function sortProviders(data) {\n        if (!sortState.key) return data;\n        return data.slice().sort((a, b) => {\n          const valA = a[sortState.key] ? a[sortState.key].toLowerCase() : '';\n          const valB = b[sortState.key] ? b[sortState.key].toLowerCase() : '';\n          if (valA === '' && valB !== '') return 1;\n          if (valB === '' && valA !== '') return -1;\n          if (valA < valB) return sortState.asc ? -1 : 1;\n          if (valA > valB) return sortState.asc ? 1 : -1;\n          return 0;\n        });\n      }\n      function renderTable(data) {\n        tbody.innerHTML = '';\n        if (data.length === 0) {\n          const row = document.createElement('tr');\n          const cell = document.createElement('td');\n          cell.colSpan = 5;\n          cell.style.textAlign = 'center';\n          cell.textContent = 'No providers found.';\n          row.appendChild(cell);\n          tbody.appendChild(row);\n          return;\n        }\n        const start = (currentPage - 1) * ROWS_PER_PAGE;\n        const end = Math.min(start + ROWS_PER_PAGE, data.length);\n        for (let i = start; i < end; i++) {\n          const p = data[i];\n          const row = document.createElement('tr');\n          row.innerHTML = \\`\n            <td>\\${p.name}</td>\n            <td>\\${p.appt_gp_description}</td>\n            <td>\\${p.spec_description}</td>\n            <td>\\${p.City}</td>\n            <td><button class=\"button join-btn\" data-index=\"\\${i}\">Join</button></td>\n          \\`;\n          tbody.appendChild(row);\n        }\n        document.querySelectorAll('.join-btn').forEach(btn => {\n          btn.addEventListener('click', () => joinProvider(btn.dataset.index));\n        });\n      }\n      function renderPagination(totalItems) {\n        paginationContainer.innerHTML = '';\n        const totalPages = Math.ceil(totalItems / ROWS_PER_PAGE);\n        if (totalPages <= 1) return;\n        const prevBtn = document.createElement('button');\n        prevBtn.textContent = 'Prev';\n        prevBtn.disabled = currentPage === 1;\n        prevBtn.addEventListener('click', () => {\n          if (currentPage > 1) {\n            currentPage--;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(prevBtn);\n        const maxPagesToShow = 7;\n        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n        let endPage = startPage + maxPagesToShow - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - maxPagesToShow + 1);\n        }\n        for (let i = startPage; i <= endPage; i++) {\n          const btn = document.createElement('button');\n          btn.textContent = i;\n          if (i === currentPage) btn.classList.add('active');\n          btn.addEventListener('click', () => {\n            currentPage = i;\n            updateTable();\n          });\n          paginationContainer.appendChild(btn);\n        }\n        const nextBtn = document.createElement('button');\n        nextBtn.textContent = 'Next';\n        nextBtn.disabled = currentPage === totalPages;\n        nextBtn.addEventListener('click', () => {\n          if (currentPage < totalPages) {\n            currentPage++;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(nextBtn);\n      }\n      function updateTable() {\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const totalPages = Math.ceil(filtered.length / ROWS_PER_PAGE) || 1;\n        if (currentPage > totalPages) currentPage = totalPages;\n        renderTable(filtered);\n        renderPagination(filtered.length);\n      }\n\n      document.getElementById('search').addEventListener('input', e => {\n        searchTerm = e.target.value.trim().toLowerCase();\n        currentPage = 1;\n        updateTable();\n      });\n      specialtySelect.addEventListener('change', e => {\n        filters.specialty = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      locationSelect.addEventListener('change', e => {\n        filters.location = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      const headers = document.querySelectorAll('#providersTable th[data-key]');\n      headers.forEach(th => {\n        th.addEventListener('click', () => {\n          const key = th.getAttribute('data-key');\n          if (sortState.key === key) {\n            sortState.asc = !sortState.asc;\n          } else {\n            sortState.key = key;\n            sortState.asc = true;\n          }\n          currentPage = 1;\n          headers.forEach(h => h.classList.remove('sort-asc', 'sort-desc'));\n          th.classList.add(sortState.asc ? 'sort-asc' : 'sort-desc');\n          updateTable();\n        });\n      });\n\n      // Updated joinProvider:\n      async function joinProvider(index) {\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = true);\n        showLoader(true);\n\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const prov = filtered[index];\n\n        // Request reason for visit from user\n        const reason = await requestReason();\n\n        if (reason === undefined) {\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n          return;\n        }\n\n        // Use fixed calling provider info plus patient info + visitURL\n        const payload = {\n          calledProviderUsername: callingProviderUsername,\n          calledProviderName: callingProviderName,\n          patientName: patientName,\n          patientNumber: patientNumber,\n          provider: prov.name,\n          appointmentGroup: prov.appt_gp_description,\n          specialty: prov.spec_description,\n          city: prov.City,\n          reasonForVisit: reason\n        };\n\n        try {\n          // Send payload to webhook (unchanged)\n          const resp = await fetch('https://xl.epicpc.com/webhook/e850608b-e046-49e7-825f-f52e1d912958', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          });\n          if (!resp.ok) throw new Error('HTTP ' + resp.status);\n\n          // SUCCESS: close modal, alert and redirect to visitURL\n          showModal('Success! Redirecting you to the visit now...');\n          setTimeout(() => {\n            modal.style.display = 'none';\n            if (prov.visitURL) {\n              window.location.href = prov.visitURL;\n            } else {\n              alert('No visit URL found.');\n            }\n          }, 1500);\n\n        } catch (err) {\n          console.error(err);\n          showModal('There was an issue, please try again.');\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        }\n      }\n\n      populateFilters();\n      updateTable();\n    })();\n  </script>\n</body>\n</html>\n`;\n\n// Return the result as an array with a single item containing the html string in json.html\nreturn [\n  {\n    json: {\n      html: htmlContent\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5980,
        280
      ],
      "id": "803f3c77-f517-4d75-bf16-73feebc2d792",
      "name": "Code13"
    },
    {
      "parameters": {
        "jsCode": "// Build the providers list from input items, extracting needed fields including City and calledProviderUsername/Name\nconst providersData = items.map(item => ({\n  First_Name: item.json.First_Name || '',\n  Last_Name: item.json.Last_Name || '',\n  appt_gp_description: item.json.appt_gp_description || '',\n  spec_description: item.json.spec_description || '',\n  City: item.json.City || '',\n  calledProviderUsername: item.json.calledprovider || '',  // renamed here\n  calledProviderName: [item.json.First_Name, item.json.Last_Name].filter(Boolean).join(' ').trim()\n}));\n// Stringify providersData for safe embedding in JS\nconst providersJson = JSON.stringify(providersData);\n// Build the full HTML content with embedded providers JSON\nconst htmlContent = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Provider Selection</title>\n  <style>\n    body { font-family: Arial, sans-serif; padding: 20px; }\n    .info { margin-bottom: 20px; }\n    #search { margin-bottom: 10px; padding: 6px; width: 300px; }\n    /* Filters container */\n    .filters {\n      margin-bottom: 10px;\n      display: flex;\n      gap: 16px;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n    .filters label {\n      font-weight: bold;\n      margin-right: 6px;\n    }\n    select {\n      padding: 6px;\n      min-width: 150px;\n    }\n    /* Cancel Instant Visit button container */\n    .cancel-visit-container {\n      margin-bottom: 20px;\n    }\n    #cancelInstantVisit {\n      background-color: #d9534f; /* bootstrap’s red */\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 8px 16px;\n      cursor: pointer;\n      font-weight: bold;\n      font-size: 14px;\n    }\n    #cancelInstantVisit:hover {\n      background-color: #c9302c;\n    }\n    table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n    th, td { padding: 8px 12px; border: 1px solid #ccc; text-align: left; }\n    th { cursor: pointer; background-color: #f9f9f9; user-select: none; }\n    th.sort-asc::after {\n      content: \" ▲\";\n      font-size: 0.7em;\n    }\n    th.sort-desc::after {\n      content: \" ▼\";\n      font-size: 0.7em;\n    }\n    .button { padding: 6px 12px; background-color: #0078D4; color: #fff; border: none; border-radius: 4px; cursor: pointer; }\n    .button:disabled { background-color: #aaa; cursor: default; }\n\n    .overlay {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.3);\n      z-index: 1000;\n    }\n    .loader {\n      display: none;\n      position: fixed;\n      top: 50%; left: 50%;\n      transform: translate(-50%, -50%);\n      background: rgba(255,255,255,0.9);\n      padding: 20px; border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      z-index: 1001;\n    }\n    .modal {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.4);\n      z-index: 1002;\n    }\n    .modal-content {\n      background: #fff;\n      margin: 15% auto;\n      padding: 20px 24px; /* equal horizontal padding */\n      border-radius: 8px;\n      width: 80%;\n      max-width: 320px;\n      text-align: center;\n    }\n    .modal-content p { margin-bottom: 20px; }\n    .modal-content textarea {\n      width: 100%;\n      height: 80px;\n      margin: 0 0 20px 0; /* margin-top:0; margin-bottom:20px */\n      padding: 8px 10px;   /* equal horizontal padding */\n      resize: vertical;\n      font-size: 14px;\n      box-sizing: border-box;\n    }\n    .modal-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n    }\n    .modal-buttons button {\n      flex: 1;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    #cancelReason {\n      background-color: #d9534f; /* bootstrap’s red */\n      color: white;\n    }\n    #cancelReason:hover {\n      background-color: #c9302c;\n    }\n    #sendReason {\n      background-color: #0078D4;\n      color: white;\n    }\n    #sendReason:hover {\n      background-color: #005a9e;\n    }\n    /* Pagination styles */\n    .pagination {\n      margin-top: 15px;\n      display: flex;\n      gap: 8px;\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n    .pagination button {\n      padding: 6px 12px;\n      border: 1px solid #ccc;\n      background: #fff;\n      cursor: pointer;\n      border-radius: 4px;\n    }\n    .pagination button.active, .pagination button:hover {\n      background-color: #0078D4;\n      color: white;\n      border-color: #0078D4;\n    }\n    .pagination button:disabled {\n      background: #eee;\n      cursor: default;\n      color: #999;\n      border-color: #ccc;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"info\">\n    <strong>User:</strong> <span id=\"username\"></span><br />\n    <strong>Patient:</strong> <span id=\"patient\"></span>\n  </div>\n  <input type=\"text\" id=\"search\" placeholder=\"Search providers…\" />\n  <div class=\"filters\">\n    <label for=\"filterSpecialty\">Specialty:</label>\n    <select id=\"filterSpecialty\">\n      <option value=\"\">All</option>\n    </select>\n    <label for=\"filterLocation\">Location:</label>\n    <select id=\"filterLocation\">\n      <option value=\"\">All</option>\n    </select>\n  </div>\n  \n  <div class=\"cancel-visit-container\">\n    <button id=\"cancelInstantVisit\">Cancel Instant Visit</button>\n  </div>\n  \n  <table id=\"providersTable\">\n    <thead>\n      <tr>\n        <th data-key=\"name\">Provider</th>\n        <th data-key=\"appt_gp_description\">Appointment Group</th>\n        <th data-key=\"spec_description\">Specialty</th>\n        <th data-key=\"City\">City</th> <!-- Added City column header with sortable data-key -->\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  </table>\n  <div class=\"pagination\" id=\"pagination\"></div>\n  <div class=\"overlay\" id=\"overlay\"></div>\n  <div class=\"loader\" id=\"loader\">Loading…</div>\n\n  <!-- Existing general message modal -->\n  <div class=\"modal\" id=\"messageModal\">\n    <div class=\"modal-content\">\n      <p id=\"messageText\"></p>\n      <button class=\"button\" id=\"closeModal\">Close</button>\n    </div>\n  </div>\n\n  <!-- Modal for reason input -->\n  <div class=\"modal\" id=\"reasonModal\">\n    <div class=\"modal-content\">\n      <p><strong>Reason for Instant Visit:</strong></p>\n      <textarea id=\"reasonInput\" placeholder=\"Enter reason for visit...\"></textarea>\n      <div class=\"modal-buttons\">\n        <button class=\"button\" id=\"cancelReason\">Cancel</button>\n        <button class=\"button\" id=\"sendReason\">Send</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    (function() {\n      const params = new URLSearchParams(window.location.search);\n      const urlParams = {};\n      params.forEach((value, key) => {\n        urlParams[key] = value;\n      });\n      // Use calledProviderUsername from urlParams only for display, real logic uses provider data\n      const calledProviderUsernameParam = urlParams.calledprovider || '';\n      const first = urlParams.dem_firstname || '';\n      const last = urlParams.dem_lastname || '';\n      const patientName = \\`\\${first} \\${last}\\`.trim();\n      const patientNumber = urlParams.patientid || urlParams.mrn || '';\n      document.getElementById('username').textContent = calledProviderUsernameParam;\n      document.getElementById('patient').textContent = patientName;\n      let providersRaw = ${providersJson};\n      let providers = providersRaw.map(p => ({\n        name: (p.First_Name && p.Last_Name) ? \\`\\${p.First_Name} \\${p.Last_Name}\\` : '',\n        appt_gp_description: p.appt_gp_description || '',\n        spec_description: p.spec_description || '',\n        City: p.City || '',\n        calledProviderUsername: p.calledProviderUsername || '',\n        calledProviderName: p.calledProviderName || ''\n      }));\n      // Find called provider full name if username found (used only for display, optional)\n      let calledProviderName = '';\n      if (calledProviderUsernameParam) {\n        const matchedProvider = providers.find(p =>\n          p.calledProviderUsername && p.calledProviderUsername.toLowerCase() === calledProviderUsernameParam.toLowerCase()\n        );\n        if (matchedProvider) {\n          calledProviderName = matchedProvider.name;\n        }\n      }\n      const ROWS_PER_PAGE = 15;\n      let currentPage = 1;\n      let sortState = { key: '', asc: true };\n      let filters = { specialty: '', location: '' };\n      let searchTerm = '';\n      const tbody = document.querySelector('#providersTable tbody');\n      const specialtySelect = document.getElementById('filterSpecialty');\n      const locationSelect = document.getElementById('filterLocation');\n      const paginationContainer = document.getElementById('pagination');\n\n      const overlay = document.getElementById('overlay');\n      const loader = document.getElementById('loader');\n      const modal = document.getElementById('messageModal');\n      const msgText = document.getElementById('messageText');\n      const closeModal = document.getElementById('closeModal');\n\n      // Reason modal and its elements\n      const reasonModal = document.getElementById('reasonModal');\n      const reasonInput = document.getElementById('reasonInput');\n      const cancelReasonBtn = document.getElementById('cancelReason');\n      const sendReasonBtn = document.getElementById('sendReason');\n\n      // Cancel Instant Visit button\n      const cancelInstantVisitBtn = document.getElementById('cancelInstantVisit');\n      cancelInstantVisitBtn.addEventListener('click', () => {\n        window.history.back();\n      });\n\n      closeModal.addEventListener('click', () => modal.style.display = 'none');\n\n      cancelReasonBtn.addEventListener('click', () => {\n        reasonInput.value = '';\n        reasonModal.style.display = 'none';\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        showLoader(false);\n      });\n\n      // Helper to show/hide loader and overlay\n      function showLoader(on) {\n        overlay.style.display = on ? 'block' : 'none';\n        loader.style.display = on ? 'block' : 'none';\n      }\n      // Show message modal\n      function showModal(message) {\n        msgText.textContent = message;\n        modal.style.display = 'block';\n      }\n      // Utility: Waits for reason input via modal, returns a Promise<string|undefined>\n      function requestReason() {\n        reasonInput.value = '';\n        reasonModal.style.display = 'block';\n        reasonInput.focus();\n\n        return new Promise((resolve) => {\n          // Send handler\n          const onSend = () => {\n            const reason = reasonInput.value.trim();\n            if (!reason) {\n              // Optionally, prevent empty submission or just proceed\n              alert('Please enter a reason for the visit.');\n              reasonInput.focus();\n              return;\n            }\n            cleanup();\n            resolve(reason);\n          };\n          // Cancel handler\n          const onCancel = () => {\n            cleanup();\n            resolve(undefined);\n          };\n\n          function cleanup() {\n            reasonModal.style.display = 'none';\n            sendReasonBtn.removeEventListener('click', onSend);\n            cancelReasonBtn.removeEventListener('click', onCancel);\n          }\n          sendReasonBtn.addEventListener('click', onSend);\n          cancelReasonBtn.addEventListener('click', onCancel);\n        });\n      }\n\n      function populateFilters() {\n        const specialties = Array.from(new Set(providers.map(p => p.spec_description).filter(s => s))).sort();\n        const locations = Array.from(new Set(providers.map(p => p.City).filter(c => c))).sort();\n        specialties.forEach(s => {\n          const option = document.createElement('option');\n          option.value = s;\n          option.textContent = s;\n          specialtySelect.appendChild(option);\n        });\n        locations.forEach(c => {\n          const option = document.createElement('option');\n          option.value = c;\n          option.textContent = c;\n          locationSelect.appendChild(option);\n        });\n      }\n      function applyFiltersAndSearch() {\n        return providers.filter(p => {\n          const matchesSpecialty = filters.specialty ? p.spec_description === filters.specialty : true;\n          const matchesLocation = filters.location ? p.City === filters.location : true;\n          const matchesSearch = searchTerm ? (\n            p.name.toLowerCase().includes(searchTerm) ||\n            p.appt_gp_description.toLowerCase().includes(searchTerm) ||\n            p.spec_description.toLowerCase().includes(searchTerm) ||\n            p.City.toLowerCase().includes(searchTerm)\n          ) : true;\n          return matchesSpecialty && matchesLocation && matchesSearch;\n        });\n      }\n      function sortProviders(data) {\n        if (!sortState.key) return data;\n        return data.slice().sort((a, b) => {\n          const valA = a[sortState.key] ? a[sortState.key].toLowerCase() : '';\n          const valB = b[sortState.key] ? b[sortState.key].toLowerCase() : '';\n          if (valA === '' && valB !== '') return 1;\n          if (valB === '' && valA !== '') return -1;\n          if (valA < valB) return sortState.asc ? -1 : 1;\n          if (valA > valB) return sortState.asc ? 1 : -1;\n          return 0;\n        });\n      }\n      function renderTable(data) {\n        tbody.innerHTML = '';\n        if (data.length === 0) {\n          const row = document.createElement('tr');\n          const cell = document.createElement('td');\n          cell.colSpan = 5;\n          cell.style.textAlign = 'center';\n          cell.textContent = 'No providers found.';\n          row.appendChild(cell);\n          tbody.appendChild(row);\n          return;\n        }\n        const start = (currentPage - 1) * ROWS_PER_PAGE;\n        const end = Math.min(start + ROWS_PER_PAGE, data.length);\n        for (let i = start; i < end; i++) {\n          const p = data[i];\n          const row = document.createElement('tr');\n          row.innerHTML = \\`\n            <td>\\${p.name}</td>\n            <td>\\${p.appt_gp_description}</td>\n            <td>\\${p.spec_description}</td>\n            <td>\\${p.City}</td>\n            <td><button class=\"button join-btn\" data-index=\"\\${i}\">Join</button></td>\n          \\`;\n          tbody.appendChild(row);\n        }\n        document.querySelectorAll('.join-btn').forEach(btn => {\n          btn.addEventListener('click', () => joinProvider(btn.dataset.index));\n        });\n      }\n      function renderPagination(totalItems) {\n        paginationContainer.innerHTML = '';\n        const totalPages = Math.ceil(totalItems / ROWS_PER_PAGE);\n        if (totalPages <= 1) return;\n        const prevBtn = document.createElement('button');\n        prevBtn.textContent = 'Prev';\n        prevBtn.disabled = currentPage === 1;\n        prevBtn.addEventListener('click', () => {\n          if (currentPage > 1) {\n            currentPage--;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(prevBtn);\n        const maxPagesToShow = 7;\n        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n        let endPage = startPage + maxPagesToShow - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - maxPagesToShow + 1);\n        }\n        for (let i = startPage; i <= endPage; i++) {\n          const btn = document.createElement('button');\n          btn.textContent = i;\n          if (i === currentPage) btn.classList.add('active');\n          btn.addEventListener('click', () => {\n            currentPage = i;\n            updateTable();\n          });\n          paginationContainer.appendChild(btn);\n        }\n        const nextBtn = document.createElement('button');\n        nextBtn.textContent = 'Next';\n        nextBtn.disabled = currentPage === totalPages;\n        nextBtn.addEventListener('click', () => {\n          if (currentPage < totalPages) {\n            currentPage++;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(nextBtn);\n      }\n      function updateTable() {\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const totalPages = Math.ceil(filtered.length / ROWS_PER_PAGE) || 1;\n        if (currentPage > totalPages) currentPage = totalPages;\n        renderTable(filtered);\n        renderPagination(filtered.length);\n      }\n\n      document.getElementById('search').addEventListener('input', e => {\n        searchTerm = e.target.value.trim().toLowerCase();\n        currentPage = 1;\n        updateTable();\n      });\n      specialtySelect.addEventListener('change', e => {\n        filters.specialty = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      locationSelect.addEventListener('change', e => {\n        filters.location = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      const headers = document.querySelectorAll('#providersTable th[data-key]');\n      headers.forEach(th => {\n        th.addEventListener('click', () => {\n          const key = th.getAttribute('data-key');\n          if (sortState.key === key) {\n            sortState.asc = !sortState.asc;\n          } else {\n            sortState.key = key;\n            sortState.asc = true;\n          }\n          currentPage = 1;\n          headers.forEach(h => h.classList.remove('sort-asc', 'sort-desc'));\n          th.classList.add(sortState.asc ? 'sort-asc' : 'sort-desc');\n          updateTable();\n        });\n      });\n\n      // Updated joinProvider to first request reason via modal\n      async function joinProvider(index) {\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = true);\n        showLoader(true);\n\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const prov = filtered[index];\n\n        // Request reason for visit from user\n        const reason = await requestReason();\n\n        if (reason === undefined) {\n          // User cancelled entering reason, just re-enable buttons and loader off\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n          return;\n        }\n\n        // Use empty string if name is empty or falsy\n        const provName = prov.name || '';\n\n        const payload = {\n          ...urlParams,\n          calledProviderUsername: prov.calledProviderUsername,\n          calledProviderName: prov.calledProviderName,\n          patientName: patientName,\n          patientNumber: patientNumber,\n          provider: provName,\n          appointmentGroup: prov.appt_gp_description,\n          specialty: prov.spec_description,\n          city: prov.City,\n          reasonForVisit: reason\n        };\n        try {\n          const resp = await fetch('https://xl.epicpc.com/webhook/e850608b-e046-49e7-825f-f52e1d912958', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          });\n          if (!resp.ok) throw new Error('HTTP ' + resp.status);\n          showModal('Success! Please check your chat messages!');\n        } catch (err) {\n          console.error(err);\n          showModal('There was an issue, please try again.');\n        } finally {\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        }\n      }\n\n      populateFilters();\n      updateTable();\n    })();\n  </script>\n</body>\n</html>\n`;\n// Return the HTML as _one item_ in output with a json property `html`\nreturn [\n  {\n    json: {\n      html: htmlContent,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5940,
        140
      ],
      "id": "6043c97d-20c1-4ceb-a03a-963dddfe6516",
      "name": "Code14"
    },
    {
      "parameters": {
        "jsCode": "const inputData = items[0].json;\n\n// Extract patient details from incoming JSON\nconst patientFirstName = inputData.PATIENT_FIRSTNAME || '';\nconst patientLastName = inputData.PATIENT_LASTNAME || '';\nconst patientName = `${patientFirstName} ${patientLastName}`.trim();\nconst patientNumber = inputData.DEM_EXTERNALID || ''; // MRN number, used as meetingID\n\n// Set calling provider fixed\nconst callingProviderUsername = 'Room Tablet';\nconst callingProviderName = 'Room Tablet';\n\n// The input provider/source data is an array; here your example is a single-item array for the provider and visitURL.\nconst inputProviders = items.map(item => item.json);\n\n// Build the provider data array for table (with calledProviderUsername fixed)\nconst providersData = inputProviders.map(p => ({\n  First_Name: p.First_Name || p.PATIENT_FIRSTNAME || '',\n  Last_Name: p.Last_Name || p.PATIENT_LASTNAME || '',\n  appt_gp_description: p.appt_gp_description || '',\n  spec_description: p.spec_description || '',\n  City: p.City || '',\n  calledProviderUsername: callingProviderUsername,  // fixed as \"Room Tablet\"\n  calledProviderName: callingProviderName,\n  visitURL: p.visitURL || ''  // save visitURL here for redirect on send\n}));\n\nconst providersJson = JSON.stringify(providersData);\n\nconst htmlContent = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n  <title>Provider Selection</title>\n  <style>\n    body { font-family: Arial, sans-serif; padding: 20px; }\n    .info { margin-bottom: 20px; }\n    #search { margin-bottom: 10px; padding: 6px; width: 300px; }\n    .filters {\n      margin-bottom: 10px;\n      display: flex;\n      gap: 16px;\n      flex-wrap: wrap;\n      align-items: center;\n    }\n    .filters label {\n      font-weight: bold;\n      margin-right: 6px;\n    }\n    select {\n      padding: 6px;\n      min-width: 150px;\n    }\n    table { width: 100%; border-collapse: collapse; margin-top: 10px; }\n    th, td { padding: 8px 12px; border: 1px solid #ccc; text-align: left; }\n    th { cursor: pointer; background-color: #f9f9f9; user-select: none; }\n    th.sort-asc::after { content: \" ▲\"; font-size: 0.7em; }\n    th.sort-desc::after { content: \" ▼\"; font-size: 0.7em; }\n    .button { padding: 6px 12px; background-color: #0078D4; color: #fff; border: none; border-radius: 4px; cursor: pointer; }\n    .button:disabled { background-color: #aaa; cursor: default; }\n    .button.cancel {\n      background-color: #d9534f;\n      color: white;\n      margin-top: 15px;\n    }\n    .button.cancel:hover {\n      background-color: #c9302c;\n    }\n    .overlay {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.3);\n      z-index: 1000;\n    }\n    .loader {\n      display: none;\n      position: fixed;\n      top: 50%; left: 50%;\n      transform: translate(-50%, -50%);\n      background: rgba(255,255,255,0.9);\n      padding: 20px; border-radius: 8px;\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      z-index: 1001;\n    }\n    .modal {\n      display: none;\n      position: fixed; top: 0; left: 0;\n      width: 100%; height: 100%;\n      background: rgba(0,0,0,0.4);\n      z-index: 1002;\n    }\n    .modal-content {\n      background: #fff;\n      margin: 15% auto;\n      padding: 20px 24px;\n      border-radius: 8px;\n      width: 80%;\n      max-width: 320px;\n      text-align: center;\n    }\n    .modal-content p { margin-bottom: 20px; }\n    .modal-content textarea {\n      width: 100%;\n      height: 80px;\n      margin: 0 0 20px 0;\n      padding: 8px 10px;\n      resize: vertical;\n      font-size: 14px;\n      box-sizing: border-box;\n    }\n    .modal-buttons {\n      display: flex;\n      justify-content: space-between;\n      gap: 10px;\n    }\n    .modal-buttons button {\n      flex: 1;\n      padding: 8px 12px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    #cancelReason {\n      background-color: #d9534f;\n      color: white;\n    }\n    #cancelReason:hover {\n      background-color: #c9302c;\n    }\n    #sendReason {\n      background-color: #0078D4;\n      color: white;\n    }\n    #sendReason:hover {\n      background-color: #005a9e;\n    }\n    .pagination {\n      margin-top: 15px;\n      display: flex;\n      gap: 8px;\n      justify-content: center;\n      flex-wrap: wrap;\n    }\n    .pagination button {\n      padding: 6px 12px;\n      border: 1px solid #ccc;\n      background: #fff;\n      cursor: pointer;\n      border-radius: 4px;\n    }\n    .pagination button.active, .pagination button:hover {\n      background-color: #0078D4;\n      color: white;\n      border-color: #0078D4;\n    }\n    .pagination button:disabled {\n      background: #eee;\n      cursor: default;\n      color: #999;\n      border-color: #ccc;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"info\">\n    <strong>User:</strong> <span id=\"username\">${callingProviderName}</span><br />\n    <strong>Patient:</strong> <span id=\"patient\">${patientName}</span>\n  </div>\n  <input type=\"text\" id=\"search\" placeholder=\"Search providers…\" />\n  <div class=\"filters\">\n    <label for=\"filterSpecialty\">Specialty:</label>\n    <select id=\"filterSpecialty\">\n      <option value=\"\">All</option>\n    </select>\n    <label for=\"filterLocation\">Location:</label>\n    <select id=\"filterLocation\">\n      <option value=\"\">All</option>\n    </select>\n  </div>\n  <table id=\"providersTable\">\n    <thead>\n      <tr>\n        <th data-key=\"name\">Provider</th>\n        <th data-key=\"appt_gp_description\">Appointment Group</th>\n        <th data-key=\"spec_description\">Specialty</th>\n        <th data-key=\"City\">City</th>\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  </table>\n\n  <button class=\"button cancel\" id=\"cancelInstantVisitBtn\" type=\"button\">Cancel Instant Visit</button>\n\n  <div class=\"pagination\" id=\"pagination\"></div>\n  <div class=\"overlay\" id=\"overlay\"></div>\n  <div class=\"loader\" id=\"loader\">Loading…</div>\n\n  <!-- Existing general message modal -->\n  <div class=\"modal\" id=\"messageModal\">\n    <div class=\"modal-content\">\n      <p id=\"messageText\"></p>\n      <button class=\"button\" id=\"closeModal\">Close</button>\n    </div>\n  </div>\n\n  <!-- NEW Modal for reason input -->\n  <div class=\"modal\" id=\"reasonModal\">\n    <div class=\"modal-content\">\n      <p><strong>Reason for Instant Visit:</strong></p>\n      <textarea id=\"reasonInput\" placeholder=\"Enter reason for visit...\"></textarea>\n      <div class=\"modal-buttons\">\n        <button class=\"button\" id=\"cancelReason\">Cancel</button>\n        <button class=\"button\" id=\"sendReason\">Send</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    (function() {\n      const callingProviderUsername = \"${callingProviderUsername}\";\n      const callingProviderName = \"${callingProviderName}\";\n      const patientName = \"${patientName}\";\n      const patientNumber = \"${patientNumber}\";\n\n      let providersRaw = ${providersJson};\n\n      let providers = providersRaw.map(p => ({\n        name: ((p.First_Name && p.First_Name.trim()) && (p.Last_Name && p.Last_Name.trim())) ? \\`\\${p.First_Name} \\${p.Last_Name}\\` : '',\n        appt_gp_description: p.appt_gp_description || '',\n        spec_description: p.spec_description || '',\n        City: p.City || '',\n        calledProviderUsername: p.calledProviderUsername || '',\n        calledProviderName: p.calledProviderName || '',\n        visitURL: p.visitURL || ''\n      }));\n\n      const ROWS_PER_PAGE = 15;\n      let currentPage = 1;\n      let sortState = { key: '', asc: true };\n      let filters = { specialty: '', location: '' };\n      let searchTerm = '';\n\n      const tbody = document.querySelector('#providersTable tbody');\n      const specialtySelect = document.getElementById('filterSpecialty');\n      const locationSelect = document.getElementById('filterLocation');\n      const paginationContainer = document.getElementById('pagination');\n\n      const overlay = document.getElementById('overlay');\n      const loader = document.getElementById('loader');\n      const modal = document.getElementById('messageModal');\n      const msgText = document.getElementById('messageText');\n      const closeModal = document.getElementById('closeModal');\n\n      const reasonModal = document.getElementById('reasonModal');\n      const reasonInput = document.getElementById('reasonInput');\n      const cancelReasonBtn = document.getElementById('cancelReason');\n      const sendReasonBtn = document.getElementById('sendReason');\n\n      const cancelInstantVisitBtn = document.getElementById('cancelInstantVisitBtn');\n\n      closeModal.addEventListener('click', () => modal.style.display = 'none');\n\n      cancelReasonBtn.addEventListener('click', () => {\n        reasonInput.value = '';\n        reasonModal.style.display = 'none';\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        showLoader(false);\n      });\n\n      cancelInstantVisitBtn.addEventListener('click', () => {\n        // Navigate back one page when cancel clicked\n        history.back();\n      });\n\n      function showLoader(on) {\n        overlay.style.display = on ? 'block' : 'none';\n        loader.style.display = on ? 'block' : 'none';\n      }\n      function showModal(message) {\n        msgText.textContent = message;\n        modal.style.display = 'block';\n      }\n\n      function requestReason() {\n        reasonInput.value = '';\n        reasonModal.style.display = 'block';\n        reasonInput.focus();\n\n        return new Promise((resolve) => {\n          const onSend = () => {\n            const reason = reasonInput.value.trim();\n            if (!reason) {\n              alert('Please enter a reason for the visit.');\n              reasonInput.focus();\n              return;\n            }\n            cleanup();\n            resolve(reason);\n          };\n          const onCancel = () => {\n            cleanup();\n            resolve(undefined);\n          };\n          function cleanup() {\n            reasonModal.style.display = 'none';\n            sendReasonBtn.removeEventListener('click', onSend);\n            cancelReasonBtn.removeEventListener('click', onCancel);\n          }\n          sendReasonBtn.addEventListener('click', onSend);\n          cancelReasonBtn.addEventListener('click', onCancel);\n        });\n      }\n\n      function populateFilters() {\n        const specialties = Array.from(new Set(providers.map(p => p.spec_description).filter(s => s))).sort();\n        const locations = Array.from(new Set(providers.map(p => p.City).filter(c => c))).sort();\n        specialties.forEach(s => {\n          const option = document.createElement('option');\n          option.value = s;\n          option.textContent = s;\n          specialtySelect.appendChild(option);\n        });\n        locations.forEach(c => {\n          const option = document.createElement('option');\n          option.value = c;\n          option.textContent = c;\n          locationSelect.appendChild(option);\n        });\n      }\n\n      function applyFiltersAndSearch() {\n        return providers.filter(p => {\n          const matchesSpecialty = filters.specialty ? p.spec_description === filters.specialty : true;\n          const matchesLocation = filters.location ? p.City === filters.location : true;\n          const matchesSearch = searchTerm ? (\n            (p.name || '').toLowerCase().includes(searchTerm) ||\n            p.appt_gp_description.toLowerCase().includes(searchTerm) ||\n            p.spec_description.toLowerCase().includes(searchTerm) ||\n            p.City.toLowerCase().includes(searchTerm)\n          ) : true;\n          return matchesSpecialty && matchesLocation && matchesSearch;\n        });\n      }\n      function sortProviders(data) {\n        if (!sortState.key) return data;\n        return data.slice().sort((a, b) => {\n          const valA = a[sortState.key] ? a[sortState.key].toLowerCase() : '';\n          const valB = b[sortState.key] ? b[sortState.key].toLowerCase() : '';\n          if (valA === '' && valB !== '') return 1;\n          if (valB === '' && valA !== '') return -1;\n          if (valA < valB) return sortState.asc ? -1 : 1;\n          if (valA > valB) return sortState.asc ? 1 : -1;\n          return 0;\n        });\n      }\n      function renderTable(data) {\n        tbody.innerHTML = '';\n        if (data.length === 0) {\n          const row = document.createElement('tr');\n          const cell = document.createElement('td');\n          cell.colSpan = 5;\n          cell.style.textAlign = 'center';\n          cell.textContent = 'No providers found.';\n          row.appendChild(cell);\n          tbody.appendChild(row);\n          return;\n        }\n        const start = (currentPage - 1) * ROWS_PER_PAGE;\n        const end = Math.min(start + ROWS_PER_PAGE, data.length);\n        for (let i = start; i < end; i++) {\n          const p = data[i];\n          const nameCell = p.name || '';\n          const row = document.createElement('tr');\n          row.innerHTML = \\`\n            <td>\\${nameCell}</td>\n            <td>\\${p.appt_gp_description}</td>\n            <td>\\${p.spec_description}</td>\n            <td>\\${p.City}</td>\n            <td><button class=\"button join-btn\" data-index=\"\\${i}\">Join</button></td>\n          \\`;\n          tbody.appendChild(row);\n        }\n        document.querySelectorAll('.join-btn').forEach(btn => {\n          btn.addEventListener('click', () => joinProvider(btn.dataset.index));\n        });\n      }\n      function renderPagination(totalItems) {\n        paginationContainer.innerHTML = '';\n        const totalPages = Math.ceil(totalItems / ROWS_PER_PAGE);\n        if (totalPages <= 1) return;\n        const prevBtn = document.createElement('button');\n        prevBtn.textContent = 'Prev';\n        prevBtn.disabled = currentPage === 1;\n        prevBtn.addEventListener('click', () => {\n          if (currentPage > 1) {\n            currentPage--;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(prevBtn);\n        const maxPagesToShow = 7;\n        let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n        let endPage = startPage + maxPagesToShow - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - maxPagesToShow + 1);\n        }\n        for (let i = startPage; i <= endPage; i++) {\n          const btn = document.createElement('button');\n          btn.textContent = i;\n          if (i === currentPage) btn.classList.add('active');\n          btn.addEventListener('click', () => {\n            currentPage = i;\n            updateTable();\n          });\n          paginationContainer.appendChild(btn);\n        }\n        const nextBtn = document.createElement('button');\n        nextBtn.textContent = 'Next';\n        nextBtn.disabled = currentPage === totalPages;\n        nextBtn.addEventListener('click', () => {\n          if (currentPage < totalPages) {\n            currentPage++;\n            updateTable();\n          }\n        });\n        paginationContainer.appendChild(nextBtn);\n      }\n      function updateTable() {\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const totalPages = Math.ceil(filtered.length / ROWS_PER_PAGE) || 1;\n        if (currentPage > totalPages) currentPage = totalPages;\n        renderTable(filtered);\n        renderPagination(filtered.length);\n      }\n\n      document.getElementById('search').addEventListener('input', e => {\n        searchTerm = e.target.value.trim().toLowerCase();\n        currentPage = 1;\n        updateTable();\n      });\n      specialtySelect.addEventListener('change', e => {\n        filters.specialty = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      locationSelect.addEventListener('change', e => {\n        filters.location = e.target.value;\n        currentPage = 1;\n        updateTable();\n      });\n      const headers = document.querySelectorAll('#providersTable th[data-key]');\n      headers.forEach(th => {\n        th.addEventListener('click', () => {\n          const key = th.getAttribute('data-key');\n          if (sortState.key === key) {\n            sortState.asc = !sortState.asc;\n          } else {\n            sortState.key = key;\n            sortState.asc = true;\n          }\n          currentPage = 1;\n          headers.forEach(h => h.classList.remove('sort-asc', 'sort-desc'));\n          th.classList.add(sortState.asc ? 'sort-asc' : 'sort-desc');\n          updateTable();\n        });\n      });\n\n      async function joinProvider(index) {\n        document.querySelectorAll('.join-btn').forEach(b => b.disabled = true);\n        showLoader(true);\n\n        let filtered = applyFiltersAndSearch();\n        filtered = sortProviders(filtered);\n        const prov = filtered[index];\n\n        const reason = await requestReason();\n\n        if (reason === undefined) {\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n          return;\n        }\n\n        const payload = {\n          calledProviderUsername: callingProviderUsername,\n          calledProviderName: callingProviderName,\n          patientName: patientName,\n          patientNumber: patientNumber,\n          provider: prov.name,\n          appointmentGroup: prov.appt_gp_description,\n          specialty: prov.spec_description,\n          city: prov.City,\n          reasonForVisit: reason\n        };\n\n        try {\n          const resp = await fetch('https://xl.epicpc.com/webhook/e850608b-e046-49e7-825f-f52e1d912958', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload),\n          });\n          if (!resp.ok) throw new Error('HTTP ' + resp.status);\n\n          showModal('Success! Redirecting you to the visit now...');\n          setTimeout(() => {\n            modal.style.display = 'none';\n            if (prov.visitURL) {\n              window.location.href = prov.visitURL;\n            } else {\n              alert('No visit URL found.');\n            }\n          }, 1500);\n\n        } catch (err) {\n          console.error(err);\n          showModal('There was an issue, please try again.');\n          showLoader(false);\n          document.querySelectorAll('.join-btn').forEach(b => b.disabled = false);\n        }\n      }\n\n      populateFilters();\n      updateTable();\n    })();\n  </script>\n</body>\n</html>\n`;\n\n// Return the result as one output item with html string\nreturn [\n  {\n    json: {\n      html: htmlContent\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6140,
        140
      ],
      "id": "f7ab39a5-1043-4409-a9a8-3522197c1ce9",
      "name": "Code15"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        4660,
        560
      ],
      "id": "6fc4778f-9ce0-4185-b122-81a7955289b7",
      "name": "Limit2"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "SCHED_DATE"
            }
          ]
        },
        "options": {
          "disableDotNotation": false
        }
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        2560,
        1020
      ],
      "id": "a2c49330-352e-4b3a-9b42-13f0251c5b43",
      "name": "Sort"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b258fe07-d3b1-499e-9ee0-e67dde75e96e",
              "name": "IMREDEM_CODE",
              "value": "={{ $json.IMREDEM_CODE }}",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2360,
        1020
      ],
      "id": "364359bb-4114-4c3f-b19d-656e4c340cb2",
      "name": "Edit Fields6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2820,
        820
      ],
      "id": "57d23c31-93f0-4706-94b9-f79e501c8aa0",
      "name": "Limit3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "SCHED_TIMESTART",
              "order": "descending"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        2340,
        820
      ],
      "id": "6f07587b-dfe2-4f4f-b02c-11541da56578",
      "name": "Sort1",
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c54dd5e5-a95d-4010-8e11-1a1771ca9a96",
              "leftValue": "={{ $json.query.patientId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        220,
        1540
      ],
      "id": "1980bc1c-dba0-47d2-9255-5426b76d840a",
      "name": "If4"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "declare @MRN varchar(25)='%%';\ndeclare @RES varchar(25)='%%';\ndeclare @LOC varchar(25)='{{ $json.location }}%%';\ndeclare @RM_ABBR varchar(20)='{{ $json.room }}';\ndeclare @TimeBefore time='';\ndeclare @timeafter time='';\n \n \nselect\ns.IMRESCHED_CODE,s.IMREDEM_CODE,s.DEM_EXTERNALID,s.IMREPROV_CODE,\ns.SCHED_TIMEIN,s.SCHED_TIMESTART,s.SCHED_TIMEOUT,\ns.LOCATION_NAME,s.LOCATION_ID,s.PATIENT_FIRSTNAME,s.PATIENT_LASTNAME,\ns.PATIENT_PHONE,s.SCHED_DATE,s.SCHED_PMSID,s.SCHED_TEXT,s.CAREGIVER_NAME\n,l.ROOM_ABBR_TEXT,l.ROOM_TEXT,\nt.TRACKINGSTATUS_TEXT\nfrom [HPSITE].[SCHEDULE_VIEW] s\nleft join [HPSITE].[LOCATION_ROOM] l on s.ROOM_ID=l.ROOM_ID and s.LOCATION_ID=l.LOCATION_ID\nleft join [HPSITE].[SCHEDULE_TRACKINGSTATUS] st on s.IMRESCHED_CODE=st.IMRESCHED_CODE and s.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nleft join [HPSITE].[LOCATION_TRACKINGSTATUS] t on t.TRACKINGSTATUS_ID=st.TRACKINGSTATUS_ID\nwhere s.SCHED_TIMEIN is not null\nand cast(s.sched_date as date) between DATEADD(day,-7,cast(getdate() as date)) and DATEADD(day,0,cast(getdate() as date))\nand s.DEM_EXTERNALID like @MRN\nand s.LOCATION_NAME like @LOC and l.ROOM_ABBR_TEXT like @RM_ABBR\nand s.SCHED_TIMEOUT is null\n--or s.CAREGIVER_NAME like @RES\norder by s.SCHED_DATE desc"
      },
      "type": "n8n-nodes-base.microsoftSql",
      "typeVersion": 1.1,
      "position": [
        580,
        1500
      ],
      "id": "6675bff3-7925-41ad-9fbe-0b01a27b8334",
      "name": "Microsoft SQL9",
      "alwaysOutputData": true,
      "credentials": {
        "microsoftSql": {
          "id": "qYagSGVTKE5tZdos",
          "name": "Microsoft SQL EHR"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "A5at9JUY2hWqZiFY",
          "mode": "list",
          "cachedResultName": "Parse-RefererURL"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "headers_referer": "={{ $json.headers.referer }}"
          },
          "matchingColumns": [
            "headers_referer"
          ],
          "schema": [
            {
              "id": "headers_referer",
              "displayName": "headers_referer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        420,
        1500
      ],
      "name": "Call Parse-RefererURL1",
      "id": "c57f4a38-2ef8-4d91-b3d4-eca3b12ea284"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "abbd1278-cf74-418e-8456-e7a212feec35",
              "name": "query.patientId",
              "value": "={{ $json.DEM_EXTERNALID }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1160,
        1520
      ],
      "id": "4e46099a-1c52-4a92-b9f6-98dbebf2a465",
      "name": "Edit Fields8"
    },
    {
      "parameters": {
        "jsCode": "// Loop through each incoming item\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i];\n  \n  // Create a Date object from the ISO datetime string\n  const dateObj = new Date(item.json.currentDate);\n  \n  // Extract hours and minutes (getHours() returns the hour in 24h format)\n  const hours = dateObj.getHours();\n  const minutes = dateObj.getMinutes();\n  \n  // Format hours and minutes as two-digit strings and concatenate them\n  const formattedTime = hours.toString().padStart(2, '0') + minutes.toString().padStart(2, '0');\n  \n  // Convert the formatted string to an integer and add it to the output JSON\n  item.json.timeInteger = parseInt(formattedTime, 10);\n}\n\nreturn items;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        2520
      ],
      "id": "59df72e3-9d53-4105-8e39-25ecfc5d30f9",
      "name": "Code73"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node to generate the patient flow website, using DEM_EXTERNALID as patientId\n// and PATIENT_FIRSTNAME / PATIENT_LASTNAME for fullName.\n\n// 1. Collect incoming data from the previous node(s)\nconst incomingData = $input.all().map(item => item.json);\n\n// 2. Compute fullName (spaces → plus) and patientId (from DEM_EXTERNALID)\nlet fullNameParam = '';\nlet patientId = '';\nif (incomingData.length) {\n  // Combine first and last with a space, then URI-encode and replace %20 with '+'\n  const rawFull = incomingData[0].PATIENT_FIRSTNAME + ' ' + incomingData[0].PATIENT_LASTNAME;\n  fullNameParam = encodeURIComponent(rawFull).replace(/%20/g, '+');\n\n  // Use DEM_EXTERNALID field as patientId\n  patientId = incomingData[0].DEM_EXTERNALID || '';\n}\n\n// 3. Build the full HTML, injecting fullNameParam and patientId\nconst html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>EPIC Patient Flow</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n  />\n  <style>\n    /* CSS unchanged */\n    :root {\n      --bar-bg: #303030;\n      --dark-blue: #003366;\n      --dark-blue-d: #002244;\n      --orange: #ff9800;\n      --orange-d: #ef6c00;\n      --overlay-bg: rgba(0, 0, 0, 0.4);\n      --green: #28a745;\n      --green-d: #218838;\n    }\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: \"Inter\", Arial, sans-serif;\n    }\n    html, body {\n      height: 100%;\n      width: 100%;\n      background: #000;\n      overflow: hidden;\n    }\n    #initOverlay {\n      position: fixed;\n      inset: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 3rem;\n      padding: 0 2rem;\n      background: var(--overlay-bg);\n      z-index: 1000;\n      opacity: 1;\n      transition: opacity 0.4s ease;\n    }\n    #initOverlay.hidden {\n      pointer-events: none;\n      opacity: 0;\n    }\n    #initOverlay::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: url(\"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\")\n        center center / contain no-repeat;\n      opacity: 0.45;\n      z-index: -1;\n      filter: brightness(0.85);\n    }\n    #initButtons {\n      display: flex;\n      justify-content: center;\n      gap: 3rem;\n      max-width: 1000px;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    #initOverlay button {\n      flex: none;\n      min-width: 240px;\n      padding: 1.6rem 3rem;\n      font-size: 1.4rem;\n      font-weight: 700;\n      border: none;\n      border-radius: 10px;\n      cursor: pointer;\n      user-select: none;\n      transition: background-color 0.3s ease;\n      white-space: nowrap;\n      text-align: center;\n      box-shadow: 0 0 15px rgb(0 0 0 / 0.3);\n    }\n    #btnInitManual {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    #btnInitManual:hover,\n    #btnInitManual:focus {\n      background: #eee;\n      outline: none;\n    }\n    #btnInitVirtual {\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnInitVirtual:hover,\n    #btnInitVirtual:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInitInstant {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInitInstant:hover,\n    #btnInitInstant:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    .top-bar {\n      background: var(--bar-bg);\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0.75rem 1.25rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: relative;\n      z-index: 100;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n    }\n    .top-bar.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    .epic-btn {\n      border: none;\n      border-radius: 4px;\n      padding: 0.5rem 2.5rem;\n      font-size: 0.9rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      text-align: center;\n      user-select: none;\n      box-sizing: border-box;\n      margin: 0 0.4rem;\n      min-width: auto;\n      width: auto;\n    }\n    #btnVirtualClark {\n      flex-grow: 1;\n      max-width: none;\n      margin-left: 0.4rem;\n      margin-right: 0.4rem;\n      background: var(--dark-blue);\n      color: #fff;\n      border: 2px solid var(--dark-blue);\n    }\n    #btnVirtualClark:hover,\n    #btnVirtualClark:focus {\n      background: var(--dark-blue-d);\n      outline: none;\n    }\n    #btnInstantVisit {\n      background: var(--green);\n      color: #fff;\n      border: 2px solid var(--green);\n    }\n    #btnInstantVisit:hover,\n    #btnInstantVisit:focus {\n      background: var(--green-d);\n      outline: none;\n    }\n    .btn-white {\n      background: #fff;\n      color: #000;\n      border: 2px solid #fff;\n    }\n    .btn-white:hover,\n    .btn-white:focus {\n      background: #eee;\n      outline: none;\n    }\n    .btn-orange {\n      background: var(--orange);\n      color: #fff;\n      border: 2px solid var(--orange);\n    }\n    .btn-orange:hover,\n    .btn-orange:focus {\n      background: var(--orange-d);\n      outline: none;\n    }\n    .epic-btn:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px #999;\n    }\n    .content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      opacity: 0;\n      pointer-events: none;\n      transition: opacity 0.4s ease;\n      background: #000;\n    }\n    .content.active {\n      opacity: 1;\n      pointer-events: auto;\n    }\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n      background: #000;\n    }\n    .loader {\n      position: absolute;\n      inset: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(255, 255, 255, 0.6);\n      z-index: 10;\n    }\n    .loader.hidden {\n      display: none;\n    }\n    .loader::after {\n      content: \"\";\n      width: 48px;\n      height: 48px;\n      border: 6px solid #bbb;\n      border-top-color: #333;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n    #navButtons {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      display: flex;\n      gap: 1rem;\n      z-index: 1100;\n      user-select: none;\n    }\n    #navButtons button {\n      background: var(--bar-bg);\n      color: #ddd;\n      border: none;\n      border-radius: 5px;\n      padding: 0.5rem 1rem;\n      font-size: 1.1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.25s ease, color 0.25s ease;\n      white-space: nowrap;\n      box-shadow: 0 0 5px rgb(0 0 0 / 0.5);\n    }\n    #navButtons button:hover:enabled,\n    #navButtons button:focus:enabled {\n      background: var(--dark-blue);\n      color: #fff;\n      outline: none;\n    }\n    #navButtons button:disabled {\n      opacity: 0.4;\n      cursor: default;\n      pointer-events: none;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"initOverlay\" aria-label=\"Choose mode\">\n    <div id=\"initButtons\">\n      <button id=\"btnInitManual\" type=\"button\">Quick&nbsp;Scheduler</button>\n      <button id=\"btnInitVirtual\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n      <button id=\"btnInitInstant\" type=\"button\">Instant&nbsp;Visit</button>\n    </div>\n  </div>\n  <header class=\"top-bar\" aria-label=\"Patient flow controls\">\n    <button id=\"btnManualCheckout\" class=\"epic-btn btn-white\">Quick&nbsp;Scheduler</button>\n    <button id=\"btnVirtualClark\" class=\"epic-btn\" type=\"button\">Virtual&nbsp;Clark&nbsp;Checkout</button>\n    <button id=\"btnInstantVisit\" class=\"epic-btn\" type=\"button\">Instant&nbsp;Visit</button>\n    <button id=\"btnCheckOut\" class=\"epic-btn btn-orange\">Checkout&nbsp;Patient</button>\n  </header>\n  <main class=\"content\" aria-live=\"polite\">\n    <iframe\n      id=\"patientFrame\"\n      title=\"Patient Flow Content\"\n      src=\"\"\n      allow=\"camera; microphone; fullscreen; autoplay\"\n      allowfullscreen\n    ></iframe>\n    <div id=\"loader\" class=\"loader hidden\" role=\"alert\" aria-live=\"assertive\"></div>\n  </main>\n  <div id=\"navButtons\" aria-label=\"Iframe navigation\" hidden>\n    <button id=\"btnBack\" type=\"button\">&larr; Back</button>\n    <button id=\"btnForward\" type=\"button\">Forward &rarr;</button>\n  </div>\n\n  <script>\n    const fullNameParam = \"${fullNameParam}\";\n    const patientId = \"${patientId}\";\n\n    const webhookBase = \"https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821\";\n    const webhookVirtualClark = \"https://xl.epicpc.com/webhook/aa888bfa-2c88-44ed-af20-40eaa3146aa7\";\n    const webhookInstantVisitRedirectUrl = \"https://xl.epicpc.com/webhook/c5d8bd6f-8803-4296-a9fe-789df93c5385\";\n\n    const parentPageUrl = encodeURIComponent(window.location.href);\n\n    const placeholderImage = \"https://file.cybertech.app/Kiosk/EPIC/HQ/epic%20health%20wall%20yellow.png\";\n    const placeholderPage = 'data:text/html;charset=utf-8,' +\n      encodeURIComponent(\n        '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><style>' +\n        'html,body{margin:0;height:100%;background:#000;overflow:hidden;}' +\n        'img{width:100%;height:100%;object-fit:contain;}' +\n        '</style></head><body>' +\n        '<img src=\"' + placeholderImage + '\" alt=\"Placeholder\"/>' +\n        '</body></html>'\n      );\n\n    const frame = document.getElementById(\"patientFrame\");\n    const loader = document.getElementById(\"loader\");\n    const initOverlay = document.getElementById(\"initOverlay\");\n    const topBar = document.querySelector(\".top-bar\");\n    const navButtons = document.getElementById(\"navButtons\");\n    const btnBack = document.getElementById(\"btnBack\");\n    const btnForward = document.getElementById(\"btnForward\");\n\n    let historyStack = [placeholderPage];\n    let historyIndex = 0;\n    let isNavigating = false;\n\n    function showLoader() { loader.classList.remove(\"hidden\"); }\n    function hideLoader() { loader.classList.add(\"hidden\"); }\n\n    frame.addEventListener(\"load\", () => {\n      hideLoader();\n      btnBack.disabled = historyIndex <= 0;\n      btnForward.disabled = historyIndex >= historyStack.length - 1;\n    });\n\n    btnBack.addEventListener(\"click\", () => {\n      if (historyIndex > 0) {\n        historyIndex--;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    btnForward.addEventListener(\"click\", () => {\n      if (historyIndex < historyStack.length - 1) {\n        historyIndex++;\n        isNavigating = true;\n        frame.src = historyStack[historyIndex];\n        setTimeout(() => isNavigating = false, 400);\n        showLoader();\n      }\n    });\n\n    function addToHistory(url) {\n      if (isNavigating) return;\n      if (historyIndex < historyStack.length - 1) {\n        historyStack = historyStack.slice(0, historyIndex + 1);\n      }\n      historyStack.push(url);\n      historyIndex++;\n    }\n\n    function revealMainInterface() {\n      initOverlay.classList.add(\"hidden\");\n      setTimeout(() => initOverlay.style.display = \"none\", 400);\n      topBar.classList.add(\"active\");\n      document.querySelector(\".content\").classList.add(\"active\");\n      navButtons.hidden = false;\n    }\n\n    async function requestMediaPermissions() {\n      try {\n        await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        return true;\n      } catch (err) {\n        alert(\"Camera and microphone permissions are required to continue.\");\n        return false;\n      }\n    }\n\n    async function manualCheckout() {\n      showLoader();\n      const url = buildUrl(webhookBase, \"getRoomedPatient\");\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    async function virtualClark() {\n      showLoader();\n      const url = webhookVirtualClark + '?user=' + patientId;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    // Instant Visit redirects entire page, no iframe\n    function instantVisitRedirect() {\n      window.location.href = webhookInstantVisitRedirectUrl;\n    }\n\n    async function checkOutPatient() {\n      showLoader();\n      const url =\n        'https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet?fullName=' +\n        fullNameParam +\n        '&patientId=' +\n        patientId +\n        '&url=' +\n        parentPageUrl;\n      frame.src = url;\n      addToHistory(url);\n    }\n\n    function buildUrl(base, action) {\n      let url = base + \"?action=\" + encodeURIComponent(action) + \"&url=\" + parentPageUrl;\n      const params = new URLSearchParams(window.location.search);\n      params.delete(\"action\");\n      const rest = params.toString();\n      if (rest) url += \"&\" + rest;\n      url += \"&_=\" + Date.now();\n      return url;\n    }\n\n    function withMediaPermission(actionFunc) {\n      return async () => {\n        const granted = await requestMediaPermissions();\n        if (granted) {\n          revealMainInterface();\n          await actionFunc();\n        }\n      };\n    }\n\n    // Event listeners with updated Instant Visit behavior\n    document.getElementById(\"btnInitManual\").addEventListener(\"click\", withMediaPermission(manualCheckout));\n    document.getElementById(\"btnInitVirtual\").addEventListener(\"click\", withMediaPermission(virtualClark));\n    document.getElementById(\"btnInitInstant\").addEventListener(\"click\", () => {\n      // Instant Visit from overlay redirects entire page directly\n      instantVisitRedirect();\n    });\n\n    document.getElementById(\"btnManualCheckout\").addEventListener(\"click\", manualCheckout);\n    document.getElementById(\"btnVirtualClark\").addEventListener(\"click\", virtualClark);\n    document.getElementById(\"btnInstantVisit\").addEventListener(\"click\", () => {\n      // Instant Visit from top bar also redirects entire page\n      instantVisitRedirect();\n    });\n    document.getElementById(\"btnCheckOut\").addEventListener(\"click\", checkOutPatient);\n\n    frame.src = placeholderPage;\n  </script>\n</body>\n</html>`;\n\n// 4. Return the HTML so that the Respond to Webhook node can serve it directly\nreturn [\n  {\n    json: {\n      html: html\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        520,
        0
      ],
      "id": "55afa851-2e00-4e39-801f-32ba6bfe4d9e",
      "name": "Code16"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.67",
            "x-forwarded-for": "10.0.24.67",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "cache-control": "max-age=0",
            "sec-ch-ua": "\"Microsoft Edge\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "none",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "document",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDg4NjYyODQsImV4cCI6MTc0OTQ3MTA4NH0.PcEC_8pDRdYK655WnRjyVf_O3RT4lBAuh1Qqu9qRpIw; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2FTeFpgqUgjMCugYxaUKYHDsmrQCNM%2Fju148pOQ%2BclNXCf2VRKiJiNiNP5EaR5xC0LwRq4XygW1xQ%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2B8cMQuUdIpxt0DgULJz8ECIBVHmYTwp7gwA5elZHhD90nbamcK3akMpnA8YqrIZfYbyhuu6FsbZiPghcnVwBURqnQ%2BF26lZyZnfzVNcgFQCy1bqfLu%2BKVWD63Ddrrl%2BnAT3fuBTtEOgvVfxMV9T2Tbg7%2FG2MQu2vo%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2BQvWZPw00IsAFddEpiZru6k9XB6ACNxqTGUa1952RglJ9h8onqKfyaUYaY9UWC3rTQBcMlZwBWfB0TLfDVhC5nsiTt5gR35RED7njYHHfpcdcpCqUZhBUkqgY8Vj3Mvf3tzjPWxcD1Gg%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1749056913835%2C%2201973bbb-0ab4-760c-bfae-1efab41dfd24%22%2C1749053803188%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2B%2FFDvUN%2FpCWJd8TZqtlWreYnVi63M1KimWCAcH6Wg5UJlSfaYxOxBcVwq8kMQA%2Flfsj9cS5RgI73RyQ2S7bnDOuhhct1aXY3W1v9VNwWv1Ejd%2FFSsETjqv4j8YOM%2FI7nQxJ%2BVJ7qMs2A%3D%3D",
            "if-none-match": "W/\"30f0-ebKOHTL2pnkKVmJBKxcKX31U8og\""
          },
          "params": {},
          "query": {
            "location": "EPIC Southfield Telegraph",
            "room": "A3"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829",
          "executionMode": "production"
        }
      }
    ],
    "Date & Time": [
      {
        "json": {
          "formattedDate": "2025-05-21"
        }
      }
    ],
    "Date & Time1": [
      {
        "json": {
          "currentDate": "2025-05-21T00:00:00.000-04:00"
        }
      }
    ],
    "Webhook1": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.67",
            "x-forwarded-for": "10.0.24.67",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua-platform": "\"Windows\"",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
            "sec-ch-ua": "\"Chromium\";v=\"136\", \"Microsoft Edge\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "no-cors",
            "sec-fetch-dest": "empty",
            "referer": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829?location=EPIC%20Ferndale%209%20Mile&room=A2",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDgzNDcxMjgsImV4cCI6MTc0ODk1MTkyOH0.SG2FQS9OuMkadcHgl5oVwxic6NYUqSvD8Y3Z5LqcjnM; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX19lCtweOE%2BJjVakxq%2B5UJ7S%2FqF154vjZg3jdO%2FPuf859D7suE4ncoA9J%2Bd9hmDo1j4Vc1DNwO4bkg%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2Bvw1fcPos%2BWHv26vHJ%2FKVVGlviiFWdJD7kXkcyKvhGaQ8cph95zdi3jjys1YmtlYKWMaZd5TORETmNd4GRbWS12t%2BDhyOqE4xY1HDzVAQpamHXh5py2u8r2yyGqx37wiEBetKVNs8mdMKgEfQtNyjVDVpbw%2BF5GtM%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2FIbONRa21H5ghj5kWihMSQH4D3V%2Byj8PZ%2B5FmF%2FUQ3j2BYGMQnu7FgWEQMlDYedZLMvIP8PGGahqoCbGoookw%2BPQWCXFNDpjEazQdbCnVNozrDITHFs4fu8hIRc4dJIcd7afCuQwSEJQ%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1748381372233%2C%22019713a3-e5bb-7f80-82ae-c3e65e23c724%22%2C1748381197755%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%2C%22%24configured_session_timeout_ms%22%3A1800000%2C%22%24client_session_props%22%3A%7B%22sessionId%22%3A%22019713a3-e5bb-7f80-82ae-c3e65e23c724%22%2C%22props%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fworkflows%2Fdemo%22%7D%7D%2C%22%24active_feature_flags%22%3A%5B%22028_schema_preview%22%2C%22027_free_openai_calls%22%2C%22024_credential_docs%22%2C%2220_canvas_auto_add_manual_trigger%22%2C%22011_ask_AI%22%2C%22006_cloud_opt_in%22%2C%22009_choosing_trial_plan%22%2C%22schema-view%22%2C%22017_template_credential_setup_v2%22%2C%22021_ai_debug_helper%22%5D%2C%22%24enabled_feature_flags%22%3A%7B%22028_schema_preview%22%3A%22variant%22%2C%22027_free_openai_calls%22%3A%22variant%22%2C%22024_credential_docs%22%3A%22control%22%2C%2220_canvas_auto_add_manual_trigger%22%3A%22control%22%2C%22011_ask_AI%22%3A%22gpt3%22%2C%22006_cloud_opt_in%22%3A%22control%22%2C%22009_choosing_trial_plan%22%3A%22variant%22%2C%22schema-view%22%3Atrue%2C%22017_template_credential_setup_v2%22%3Atrue%2C%22021_ai_debug_helper%22%3A%22variant%22%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%2C%22%24feature_flag_details%22%3A%7B%7D%2C%22%24user_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24had_persisted_distinct_id%22%3Atrue%2C%22%24device_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24stored_person_properties%22%3A%7B%22instance_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%22%2C%22created_at_timestamp%22%3A1698879072899%7D%2C%22%24capture_rate_limit%22%3A%7B%22tokens%22%3A98.06%2C%22last%22%3A1748381372233%7D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24session_recording_network_payload_capture%22%3A%7B%22capturePerformance%22%3Afalse%7D%2C%22%24session_recording_canvas_recording%22%3A%7B%7D%2C%22%24replay_sample_rate%22%3Anull%2C%22%24replay_minimum_duration%22%3Anull%2C%22%24autocapture_disabled_server_side%22%3Afalse%2C%22%24heatmaps_enabled_server_side%22%3Afalse%2C%22%24web_vitals_enabled_server_side%22%3Afalse%2C%22%24exception_capture_enabled_server_side%22%3Afalse%2C%22%24error_tracking_suppression_rules%22%3A%5B%5D%2C%22%24dead_clicks_enabled_server_side%22%3Afalse%7D; rl_session=RudderEncrypt%3AU2FsdGVkX18sRPeBTyNSZiIIxu%2FnyX5BTYWbFKvoj5D0dEof%2BvThQIxDcGOk6tuA08bf19Y5Mzzb7mLt5F9v06ylve%2BWO1MO6gisaF6hVM5UFcbgWox8chb9LoghWNMq%2FTezXkkshBnVMoDmHSrPJQ%3D%3D"
          },
          "params": {},
          "query": {
            "action": "checkPatientOut",
            "location": "EPIC Ferndale 9 Mile",
            "room": "A2",
            "_": "1748382273012"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/b682d55d-0785-49c3-ae32-cf28a94dc821",
          "executionMode": "production"
        }
      }
    ],
    "Microsoft SQL1": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Microsoft SQL2": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Microsoft SQL3": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Webhook3": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.71",
            "x-forwarded-for": "10.0.24.71",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "content-length": "46",
            "sec-ch-ua-platform": "\"Windows\"",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
            "sec-ch-ua": "\"Chromium\";v=\"136\", \"Microsoft Edge\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
            "content-type": "application/json",
            "sec-ch-ua-mobile": "?0",
            "accept": "*/*",
            "origin": "https://xl.epicpc.com",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "cors",
            "sec-fetch-dest": "empty",
            "referer": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829?location=EPIC%20Detroit%207%20Mile&room=A1",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDgzNDcxMjgsImV4cCI6MTc0ODk1MTkyOH0.SG2FQS9OuMkadcHgl5oVwxic6NYUqSvD8Y3Z5LqcjnM; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2BmhwEoYfZsESOodwfgklfDDlDZcR9FFYsUj3bhGq6XRwt7XY6DvqxRed6wxN0jyk88WYK3i1%2BSgQ%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX18%2BK%2BrxtOi3N%2BjsG8co2SjhHS19nJ6FiBVyx%2FZ%2BDcCBK69osTHuINAOCJiwhkuttfd8nKTAUnac%2FzPrDJnfqLGzleg%2BKASCty%2B2%2Fizgg7aMDJ5ezxPMrPpJNO%2FRqU9P67nJrkBvjKzKSx7w6Bnzm%2BWYufHsqpPerB8%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX1%2BgN%2FRzx05ch4mXjC63O4EnsTeHDVWavSQKCmIHmxUjoPhFWkVhLQmwmOhTtyOkSVjTe22CV%2FOYML4km9P5CLU4%2B3wIxCy0hdFjNmsi0%2BvqByGgsEpbDrKYsS33x65EmIghUPYHAY3S5g%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1748454423906%2C%2201971801-3d4b-78f7-b3b9-2566ed6d7797%22%2C1748454423883%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%2C%22%24configured_session_timeout_ms%22%3A1800000%2C%22%24client_session_props%22%3A%7B%22sessionId%22%3A%2201971801-3d4b-78f7-b3b9-2566ed6d7797%22%2C%22props%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2F%22%7D%7D%2C%22%24active_feature_flags%22%3A%5B%22028_schema_preview%22%2C%22027_free_openai_calls%22%2C%22024_credential_docs%22%2C%2220_canvas_auto_add_manual_trigger%22%2C%22011_ask_AI%22%2C%22006_cloud_opt_in%22%2C%22009_choosing_trial_plan%22%2C%22schema-view%22%2C%22017_template_credential_setup_v2%22%2C%22021_ai_debug_helper%22%5D%2C%22%24enabled_feature_flags%22%3A%7B%22028_schema_preview%22%3A%22variant%22%2C%22027_free_openai_calls%22%3A%22variant%22%2C%22024_credential_docs%22%3A%22control%22%2C%2220_canvas_auto_add_manual_trigger%22%3A%22control%22%2C%22011_ask_AI%22%3A%22gpt3%22%2C%22006_cloud_opt_in%22%3A%22control%22%2C%22009_choosing_trial_plan%22%3A%22variant%22%2C%22schema-view%22%3Atrue%2C%22017_template_credential_setup_v2%22%3Atrue%2C%22021_ai_debug_helper%22%3A%22variant%22%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%2C%22%24feature_flag_details%22%3A%7B%7D%2C%22%24user_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24had_persisted_distinct_id%22%3Atrue%2C%22%24device_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24stored_person_properties%22%3A%7B%22instance_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%22%2C%22created_at_timestamp%22%3A1698879072899%7D%2C%22%24capture_rate_limit%22%3A%7B%22tokens%22%3A99%2C%22last%22%3A1748454423904%7D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24session_recording_network_payload_capture%22%3A%7B%22capturePerformance%22%3Afalse%7D%2C%22%24session_recording_canvas_recording%22%3A%7B%7D%2C%22%24replay_sample_rate%22%3Anull%2C%22%24replay_minimum_duration%22%3Anull%2C%22%24autocapture_disabled_server_side%22%3Afalse%2C%22%24heatmaps_enabled_server_side%22%3Afalse%2C%22%24web_vitals_enabled_server_side%22%3Afalse%2C%22%24exception_capture_enabled_server_side%22%3Afalse%2C%22%24error_tracking_suppression_rules%22%3A%5B%5D%2C%22%24dead_clicks_enabled_server_side%22%3Afalse%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2FNQNwEbsqd0mENLrW0IWiSHX1r6U9FVAbY62Iy%2Bw1GH%2F63pJRV7yRw%2B2%2FcYIxb8r%2B1a9qn6k1bxOE%2Bnje1cMeR%2Bov4hy5sjY6KZwr%2BTRxFMvmCkuMkP7IFq8x7frat2FVXJOnIB5oddA%3D%3D"
          },
          "params": {},
          "query": {},
          "body": {
            "location": "EPIC Detroit 7 Mile",
            "room": "A1"
          },
          "webhookUrl": "https://xl.epicpc.com/webhook/e9c0debd-7392-4a91-9b5b-edec328f6779",
          "executionMode": "production"
        }
      }
    ],
    "Identify Room": [
      {
        "json": {
          "MRN": "498790",
          "IMREDEM_CODE": 110242,
          "LOCATION_ID": 88,
          "LOCATION_NAME": "EPIC Southfield Specialty Telegraph",
          "ROOM_ID": 237,
          "ROOM_ABBR_TEXT": "A2",
          "ROOM_TEXT": "A2",
          "CAREGIVER_NAME": "Brodsky, Burton MD",
          "SCHED_DATE": "2025-05-21T18:00:00.000Z",
          "PATIENT_FIRSTNAME": "JAVAYLA M",
          "PATIENT_LASTNAME": "GRANT",
          "SCHED_TIMEIN": null,
          "SCHED_TIMESTART": "2025-05-21T17:46:00.000Z",
          "SCHED_TIMEOUT": "2025-05-21T18:35:00.000Z",
          "SCHED_STATUS": 2
        }
      },
      {
        "json": {
          "MRN": "498790",
          "IMREDEM_CODE": 110242,
          "LOCATION_ID": null,
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "ROOM_ID": null,
          "ROOM_ABBR_TEXT": null,
          "ROOM_TEXT": null,
          "CAREGIVER_NAME": "Dbouk, Linda PA",
          "SCHED_DATE": "2025-05-21T17:20:00.000Z",
          "PATIENT_FIRSTNAME": "JAVAYLA M",
          "PATIENT_LASTNAME": "GRANT",
          "SCHED_TIMEIN": null,
          "SCHED_TIMESTART": null,
          "SCHED_TIMEOUT": null,
          "SCHED_STATUS": 8
        }
      },
      {
        "json": {
          "MRN": "498790",
          "IMREDEM_CODE": 110242,
          "LOCATION_ID": null,
          "LOCATION_NAME": "EPIC Hamtramck Davison",
          "ROOM_ID": null,
          "ROOM_ABBR_TEXT": null,
          "ROOM_TEXT": null,
          "CAREGIVER_NAME": "Osanaiye, Kemi NP",
          "SCHED_DATE": "2025-05-21T17:20:00.000Z",
          "PATIENT_FIRSTNAME": "JAVAYLA M",
          "PATIENT_LASTNAME": "GRANT",
          "SCHED_TIMEIN": null,
          "SCHED_TIMESTART": null,
          "SCHED_TIMEOUT": null,
          "SCHED_STATUS": 4
        }
      }
    ],
    "Webhook5": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "10.0.24.136",
            "x-forwarded-for": "10.0.24.136",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua": "\"Chromium\";v=\"136\", \"Microsoft Edge\";v=\"136\", \"Not.A/Brand\";v=\"99\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "none",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "document",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bi2wlGyWUrU8csBnMpC2ky94UMvv6i1l8%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX1%2BlOAQjwoHJTIaa%2BnRWw%2FuYu7Q4OoFm%2BVc%3D; cw_conversation=eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2VfaWQiOiJkOGU0ZmExYy0yMTk2LTQ3ODAtYjFhMi0zNGI5NzYyYWZhMjciLCJpbmJveF9pZCI6MX0.0lRACgYRzS4v3ie0Q3KCpE2J2om9Qu4ndLgNQa8saXU; theme=light; kanbanData=%5B%7B%22id%22%3A%22_sgnzm0wde%22%2C%22title%22%3A%22To%20Do%22%2C%22tasks%22%3A%5B%7B%22id%22%3A%22_9zmi9x1s7%22%2C%22title%22%3A%22tawfs%22%7D%5D%7D%2C%7B%22id%22%3A%22_jotn4r9ur%22%2C%22title%22%3A%22tste%22%2C%22tasks%22%3A%5B%5D%7D%5D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY5YWFiYmJkLTZiNjktNGIwMC1iMGUzLWQ5MTQzYTYzYWUzNCIsImhhc2giOiJZaXdOcHpaYzdGIiwiYnJvd3NlcklkIjoiYW9ldjhjM1NoOG5jMDNLc1A4R2dYK1dkUElNWFVaTWE0ejl6WjNZVndjZz0iLCJpYXQiOjE3NDc3NzM1OTEsImV4cCI6MTc0ODM3ODM5MX0.DnG8I3NdXT5U2zRtS25kKluVEz5-9xeSdQygwAtBhyk; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX19wz98cvrXV17yKaC7ILzhWTGVfwA3HOx6G2yHDVmtv1dNMJ2bUzIfh%2FXpkyrIZqvq6byxf41cyjQ%3D%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX19Gn8jNQwpXaLR2dCwdhxTlk3NPTCFh0LRvMWqgN5UuIqGecQMS3TJqqL1FYXkCa1IN310Z3iRFgwvn30VkoLyI1oTgbs5DShhKgo9izKJdMIwUCFIVKeBZzNhwHiP5dFXlG%2Bvz82S839fsXsEloabUe1pQ7YD15pI%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX18%2FypwXViTB4MCKFOrgtSxwGvyg2HXWmqXHUBF7S6ETZ4%2BjoaHDlkuBcKr%2FfZ3xjJLKOHjv6galcEVRXAzoSK4EW8aizGEANKdx1ncjTS9eNe0gJ1UdaytK8rsNV%2BsPRadMOC3kTEv9Zw%3D%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22distinct_id%22%3A%22fbbaa0fe7164b93e2c831f7816129952355ab8de07812c802f276efe6e8da0f3%23f9aabbbd-6b69-4b00-b0e3-d9143a63ae34%22%2C%22%24sesid%22%3A%5B1747842533593%2C%220196f348-7b18-7bde-83fa-286e4583b824%22%2C1747838335767%5D%2C%22%24epp%22%3Atrue%2C%22%24initial_person_info%22%3A%7B%22r%22%3A%22%24direct%22%2C%22u%22%3A%22https%3A%2F%2Fxl.epicpc.com%2Fsignin%3Fredirect%3D%25252F%22%7D%7D; rl_session=RudderEncrypt%3AU2FsdGVkX1%2BPy2VuXgJ2m%2FG70%2BCA%2FmVgA0uM4aVU17JVv6MMkqJZ70n%2FgUTzPsQ%2B8Q8tryrRIhoJN%2F2W%2BGfHVagPATTS1K6ugK3LkYL5NOHxifbxQ%2Fe1XJu24GagBKtknvYuLxomlUMXcphtk5tWtw%3D%3D"
          },
          "params": {},
          "query": {
            "mrn": "502880"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829",
          "executionMode": "production"
        }
      }
    ],
    "Edit Fields1": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Microsoft SQL5": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Webhook7": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "73.144.148.200",
            "x-forwarded-for": "73.144.148.200",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-fetch-dest": "document",
            "user-agent": "Mozilla/5.0 (iPhone; CPU iPhone OS 18_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.5 Mobile/15E148 Safari/604.1",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
            "sec-fetch-site": "none",
            "sec-fetch-mode": "navigate",
            "accept-language": "en-US,en;q=0.9",
            "priority": "u=0, i",
            "accept-encoding": "gzip, deflate, br"
          },
          "params": {},
          "query": {
            "location": "EPIC Detroit 7 Mile",
            "room": "A1"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/0dfd1586-60f3-4735-b8e7-4ff7da3a0d83",
          "executionMode": "production"
        }
      }
    ],
    "Crypto": [
      {
        "json": {
          "SingleSignOnToken": "98774AF7-4CF6-4154-8E58-D3EDB836B8B4",
          "SessionToken": "4606BCE9-DF34-4A26-A4CF-F7414F329452",
          "UserName": "TSTILWELL",
          "CreatedOn": "2024-03-21T07:42:07.073Z",
          "EncounterID": "21558095",
          "PatientID": "158536",
          "MRN": "502880",
          "DEM_FIRSTNAME": "THOMAS",
          "DEM_LASTNAME": "STILWELL",
          "DEM_DATEOFBIRTH": "1988-02-01T00:00:00.000Z",
          "apicall": "allowStartStopRecording=true&attendeePW=ap&autoStartRecording=false&meetingID=21558095&moderatorPW=mp&name=THOMAS_STILWELL&record=false",
          "data": "98738499a158ed461cf2c80ffde3a1719c5797e516ba390f96a7cc1936762ead90955be0b825bbbdee607ed425f97f21ca26a335e382eec292a01611832a9c8a"
        }
      }
    ],
    "Instant Visit": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "50.192.103.153",
            "x-forwarded-for": "50.192.103.153",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua": "\"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\", \"Microsoft Edge\";v=\"138\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "iframe",
            "referer": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829?location=EPIC%20SCS%20Harper&room=A1&hostname=MI-SCS-HAR-A1",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9"
          },
          "params": {},
          "query": {
            "patientId": "",
            "_": "1752960616597"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/c5d8bd6f-8803-4296-a9fe-789df93c5385",
          "executionMode": "production"
        }
      }
    ],
    "Microsoft SQL7": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Merge": [
      {
        "json": {
          "data": "<response>\r\n<returncode>SUCCESS</returncode>\r\n<meetingID>197520</meetingID>\r\n<internalMeetingID>092744eaa1e39c328a05ce89afe75466022a43d8-1752963276499</internalMeetingID>\r\n<parentMeetingID>bbb-none</parentMeetingID>\r\n<attendeePW>ap</attendeePW>\r\n<moderatorPW>mp</moderatorPW>\r\n<createTime>1752963276499</createTime>\r\n<voiceBridge>86271</voiceBridge>\r\n<dialNumber>613-555-1234</dialNumber>\r\n<createDate>Sat Jul 19 18:14:36 EDT 2025</createDate>\r\n<hasUserJoined>false</hasUserJoined>\r\n<duration>0</duration>\r\n<hasBeenForciblyEnded>false</hasBeenForciblyEnded>\r\n<messageKey>duplicateWarning</messageKey>\r\n<message>This conference was already in existence and may currently be in progress.</message>\r\n</response>",
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Microsoft SQL8": [
      {
        "json": {
          "res_resource_id": 1142,
          "res_abbreviation": "AA-MD   ",
          "res_description": "Adeyemo, Adewuni",
          "res_appointment_group_id": 61,
          "appt_gp_abbreviation": "COLVOV  ",
          "appt_gp_description": "Colorectal Consults",
          "res_practitioner_id": 2173,
          "prac_practitioner_id": 2173,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "AA-MD   ",
          "First_Name": "ADEWUNI",
          "Last_Name": "ADEYEMO",
          "Sex": "M",
          "Street1": "27207 Lahser Rd Ste 100",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "480348470",
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": 9,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 9,
          "spec_abbreviation": "10      ",
          "spec_description": "Gastroenterology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "aadeyemo"
        }
      },
      {
        "json": {
          "res_resource_id": 1277,
          "res_abbreviation": "AA-PA   ",
          "res_description": "Adams PA, Audra",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2285,
          "prac_practitioner_id": 2285,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AA-PA   ",
          "First_Name": "AUDRA",
          "Last_Name": "ADAMS",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "aadams"
        }
      },
      {
        "json": {
          "res_resource_id": 1218,
          "res_abbreviation": "AC-PA   ",
          "res_description": "Cunningham PA, Alexa",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2234,
          "prac_practitioner_id": 2234,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AC-PA   ",
          "First_Name": "ALEXA",
          "Last_Name": "CUNNINGHAM",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "acunningham"
        }
      },
      {
        "json": {
          "res_resource_id": 1200,
          "res_abbreviation": "AH-PA   ",
          "res_description": "Hobson PA, Allison",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2227,
          "prac_practitioner_id": 2227,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AH-PA   ",
          "First_Name": "ALISON",
          "Last_Name": "HOBSON",
          "Sex": "F",
          "Street1": "911 E 9 Miled Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "ahobson"
        }
      },
      {
        "json": {
          "res_resource_id": 1077,
          "res_abbreviation": "AH-SD   ",
          "res_description": "After-Hours, SuperDoc",
          "res_appointment_group_id": 19,
          "appt_gp_abbreviation": "AH-SD   ",
          "appt_gp_description": "After Hours - Super Doc",
          "res_practitioner_id": 2084,
          "prac_practitioner_id": 2084,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "AHSD    ",
          "First_Name": "SUPERDOC",
          "Last_Name": "AFTER-HOURS",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "safter-hours"
        }
      },
      {
        "json": {
          "res_resource_id": 1009,
          "res_abbreviation": "AK-NP   ",
          "res_description": "Kalabat, Amber",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2009,
          "prac_practitioner_id": 2009,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AK-NP   ",
          "First_Name": "AMBER",
          "Last_Name": "KALABAT",
          "Sex": "F",
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "akalabat"
        }
      },
      {
        "json": {
          "res_resource_id": 1269,
          "res_abbreviation": "AK-PA   ",
          "res_description": "Khemmoro PA, Annaliese",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2278,
          "prac_practitioner_id": 2278,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AK-PA   ",
          "First_Name": "ANNALIESE",
          "Last_Name": "KHEMMORO",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "akhemmoro"
        }
      },
      {
        "json": {
          "res_resource_id": 1256,
          "res_abbreviation": "ALLERGY ",
          "res_description": "Allergy Testing",
          "res_appointment_group_id": 80,
          "appt_gp_abbreviation": "ALLERGY ",
          "appt_gp_description": "Allergy Testing",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1223,
          "res_abbreviation": "AS-PA   ",
          "res_description": "Sufi PA, Amber",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2236,
          "prac_practitioner_id": 2236,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AS-PA   ",
          "First_Name": "AMBER",
          "Last_Name": "SUFI",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "asufi"
        }
      },
      {
        "json": {
          "res_resource_id": 1117,
          "res_abbreviation": "AT-FNP  ",
          "res_description": "Toubia, Allen",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2145,
          "prac_practitioner_id": 2145,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AT-FNP  ",
          "First_Name": "ALLEN",
          "Last_Name": "TOUBIA",
          "Sex": "M",
          "Street1": "911 E 9 Mile",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "atoubia"
        }
      },
      {
        "json": {
          "res_resource_id": 1293,
          "res_abbreviation": "AT-NP   ",
          "res_description": "Tourlaeva NP, Alyona",
          "res_appointment_group_id": null,
          "appt_gp_abbreviation": null,
          "appt_gp_description": null,
          "res_practitioner_id": 2295,
          "prac_practitioner_id": 2295,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "AT-NP   ",
          "First_Name": "ALYONA",
          "Last_Name": "TOURLAEVA",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "atourlaeva"
        }
      },
      {
        "json": {
          "res_resource_id": 1279,
          "res_abbreviation": "BD-MD   ",
          "res_description": "Dawood MD, Bashar",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2288,
          "prac_practitioner_id": 2288,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "BD-MD   ",
          "First_Name": "BASHAR",
          "Last_Name": "DAWOOD",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "bdawood"
        }
      },
      {
        "json": {
          "res_resource_id": 1069,
          "res_abbreviation": "BH - RB ",
          "res_description": "BH - Rose B.",
          "res_appointment_group_id": 5,
          "appt_gp_abbreviation": "PSYCH2  ",
          "appt_gp_description": "Psychotherapy Appointments",
          "res_practitioner_id": 2075,
          "prac_practitioner_id": 2075,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "PSY-FERN",
          "First_Name": "FERNDALE",
          "Last_Name": "PSYCHOTHERAPY",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 48,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 48,
          "spec_abbreviation": "62      ",
          "spec_description": "Psychologist",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "fpsychotherapy"
        }
      },
      {
        "json": {
          "res_resource_id": 1237,
          "res_abbreviation": "BH-PA   ",
          "res_description": "Hnatio PA, Bryan",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2247,
          "prac_practitioner_id": 2247,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "BH-PA   ",
          "First_Name": "BRYAN",
          "Last_Name": "HNATIO",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "bhnatio"
        }
      },
      {
        "json": {
          "res_resource_id": 1011,
          "res_abbreviation": "BJ-PA   ",
          "res_description": "Balint, Jennifer",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2010,
          "prac_practitioner_id": 2010,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "BJ-PA   ",
          "First_Name": "JENNIFER",
          "Last_Name": "BALINT",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "jbalint"
        }
      },
      {
        "json": {
          "res_resource_id": 1245,
          "res_abbreviation": "BSB-MD  ",
          "res_description": "Brodsky MD, Burton",
          "res_appointment_group_id": 75,
          "appt_gp_abbreviation": "GYN     ",
          "appt_gp_description": "GYN - Office Visits",
          "res_practitioner_id": 2251,
          "prac_practitioner_id": 2251,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "BSB-MD  ",
          "First_Name": "BURTON",
          "Last_Name": "BRODSKY",
          "Sex": null,
          "Street1": "911 E Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 13,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 13,
          "spec_abbreviation": "16      ",
          "spec_description": "Obstetrics Gynecology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "bbrodsky"
        }
      },
      {
        "json": {
          "res_resource_id": 1260,
          "res_abbreviation": "BX-NP   ",
          "res_description": "Xiong PA, Bethany",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2262,
          "prac_practitioner_id": 2262,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "BX-NP   ",
          "First_Name": "BETHANY",
          "Last_Name": "XIONG",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "bxiong"
        }
      },
      {
        "json": {
          "res_resource_id": 1257,
          "res_abbreviation": "CG-FNP  ",
          "res_description": "George FNP-BC, Christina",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2261,
          "prac_practitioner_id": 2261,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "CG-FNP  ",
          "First_Name": "CHRISTINA",
          "Last_Name": "GEORGE",
          "Sex": "F",
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "cgeorge"
        }
      },
      {
        "json": {
          "res_resource_id": 1018,
          "res_abbreviation": "CG-PA   ",
          "res_description": "Gadoua, Christopher",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2018,
          "prac_practitioner_id": 2018,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "CG-PA   ",
          "First_Name": "CHRISTOPHER",
          "Last_Name": "GADOUA",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "cgadoua"
        }
      },
      {
        "json": {
          "res_resource_id": 1017,
          "res_abbreviation": "CGM     ",
          "res_description": "Continuous Glucose Monitor",
          "res_appointment_group_id": 34,
          "appt_gp_abbreviation": "CGM     ",
          "appt_gp_description": "Continuous Glucose Monitor",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1143,
          "res_abbreviation": "COLONS  ",
          "res_description": "Colonoscopy",
          "res_appointment_group_id": 60,
          "appt_gp_abbreviation": "COLProc ",
          "appt_gp_description": "Colorectal Procedures",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1020,
          "res_abbreviation": "DC-PA   ",
          "res_description": "Chabaan, Deena",
          "res_appointment_group_id": 79,
          "appt_gp_abbreviation": "ACT+BSP ",
          "appt_gp_description": "ACT + BSP",
          "res_practitioner_id": 2019,
          "prac_practitioner_id": 2019,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "DC PA   ",
          "First_Name": "DEENA",
          "Last_Name": "CHABAAN",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "dchabaan"
        }
      },
      {
        "json": {
          "res_resource_id": 1228,
          "res_abbreviation": "DEXA    ",
          "res_description": "DEXA Scan",
          "res_appointment_group_id": 82,
          "appt_gp_abbreviation": "DEXA    ",
          "appt_gp_description": "DEXA Scans",
          "res_practitioner_id": 2241,
          "prac_practitioner_id": 2241,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "DEXA    ",
          "First_Name": null,
          "Last_Name": "DEXA SCAN",
          "Sex": null,
          "Street1": "18591 W 10 Mile Rd",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "48075",
          "Phone": "8448444412",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1262,
          "res_abbreviation": "DH-MD   ",
          "res_description": "Hardman MD, Donald",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2272,
          "prac_practitioner_id": 2272,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "DH-MD   ",
          "First_Name": "DONALD",
          "Last_Name": "HARDMAN",
          "Sex": "M",
          "Street1": "3499 S Linden Rd SUITE 2",
          "City": "FLINT",
          "State": "MI",
          "Zip_Code": "485073022",
          "Phone": "8108208121",
          "Phone_Ext": null,
          "Fax_Number": "8108208335",
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "dhardman"
        }
      },
      {
        "json": {
          "res_resource_id": 1240,
          "res_abbreviation": "DW-MD   ",
          "res_description": "Wash MD, David",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2248,
          "prac_practitioner_id": 2248,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "DW-MD   ",
          "First_Name": "DAVID",
          "Last_Name": "WASH",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "dwash"
        }
      },
      {
        "json": {
          "res_resource_id": 1282,
          "res_abbreviation": "EK MD   ",
          "res_description": "Kanaan MD, Eyas",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2124,
          "prac_practitioner_id": 2124,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "EK MD   ",
          "First_Name": "EYAS",
          "Last_Name": "KANAAN",
          "Sex": "M",
          "Street1": "20901 W 7 Mile Rd",
          "City": "Detroit",
          "State": "MI",
          "Zip_Code": "482191904",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "ekanaan"
        }
      },
      {
        "json": {
          "res_resource_id": 1084,
          "res_abbreviation": "EM-NP   ",
          "res_description": "Mozurkewich, Eric",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2094,
          "prac_practitioner_id": 2094,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "EM-NP   ",
          "First_Name": "ERIC",
          "Last_Name": "MOZURKEWICH",
          "Sex": "M",
          "Street1": "18463 LIVERNOIS",
          "City": "DETROIT",
          "State": "MI",
          "Zip_Code": "48221",
          "Phone": "3138614400",
          "Phone_Ext": null,
          "Fax_Number": "3138615810",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "emozurkewich"
        }
      },
      {
        "json": {
          "res_resource_id": 1266,
          "res_abbreviation": "EN-PA   ",
          "res_description": "Niemi PA, Emily",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2266,
          "prac_practitioner_id": 2266,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "EN-PA   ",
          "First_Name": "EMILY",
          "Last_Name": "NIEMI",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "eniemi"
        }
      },
      {
        "json": {
          "res_resource_id": 1286,
          "res_abbreviation": "FBUS-CM ",
          "res_description": "FBRAD-Christine",
          "res_appointment_group_id": 88,
          "appt_gp_abbreviation": "FBRad-CM",
          "appt_gp_description": "FBRad-Christine",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1283,
          "res_abbreviation": "FBUS-MB ",
          "res_description": "US - FBRAD-Michelle",
          "res_appointment_group_id": 87,
          "appt_gp_abbreviation": "FBUS-MB ",
          "appt_gp_description": "General/Vascular/Echo",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1169,
          "res_abbreviation": "FN-FNP  ",
          "res_description": "Fedirko FNP-BC, Nicolas",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2197,
          "prac_practitioner_id": 2197,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "FN-FNP  ",
          "First_Name": "NICOLAS",
          "Last_Name": "FEDIRKO",
          "Sex": "M",
          "Street1": "26300 Woodward Ave",
          "City": "Royal Oak",
          "State": "MI",
          "Zip_Code": "480670917",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "nfedirko"
        }
      },
      {
        "json": {
          "res_resource_id": 1248,
          "res_abbreviation": "FS-MD   ",
          "res_description": "Saab MD, Fadi",
          "res_appointment_group_id": 44,
          "appt_gp_abbreviation": "CARD    ",
          "appt_gp_description": "Cardiology Appts",
          "res_practitioner_id": 2256,
          "prac_practitioner_id": 2256,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "FS-MD   ",
          "First_Name": "FADI",
          "Last_Name": "SAAB",
          "Sex": "M",
          "Street1": "911 E Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 6,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 6,
          "spec_abbreviation": "06      ",
          "spec_description": "Cardiology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "fsaab"
        }
      },
      {
        "json": {
          "res_resource_id": 1141,
          "res_abbreviation": "GD-MD   ",
          "res_description": "Deshmukh, Ganesh",
          "res_appointment_group_id": 61,
          "appt_gp_abbreviation": "COLVOV  ",
          "appt_gp_description": "Colorectal Consults",
          "res_practitioner_id": 2172,
          "prac_practitioner_id": 2172,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "GD-MD   ",
          "First_Name": "GANESH",
          "Last_Name": "DESHMUKH",
          "Sex": "M",
          "Street1": "27207 Lahser Rd Ste 100",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "480348470",
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": 9,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 9,
          "spec_abbreviation": "10      ",
          "spec_description": "Gastroenterology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "gdeshmukh"
        }
      },
      {
        "json": {
          "res_resource_id": 1101,
          "res_abbreviation": "GICLAB  ",
          "res_description": "GIC - Lab Only",
          "res_appointment_group_id": 58,
          "appt_gp_abbreviation": "GICLAB  ",
          "appt_gp_description": "GIC - LAB ONLY",
          "res_practitioner_id": 2123,
          "prac_practitioner_id": 2123,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "GICLAB  ",
          "First_Name": "GIC",
          "Last_Name": "LAB ONLY",
          "Sex": null,
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "glab only"
        }
      },
      {
        "json": {
          "res_resource_id": 3,
          "res_abbreviation": "GN EP 9 ",
          "res_description": "Naman, Greg S",
          "res_appointment_group_id": 17,
          "appt_gp_abbreviation": "CMIn    ",
          "appt_gp_description": "CCM Intake",
          "res_practitioner_id": 767,
          "prac_practitioner_id": 767,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "GN EP 9 ",
          "First_Name": "GREG",
          "Last_Name": "NAMAN",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": "H16602",
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "gnaman"
        }
      },
      {
        "json": {
          "res_resource_id": 1290,
          "res_abbreviation": "HG MD   ",
          "res_description": "Godbold MD, Henri",
          "res_appointment_group_id": 66,
          "appt_gp_abbreviation": "AV 10   ",
          "appt_gp_description": "ACT - VOV 10",
          "res_practitioner_id": 2125,
          "prac_practitioner_id": 2125,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "HG MD   ",
          "First_Name": "HENRI",
          "Last_Name": "GODBOLD",
          "Sex": "M",
          "Street1": "20901 W 7 Mile Rd",
          "City": "Detroit",
          "State": "MI",
          "Zip_Code": "482191904",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "hgodbold"
        }
      },
      {
        "json": {
          "res_resource_id": 1167,
          "res_abbreviation": "HK-PA   ",
          "res_description": "Haggerty PA, Kimberly",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2195,
          "prac_practitioner_id": 2195,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "HK-PA   ",
          "First_Name": "KIMBERLY",
          "Last_Name": "HAGGERTY",
          "Sex": "F",
          "Street1": "18463 Livernois",
          "City": "Detroit",
          "State": "MI",
          "Zip_Code": "482212254",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "khaggerty"
        }
      },
      {
        "json": {
          "res_resource_id": 1276,
          "res_abbreviation": "HY-PA   ",
          "res_description": "Yazdani PA, Hajira",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2283,
          "prac_practitioner_id": 2283,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "HY-PA   ",
          "First_Name": "HAJIRA",
          "Last_Name": "YAZDANI",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "hyazdani"
        }
      },
      {
        "json": {
          "res_resource_id": 1231,
          "res_abbreviation": "HZ-PA   ",
          "res_description": "Zawisa PA, Hannah",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2244,
          "prac_practitioner_id": 2244,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "HZ-PA   ",
          "First_Name": "HANNAH",
          "Last_Name": "ZAWISA",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "hzawisa"
        }
      },
      {
        "json": {
          "res_resource_id": 1258,
          "res_abbreviation": "IG-DO EP",
          "res_description": "Gastman DO, Irvin",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2264,
          "prac_practitioner_id": 2264,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "IG-DO EP",
          "First_Name": "IRVIN",
          "Last_Name": "GASTMAN",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 58,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 58,
          "spec_abbreviation": "84      ",
          "spec_description": "Preventive Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "igastman"
        }
      },
      {
        "json": {
          "res_resource_id": 1275,
          "res_abbreviation": "JD-PA   ",
          "res_description": "Davis, Janelle",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2284,
          "prac_practitioner_id": 2284,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "JD-PA   ",
          "First_Name": "JANELLE",
          "Last_Name": "DAVIS",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "jdavis"
        }
      },
      {
        "json": {
          "res_resource_id": 1255,
          "res_abbreviation": "JG-MD   ",
          "res_description": "Gibson, Joshua",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2260,
          "prac_practitioner_id": 2260,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "JG-MD   ",
          "First_Name": "JOSHUA",
          "Last_Name": "GIBSON",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "jgibson"
        }
      },
      {
        "json": {
          "res_resource_id": 1272,
          "res_abbreviation": "JG-PA   ",
          "res_description": "Gray, Jacquis",
          "res_appointment_group_id": 86,
          "appt_gp_abbreviation": "PainOnly",
          "appt_gp_description": "Pain Mgmt Only",
          "res_practitioner_id": 2269,
          "prac_practitioner_id": 2269,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "JG-PA   ",
          "First_Name": "JACQUIS",
          "Last_Name": "GRAY",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "jgray"
        }
      },
      {
        "json": {
          "res_resource_id": 1284,
          "res_abbreviation": "JL-MD   ",
          "res_description": "Leong MD, Jack",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2291,
          "prac_practitioner_id": 2291,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "JL-MD   ",
          "First_Name": "JACK",
          "Last_Name": "LEONG",
          "Sex": "M",
          "Street1": "3000 N Cicero Ave",
          "City": "Chicago",
          "State": "IL",
          "Zip_Code": "606415106",
          "Phone": "7732823115",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "jleong"
        }
      },
      {
        "json": {
          "res_resource_id": 1193,
          "res_abbreviation": "JS-PA   ",
          "res_description": "Sadler, Jessica",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2222,
          "prac_practitioner_id": 2222,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "JS-PA   ",
          "First_Name": "JESSICA",
          "Last_Name": "SADLER",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "jsadler"
        }
      },
      {
        "json": {
          "res_resource_id": 1273,
          "res_abbreviation": "KA-PA   ",
          "res_description": "Ahlstedt PA, Kylee",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2282,
          "prac_practitioner_id": 2282,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "KA-PA   ",
          "First_Name": "KYLEE",
          "Last_Name": "AHLSTEDT",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "kahlstedt"
        }
      },
      {
        "json": {
          "res_resource_id": 1247,
          "res_abbreviation": "KD-NP   ",
          "res_description": "Doherty FNP, Kelly",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2255,
          "prac_practitioner_id": 2255,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "KD-NP   ",
          "First_Name": "KELLY",
          "Last_Name": "DOHERTY",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "kdoherty"
        }
      },
      {
        "json": {
          "res_resource_id": 1291,
          "res_abbreviation": "KL-NP   ",
          "res_description": "Lee NP, Kinya",
          "res_appointment_group_id": null,
          "appt_gp_abbreviation": null,
          "appt_gp_description": null,
          "res_practitioner_id": 2293,
          "prac_practitioner_id": 2293,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "KL-NP   ",
          "First_Name": "KINYA",
          "Last_Name": "LEE",
          "Sex": null,
          "Street1": "911 E 9 mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "klee"
        }
      },
      {
        "json": {
          "res_resource_id": 1156,
          "res_abbreviation": "KN-BH   ",
          "res_description": "BH - Karen",
          "res_appointment_group_id": 5,
          "appt_gp_abbreviation": "PSYCH2  ",
          "appt_gp_description": "Psychotherapy Appointments",
          "res_practitioner_id": 2183,
          "prac_practitioner_id": 2183,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "KN-BH   ",
          "First_Name": "KAREN",
          "Last_Name": "NUGENT",
          "Sex": "F",
          "Street1": "18591 W 10 Mile Rd",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "48075",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "knugent"
        }
      },
      {
        "json": {
          "res_resource_id": 1267,
          "res_abbreviation": "KO-NP   ",
          "res_description": "Osanaiye NP, Kemi",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2271,
          "prac_practitioner_id": 2271,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "KO-NP   ",
          "First_Name": "KEMI",
          "Last_Name": "OSANAIYE",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "kosanaiye"
        }
      },
      {
        "json": {
          "res_resource_id": 1158,
          "res_abbreviation": "KW-PA   ",
          "res_description": "Wright, Kelly",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2185,
          "prac_practitioner_id": 2185,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "WK-PA   ",
          "First_Name": "KELLY",
          "Last_Name": "WRIGHT",
          "Sex": "F",
          "Street1": "911 E 9 Mile Road",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "kwright"
        }
      },
      {
        "json": {
          "res_resource_id": 1270,
          "res_abbreviation": "LB-PA   ",
          "res_description": "Baugh PA, Leslie",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2279,
          "prac_practitioner_id": 2279,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "LB-PA   ",
          "First_Name": "LESLIE",
          "Last_Name": "BAUGH",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "lbaugh"
        }
      },
      {
        "json": {
          "res_resource_id": 1242,
          "res_abbreviation": "LD-PA   ",
          "res_description": "Dbouk PA, Linda",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2250,
          "prac_practitioner_id": 2250,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "LD-PA   ",
          "First_Name": "LINDA",
          "Last_Name": "DBOUK",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "ldbouk"
        }
      },
      {
        "json": {
          "res_resource_id": 1292,
          "res_abbreviation": "LHENDERS",
          "res_description": "Henderson, Lauren",
          "res_appointment_group_id": null,
          "appt_gp_abbreviation": null,
          "appt_gp_description": null,
          "res_practitioner_id": 2294,
          "prac_practitioner_id": 2294,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "LHENDERS",
          "First_Name": "LAUREN",
          "Last_Name": "HENDERSON",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 34,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 34,
          "spec_abbreviation": "26      ",
          "spec_description": "Psychiatry",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "lhenderson"
        }
      },
      {
        "json": {
          "res_resource_id": 1287,
          "res_abbreviation": "LV-NP   ",
          "res_description": "Vegezzi NP, Lindsay",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2292,
          "prac_practitioner_id": 2292,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "LV-NP   ",
          "First_Name": "LINDSAY",
          "Last_Name": "VEGEZZI",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "lvegezzi"
        }
      },
      {
        "json": {
          "res_resource_id": 1241,
          "res_abbreviation": "MA-MD   ",
          "res_description": "Arora MD, Mikita",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2249,
          "prac_practitioner_id": 2249,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "MA-MD   ",
          "First_Name": "MIKITA",
          "Last_Name": "ARORA",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "marora"
        }
      },
      {
        "json": {
          "res_resource_id": 1058,
          "res_abbreviation": "MAMMO   ",
          "res_description": "Mammogram",
          "res_appointment_group_id": 32,
          "appt_gp_abbreviation": "MAMMO   ",
          "appt_gp_description": "Mammogram",
          "res_practitioner_id": 2063,
          "prac_practitioner_id": 2063,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "MAMMO   ",
          "First_Name": null,
          "Last_Name": "MAMMOGRAM",
          "Sex": null,
          "Street1": "18591 W 10 Mile Rd",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "48075",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1271,
          "res_abbreviation": "ME-PT   ",
          "res_description": "DPT - Ebert, McKenna",
          "res_appointment_group_id": 31,
          "appt_gp_abbreviation": "PhyThe  ",
          "appt_gp_description": "Physical Therapy - New",
          "res_practitioner_id": 2280,
          "prac_practitioner_id": 2280,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "ME-PT   ",
          "First_Name": "MCKENNA",
          "Last_Name": "EBERT",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 50,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 50,
          "spec_abbreviation": "65      ",
          "spec_description": "Physical Therapist",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "mebert"
        }
      },
      {
        "json": {
          "res_resource_id": 1085,
          "res_abbreviation": "MG-PAC  ",
          "res_description": "Yaldoo, Mary",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2095,
          "prac_practitioner_id": 2095,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "MG-PAC  ",
          "First_Name": "MARY",
          "Last_Name": "YALDOO",
          "Sex": "F",
          "Street1": "18591 W 10 MILE RD",
          "City": "SOUTHFIELD",
          "State": "MI",
          "Zip_Code": "48075",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "myaldoo"
        }
      },
      {
        "json": {
          "res_resource_id": 1278,
          "res_abbreviation": "MM-BH   ",
          "res_description": "BH - Marilyn",
          "res_appointment_group_id": 5,
          "appt_gp_abbreviation": "PSYCH2  ",
          "appt_gp_description": "Psychotherapy Appointments",
          "res_practitioner_id": 2289,
          "prac_practitioner_id": 2289,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "MM-BH   ",
          "First_Name": "MARTIN",
          "Last_Name": "MARILYN",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "mmarilyn"
        }
      },
      {
        "json": {
          "res_resource_id": 1230,
          "res_abbreviation": "MS-PA   ",
          "res_description": "Syms PA, Margaret",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2243,
          "prac_practitioner_id": 2243,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "MS-PA   ",
          "First_Name": "MARGARET",
          "Last_Name": "SYMS",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "48340",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "msyms"
        }
      },
      {
        "json": {
          "res_resource_id": 1232,
          "res_abbreviation": "MS-PA-C ",
          "res_description": "Sareni PA, Mariam",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1281,
          "res_abbreviation": "MW-NP   ",
          "res_description": "Walk NP, Monique",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2286,
          "prac_practitioner_id": 2286,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "MW-NP   ",
          "First_Name": "MONIQUE",
          "Last_Name": "WALK",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "mwalk"
        }
      },
      {
        "json": {
          "res_resource_id": 1201,
          "res_abbreviation": "NW-PA   ",
          "res_description": "Whitmore PA, Nicole",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2228,
          "prac_practitioner_id": 2228,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "NW-PA   ",
          "First_Name": "NICOLE",
          "Last_Name": "WHITMORE",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "483301934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "nwhitmore"
        }
      },
      {
        "json": {
          "res_resource_id": 1050,
          "res_abbreviation": "OQ MD   ",
          "res_description": "Cardiology",
          "res_appointment_group_id": 44,
          "appt_gp_abbreviation": "CARD    ",
          "appt_gp_description": "Cardiology Appts",
          "res_practitioner_id": 2050,
          "prac_practitioner_id": 2050,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "FERNCARD",
          "First_Name": "FERNDALE",
          "Last_Name": "CARDIOLOGY",
          "Sex": null,
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 6,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 6,
          "spec_abbreviation": "06      ",
          "spec_description": "Cardiology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "fcardiology"
        }
      },
      {
        "json": {
          "res_resource_id": 123,
          "res_abbreviation": "PT EP 9 ",
          "res_description": "DPT - Garavaglia, Scott",
          "res_appointment_group_id": 31,
          "appt_gp_abbreviation": "PhyThe  ",
          "appt_gp_description": "Physical Therapy - New",
          "res_practitioner_id": 2004,
          "prac_practitioner_id": 2004,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "PT EP 9 ",
          "First_Name": "PHYSICAL",
          "Last_Name": "THERAPY",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "ptherapy"
        }
      },
      {
        "json": {
          "res_resource_id": 1259,
          "res_abbreviation": "PTA-Cani",
          "res_description": "PTA - Myers, Canisha",
          "res_appointment_group_id": 30,
          "appt_gp_abbreviation": "PTA     ",
          "appt_gp_description": "Physical Therapy Assistant",
          "res_practitioner_id": 2265,
          "prac_practitioner_id": 2265,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "PTA-Cani",
          "First_Name": "CANISHA",
          "Last_Name": "PTA - MYERS",
          "Sex": null,
          "Street1": "4420 E DAVISON",
          "City": "HAMTRAMCK",
          "State": "MI",
          "Zip_Code": "48212",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 50,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 50,
          "spec_abbreviation": "65      ",
          "spec_description": "Physical Therapist",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "cpta - myers"
        }
      },
      {
        "json": {
          "res_resource_id": 1163,
          "res_abbreviation": "PTA-Liz ",
          "res_description": "PTA - Wood, Liz",
          "res_appointment_group_id": 30,
          "appt_gp_abbreviation": "PTA     ",
          "appt_gp_description": "Physical Therapy Assistant",
          "res_practitioner_id": 2191,
          "prac_practitioner_id": 2191,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "PTA-Liz ",
          "First_Name": "LIZ",
          "Last_Name": "PTA - WOOD",
          "Sex": null,
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 50,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 50,
          "spec_abbreviation": "65      ",
          "spec_description": "Physical Therapist",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "lpta - wood"
        }
      },
      {
        "json": {
          "res_resource_id": 1192,
          "res_abbreviation": "PTA-LN  ",
          "res_description": "PTA - Loai",
          "res_appointment_group_id": 30,
          "appt_gp_abbreviation": "PTA     ",
          "appt_gp_description": "Physical Therapy Assistant",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1106,
          "res_abbreviation": "RJ-FNP  ",
          "res_description": "Joseph, Rosilin",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2133,
          "prac_practitioner_id": 2133,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "RJ-FNP  ",
          "First_Name": "ROSILIN",
          "Last_Name": "JOSEPH",
          "Sex": "F",
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "rjoseph"
        }
      },
      {
        "json": {
          "res_resource_id": 1229,
          "res_abbreviation": "RR-DO   ",
          "res_description": "Rothenberg DO, Ronald",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2242,
          "prac_practitioner_id": 2242,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "RR-DO   ",
          "First_Name": "RONALD",
          "Last_Name": "ROTHENBERG",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "rrothenberg"
        }
      },
      {
        "json": {
          "res_resource_id": 1213,
          "res_abbreviation": "RW-PA   ",
          "res_description": "Weisenberger PA, Ryne",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2233,
          "prac_practitioner_id": 2233,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "RW-PA   ",
          "First_Name": "RYNE",
          "Last_Name": "WEISENBERGER",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "3483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "rweisenberger"
        }
      },
      {
        "json": {
          "res_resource_id": 1295,
          "res_abbreviation": "SH-MD   ",
          "res_description": "Hollowell MD, Sylvia",
          "res_appointment_group_id": null,
          "appt_gp_abbreviation": null,
          "appt_gp_description": null,
          "res_practitioner_id": 2298,
          "prac_practitioner_id": 2298,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "SH-MD   ",
          "First_Name": "SYLVIA",
          "Last_Name": "HOLLOWELL",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "shollowell"
        }
      },
      {
        "json": {
          "res_resource_id": 1296,
          "res_abbreviation": "SH-PA   ",
          "res_description": "Haque PA, Samra",
          "res_appointment_group_id": null,
          "appt_gp_abbreviation": null,
          "appt_gp_description": null,
          "res_practitioner_id": 2300,
          "prac_practitioner_id": 2300,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "SH-PA   ",
          "First_Name": "SAMRA",
          "Last_Name": "HAQUE",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "shaque"
        }
      },
      {
        "json": {
          "res_resource_id": 1263,
          "res_abbreviation": "SKR-PA  ",
          "res_description": "Kriko PA, Sarah",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2268,
          "prac_practitioner_id": 2268,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "SK-PA   ",
          "First_Name": "SARAH",
          "Last_Name": "KRIKO",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "skriko"
        }
      },
      {
        "json": {
          "res_resource_id": 1294,
          "res_abbreviation": "SL-BH   ",
          "res_description": "BH - Sylvia L.",
          "res_appointment_group_id": 5,
          "appt_gp_abbreviation": "PSYCH2  ",
          "appt_gp_description": "Psychotherapy Appointments",
          "res_practitioner_id": 2296,
          "prac_practitioner_id": 2296,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "SL-BH   ",
          "First_Name": "SYLVIA",
          "Last_Name": "LLOYD",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "slloyd"
        }
      },
      {
        "json": {
          "res_resource_id": 131,
          "res_abbreviation": "SLEEP911",
          "res_description": "Sleep Study",
          "res_appointment_group_id": 20,
          "appt_gp_abbreviation": "SLEEP   ",
          "appt_gp_description": "Home Sleep Study",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1080,
          "res_abbreviation": "SLIM-MD ",
          "res_description": "Slim, Achraf",
          "res_appointment_group_id": 50,
          "appt_gp_abbreviation": "HOSPITAL",
          "appt_gp_description": "Hospitalists",
          "res_practitioner_id": 2089,
          "prac_practitioner_id": 2089,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "SLIM-MD ",
          "First_Name": "ACHRAF",
          "Last_Name": "SLIM",
          "Sex": "M",
          "Street1": "6071 Outer Dr W",
          "City": "Detroit",
          "State": "MI",
          "Zip_Code": "482352624",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "aslim"
        }
      },
      {
        "json": {
          "res_resource_id": 1268,
          "res_abbreviation": "SR-LPC  ",
          "res_description": "BH - Shavon",
          "res_appointment_group_id": 5,
          "appt_gp_abbreviation": "PSYCH2  ",
          "appt_gp_description": "Psychotherapy Appointments",
          "res_practitioner_id": 2277,
          "prac_practitioner_id": 2277,
          "Is_Ref_Source": true,
          "Is_Physician": false,
          "prac_abbreviation": "SR-LPC  ",
          "First_Name": "SHAVON",
          "Last_Name": "ROMITA",
          "Sex": "F",
          "Street1": "26300 WOODWARD AVE",
          "City": "ROYAL OAK",
          "State": "MI",
          "Zip_Code": "48067",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "sromita"
        }
      },
      {
        "json": {
          "res_resource_id": 148,
          "res_abbreviation": "ST EP 9 ",
          "res_description": "Tam, Susan B",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 781,
          "prac_practitioner_id": 781,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "ST EP 9 ",
          "First_Name": "SUSAN",
          "Last_Name": "TAM",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": "H23171",
          "Specialty_ID": 8,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 8,
          "spec_abbreviation": "08      ",
          "spec_description": "Family Practice",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "stam"
        }
      },
      {
        "json": {
          "res_resource_id": 1090,
          "res_abbreviation": "ST-GXTAB",
          "res_description": "Exercise Stress, Stress ABI, DEXA",
          "res_appointment_group_id": 16,
          "appt_gp_abbreviation": "ST      ",
          "appt_gp_description": "Stress Testing",
          "res_practitioner_id": 2106,
          "prac_practitioner_id": 2106,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "ST-GXTAB",
          "First_Name": "GXT & ABI",
          "Last_Name": "STRESS TESTING",
          "Sex": null,
          "Street1": "18591 W 10 MILE RD",
          "City": "SOUTHFIELD",
          "State": "MI",
          "Zip_Code": "48075",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "gstress testing"
        }
      },
      {
        "json": {
          "res_resource_id": 133,
          "res_abbreviation": "SW PAC  ",
          "res_description": "Webster, Shannon PAC",
          "res_appointment_group_id": 89,
          "appt_gp_abbreviation": "ACT-SW  ",
          "appt_gp_description": "ACT - Shannon Webster",
          "res_practitioner_id": 665,
          "prac_practitioner_id": 665,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "WS-PA   ",
          "First_Name": "SHANNON",
          "Last_Name": "WEBSTER",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "swebster"
        }
      },
      {
        "json": {
          "res_resource_id": 1147,
          "res_abbreviation": "TF-BH   ",
          "res_description": "BH - Tyrone F.",
          "res_appointment_group_id": 5,
          "appt_gp_abbreviation": "PSYCH2  ",
          "appt_gp_description": "Psychotherapy Appointments",
          "res_practitioner_id": 2176,
          "prac_practitioner_id": 2176,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "TF-BH   ",
          "First_Name": "TYRONE",
          "Last_Name": "FRAZIER",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "tfrazier"
        }
      },
      {
        "json": {
          "res_resource_id": 1285,
          "res_abbreviation": "TH-MD   ",
          "res_description": "Hadla MD, Tarek",
          "res_appointment_group_id": 86,
          "appt_gp_abbreviation": "PainOnly",
          "appt_gp_description": "Pain Mgmt Only",
          "res_practitioner_id": 2290,
          "prac_practitioner_id": 2290,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "TH-MD   ",
          "First_Name": "TAREK",
          "Last_Name": "HADLA",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 26,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 26,
          "spec_abbreviation": "72      ",
          "spec_description": "Pain Management",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "thadla"
        }
      },
      {
        "json": {
          "res_resource_id": 1027,
          "res_abbreviation": "TM      ",
          "res_description": "Telemetry Monitor",
          "res_appointment_group_id": 40,
          "appt_gp_abbreviation": "TM      ",
          "appt_gp_description": "Telemetry Monitor",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1,
          "res_abbreviation": "TN EP 9 ",
          "res_description": "Naman, Ted R",
          "res_appointment_group_id": 17,
          "appt_gp_abbreviation": "CMIn    ",
          "appt_gp_description": "CCM Intake",
          "res_practitioner_id": 766,
          "prac_practitioner_id": 766,
          "Is_Ref_Source": true,
          "Is_Physician": true,
          "prac_abbreviation": "TN EP 9 ",
          "First_Name": "TED",
          "Last_Name": "NAMAN",
          "Sex": "M",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": "0001",
          "Fax_Number": "2483369137",
          "UPIN": "H16600",
          "Specialty_ID": 10,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 10,
          "spec_abbreviation": "11      ",
          "spec_description": "Internal Medicine",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "tnaman"
        }
      },
      {
        "json": {
          "res_resource_id": 1264,
          "res_abbreviation": "US-RONIC",
          "res_description": "US - Ronica",
          "res_appointment_group_id": 49,
          "appt_gp_abbreviation": "USECHO  ",
          "appt_gp_description": "ULTRASOUND/ECHO",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1160,
          "res_abbreviation": "USecho  ",
          "res_description": "US - Jerida",
          "res_appointment_group_id": 49,
          "appt_gp_abbreviation": "USECHO  ",
          "appt_gp_description": "ULTRASOUND/ECHO",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1013,
          "res_abbreviation": "USETNoTV",
          "res_description": "US - Safa",
          "res_appointment_group_id": 85,
          "appt_gp_abbreviation": "ECHOONLY",
          "appt_gp_description": "US-ECHOCARDIOGRAM",
          "res_practitioner_id": 2087,
          "prac_practitioner_id": 2087,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "USETNoTV",
          "First_Name": null,
          "Last_Name": "ULTRASOUND - ECHO ONLY",
          "Sex": null,
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1249,
          "res_abbreviation": "USG/V-TG",
          "res_description": "US - Tamara",
          "res_appointment_group_id": 81,
          "appt_gp_abbreviation": "USTamara",
          "appt_gp_description": "US - Tamara Garmo",
          "res_practitioner_id": null,
          "prac_practitioner_id": null,
          "Is_Ref_Source": null,
          "Is_Physician": null,
          "prac_abbreviation": null,
          "First_Name": null,
          "Last_Name": null,
          "Sex": null,
          "Street1": null,
          "City": null,
          "State": null,
          "Zip_Code": null,
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": null,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": null,
          "Is_Mid_Level_PA": null,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": null,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 9,
          "res_abbreviation": "USNoEcho",
          "res_description": "US - Benti",
          "res_appointment_group_id": 52,
          "appt_gp_abbreviation": "BENTI   ",
          "appt_gp_description": "US - BENTI FATIMA",
          "res_practitioner_id": 2115,
          "prac_practitioner_id": 2115,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "USNoEcho",
          "First_Name": null,
          "Last_Name": "ULTRASOUND - NO ECHO/CAROTID",
          "Sex": null,
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483364000",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1118,
          "res_abbreviation": "USNOECMS",
          "res_description": "US - Tanisha",
          "res_appointment_group_id": 38,
          "appt_gp_abbreviation": "USTAN   ",
          "appt_gp_description": "US - TANISHA HUTCHERSON",
          "res_practitioner_id": 2149,
          "prac_practitioner_id": 2149,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "USNOECMS",
          "First_Name": null,
          "Last_Name": "ULTRASOUND - NO ECHO/MSK",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1261,
          "res_abbreviation": "USOBGyn ",
          "res_description": "OBGyn - Ultrasound",
          "res_appointment_group_id": 84,
          "appt_gp_abbreviation": "OBGyn US",
          "appt_gp_description": "OB/Gyn US",
          "res_practitioner_id": 2270,
          "prac_practitioner_id": 2270,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "USOBGyn ",
          "First_Name": null,
          "Last_Name": "ULTRASOUND - OBGYN",
          "Sex": null,
          "Street1": "29829 TELEGRAPH RD",
          "City": "SOUTHFIELD",
          "State": "MI",
          "Zip_Code": "48034",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": true,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "Username not available in Allscripts"
        }
      },
      {
        "json": {
          "res_resource_id": 1107,
          "res_abbreviation": "VOVAPP  ",
          "res_description": "Virtual Visits - Telehealth ONLY",
          "res_appointment_group_id": 46,
          "appt_gp_abbreviation": "VOV     ",
          "appt_gp_description": "Virtual Office Visits",
          "res_practitioner_id": 2134,
          "prac_practitioner_id": 2134,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "VOVAPP  ",
          "First_Name": "APP",
          "Last_Name": "VIRTUAL VISITS",
          "Sex": null,
          "Street1": "911 E 9 MILE RD",
          "City": "FERNDALE",
          "State": "MI",
          "Zip_Code": "48220",
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": null,
          "Is_Non_Person": false,
          "spec_Specialty_Id": null,
          "spec_abbreviation": null,
          "spec_description": null,
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "avirtual visits"
        }
      },
      {
        "json": {
          "res_resource_id": 1219,
          "res_abbreviation": "VP-MD   ",
          "res_description": "Pemmaraju, Vishnu",
          "res_appointment_group_id": 60,
          "appt_gp_abbreviation": "COLProc ",
          "appt_gp_description": "Colorectal Procedures",
          "res_practitioner_id": 2235,
          "prac_practitioner_id": 2235,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "VP-MD   ",
          "First_Name": "VISHNU",
          "Last_Name": "PEMMARAJU",
          "Sex": "M",
          "Street1": "27207 Lahser Rd Ste 100",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "480348470",
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": 9,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 9,
          "spec_abbreviation": "10      ",
          "spec_description": "Gastroenterology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "vpemmaraju"
        }
      },
      {
        "json": {
          "res_resource_id": 1280,
          "res_abbreviation": "VR-NP   ",
          "res_description": "Riggins NP, Valerie",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2287,
          "prac_practitioner_id": 2287,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "VR-NP   ",
          "First_Name": "VALERIE",
          "Last_Name": "RIGGINS",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 20,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 20,
          "spec_abbreviation": "50      ",
          "spec_description": "Nurse Practitioner",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "vriggins"
        }
      },
      {
        "json": {
          "res_resource_id": 1265,
          "res_abbreviation": "YK-PA   ",
          "res_description": "Kurishi PA, Yasmine",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2267,
          "prac_practitioner_id": 2267,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "YK-PA   ",
          "First_Name": "YASMINE",
          "Last_Name": "KURISHI",
          "Sex": "F",
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "ykurishi"
        }
      },
      {
        "json": {
          "res_resource_id": 1274,
          "res_abbreviation": "Ym-PA   ",
          "res_description": "Melek PA, Youstina",
          "res_appointment_group_id": 42,
          "appt_gp_abbreviation": "ACT     ",
          "appt_gp_description": "ACT - Advanced Care Team ",
          "res_practitioner_id": 2274,
          "prac_practitioner_id": 2274,
          "Is_Ref_Source": false,
          "Is_Physician": false,
          "prac_abbreviation": "Ym-PA   ",
          "First_Name": "YOUSTINA",
          "Last_Name": "MELEK",
          "Sex": null,
          "Street1": "911 E 9 Mile Rd",
          "City": "Ferndale",
          "State": "MI",
          "Zip_Code": "482201934",
          "Phone": "2483364000",
          "Phone_Ext": null,
          "Fax_Number": "2483369137",
          "UPIN": null,
          "Specialty_ID": 68,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 68,
          "spec_abbreviation": "97      ",
          "spec_description": "Physician Assistant",
          "Is_Mid_Level": true,
          "Is_Mid_Level_PA": true,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "ymelek"
        }
      }
    ],
    "Edit Fields4": [
      {
        "json": {
          "cn": "Audra Adams",
          "sAMAccountName": "aadams1",
          "givenName": "Audra",
          "sn": "Adams"
        }
      },
      {
        "json": {
          "cn": "Alexa Cunningham",
          "sAMAccountName": "acunningham",
          "givenName": "Alexa",
          "sn": "Cunningham"
        }
      },
      {
        "json": {
          "cn": "Alison Hobson",
          "sAMAccountName": "ahobson",
          "givenName": "Alison",
          "sn": "Hobson"
        }
      },
      {
        "json": {
          "cn": "Amber Kalabat",
          "sAMAccountName": "akalabat",
          "givenName": "Amber",
          "sn": "Kalabat"
        }
      },
      {
        "json": {
          "cn": "Annaliese Khemmoro",
          "sAMAccountName": "akhemmoro",
          "givenName": "Annaliese",
          "sn": "Khemmoro"
        }
      },
      {
        "json": {
          "cn": "Amber Sufi",
          "sAMAccountName": "asufi",
          "givenName": "Amber",
          "sn": "Sufi"
        }
      },
      {
        "json": {
          "cn": "Allen Toubia",
          "sAMAccountName": "atoubia",
          "givenName": "Allen",
          "sn": "Toubia"
        }
      },
      {
        "json": {
          "cn": "Alyona Tourlaeva",
          "sAMAccountName": "atourlaeva",
          "givenName": "Alyona",
          "sn": "Tourlaeva"
        }
      },
      {
        "json": {
          "cn": "Bashar Dawood",
          "sAMAccountName": "bdawood",
          "givenName": "Bashar",
          "sn": "Dawood"
        }
      },
      {
        "json": {
          "cn": "Bryan Hnatio",
          "sAMAccountName": "bhnatio",
          "givenName": "Bryan",
          "sn": "Hnatio"
        }
      },
      {
        "json": {
          "cn": "Jennifer Balint",
          "sAMAccountName": "jbalint",
          "givenName": "Jennifer",
          "sn": "Balint"
        }
      },
      {
        "json": {
          "cn": "Burton Brodsky",
          "sAMAccountName": "bbrodsky",
          "givenName": "Burton",
          "sn": "Brodsky"
        }
      },
      {
        "json": {
          "cn": "Bethany Xiong",
          "sAMAccountName": "bxiong",
          "givenName": "Bethany",
          "sn": "Xiong"
        }
      },
      {
        "json": {
          "cn": "Christina George",
          "sAMAccountName": "cgeorge1",
          "givenName": "Christina",
          "sn": "George"
        }
      },
      {
        "json": {
          "cn": "Deena Chabaan",
          "sAMAccountName": "dchabaan",
          "givenName": "Deena",
          "sn": "Chabaan"
        }
      },
      {
        "json": {
          "cn": "Donald Hardman",
          "sAMAccountName": "dhardman",
          "givenName": "Donald",
          "sn": "Hardman"
        }
      },
      {
        "json": {
          "cn": "David Wash",
          "sAMAccountName": "dwash",
          "givenName": "David",
          "sn": "Wash"
        }
      },
      {
        "json": {
          "cn": "Eyas Kanaan",
          "sAMAccountName": "ekanaan",
          "givenName": "Eyas",
          "sn": "Kanaan"
        }
      },
      {
        "json": {
          "cn": "Eric Mozurkewich",
          "sAMAccountName": "emozurkewich",
          "givenName": "Eric",
          "sn": "Mozurkewich"
        }
      },
      {
        "json": {
          "cn": "Emily Niemi",
          "sAMAccountName": "eniemi",
          "givenName": "Emily",
          "sn": "Niemi"
        }
      },
      {
        "json": {
          "cn": "Nicolas Fedirko",
          "sAMAccountName": "nfedirko",
          "givenName": "Nicolas",
          "sn": "Fedirko"
        }
      },
      {
        "json": {
          "cn": "Fadi Saab",
          "sAMAccountName": "fsaab",
          "givenName": "Fadi",
          "sn": "Saab"
        }
      },
      {
        "json": {
          "cn": "Greg Naman",
          "sAMAccountName": "gnaman",
          "givenName": "Greg",
          "sn": "Naman"
        }
      },
      {
        "json": {
          "cn": "Henri Godbold",
          "sAMAccountName": "hgodbold",
          "givenName": "Henri",
          "sn": "Godbold"
        }
      },
      {
        "json": {
          "cn": "Kimberly Haggerty",
          "sAMAccountName": "khaggerty",
          "givenName": "Kimberly",
          "sn": "Haggerty"
        }
      },
      {
        "json": {
          "cn": "Hajira Yazdani",
          "sAMAccountName": "hyazdani1",
          "givenName": "Hajira",
          "sn": "Yazdani"
        }
      },
      {
        "json": {
          "cn": "Hannah Zawisa",
          "sAMAccountName": "hzawisa",
          "givenName": "Hannah",
          "sn": "Zawisa"
        }
      },
      {
        "json": {
          "cn": "Irvin Gastman",
          "sAMAccountName": "igastman",
          "givenName": "Irvin",
          "sn": "Gastman"
        }
      },
      {
        "json": {
          "cn": "Janelle Davis",
          "sAMAccountName": "jdavis",
          "givenName": "Janelle",
          "sn": "Davis"
        }
      },
      {
        "json": {
          "cn": "Joshua Gibson",
          "sAMAccountName": "jgibson",
          "givenName": "Joshua",
          "sn": "Gibson"
        }
      },
      {
        "json": {
          "cn": "Jacquis Gray",
          "sAMAccountName": "jgray",
          "givenName": "Jacquis",
          "sn": "Gray"
        }
      },
      {
        "json": {
          "cn": "Jack Leong",
          "sAMAccountName": "jleong",
          "givenName": "Jack",
          "sn": "Leong"
        }
      },
      {
        "json": {
          "cn": "Jessica Sadler",
          "sAMAccountName": "jsadler",
          "givenName": "Jessica",
          "sn": "Sadler"
        }
      },
      {
        "json": {
          "cn": "Kylee Ahlstedt",
          "sAMAccountName": "kahlstedt",
          "givenName": "Kylee",
          "sn": "ahlstedt"
        }
      },
      {
        "json": {
          "cn": "Kelly Doherty",
          "sAMAccountName": "kdoherty",
          "givenName": "Kelly",
          "sn": "Doherty"
        }
      },
      {
        "json": {
          "cn": "Kinya Lee",
          "sAMAccountName": "klee",
          "givenName": "Kinya",
          "sn": "Lee"
        }
      },
      {
        "json": {
          "cn": "Karen Nugent",
          "sAMAccountName": "knugent",
          "givenName": "Karen",
          "sn": "Nugent"
        }
      },
      {
        "json": {
          "cn": "Kemi Osanaiye",
          "sAMAccountName": "kosanaiye",
          "givenName": "Kemi",
          "sn": "Osanaiye"
        }
      },
      {
        "json": {
          "cn": "Kelly Wright",
          "sAMAccountName": "kwright",
          "givenName": "Kelly",
          "sn": "Wright"
        }
      },
      {
        "json": {
          "cn": "Leslie Baugh",
          "sAMAccountName": "lbaugh",
          "givenName": "Leslie",
          "sn": "Baugh"
        }
      },
      {
        "json": {
          "cn": "Linda Dbouk",
          "sAMAccountName": "ldbouk",
          "givenName": "Linda",
          "sn": "Dbouk"
        }
      },
      {
        "json": {
          "cn": "Lauren Henderson",
          "sAMAccountName": "lhenderson",
          "givenName": "Lauren",
          "sn": "Henderson"
        }
      },
      {
        "json": {
          "cn": "Lindsay Vegezzi",
          "sAMAccountName": "lvegezzi",
          "givenName": "Lindsay",
          "sn": "Vegezzi"
        }
      },
      {
        "json": {
          "cn": "Mikita Arora",
          "sAMAccountName": "marora",
          "givenName": "Mikita",
          "sn": "Arora"
        }
      },
      {
        "json": {
          "cn": "McKenna Ebert",
          "sAMAccountName": "mebert",
          "givenName": "McKenna",
          "sn": "Ebert"
        }
      },
      {
        "json": {
          "cn": "Mary Yaldoo",
          "sAMAccountName": "myaldoo",
          "givenName": "Mary",
          "sn": "Yaldoo"
        }
      },
      {
        "json": {
          "cn": "Margaret Syms",
          "sAMAccountName": "msyms",
          "givenName": "Margaret",
          "sn": "Syms"
        }
      },
      {
        "json": {
          "cn": "Monique Walk",
          "sAMAccountName": "mwalk",
          "givenName": "Monique",
          "sn": "Walk"
        }
      },
      {
        "json": {
          "cn": "Nicole Whitmore",
          "sAMAccountName": "nwhitmore",
          "givenName": "Nicole",
          "sn": "Whitmore"
        }
      },
      {
        "json": {
          "cn": "Rosilin Joseph",
          "sAMAccountName": "rjoseph",
          "givenName": "Rosilin",
          "sn": "Joseph"
        }
      },
      {
        "json": {
          "cn": "Ronald Rothenberg",
          "sAMAccountName": "rrothenberg",
          "givenName": "Ronald",
          "sn": "Rothenberg"
        }
      },
      {
        "json": {
          "cn": "Ryne Weisenberger",
          "sAMAccountName": "rweisenberger",
          "givenName": "Ryne",
          "sn": "Weisenberger"
        }
      },
      {
        "json": {
          "cn": "Sylvia Hollowell",
          "sAMAccountName": "shollowell",
          "givenName": "Sylvia",
          "sn": "Hollowell"
        }
      },
      {
        "json": {
          "cn": "Samra Haque",
          "sAMAccountName": "shaque",
          "givenName": "Samra",
          "sn": "Haque"
        }
      },
      {
        "json": {
          "cn": "Sarah Kriko",
          "sAMAccountName": "skriko",
          "givenName": "Sarah",
          "sn": "Kriko"
        }
      },
      {
        "json": {
          "cn": "Sylvia Lloyd",
          "sAMAccountName": "slloyd",
          "givenName": "Sylvia",
          "sn": "Lloyd"
        }
      },
      {
        "json": {
          "cn": "Shavon Romita",
          "sAMAccountName": "sromita",
          "givenName": "Shavon",
          "sn": "Romita"
        }
      },
      {
        "json": {
          "cn": "Susan Tam",
          "sAMAccountName": "stam",
          "givenName": "Susan",
          "sn": "Tam"
        }
      },
      {
        "json": {
          "cn": "Shannon Webster",
          "sAMAccountName": "swebster",
          "givenName": "Shannon",
          "sn": "Webster"
        }
      },
      {
        "json": {
          "cn": "Tyrone Frazier",
          "sAMAccountName": "tfrazier",
          "givenName": "Tyrone",
          "sn": "Frazier"
        }
      },
      {
        "json": {
          "cn": "Tarek Hadla",
          "sAMAccountName": "thadla",
          "givenName": "Tarek",
          "sn": "Hadla"
        }
      },
      {
        "json": {
          "cn": "Ted Naman",
          "sAMAccountName": "tnaman",
          "givenName": "Ted",
          "sn": "Naman"
        }
      },
      {
        "json": {
          "cn": "Valerie Riggins",
          "sAMAccountName": "vriggins",
          "givenName": "Valerie",
          "sn": "Riggins"
        }
      },
      {
        "json": {
          "cn": "Yasmine Kurishi",
          "sAMAccountName": "ykurishi",
          "givenName": "Yasmine",
          "sn": "Kurishi"
        }
      },
      {
        "json": {
          "cn": "Youstina Melek",
          "sAMAccountName": "ymelek",
          "givenName": "Youstina",
          "sn": "Melek"
        }
      }
    ],
    "Limit": [
      {
        "json": {
          "res_resource_id": 1142,
          "res_abbreviation": "AA-MD   ",
          "res_description": "Adeyemo, Adewuni",
          "res_appointment_group_id": 61,
          "appt_gp_abbreviation": "COLVOV  ",
          "appt_gp_description": "Colorectal Consults",
          "res_practitioner_id": 2173,
          "prac_practitioner_id": 2173,
          "Is_Ref_Source": false,
          "Is_Physician": true,
          "prac_abbreviation": "AA-MD   ",
          "First_Name": "ADEWUNI",
          "Last_Name": "ADEYEMO",
          "Sex": "M",
          "Street1": "27207 Lahser Rd Ste 100",
          "City": "Southfield",
          "State": "MI",
          "Zip_Code": "480348470",
          "Phone": null,
          "Phone_Ext": null,
          "Fax_Number": null,
          "UPIN": null,
          "Specialty_ID": 9,
          "Is_Non_Person": false,
          "spec_Specialty_Id": 9,
          "spec_abbreviation": "10      ",
          "spec_description": "Gastroenterology",
          "Is_Mid_Level": false,
          "Is_Mid_Level_PA": false,
          "Inactivation_Date": null,
          "Is_Locum_Tenan": false,
          "Username": "aadeyemo",
          "visitURL": "https://vid.epicpc.com/bigbluebutton/api/join?fullName=TEDDY&meetingID=197520&password=mp&redirect=true&role=VIEWER&checksum=b7608c4ee4ab6d82ac6222423c04c74eb6c5b4bb6046d3107336f746ccf3d35f74b783e88758b9c1dc1f9c4bb2f126edd6972548db799fe806c059456affe026",
          "data": "<response>\r\n<returncode>SUCCESS</returncode>\r\n<meetingID>197520</meetingID>\r\n<internalMeetingID>092744eaa1e39c328a05ce89afe75466022a43d8-1752963276499</internalMeetingID>\r\n<parentMeetingID>bbb-none</parentMeetingID>\r\n<attendeePW>ap</attendeePW>\r\n<moderatorPW>mp</moderatorPW>\r\n<createTime>1752963276499</createTime>\r\n<voiceBridge>86271</voiceBridge>\r\n<dialNumber>613-555-1234</dialNumber>\r\n<createDate>Sat Jul 19 18:14:36 EDT 2025</createDate>\r\n<hasUserJoined>false</hasUserJoined>\r\n<duration>0</duration>\r\n<hasBeenForciblyEnded>false</hasBeenForciblyEnded>\r\n<messageKey>duplicateWarning</messageKey>\r\n<message>This conference was already in existence and may currently be in progress.</message>\r\n</response>",
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ],
    "Microsoft SQL6": [
      {
        "json": {
          "IMRESCHED_CODE": 2878449,
          "IMREDEM_CODE": 138735,
          "DEM_EXTERNALID": "774430",
          "IMREPROV_CODE": 14217,
          "SCHED_TIMEIN": "2025-07-24T19:25:00.000Z",
          "SCHED_TIMESTART": "2025-07-24T19:33:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC SCS Harper",
          "LOCATION_ID": 72,
          "PATIENT_FIRSTNAME": "MAKAYLAH",
          "PATIENT_LASTNAME": "SMITH",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-07-24T19:40:00.000Z",
          "SCHED_PMSID": "25710551",
          "SCHED_TEXT": "MAKAYLAH SMITH",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "ROOM_ABBR_TEXT": "A10",
          "ROOM_TEXT": "A10",
          "TRACKINGSTATUS_TEXT": "SHANIYA"
        }
      },
      {
        "json": {
          "IMRESCHED_CODE": 2893972,
          "IMREDEM_CODE": 181002,
          "DEM_EXTERNALID": "1173500",
          "IMREPROV_CODE": 14217,
          "SCHED_TIMEIN": "2025-07-24T18:35:00.000Z",
          "SCHED_TIMESTART": "2025-07-24T19:07:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC SCS Harper",
          "LOCATION_ID": 72,
          "PATIENT_FIRSTNAME": "ESHANTI",
          "PATIENT_LASTNAME": "STEELE",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-07-24T19:20:00.000Z",
          "SCHED_PMSID": "25725765",
          "SCHED_TEXT": "ESHANTI STEELE",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "ROOM_ABBR_TEXT": "A10",
          "ROOM_TEXT": "A10",
          "TRACKINGSTATUS_TEXT": "SHANIYA"
        }
      }
    ],
    "Edit Fields6": [
      {
        "json": {
          "IMRESCHED_CODE": 2878449,
          "IMREDEM_CODE": 138735,
          "DEM_EXTERNALID": "774430",
          "IMREPROV_CODE": 14217,
          "SCHED_TIMEIN": "2025-07-24T19:25:00.000Z",
          "SCHED_TIMESTART": "2025-07-24T19:33:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC SCS Harper",
          "LOCATION_ID": 72,
          "PATIENT_FIRSTNAME": "MAKAYLAH",
          "PATIENT_LASTNAME": "SMITH",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-07-24T19:40:00.000Z",
          "SCHED_PMSID": "25710551",
          "SCHED_TEXT": "MAKAYLAH SMITH",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "ROOM_ABBR_TEXT": "A10",
          "ROOM_TEXT": "A10",
          "TRACKINGSTATUS_TEXT": "SHANIYA"
        }
      },
      {
        "json": {
          "IMRESCHED_CODE": 2893972,
          "IMREDEM_CODE": 181002,
          "DEM_EXTERNALID": "1173500",
          "IMREPROV_CODE": 14217,
          "SCHED_TIMEIN": "2025-07-24T18:35:00.000Z",
          "SCHED_TIMESTART": "2025-07-24T19:07:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC SCS Harper",
          "LOCATION_ID": 72,
          "PATIENT_FIRSTNAME": "ESHANTI",
          "PATIENT_LASTNAME": "STEELE",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-07-24T19:20:00.000Z",
          "SCHED_PMSID": "25725765",
          "SCHED_TEXT": "ESHANTI STEELE",
          "CAREGIVER_NAME": "Hobson, Alison PA",
          "ROOM_ABBR_TEXT": "A10",
          "ROOM_TEXT": "A10",
          "TRACKINGSTATUS_TEXT": "SHANIYA"
        }
      }
    ],
    "Webhook4": [
      {
        "json": {
          "headers": {
            "host": "xl.epicpc.com",
            "x-real-ip": "50.192.103.153",
            "x-forwarded-for": "50.192.103.153",
            "x-forwarded-proto": "https",
            "connection": "upgrade",
            "sec-ch-ua": "\"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\", \"Microsoft Edge\";v=\"138\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "upgrade-insecure-requests": "1",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "sec-fetch-site": "same-origin",
            "sec-fetch-mode": "navigate",
            "sec-fetch-user": "?1",
            "sec-fetch-dest": "iframe",
            "referer": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829?location=EPIC%20SCS%20Harper&room=A3&hostname=MI-SCS-HAR-A3",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9"
          },
          "params": {},
          "query": {
            "fullName": "undefined undefined",
            "patientId": "",
            "url": "https://xl.epicpc.com/webhook/9635c884-df57-4076-9d04-e32de5c22829?location=EPIC%20SCS%20Harper&room=A3&hostname=MI-SCS-HAR-A3"
          },
          "body": {},
          "webhookUrl": "https://xl.epicpc.com/webhook/4ab15d3f-8a32-43cd-9223-roomtablet",
          "executionMode": "production"
        }
      }
    ],
    "Microsoft SQL9": [
      {
        "json": {
          "IMRESCHED_CODE": 2796580,
          "IMREDEM_CODE": 80076,
          "DEM_EXTERNALID": "197520",
          "IMREPROV_CODE": 13304,
          "SCHED_TIMEIN": "2025-05-24T12:23:00.697Z",
          "SCHED_TIMESTART": "2025-05-21T10:00:00.000Z",
          "SCHED_TIMEOUT": null,
          "LOCATION_NAME": "EPIC Detroit 7 Mile",
          "LOCATION_ID": 66,
          "PATIENT_FIRSTNAME": "TEDDY",
          "PATIENT_LASTNAME": "TEST",
          "PATIENT_PHONE": null,
          "SCHED_DATE": "2025-05-21T12:00:00.000Z",
          "SCHED_PMSID": "25624799",
          "SCHED_TEXT": "TEDDY TEST",
          "CAREGIVER_NAME": "Joseph, rosilin NP",
          "ROOM_ABBR_TEXT": "A1",
          "ROOM_TEXT": "ROOM A1",
          "TRACKINGSTATUS_TEXT": "LEA MARIE"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 8,
  "updatedAt": "2025-08-04T16:23:05.082Z",
  "versionId": "1f0bd11c-19a8-478d-85fc-066eef51a388"
}